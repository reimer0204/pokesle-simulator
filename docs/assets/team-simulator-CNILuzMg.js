var GH=Object.defineProperty;var HH=(rt,st,yt)=>st in rt?GH(rt,st,{enumerable:!0,configurable:!0,writable:!0,value:yt}):rt[st]=yt;var pe=(rt,st,yt)=>(HH(rt,typeof st!="symbol"?st+"":st,yt),yt),Vw=(rt,st,yt)=>{if(!st.has(rt))throw TypeError("Cannot "+yt)};var zt=(rt,st,yt)=>(Vw(rt,st,"read from private field"),yt?yt.call(rt):st.get(rt)),Bs=(rt,st,yt)=>{if(st.has(rt))throw TypeError("Cannot add the same private member more than once");st instanceof WeakSet?st.add(rt):st.set(rt,yt)},zs=(rt,st,yt,fo)=>(Vw(rt,st,"write to private field"),fo?fo.call(rt,yt):st.set(rt,yt),yt);var Ww=(rt,st,yt,fo)=>({set _(Ki){zs(rt,st,Ki,yt)},get _(){return zt(rt,st,fo)}});(function(){"use strict";var gc,Ms,Ps,Ga,qi,Ha,qa,ja;function rt(n,e){return e.forEach(function(t){t&&typeof t!="string"&&!Array.isArray(t)&&Object.keys(t).forEach(function(s){if(s!=="default"&&!(s in n)){var o=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:function(){return t[s]}})}})}),Object.freeze(n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const st=1e-7,yt=1e-4;class fo{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ki{refCount(e){return hn("refCount")}incRef(e){return hn("incRef")}timerAvailable(){return!0}time(e){return hn("time")}read(e){return hn("read")}readSync(e){return hn("readSync")}readToGPU(e,t){return hn("readToGPU")}numDataIds(){return hn("numDataIds")}disposeData(e,t){return hn("disposeData")}write(e,t,s){return hn("write")}move(e,t,s,o,i){return hn("move")}createTensorFromGPUData(e,t,s){return hn("createTensorFromGPUData")}memory(){return hn("memory")}floatPrecision(){return hn("floatPrecision")}epsilon(){return this.floatPrecision()===32?st:yt}dispose(){return hn("dispose")}}function hn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uw(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ni(n,e,t)}function mo(n,e,t){return Math.max(n,Math.min(e,t))}function xc(n){return n%2===0?n:n+1}function ni(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function Gw(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function C(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function bc(n,e,t=""){C(Fe(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function df(n){C(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function G(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Fe(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function si(n){return n%1===0}function yc(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function oi(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function pf(n,e=o=>0,t,s){return new Promise((o,i)=>{let r=0;const a=()=>{if(n()){o();return}r++;const l=e(r);if(t!=null&&r>=t){i();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function ff(n,e){let t=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const o=n.slice();return o[s]=e/t,o}function $e(n,e){const t=e.length;return n=n==null?e.map((s,o)=>o):[].concat(n),C(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),C(n.every(s=>si(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function Vs(n,e){const t=[],s=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:$e(e,n).sort();let r=0;for(let a=0;a<n.length;++a){if(i!=null){if(i[r]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(i[r]==null||i[r]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),i[r]<=a&&r++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function Vt(n,e){return ct(n,e)}function ct(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Hw(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function qw(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function mf(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Ka(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function jw(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Xi(n){return typeof n=="string"||n instanceof String}function Kw(n){return typeof n=="boolean"}function wc(n){return typeof n=="number"}function ii(n){return Array.isArray(n)?ii(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":wc(n)?"float32":Xi(n)?"string":Kw(n)?"bool":"float32"}function vc(n){return!!(n&&n.constructor&&n.call&&n.apply)}function kc(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function ce(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function gf(n,e,t,s=!1){const o=new Array;if(e.length===1){const i=e[0]*(s?2:1);for(let r=0;r<i;r++)o[r]=t[n+r]}else{const i=e[0],r=e.slice(1),a=r.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<i;l++)o[l]=gf(n+l*a,r,t,s)}return o}function Hn(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((o,i)=>o*i)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return gf(0,n,e,t)}function Xw(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Cc(n,e){const t=Wt(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Wt(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function xf(n,e){const t=n.reduce((s,o)=>s*o,1);if(e==null||e==="float32")return Hn(n,new Float32Array(t));if(e==="int32")return Hn(n,new Int32Array(t));if(e==="bool")return Hn(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function $s(n){n.forEach(e=>{C(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function os(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let o=0;o<n.length-1;++o)s+=t[o]*n[o];return s}function ri(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let o=0;o<s.length-1;++o)s[o]=Math.floor(n/t[o]),n-=s[o]*t[o];return s[s.length-1]=n,s}function Ic(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bf="tfjsflags";class Yw{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Zw,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const o=this.urlFlags[e];z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ic(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);bf in e&&e[bf].split(",").forEach(s=>{const[o,i]=s.split(":");this.urlFlags[o]=Qw(o,i)})}}function Zw(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(Jw(e,s[0],s[1]),s.join("="))),e}function Jw(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Qw(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function z(){return yf}let yf=null;function ev(n){yf=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $c;function wf(){if($c==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");$c=n}return $c}function tv(){const n=wf();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Sc(n,e){const t=tv();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Xa="Abs",Yi="Acos",Zi="Acosh",ai="Add",Nc="AddN",Ec="All",Tc="Any",Ya="ArgMax",Za="ArgMin",Ji="Asin",Qi="Asinh",er="Atan",tr="Atanh",nr="Atan2",Ja="AvgPool",Rc="AvgPoolGrad",Qa="AvgPool3D",Lc="AvgPool3DGrad",el="BatchMatMul",tl="BatchToSpaceND",Dc="Bincount",Ac="BitwiseAnd",nv="BroadcastTo",vf="BroadcastArgs",sr="Cast",or="Ceil",ir="ClipByValue",Fc="Complex",nl="ComplexAbs",sl="Concat",ol="Conv2D",Oc="Conv2DBackpropFilter",il="Conv2DBackpropInput",rl="Conv3D",_c="Conv3DBackpropFilterV2",Mc="Conv3DBackpropInputV2",rr="Cos",ar="Cosh",Pc="Cumprod",al="Cumsum",Bc="CropAndResize",zc="DenseBincount",Vc="DepthToSpace",ll="DepthwiseConv2dNative",Wc="DepthwiseConv2dNativeBackpropFilter",Uc="DepthwiseConv2dNativeBackpropInput",kf="Diag",ul="Dilation2D",Gc="Dilation2DBackpropInput",Hc="Dilation2DBackpropFilter",sv="Draw",lr="RealDiv",qc="Einsum",ur="Elu",jc="EluGrad",cr="Erf",cl="Equal",hr="Exp",hl="ExpandDims",dr="Expm1",Kc="FFT",Xc="Fill",Yc="FlipLeftRight",pr="Floor",fr="FloorDiv",dl="FusedBatchNorm",pl="GatherV2",Cf="GatherNd",fl="Greater",mr="GreaterEqual",gr="Identity",Zc="IFFT",Jc="Imag",xr="IsFinite",br="IsInf",yr="IsNan",ml="LeakyRelu",gl="Less",xl="LessEqual",If="LinSpace",wr="Log",vr="Log1p",bl="LogicalAnd",yl="LogicalNot",wl="LogicalOr",ov="LogSoftmax",vl="LRN",Qc="LRNGrad",kl="Max",kr="Maximum",Cl="MaxPool",eh="MaxPoolGrad",Il="MaxPool3D",th="MaxPool3DGrad",$f="MaxPoolWithArgmax",$l="Mean",Sl="Min",Cr="Minimum",Nl="MirrorPad",Ir="Mod",Sf="Multinomial",$r="Multiply",El="Neg",Tl="NotEqual",nh="NonMaxSuppressionV3",sh="NonMaxSuppressionV4",oh="NonMaxSuppressionV5",Rl="OnesLike",Ll="OneHot",Dl="Pack",Al="PadV2",Sr="Pow",Fl="Prelu",Ol="Prod",Nf="RaggedGather",Ef="RaggedRange",Tf="RaggedTensorToTensor",ih="Range",rh="Real",Nr="Reciprocal",Er="Relu",_l="Reshape",Ml="ResizeNearestNeighbor",ah="ResizeNearestNeighborGrad",Pl="ResizeBilinear",lh="ResizeBilinearGrad",Tr="Relu6",Bl="Reverse",Rr="Round",Lr="Rsqrt",Rf="ScatterNd",Lf="TensorScatterUpdate",Df="SearchSorted",zl="Select",Dr="Selu",Vl="Slice",Ar="Sin",Fr="Sinh",Or="Sign",_r="Sigmoid",Mr="Softplus",Pr="Sqrt",Wl="Sum",Ul="SpaceToBatchND",Gl="SplitV",Hl="Softmax",Af="SparseFillEmptyRows",Ff="SparseReshape",Of="SparseSegmentMean",_f="SparseSegmentSum",Mf="SparseToDense",Br="SquaredDifference",uh="Square",ch="StaticRegexReplace",hh="StridedSlice",Pf="StringNGrams",Bf="StringSplit",zf="StringToHashBucketFast",zr="Sub",Vr="Tan",Wr="Tanh",Ur="Tile",dh="TopK",ph="Transform",li="Transpose",fh="Unique",ql="Unpack",jl="UnsortedSegmentSum",Kl="ZerosLike",Gr="Step",iv="FromPixels",mh="RotateWithOffset",Xl="_FusedMatMul",Yl="FusedConv2D",Vf="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(...n){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...n)}function rv(...n){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zl=Sc("kernelRegistry",()=>new Map),gh=Sc("gradRegistry",()=>new Map);function Wf(n,e){const t=qf(n,e);return Zl.get(t)}function Uf(n){return gh.get(n)}function Gf(n){const e=Zl.entries(),t=[];for(;;){const{done:s,value:o}=e.next();if(s)break;const[i,r]=o,[a]=i.split("_");a===n&&t.push(r)}return t}function Hf(n){const{kernelName:e,backendName:t}=n,s=qf(e,t);Zl.has(s)&&wn(`The kernel '${e}' for backend '${t}' is already registered`),Zl.set(s,n)}function av(n){const{kernelName:e}=n;gh.has(e)&&z().getBool("DEBUG")&&wn(`Overriding the gradient for '${e}'`),gh.set(e,n)}function qf(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jf(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var go=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function lv(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function uv(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var o=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,o.get?o:{enumerable:!0,get:function(){return n[s]}})}),t}var Kf=Qe,Tn=null;try{Tn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Qe(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Qe.prototype.__isLong__,Object.defineProperty(Qe.prototype,"__isLong__",{value:!0});function dn(n){return(n&&n.__isLong__)===!0}Qe.isLong=dn;var Xf={},Yf={};function xo(n,e){var t,s,o;return e?(n>>>=0,(o=0<=n&&n<256)&&(s=Yf[n],s)?s:(t=et(n,(n|0)<0?-1:0,!0),o&&(Yf[n]=t),t)):(n|=0,(o=-128<=n&&n<128)&&(s=Xf[n],s)?s:(t=et(n,n<0?-1:0,!1),o&&(Xf[n]=t),t))}Qe.fromInt=xo;function Rn(n,e){if(isNaN(n))return e?bo:Ln;if(e){if(n<0)return bo;if(n>=Jf)return sm}else{if(n<=-Qf)return pn;if(n+1>=Qf)return nm}return n<0?Rn(-n,e).neg():et(n%ui|0,n/ui|0,e)}Qe.fromNumber=Rn;function et(n,e,t){return new Qe(n,e,t)}Qe.fromBits=et;var Jl=Math.pow;function xh(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return Ln;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return xh(n.substring(1),e,t).neg();for(var o=Rn(Jl(t,8)),i=Ln,r=0;r<n.length;r+=8){var a=Math.min(8,n.length-r),l=parseInt(n.substring(r,r+a),t);if(a<8){var u=Rn(Jl(t,a));i=i.mul(u).add(Rn(l))}else i=i.mul(o),i=i.add(Rn(l))}return i.unsigned=e,i}Qe.fromString=xh;function qn(n,e){return typeof n=="number"?Rn(n,e):typeof n=="string"?xh(n,e):et(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Qe.fromValue=qn;var Zf=65536,cv=1<<24,ui=Zf*Zf,Jf=ui*ui,Qf=Jf/2,em=xo(cv),Ln=xo(0);Qe.ZERO=Ln;var bo=xo(0,!0);Qe.UZERO=bo;var ci=xo(1);Qe.ONE=ci;var tm=xo(1,!0);Qe.UONE=tm;var bh=xo(-1);Qe.NEG_ONE=bh;var nm=et(-1,2147483647,!1);Qe.MAX_VALUE=nm;var sm=et(-1,-1,!0);Qe.MAX_UNSIGNED_VALUE=sm;var pn=et(0,-2147483648,!1);Qe.MIN_VALUE=pn;var te=Qe.prototype;te.toInt=function(){return this.unsigned?this.low>>>0:this.low},te.toNumber=function(){return this.unsigned?(this.high>>>0)*ui+(this.low>>>0):this.high*ui+(this.low>>>0)},te.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(pn)){var t=Rn(e),s=this.div(t),o=s.mul(t).sub(this);return s.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Rn(Jl(e,6),this.unsigned),r=this,a="";;){var l=r.div(i),u=r.sub(l.mul(i)).toInt()>>>0,c=u.toString(e);if(r=l,r.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},te.getHighBits=function(){return this.high},te.getHighBitsUnsigned=function(){return this.high>>>0},te.getLowBits=function(){return this.low},te.getLowBitsUnsigned=function(){return this.low>>>0},te.getNumBitsAbs=function(){if(this.isNegative())return this.eq(pn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1},te.isZero=function(){return this.high===0&&this.low===0},te.eqz=te.isZero,te.isNegative=function(){return!this.unsigned&&this.high<0},te.isPositive=function(){return this.unsigned||this.high>=0},te.isOdd=function(){return(this.low&1)===1},te.isEven=function(){return(this.low&1)===0},te.equals=function(e){return dn(e)||(e=qn(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low},te.eq=te.equals,te.notEquals=function(e){return!this.eq(e)},te.neq=te.notEquals,te.ne=te.notEquals,te.lessThan=function(e){return this.comp(e)<0},te.lt=te.lessThan,te.lessThanOrEqual=function(e){return this.comp(e)<=0},te.lte=te.lessThanOrEqual,te.le=te.lessThanOrEqual,te.greaterThan=function(e){return this.comp(e)>0},te.gt=te.greaterThan,te.greaterThanOrEqual=function(e){return this.comp(e)>=0},te.gte=te.greaterThanOrEqual,te.ge=te.greaterThanOrEqual,te.compare=function(e){if(dn(e)||(e=qn(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},te.comp=te.compare,te.negate=function(){return!this.unsigned&&this.eq(pn)?pn:this.not().add(ci)},te.neg=te.negate,te.add=function(e){dn(e)||(e=qn(e));var t=this.high>>>16,s=this.high&65535,o=this.low>>>16,i=this.low&65535,r=e.high>>>16,a=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,p=0;return p+=i+u,d+=p>>>16,p&=65535,d+=o+l,h+=d>>>16,d&=65535,h+=s+a,c+=h>>>16,h&=65535,c+=t+r,c&=65535,et(d<<16|p,c<<16|h,this.unsigned)},te.subtract=function(e){return dn(e)||(e=qn(e)),this.add(e.neg())},te.sub=te.subtract,te.multiply=function(e){if(this.isZero())return Ln;if(dn(e)||(e=qn(e)),Tn){var t=Tn.mul(this.low,this.high,e.low,e.high);return et(t,Tn.get_high(),this.unsigned)}if(e.isZero())return Ln;if(this.eq(pn))return e.isOdd()?pn:Ln;if(e.eq(pn))return this.isOdd()?pn:Ln;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(em)&&e.lt(em))return Rn(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,o=this.high&65535,i=this.low>>>16,r=this.low&65535,a=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,p=0,f=0;return f+=r*c,p+=f>>>16,f&=65535,p+=i*c,d+=p>>>16,p&=65535,p+=r*u,d+=p>>>16,p&=65535,d+=o*c,h+=d>>>16,d&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=r*l,h+=d>>>16,d&=65535,h+=s*c+o*u+i*l+r*a,h&=65535,et(p<<16|f,h<<16|d,this.unsigned)},te.mul=te.multiply,te.divide=function(e){if(dn(e)||(e=qn(e)),e.isZero())throw Error("division by zero");if(Tn){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Tn.div_u:Tn.div_s)(this.low,this.high,e.low,e.high);return et(t,Tn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?bo:Ln;var s,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return bo;if(e.gt(this.shru(1)))return tm;i=bo}else{if(this.eq(pn)){if(e.eq(ci)||e.eq(bh))return pn;if(e.eq(pn))return ci;var r=this.shr(1);return s=r.div(e).shl(1),s.eq(Ln)?e.isNegative()?ci:bh:(o=this.sub(e.mul(s)),i=s.add(o.div(e)),i)}else if(e.eq(pn))return this.unsigned?bo:Ln;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=Ln}for(o=this;o.gte(e);){s=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:Jl(2,a-48),u=Rn(s),c=u.mul(e);c.isNegative()||c.gt(o);)s-=l,u=Rn(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=ci),i=i.add(u),o=o.sub(c)}return i},te.div=te.divide,te.modulo=function(e){if(dn(e)||(e=qn(e)),Tn){var t=(this.unsigned?Tn.rem_u:Tn.rem_s)(this.low,this.high,e.low,e.high);return et(t,Tn.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},te.mod=te.modulo,te.rem=te.modulo,te.not=function(){return et(~this.low,~this.high,this.unsigned)},te.and=function(e){return dn(e)||(e=qn(e)),et(this.low&e.low,this.high&e.high,this.unsigned)},te.or=function(e){return dn(e)||(e=qn(e)),et(this.low|e.low,this.high|e.high,this.unsigned)},te.xor=function(e){return dn(e)||(e=qn(e)),et(this.low^e.low,this.high^e.high,this.unsigned)},te.shiftLeft=function(e){return dn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?et(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):et(0,this.low<<e-32,this.unsigned)},te.shl=te.shiftLeft,te.shiftRight=function(e){return dn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?et(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):et(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},te.shr=te.shiftRight,te.shiftRightUnsigned=function(e){if(dn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return et(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?et(t,0,this.unsigned):et(t>>>e-32,0,this.unsigned)},te.shru=te.shiftRightUnsigned,te.shr_u=te.shiftRightUnsigned,te.toSigned=function(){return this.unsigned?et(this.low,this.high,!1):this},te.toUnsigned=function(){return this.unsigned?this:et(this.low,this.high,!0)},te.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},te.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]},te.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]},Qe.fromBytes=function(e,t,s){return s?Qe.fromBytesLE(e,t):Qe.fromBytesBE(e,t)},Qe.fromBytesLE=function(e,t){return new Qe(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Qe.fromBytesBE=function(e,t){return new Qe(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};var om=lv(Kf),hv=rt({__proto__:null,default:om},[Kf]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=om||hv;function Ql(n){return yo.fromString(n,!0,16)}const im=Ql("c3a5c85c97cb3127"),wo=Ql("b492b66fbe98f273"),jt=Ql("9ae16a3b2f90404f");function yh(n){return n.xor(n.shru(47))}function rm(n,e,t){const s=n.slice(e,e+t);return yo.fromBytes(Array.from(s),!0,!0)}function Xe(n,e){return rm(n,e,8)}function am(n,e){return rm(n,e,4)}function Et(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Ws(n,e,t=Ql("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let o=e.xor(s).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function dv(n,e,t,s,o,i){o=o.add(n),i=Et(i.add(o).add(s),21);const r=o;return o=o.add(e),o=o.add(t),i=i.add(Et(o,44)),[o.add(s),i.add(r)]}function eu(n,e,t,s){return dv(Xe(n,e),Xe(n,e+8),Xe(n,e+16),Xe(n,e+24),t,s)}function pv(n,e=n.length){if(e>=8){const t=jt.add(e*2),s=Xe(n,0).add(jt),o=Xe(n,e-8),i=Et(o,37).mul(t).add(s),r=Et(s,25).add(o).mul(t);return Ws(i,r,t)}if(e>=4){const t=jt.add(e*2),s=am(n,0);return Ws(s.shl(3).add(e),am(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],o=n[e-1],i=t+(s<<8),r=e+(o<<2);return yh(jt.mul(i).xor(im.mul(r))).mul(jt)}return jt}function fv(n,e=n.length){const t=jt.add(e*2),s=Xe(n,0).mul(wo),o=Xe(n,8),i=Xe(n,e-8).mul(t),r=Xe(n,e-16).mul(jt);return Ws(Et(s.add(o),43).add(Et(i,30)).add(r),s.add(Et(o.add(jt),18)).add(i),t)}function mv(n,e=n.length){const t=jt.add(e*2),s=Xe(n,0).mul(jt),o=Xe(n,8),i=Xe(n,e-8).mul(t),r=Xe(n,e-16).mul(jt),a=Et(s.add(o),43).add(Et(i,30)).add(r),l=Ws(a,s.add(Et(o.add(jt),18)).add(i),t),u=Xe(n,16).mul(t),c=Xe(n,24),h=a.add(Xe(n,e-32)).mul(t),d=l.add(Xe(n,e-24)).mul(t);return Ws(Et(u.add(c),43).add(Et(h,30)).add(d),u.add(Et(c.add(s),18)).add(h),t)}function gv(n,e=n.length){const t=yo.fromNumber(81,!0);if(e<=32)return e<=16?pv(n,e):fv(n,e);if(e<=64)return mv(n,e);let s=t,o=t.mul(wo).add(113),i=yh(o.mul(jt).add(113)).mul(jt),r=[yo.UZERO,yo.UZERO],a=[yo.UZERO,yo.UZERO];s=s.mul(jt).add(Xe(n,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=Et(s.add(o).add(r[0]).add(Xe(n,l+8)),37).mul(wo),o=Et(o.add(r[1]).add(Xe(n,l+48)),42).mul(wo),s=s.xor(a[1]),o=o.add(r[0]).add(Xe(n,l+40)),i=Et(i.add(a[0]),33).mul(wo),r=eu(n,l,r[1].mul(wo),s.add(a[0])),a=eu(n,l+32,i.add(a[1]),o.add(Xe(n,l+16))),[i,s]=[s,i],l+=64;while(l!==u);const h=wo.add(i.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),r[0]=r[0].add(a[0]),a[0]=a[0].add(r[0]),s=Et(s.add(o).add(r[0]).add(Xe(n,l+8)),37).mul(h),o=Et(o.add(r[1]).add(Xe(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),o=o.add(r[0].mul(9).add(Xe(n,l+40))),i=Et(i.add(a[0]),33).mul(h),r=eu(n,l,r[1].mul(h),s.add(a[0])),a=eu(n,l+32,i.add(a[1]),o.add(Xe(n,l+16))),[i,s]=[s,i],Ws(Ws(r[0],a[0],h).add(yh(o).mul(im)).add(i),Ws(r[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(n,e){return e==="string"?Gs(n):vo([n],e)}function xv(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function vo(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ko(n)),z().getBool("DEBUG")&&Hw(n,e),xv(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function en(){return z().platform.now()}function Gs(n,e="utf-8"){return e=e||"utf-8",z().platform.encode(n,e)}function Hs(n,e="utf-8"){return e=e||"utf-8",z().platform.decode(n,e)}function Dn(n){return z().platform.isTypedArray!=null?z().platform.isTypedArray(n):jf(n)}function ko(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Ic(n)||n==null||Dn(n)&&t)e.push(n);else if(Array.isArray(n)||Dn(n))for(let s=0;s<n.length;++s)ko(n[s],e,t);else{let s=-1;for(const o of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(o)&&(s=Math.max(s,Number(o)));for(let o=0;o<=s;o++)ko(n[o],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bv{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new wv)}profileKernel(e,t,s){let o;const i=()=>{o=s()};let r;const a=en();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(i);else{i();for(const u of o)u.dataSync();r=Promise.resolve({kernelMs:en()-a})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){const c=o[u];c.data().then(h=>{yv(h,c.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:r.then(u=>u.kernelMs),extraInfo:r.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:o,inputs:i,extraInfo:r}=e;s.forEach(a=>{Promise.all([a.data(),o,r]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],i,l[2])})})}}function yv(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const o=n[s];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}class wv{logKernelProfile(e,t,s,o,i,r){const a=typeof o=="number"?oi(`${o}ms`,9):o.error,l=oi(e,25),u=t.rank,c=t.size,h=oi(t.shape.toString(),14);let d="";for(const p in i){const f=i[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${h}	%c${c}	%c${d}	%c${r}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n,e,t){const s={},o={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,o[u.id]=!0;break}if(p)break}}const i={};i[t.id]=!0;const r={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(i[u.outputs[h].id]){for(const d in c)i[c[d].id]=!0,r[u.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const u=n[l];if(o[u.id]&&r[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,a.push(h)}}return a}function kv(n,e,t,s){for(let o=e.length-1;o>=0;o--){const i=e[o],r=[];if(i.outputs.forEach(l=>{const u=n[l.id];u!=null?r.push(u):r.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(r);for(const l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=i.inputs[l];if(!Fe(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lm=20,Hr=3,wh=7;function Cv(n,e,t,s){const o=ce(e),i=Iv(n,e,t,o),r=e.length,a=tu(n,e,t,o,i),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${r}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function Iv(n,e,t,s){const o=G(e),i=s[s.length-1],r=new Array(i).fill(0),a=e.length,l=t==="complex64"?jr(n):n;if(a>1)for(let u=0;u<o/i;u++){const c=u*i;for(let h=0;h<i;h++)r[h]=Math.max(r[h],qr(l[c+h],0,t).length)}return r}function qr(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(wh))} + ${parseFloat(n[1].toFixed(wh))}j`:Xi(n)?s=`'${n}'`:t==="bool"?s=um(n):s=parseFloat(n.toFixed(wh)).toString(),oi(s,e)}function um(n){return n===0?"false":"true"}function tu(n,e,t,s,o,i=!0){const r=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const m=jr(n);return[qr(m[0],0,t)]}return t==="bool"?[um(n[0])]:[n[0].toString()]}if(l===1){if(a>lm){const g=Hr*r;let x=Array.from(n.slice(0,g)),b=Array.from(n.slice((a-Hr)*r,a*r));return t==="complex64"&&(x=jr(x),b=jr(b)),["["+x.map((w,y)=>qr(w,o[y],t)).join(", ")+", ..., "+b.map((w,y)=>qr(w,o[a-Hr+y],t)).join(", ")+"]"]}return["["+(t==="complex64"?jr(n):Array.from(n)).map((g,x)=>qr(g,o[x],t)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*r,d=[];if(a>lm){for(let m=0;m<Hr;m++){const g=m*h,x=g+h;d.push(...tu(n.slice(g,x),u,t,c,o,!1))}d.push("...");for(let m=a-Hr;m<a;m++){const g=m*h,x=g+h;d.push(...tu(n.slice(g,x),u,t,c,o,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,x=g+h;d.push(...tu(n.slice(g,x),u,t,c,o,m===a-1))}const p=l===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function jr(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class At{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=G(e),s!=null){const o=s.length;C(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||ct(t,this.size),this.strides=ce(e)}set(e,...t){t.length===0&&(t=[0]),C(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const o of e){if(o<0||o>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let s=e[e.length-1];for(let o=0;o<e.length-1;++o)s+=this.strides[o]*e[o];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return jn().makeTensor(this.values,this.shape,this.dtype)}}let jn=null,hi=null;function $v(n){jn=n}function Sv(n){hi=n}class wt{constructor(e,t,s,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=G(e),this.strides=ce(e),this.dataId=s,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return hi.buffer(this.shape,this.dtype,e)}bufferSync(){return hi.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Hn(this.shape,e,this.dtype==="complex64")}arraySync(){return Hn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=jn().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Hs(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),jn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=jn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Hs(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await jn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),jn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return hi.print(this,e)}clone(){return this.throwIfDisposed(),hi.clone(this)}toString(e=!1){const t=this.dataSync();return Cv(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),hi.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),jn().makeVariable(this,e,t,s)}}Object.defineProperty(wt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function U(){return Sc("Tensor",()=>wt)}U();class nu extends wt{constructor(e,t,s,o){super(e.shape,e.dtype,e.dataId,o),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Fe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);jn().disposeTensor(this),this.dataId=e.dataId,jn().incRef(this,null)}dispose(){jn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(nu,Symbol.hasInstance,{value:n=>n instanceof wt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cm;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(cm||(cm={}));var vh;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(vh||(vh={}));var kh;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(kh||(kh={}));var Ch;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Ch||(Ch={}));var Ih;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Ih||(Ih={}));const Nv={float32:Ch,int32:vh,bool:kh,complex64:Ih};function fn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return Nv[n][e]}function $h(n){return fn(n,"int32")}function hm(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function dm(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(n,e){if(n.dtype===e.dtype)return[n,e];const t=fn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function pm(n){const e=[];return fm(n,e,new Set),e}function fm(n,e,t){if(n==null)return;if(n instanceof wt){e.push(n);return}if(!Ev(n))return;const s=n;for(const o in s){const i=s[o];t.has(i)||(t.add(i),fm(i,e,t))}}function Ev(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sh(n){return n.kernelName!=null}class mm{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class di{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new mm}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(wn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new bv(this.backendInstance),!0}setupRegisteredKernels(){Gf(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Gf(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Ki)&&typeof s.then=="function"){const o=++this.pendingBackendInitId,i=s.then(r=>o<this.pendingBackendInitId?!1:(this.registry[e]=r,this.pendingBackendInit=null,!0)).catch(r=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,wn(`Initialization of backend ${e} failed`),wn(r.stack||r.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return wn(`Initialization of backend ${e} failed`),wn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:o,asyncInit:i}=this.initializeBackend(s);if(i||o)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),o=s.backend,i=this.readSync(t),r=o.refCount(t);o.disposeData(t,!0),s.backend=e,e.move(t,i,s.shape,s.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let o;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,s){e();try{const o=s();return t(),o}catch(o){throw t(),o}}nextTensorId(){return di.nextTensorId++}nextVariableId(){return di.nextVariableId++}clone(e){const t=D.runKernel(gr,{x:e}),s={x:e},o=r=>({x:()=>{const a="float32",l={x:r},u={dtype:a};return D.runKernel(sr,l,u)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[t],o,i,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Wf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const o=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-t-i-r;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const o=this.isTapeOn(),i=this.state.numBytes,r=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const u=Sh(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Sh(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const x=Wf(f,this.backendName);C(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();l=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,w);const y=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(o){const v=this.getTensorsForGradient(f,m,y);s=this.saveTensorsForBackwardMode(v)}return y}}else{const{forwardFunc:f}=e,m=g=>{o&&(s=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,x),x}}const{inputs:c,attrs:h}=e,d=Sh(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(u,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),o&&this.addTapeNode(u,c,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const o=Uf(e);if(o!=null){const i=o.inputsToSave||[],r=o.outputsToSave||[];let a;o.saveAllInputs?(C(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(u=>t[u])):a=i.map(u=>t[u]);const l=s.filter((u,c)=>r[c]);return a.concat(l)}return[]}makeTensor(e,t,s,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",o=o||this.backend;let i=e;s==="string"&&Xi(e[0])&&(i=e.map(l=>Gs(l)));const r=o.write(i,t,s),a=new wt(t,s,r,this.nextTensorId());if(this.trackTensor(a,o),s==="string"){const l=this.state.tensorInfo.get(r),u=jw(i);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(e,t,s,o){s=s||"float32";const i={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(i,o)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:o,dtype:i}=e,r=new wt(o,i,s,this.nextTensorId());return this.trackTensor(r,t),r}makeVariable(e,t=!0,s,o){s=s||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));const i=new nu(e,t,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Ka(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof nu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Ka(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,o,i,r){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:i},l=Uf(e);l!=null&&(o=l.gradFunc),o!=null&&(a.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],p=Wt(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),o(u.length>1?u:u[0],i,r))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=pm(e),s=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const r=this.state.activeScope.track[i];!r.kept&&!s.has(r.id)&&r.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===o.id&&this.track(i)})}gradients(e,t,s,o=!1){if(C(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));C(i instanceof wt,()=>"The result y returned by f() must be a tensor.");const r=vv(this.state.activeTape,t,i);if(!o&&r.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=s??Tv(i.shape),kv(a,r,u=>this.tidy(u),Rv);const l=t.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return C(vc(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{C(t.every(a=>a instanceof wt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const o={};t.forEach((a,l)=>{o[l]=a});const i=(a,l)=>(s=e(...t,l),C(s.value instanceof wt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),C(vc(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),r=(a,l)=>{const u=s.gradFunc(a,l),c=Array.isArray(u)?u:[u];C(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),C(c.every(d=>d instanceof wt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:r,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=en(),s=await this.backend.time(e);return s.wallMs=en()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new mm;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}di.nextTensorId=0,di.nextVariableId=0;function Tv(n){const e=Cc(G(n),"float32");return D.makeTensor(e,n,"float32")}function gm(){const n=wf();if(n._tfengine==null){const e=new Yw(n);n._tfengine=new di(e)}return ev(n._tfengine.ENV),$v(()=>n._tfengine),n._tfengine}const D=gm();function Rv(n,e){const t={a:n,b:e};return D.runKernel(ai,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(){return typeof navigator<"u"&&navigator!=null}function xm(n){if(n||Lv()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function bm(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tn=z();tn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),tn.registerFlag("IS_BROWSER",()=>bm()),tn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),tn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),tn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),tn.registerFlag("PROD",()=>!1),tn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>tn.getBool("DEBUG")),tn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),tn.registerFlag("IS_TEST",()=>!1),tn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>tn.getBool("DEBUG")),tn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),tn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),tn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(n,e){let t=n;if(Dn(n))return e==="string"?[]:[n.length];if(hm(n)){const o=n.channels||"RGBA";return[n.height,n.width*o.length]}else if(dm(n))return[n.buffer.size/(e==null?4:Ka(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||Dn(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ym(n,s,[]),s}function ym(n,e,t){if(t=t||[],!Array.isArray(n)&&!Dn(n)){C(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}C(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),C(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let o=0;o<n.length;++o)ym(n[o],s,t.concat(o))}function wm(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function N(n,e,t,s="numeric"){if(n instanceof U())return wm(s,n.dtype,e,t),n;let o=ii(n);if(o!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),wm(s,o,e,t),n==null||!Dn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const i=su(n,o);!Dn(n)&&!Array.isArray(n)&&(n=[n]);const a=o!=="string"?vo(n,o):ko(n,[],!0);return D.makeTensor(a,i,o)}function vm(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,r)=>N(i,`${e}[${r}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dv="__op";function O(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+Dv;const o=(...i)=>{D.startScope(t);try{const r=s(...i);return Ic(r)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(r),r}catch(r){throw D.endScope(null),r}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Av(n,e){const t=N(n,"real","complex"),s=N(e,"imag","complex");bc(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const o={real:t,imag:s};return D.runKernel(Fc,o)}const Co=O({complex_:Av});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ou(n,e,t,s){if(s==null)s=ii(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(dm(n)||hm(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return D.backend.createTensorFromGPUData(n,e||t,s)}if(!Dn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){$s(e);const o=G(e),i=G(t);C(o===i,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${i}`);for(let r=0;r<t.length;++r){const a=t[r],l=r===t.length-1?a!==G(e.slice(r)):!0;C(t[r]===e[r]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Dn(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?vo(n,s):ko(n,[],!0),D.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(n,e,t){const s=su(n,t);return ou(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iu={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class qs{static join(e){return new qs(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>Dn(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const o=e[s];s!==e.length-1&&o.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=t+o.byteLength;this.shards.push({buffer:o,start:t,end:i}),t=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const o=t-e,i=new ArrayBuffer(o),r=new Uint8Array(i);let a=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=e+a-u.start,d=a,f=Math.min(t,u.end)-u.start,m=new Uint8Array(u.buffer,h,f-h);if(r.set(m,d),a+=m.length,t<u.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(o){return e<o.start?-1:e>=o.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=Fv(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function Fv(n,e){let t=0,s=n.length;for(;t<=s;){const o=Math.floor((s-t)/2)+t,i=e(n[o]);if(i===0)return o;i<0?s=o:t=o+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function is(){return D}function km(){return D.memory()}function M(n,e){return D.tidy(n,e)}function Ce(n){pm(n).forEach(t=>t.dispose())}function rs(n){return D.keep(n)}function Ov(n){return D.setBackend(n)}function Cm(n,e,t=1){return D.registerBackend(n,e,t)}function _v(){return D.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pi=4;async function Im(n,e){const t=[],s=[],o=Array.isArray(n)?n.map(r=>r.name):Object.keys(n);for(let r=0;r<o.length;++r){const a=o[r],l=Array.isArray(n)?n[r].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((g,x)=>g+x.length,0)+pi*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(b,m),m+=pi,f.set(x,m),m+=x.length}h(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),t.push(u)}const i=await Promise.all(s);return{data:zv(i),specs:t}}function Mv(n,e){const t=new qs(n),s={};let o=0;for(const i of e){const r=Pv(i,(a,l)=>t.slice(o+a,o+l));s[i.name]=Bv(i,t.slice(o,o+r)),o+=r}return s}function Pv(n,e){const t=G(n.shape);let s;if("quantization"in n){const o=n.quantization;s=iu[o.dtype]}else if(n.dtype==="string"){let o=0;for(let i=0;i<t;i++)o+=pi+new Uint32Array(e(o,o+pi))[0];return o}else s=iu[n.dtype];return t*s}function Bv(n,e){const t=n.name,s=n.dtype,o=n.shape,i=G(o);let r,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=iu[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){r=new Float32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];r[h]=d*l.scale+l.min}}else if(l.dtype==="float16")r=Yv()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);r=new Int32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];r[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=i*u}else if(s==="string"){const l=G(n.shape);r=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(a,a+pi))[0];a+=pi;const h=new Uint8Array(e.slice(a,a+c));r.push(h),a+=c}}else{const l=iu[s];if(s==="float32")r=new Float32Array(e);else if(s==="int32")r=new Int32Array(e);else if(s==="bool")r=new Uint8Array(e);else if(s==="complex64"){r=new Float32Array(e);const u=new Float32Array(r.length/2),c=new Float32Array(r.length/2);for(let f=0;f<u.length;f++)u[f]=r[f*2],c[f]=r[f*2+1];const h=Kr(u,o,"float32"),d=Kr(c,o,"float32"),p=Co(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=i*l}return Kr(r,o,s)}function zv(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(e);let o=0;return t.forEach(i=>{s.set(new Uint8Array(i.buffer),o),o+=i.byteLength}),s.buffer}const Nh=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function $m(n){return Nh?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function Vv(n){if(Nh)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,o=e.length;s<o;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function Wv(n){if(Nh){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function Uv(n){return qs.join(n)}function Gv(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function Hv(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function qv(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),Hv(n,t,s)}function Eh(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:$m(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:$m(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new qs(n.weightData).byteLength}}function Sm(n){const e=[];for(const t of n)e.push(...t.weights);return e}function jv(){const n=t=>{let s=t<<13,o=0;for(;!(s&8388608);)o-=8388608,s<<=1;return s&=-8388609,o+=947912704,s|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Kv(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function Xv(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function Yv(){const n=jv(),e=Kv(),t=Xv();return s=>{const o=new ArrayBuffer(4*s.length),i=new Uint32Array(o);for(let r=0;r<s.length;r++){const a=s[r],l=n[t[a>>10]+(a&1023)]+e[a>>10];i[r]=l}return new Float32Array(o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Tt.instance==null&&(Tt.instance=new Tt),Tt.instance}static registerSaveRouter(e){Tt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Tt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Tt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Tt.getHandlers(e,"load",t)}static getHandlers(e,t,s){const o=[];return(t==="load"?Tt.getInstance().loadRouters:Tt.getInstance().saveRouters).forEach(r=>{const a=r(e,s);a!==null&&o.push(a)}),o}}const Zv=n=>Tt.getSaveHandlers(n),Jv=(n,e)=>Tt.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Th="tensorflowjs",Rh=1,Io="models_store",js="model_info_store";function Nm(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Lh(n){const e=n.result;e.createObjectStore(Io,{keyPath:"modelPath"}),e.createObjectStore(js,{keyPath:"modelPath"})}class $o{constructor(e){if(this.indexedDB=Nm(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,o)=>{const i=this.indexedDB.open(Th,Rh);i.onupgradeneeded=()=>Lh(i),i.onsuccess=()=>{const r=i.result;if(t==null){const a=r.transaction(Io,"readonly"),u=a.objectStore(Io).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return r.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(r.close(),o(u.error)),a.oncomplete=()=>r.close()}else{t.weightData=qs.join(t.weightData);const a=Eh(t),l=r.transaction(js,"readwrite");let u=l.objectStore(js),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return o(d)}let h;c.onsuccess=()=>{h=r.transaction(Io,"readwrite");const d=h.objectStore(Io);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(f){return o(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{u=l.objectStore(js);const m=u.delete(this.modelPath);m.onsuccess=()=>(r.close(),o(p.error)),m.onerror=g=>(r.close(),o(p.error))}},c.onerror=d=>(r.close(),o(c.error)),l.oncomplete=()=>{h==null?r.close():h.oncomplete=()=>r.close()}}},i.onerror=r=>o(i.error)})}}$o.URL_SCHEME="indexeddb://";const Em=n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith($o.URL_SCHEME)?Qv(n.slice($o.URL_SCHEME.length)):null;Tt.registerSaveRouter(Em),Tt.registerLoadRouter(Em);function Qv(n){return new $o(n)}function e2(n){return n.startsWith($o.URL_SCHEME)?n.slice($o.URL_SCHEME.length):n}class t2{constructor(){this.indexedDB=Nm()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Th,Rh);s.onupgradeneeded=()=>Lh(s),s.onsuccess=()=>{const o=s.result,i=o.transaction(js,"readonly"),a=i.objectStore(js).getAll();a.onsuccess=()=>{const l={};for(const u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(o.close(),t(a.error)),i.oncomplete=()=>o.close()},s.onerror=o=>t(s.error)})}async removeModel(e){return e=e2(e),new Promise((t,s)=>{const o=this.indexedDB.open(Th,Rh);o.onupgradeneeded=()=>Lh(o),o.onsuccess=()=>{const i=o.result,r=i.transaction(js,"readwrite"),a=r.objectStore(js),l=a.get(e);let u;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),h=()=>{u=i.transaction(Io,"readwrite");const p=u.objectStore(Io).delete(e);p.onsuccess=()=>t(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=h,c.onerror=d=>(h(),i.close(),s(l.error))}},l.onerror=c=>(i.close(),s(l.error)),r.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},o.onerror=i=>s(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ss="/",fi="tensorflowjs_models",Tm="info",n2="model_topology",s2="weight_specs",o2="weight_data",i2="model_metadata";function Rm(n){return{info:[fi,n,Tm].join(Ss),topology:[fi,n,n2].join(Ss),weightSpecs:[fi,n,s2].join(Ss),weightData:[fi,n,o2].join(Ss),modelMetadata:[fi,n,i2].join(Ss)}}function Lm(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function r2(n){const e=n.split(Ss);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Ss)}function a2(n){return n.startsWith(So.URL_SCHEME)?n.slice(So.URL_SCHEME.length):n}class So{constructor(e){if(!z().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Rm(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),o=Eh(e),i=qs.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,Vv(i));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:o}}catch{throw Lm(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(r==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Wv(r),t}}So.URL_SCHEME="localstorage://";const Dm=n=>z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(So.URL_SCHEME)?l2(n.slice(So.URL_SCHEME.length)):null;Tt.registerSaveRouter(Dm),Tt.registerLoadRouter(Dm);function l2(n){return new So(n)}class u2{constructor(){C(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),C(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=fi+Ss,s=Ss+Tm;for(let o=0;o<this.LS.length;++o){const i=this.LS.key(o);if(i.startsWith(t)&&i.endsWith(s)){const r=r2(i);e[r]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=a2(e);const t=Rm(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return Lm(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Am="://";class as{constructor(){this.managers={}}static getInstance(){return as.instance==null&&(as.instance=new as),as.instance}static registerManager(e,t){C(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Am)&&(e=e.slice(0,e.indexOf(Am))),C(e.length>0,()=>"scheme must not be an empty string.");const s=as.getInstance();C(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=as.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(as.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c2{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!z().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const o=this.functionRefs[s.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return jf(e)}}if(z().get("IS_BROWSER")){z().setPlatform("browser",new c2);try{as.registerManager(So.URL_SCHEME,new u2)}catch{}try{as.registerManager($o.URL_SCHEME,new t2)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h2={importFetch:()=>require("node-fetch")};let Dh;class d2{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return z().global.fetch!=null?z().global.fetch(e,t):(Dh==null&&(Dh=h2.importFetch()),Dh(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}z().get("IS_NODE")&&!z().get("IS_BROWSER")&&z().setPlatform("node",new d2);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(n,e="float32",t){return e=e||"float32",$s(n),new At(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e){const t=N(n,"x","cast");if(!qw(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},o={dtype:e};return D.runKernel(sr,s,o)}const ie=O({cast_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(n){const t={x:N(n,"x","clone","string_or_numeric")};return D.runKernel(gr,t)}const No=O({clone_:f2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gm(),Sv({buffer:Se,cast:ie,clone:No,print:m2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(n,e){let t=N(n,"a","add"),s=N(e,"b","add");[t,s]=ht(t,s);const o={a:t,b:s};return D.runKernel(ai,o)}const Z=O({add_:g2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(n,e){let t=N(n,"a","floorDiv"),s=N(e,"b","floorDiv");[t,s]=ht(t,s);const o={a:t,b:s};return D.runKernel(fr,o)}const Fm=O({floorDiv_:x2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(n,e){let t=N(n,"a","div"),s=N(e,"b","div");if([t,s]=ht(t,s),t.dtype==="int32"&&s.dtype==="int32")return Fm(t,s);const o={a:t,b:s},i={};return D.runKernel(lr,o,i)}const me=O({div_:b2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(n,e){let t=N(n,"a","mul"),s=N(e,"b","mul");[t,s]=ht(t,s);const o={a:t,b:s};return D.runKernel($r,o)}const R=O({mul_:y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(n){const e=N(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(nl,t)}else{const t={x:e};return D.runKernel(Xa,t)}}const Kt=O({abs_:w2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(n){const t={x:N(n,"x","acos")};return D.runKernel(Yi,t)}const k2=O({acos_:v2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2(n){const t={x:N(n,"x","acosh")};return D.runKernel(Zi,t)}const I2=O({acosh_:C2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n,e=null,t=!1){const o={x:N(n,"x","all","bool")},i={axis:e,keepDims:t};return D.runKernel(Ec,o,i)}const Om=O({all_:$2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(n,e=null,t=!1){const o={x:N(n,"x","any","bool")},i={axis:e,keepDims:t};return D.runKernel(Tc,o,i)}const Ah=O({any_:S2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(n,e=0){const s={x:N(n,"x","argMax")},o={axis:e};return D.runKernel(Ya,s,o)}const Xr=O({argMax_:N2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,e=0){const s={x:N(n,"x","argMin")},o={axis:e};return D.runKernel(Za,s,o)}const T2=O({argMin_:E2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(n){const t={x:N(n,"x","asin")};return D.runKernel(Ji,t)}const L2=O({asin_:R2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(n){const t={x:N(n,"x","asinh")};return D.runKernel(Qi,t)}const A2=O({asinh_:D2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n){const t={x:N(n,"x","atan")};return D.runKernel(er,t)}const O2=O({atan_:F2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n,e){let t=N(n,"a","atan2"),s=N(e,"b","atan2");[t,s]=ht(t,s);const o={a:t,b:s};return D.runKernel(nr,o)}const M2=O({atan2_:_2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(n){const t={x:N(n,"x","atanh")};return D.runKernel(tr,t)}const B2=O({atanh_:P2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n,e,t,s,o="NHWC",i){const r=n[3],a=[...e,r],l=Es(o);return Ft(n,a,t,i,s,null,null,l)}function An(n,e,t,s,o,i,r="channelsLast"){const[a,l]=Zr(e);let u;if(r==="channelsLast")u=[a,l,n[3],n[3]];else if(r==="channelsFirst")u=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${r}`);return Ft(n,u,t,s,o,i,!1,r)}function Ns(n,e,t,s,o,i,r="NDHWC"){const[a,l,u]=Oh(e);let c,h;if(r==="NDHWC")h="channelsLast",c=[a,l,u,n[4],n[4]];else if(r==="NCDHW")h="channelsFirst",c=[a,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${r}`);return Ks(n,c,t,s,o,!1,h,i)}function Ft(n,e,t,s,o,i,r=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h]=n;else if(a==="channelsFirst")[l,h,u,c]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[m,g]=Zr(t),[x,b]=Zr(s),w=mi(d,x),y=mi(p,b),{padInfo:v,outHeight:k,outWidth:I}=W2(o,u,c,m,g,w,y,i,a),$=r?f*h:f;let E;return a==="channelsFirst"?E=[l,$,k,I]:a==="channelsLast"&&(E=[l,k,I,$]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:$,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:b,inShape:n,outShape:E,filterShape:e}}function Ks(n,e,t,s,o,i=!1,r="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(r==="channelsLast")[l,u,c,h,d]=n;else if(r==="channelsFirst")[l,d,u,c,h]=n;else throw new Error(`Unknown dataFormat ${r}`);const[p,f,m,,g]=e,[x,b,w]=Oh(t),[y,v,k]=Oh(s),I=mi(p,y),$=mi(f,v),E=mi(m,k),{padInfo:S,outDepth:L,outHeight:_,outWidth:P}=U2(o,u,c,h,x,b,w,I,$,E,a),A=i?g*d:g;let B;return r==="channelsFirst"?B=[l,A,L,_,P]:r==="channelsLast"&&(B=[l,L,_,P,A]),{batchSize:l,dataFormat:r,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:L,outHeight:_,outWidth:P,outChannels:A,padInfo:S,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:y,dilationHeight:v,dilationWidth:k,inShape:n,outShape:B,filterShape:e}}function z2(n,e,t,s,o){s==null&&(s=Fh(n,e,t));const i=n[0],r=n[1],a=Jr((i-e+2*s)/t+1,o),l=Jr((r-e+2*s)/t+1,o);return[a,l]}function V2(n,e,t,s,o,i){o==null&&(o=Fh(n,e[0],s[0]));const r=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*o>=e[a]&&(r[a]=Jr((n[a]-e[a]+2*o)/s[a]+1,i));return r}function Fh(n,e,t,s=1){const o=mi(e,s);return Math.floor((n[0]*(t-1)-t+o)/2)}function Zr(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Oh(n){return typeof n=="number"?[n,n,n]:n}function mi(n,e){return e<=1?n:n+(n-1)*(e-1)}function W2(n,e,t,s,o,i,r,a,l){let u,c,h;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=z2([e,t],i,s,n,a);c=p[0],h=p[1]}else if(n==="same"){c=Math.ceil(e/s),h=Math.ceil(t/o);const d=Math.max(0,(c-1)*s+i-e),p=Math.max(0,(h-1)*o+r-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;u={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/s),h=Math.ceil((t-r+1)/o);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=Jr((e-i+d+p)/s+1,a),h=Jr((t-r+f+m)/o+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:h}}function U2(n,e,t,s,o,i,r,a,l,u,c){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=V2([e,t,s,1],[a,l,u],1,[o,i,r],n,c);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/o),p=Math.ceil(t/i),f=Math.ceil(s/r);const m=(d-1)*o+a-e,g=(p-1)*i+l-t,x=(f-1)*r+u-s,b=Math.floor(m/2),w=m-b,y=Math.floor(g/2),v=g-y,k=Math.floor(x/2),I=x-k;h={top:y,bottom:v,left:k,right:I,front:b,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Jr(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Eo(n){const[e,t,s]=Zr(n);return e===1&&t===1&&s===1}function Ut(n,e){return Eo(n)||Eo(e)}function To(n){return Zr(n).every(e=>e>0)}function Es(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function nn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")C(si(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(o=>{C(si(o),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n,e){const s={x:N(n,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(_l,s,o)}const F=O({reshape_:G2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,e,t,s,o){const i=N(n,"x","avgPool","float32"),r=1;C(Ut(t,r),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),C(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),nn("avgPool",s,o);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:o};let h=D.runKernel(Ja,u,c);return h=ie(h,i.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const _h=O({avgPool_:H2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n,e,t,s,o,i="NDHWC"){const r=N(n,"x","avgPool3d","float32");let a=r,l=!1;r.rank===4&&(l=!0,a=F(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),C(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),C(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),C(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),nn("avgPool3d",s,o);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:i};let h=D.runKernel(Qa,u,c);return h=ie(h,a.dtype),l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const j2=O({avgPool3d_:q2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,e=0){C(n.length>=1,()=>"Pass at least one tensor to concat");const t=vm(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return No(t[0]);const s=t,o={axis:e};return D.runKernel(sl,s,o)}const sn=O({concat_:K2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(n,e,t=!1,s=!1){let o=N(n,"a","matMul"),i=N(e,"b","matMul");[o,i]=ht(o,i);const r={a:o,b:i},a={transposeA:t,transposeB:s};return D.runKernel(el,r,a)}const Oe=O({matMul_:X2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(n){const t={x:N(n,"x","sigmoid","float32")};return D.runKernel(_r,t)}const gi=O({sigmoid_:Y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n,e,t){const s=N(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const o={x:s},i={begin:e,size:t};return D.runKernel(Vl,o,i)}const Ye=O({slice_:Z2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n){const t={x:N(n,"x","tanh","float32")};return D.runKernel(Wr,t)}const ru=O({tanh_:J2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(n,e,t){const s=N(n,"x","batchToSpaceND"),o=e.reduce((a,l)=>a*l);C(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),C(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),C(s.shape[0]%o===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);const i={x:s},r={blockShape:e,crops:t};return D.runKernel(tl,i,r)}const Mh=O({batchToSpaceND_:Q2});function ek(n){let e;return n.rank===0||n.rank===1?e=F(n,[1,1,1,n.size]):n.rank===2?e=F(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,e,t,s,o,i){i==null&&(i=.001);const r=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;o!=null&&(u=N(o,"scale","batchNorm"));let c;s!=null&&(c=N(s,"offset","batchNorm")),C(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:ek(r),scale:u,offset:c,mean:a,variance:l},p={varianceEpsilon:i},f=D.runKernel(dl,d,p);return F(f,r.shape)}const au=O({batchNorm_:tk});function nk(n,e,t,s,o,i){const r=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;o!=null&&(u=N(o,"scale","batchNorm"));let c;return s!=null&&(c=N(s,"offset","batchNorm")),C(r.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${r.rank}.`),C(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),C(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),au(r,a,l,c,u,i)}const sk=O({batchNorm2d_:nk});function ok(n,e,t,s,o,i){const r=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;o!=null&&(u=N(o,"scale","batchNorm"));let c;return s!=null&&(c=N(s,"offset","batchNorm")),C(r.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${r.rank}.`),C(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),C(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),au(r,a,l,c,u,i)}const ik=O({batchNorm3d_:ok});function rk(n,e,t,s,o,i){const r=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let u;o!=null&&(u=N(o,"scale","batchNorm"));let c;return s!=null&&(c=N(s,"offset","batchNorm")),C(r.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${r.rank}.`),C(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),C(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&C(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&C(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),au(r,a,l,c,u,i)}const ak=O({batchNorm4d_:rk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(n,e,t){const s=N(n,"x","bincount"),o=N(e,"weights","bincount");C(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),C(t>=0,()=>`size must be non-negative, but got ${t}.`),C(o.size===s.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${o.shape}.`);const i={x:s,weights:o},r={size:t};return D.runKernel(Dc,i,r)}const uk=O({bincount_:lk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(n,e){let t=N(n,"broadcastTo","x");const s=t.shape;if($s(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=F(t,u)}const o=t.shape,i=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])i[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return No(t);const a={x:t},l={reps:i};return D.runKernel(Ur,a,l)}const Qr=O({broadcastTo_:ck});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk(n){const t={x:N(n,"x","ceil","float32")};return D.runKernel(or,t)}const dk=O({ceil_:hk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lu(n,e,t){$s(n),t=t||ii(e);const s={shape:n,value:e,dtype:t};return D.runKernel(Xc,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n,e,t){const s=N(n,"x","clipByValue");if(C(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return lu(s.shape,e,s.dtype);const o={x:s},i={clipValueMin:e,clipValueMax:t};return D.runKernel(ir,o,i)}const vn=O({clipByValue_:pk});function fk(n){return sn(n,0)}const mk=O({concat1d_:fk});function gk(n,e){return sn(n,e)}const xk=O({concat2d_:gk});function bk(n,e){return sn(n,e)}const yk=O({concat3d_:bk});function wk(n,e){return sn(n,e)}const vk=O({concat4d_:wk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(n,e,t,s,o="NHWC",i=[1,1],r){const a=N(n,"x","conv2d","float32"),l=N(e,"filter","conv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),C(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),nn("conv2d",s,r);const h=o==="NHWC"?u.shape[3]:u.shape[1];C(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),C(Ut(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),C(To(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),C(To(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:t,pad:s,dataFormat:o,dilations:i,dimRoundingMode:r},f=D.runKernel(ol,d,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ro=O({conv2d_:kk});function Ck(n,e,t,s,o="NWC",i=1,r){const a=N(n,"x","conv1d"),l=N(e,"filter","conv1d");let u=a,c=!1;a.rank===2&&(c=!0,u=F(a,[1,a.shape[0],a.shape[1]])),C(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),C(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),nn("conv1d",s,r),C(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),C(Ut(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),C(To(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),C(To(t),()=>"Error in conv1D: Stride should be larger than 0."),C(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const h=F(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=F(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Ro(d,h,[1,t],s,"NHWC",[1,i],r);return c?F(g,[g.shape[2],g.shape[3]]):F(g,[g.shape[0],g.shape[2],g.shape[3]])}const _m=O({conv1d_:Ck});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n,e,t,s,o,i="NHWC",r){C(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,u=!1;e.rank===3&&(u=!0,l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),C(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),C(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),C(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=i==="NHWC"?a[3]:a[1],h=i==="NHWC"?l.shape[3]:l.shape[1];C(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),C(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),nn("conv2dDerInput",o,r);const d={dy:l,filter:t},p={strides:s,pad:o,dataFormat:i,dimRoundingMode:r,inputShape:a},f=D.runKernel(il,d,p);return u?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ph=O({conv2DBackpropInput_:Ik});function $k(n,e,t,s,o,i){const r=N(n,"x","conv2dTranspose"),a=N(e,"filter","conv2dTranspose");return Ph(t,r,a,s,o,"NHWC",i)}const Mm=O({conv2dTranspose_:$k});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n,e,t,s,o="NDHWC",i=[1,1,1]){const r=N(n,"x","conv3d"),a=N(e,"filter","conv3d");let l=r,u=!1;r.rank===4&&(u=!0,l=F(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),C(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),C(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),C(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),C(Ut(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),C(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),C(To(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),C(To(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:a},h={strides:t,pad:s,dataFormat:o,dilations:i},d=D.runKernel(rl,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Nk=O({conv3d_:Sk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(n,e,t,s,o){C(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,r=e,a=!1;e.rank===4&&(a=!0,r=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],u=r.shape[4];C(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),C(r.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${r.rank}`),C(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),C(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),C(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:r,filter:t},h={pad:o,strides:s,inputShape:i},d=D.runKernel(Mc,c,h);return a?F(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Pm=O({conv3DBackpropInput_:Ek});function Tk(n,e,t,s,o){const i=N(n,"x","conv3dTranspose"),r=N(e,"filter","conv3dTranspose");return Pm(t,i,r,s,o)}const Rk=O({conv3dTranspose_:Tk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n){const t={x:N(n,"x","cos","float32")};return D.runKernel(rr,t)}const Bh=O({cos_:Lk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n){const t={x:N(n,"x","cosh","float32")};return D.runKernel(ar,t)}const Bm=O({cosh_:Dk});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n,e=0,t=!1,s=!1){const i={x:N(n,"x","cumprod")},r={axis:e,exclusive:t,reverse:s};return D.runKernel(Pc,i,r)}const zh=O({cumprod_:Ak});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n,e=0,t=!1,s=!1){const i={x:N(n,"x","cumsum")},r={axis:e,exclusive:t,reverse:s};return D.runKernel(al,i,r)}const zm=O({cumsum_:Fk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n,e,t,s=!1){const o=N(n,"x","denseBincount"),i=N(e,"weights","denseBincount");C(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),C(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),C(t>=0,()=>`size must be non-negative, but got ${t}.`),C(i.size===o.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${i.shape}.`);const r={x:o,weights:i},a={size:t,binaryOutput:s};return D.runKernel(zc,r,a)}const Vm=O({denseBincount_:Ok});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _k(n,e,t="NHWC"){const s=N(n,"x","depthToSpace","float32"),o=t==="NHWC"?s.shape[1]:s.shape[2],i=t==="NHWC"?s.shape[2]:s.shape[3],r=t==="NHWC"?s.shape[3]:s.shape[1];C(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),C(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${s.shape}`),C(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${s.shape}`),C(r%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${r} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return D.runKernel(Vc,a,l)}const Mk=O({depthToSpace_:_k});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pk(n,e,t,s,o="NHWC",i=[1,1],r){const a=N(n,"x","depthwiseConv2d","float32"),l=N(e,"filter","depthwiseConv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),C(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=o==="NHWC"?u.shape[3]:u.shape[1];C(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),nn("depthwiseConv2d",s,r);const d={x:u,filter:l},p={strides:t,pad:s,dataFormat:o,dilations:i,dimRoundingMode:r},f=D.runKernel(ll,d,p);return c?F(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Vh=O({depthwiseConv2d_:Pk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n,e,t,s,o=[1,1],i="NHWC"){const r=N(n,"x","dilation2d"),a=N(e,"filter","dilation2d");C(r.rank===3||r.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${r.rank}.`),C(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),C(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=r,u=!1;r.rank===3&&(l=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]),u=!0),C(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const c={x:l,filter:a},h={strides:t,pad:s,dilations:o},d=D.runKernel(ul,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const zk=O({dilation2d_:Bk});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(n,e){const t=n.length,s=[];for(let o=0;o<t;o++){const i=t-1-o,r=n[i]||1;(e[e.length-1-o]||1)>1&&r===1&&s.unshift(i)}return s}function vt(n,e){const t=[];for(let s=0;s<e.length;s++){const o=n[n.length-s-1],i=e.length-s-1,r=e[i];(o==null||o===1&&r>1)&&t.unshift(i)}return t}function we(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let o=0;o<t;o++){let i=n[n.length-o-1];i==null&&(i=1);let r=e[e.length-o-1];if(r==null&&(r=1),i===1)s[t-o-1]=r;else if(r===1)s[t-o-1]=i;else if(i!==r){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-o-1]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n,e){let t=N(n,"a","equal","string_or_numeric"),s=N(e,"b","equal","string_or_numeric");[t,s]=ht(t,s),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(cl,o)}const ls=O({equal_:Vk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n,e,t){const s=N(e,"a","where"),o=N(t,"b","where"),i=N(n,"condition","where","bool"),r=we(we(i.shape,s.shape),o.shape),a=Qr(i,r),l=Qr(s,r),u=Qr(o,r),c={condition:a,t:l,e:u};return D.runKernel(zl,c)}const Xt=O({where_:Wk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uk(n){const t={x:N(n,"x","zerosLike")};return D.runKernel(Kl,t)}const Ee=O({zerosLike_:Uk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n,e){let t=N(n,"a","div"),s=N(e,"b","div");[t,s]=ht(t,s);const o=me(t,s),i=Ee(o),r=ls(s,i);return Xt(r,i,o)}const Hk=O({divNoNan_:Gk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n,e){const t=N(n,"t1","dot"),s=N(e,"t2","dot");C((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const o=t.rank===1?t.size:t.shape[1],i=s.rank===1?s.size:s.shape[0];if(C(o===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${i}.`),t.rank===1&&s.rank===1){const r=F(t,[1,-1]),a=F(s,[-1,1]),l=Oe(r,a);return F(l,[])}else if(t.rank===1&&s.rank===2){const r=F(t,[1,-1]),a=F(s,[s.shape[0],s.shape[1]]),l=Oe(r,a);return F(l,[l.size])}else if(t.rank===2&&s.rank===1){const r=F(s,[-1,1]),a=Oe(t,r);return F(a,[a.size])}else{const r=F(s,[s.shape[0],s.shape[1]]);return Oe(t,r)}}const jk=O({dot_:qk});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n,...e){const t=e.map((o,i)=>N(o,`tensors${i}`,"einsum")),s={equation:n};return D.runKernel(qc,t,s)}const ea=O({einsum_:Kk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n){const t={x:N(n,"x","elu","float32")};return D.runKernel(ur,t)}const uu=O({elu_:Xk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yk(n){let e=N(n,"x","erf");C(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ie(e,"float32"));const t={x:e};return D.runKernel(cr,t)}const Wm=O({erf_:Yk});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wh(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Um(n,e,t){const s=n.length+e.length,o=[];let i=0,r=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?o.push(n[i++]):o.push(e[r++]);return o}function Rt(n,e){const t=[],s=n.length;for(let i=0;i<s;i++)e.indexOf(i)===-1&&t.push(n[i]);const o=e.map(i=>n[i]);return[t,o]}function xt(n,e){const t=e.map(s=>1);return Um(n,t,e)}function Ot(n,e,t){C(Wh(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function at(n,e){if(Wh(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Xs(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function dt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n,e=null,t=!1){const o={x:N(n,"x","max")},i={reductionIndices:e,keepDims:t};return D.runKernel(kl,o,i)}const Kn=O({max_:Zk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n,e=null,t=!1){const o={x:N(n,"x","min")},i={axis:e,keepDims:t};return D.runKernel(Sl,o,i)}const cu=O({min_:Jk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,e){let t=N(n,"base","pow"),s=N(e,"exp","pow");[t,s]=ht(t,s);const o={a:t,b:s};return D.runKernel(Sr,o)}const Lo=O({pow_:Qk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _e(n,e){if((Dn(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Dn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ou(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n){const t={x:N(n,"x","sqrt","float32")};return D.runKernel(Pr,t)}const Gt=O({sqrt_:eC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(n){const e=N(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const tt=O({square_:tC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nC(n,e=null,t=!1){let s=N(n,"x","sum");s.dtype==="bool"&&(s=ie(s,"int32"));const o={x:s},i={axis:e,keepDims:t};return D.runKernel(Wl,o,i)}const fe=O({sum_:nC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(n,e="euclidean",t=null,s=!1){n=N(n,"x","norm");const o=Gm(n,e,t);let i=o.shape;if(s){const r=$e(t,n.shape);i=xt(o.shape,r)}return F(o,i)}function Gm(n,e,t=null){if(n.rank===0)return Kt(n);if(n.rank!==1&&t===null)return Gm(F(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return fe(Kt(n),t);if(e===1/0)return Kn(Kt(n),t);if(e===-1/0)return cu(Kt(n),t);if(e==="euclidean"||e===2)return Gt(fe(Lo(Kt(n),_e(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Kn(fe(Kt(n),t[0]),t[1]-1);if(e===1/0)return Kn(fe(Kt(n),t[1]),t[0]);if(e===-1/0)return cu(fe(Kt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Gt(fe(tt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const hu=O({norm_:sC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,e=null,t=!1){return hu(n,"euclidean",e,t)}const iC=O({euclideanNorm_:oC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(n){const t={x:N(n,"x","exp")};return D.runKernel(hr,t)}const us=O({exp_:rC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aC(n,e=0){const t=N(n,"x","expandDims","string_or_numeric");C(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},o={dim:e};return D.runKernel(hl,s,o)}const on=O({expandDims_:aC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(n){const t={x:N(n,"x","expm1")};return D.runKernel(dr,t)}const uC=O({expm1_:lC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(n,e){const t=N(n,"x","tile","string_or_numeric");C(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},o={reps:e};return D.runKernel(Ur,s,o)}const Xn=O({tile_:cC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(n,e,t,s="float32"){e==null&&(e=n);const o=Se([n,e],s),i=n<=e?n:e;for(let a=0;a<i;++a)o.set(1,a,a);const r=F(o.toTensor(),[n,e]);if(t==null)return r;if(t.length===1)return Xn(on(r,0),[t[0],1,1]);if(t.length===2)return Xn(on(on(r,0),0),[t[0],t[1],1,1]);if(t.length===3)return Xn(on(on(on(r,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Hm=O({eye_:hC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n){const t={x:N(n,"x","floor","float32")};return D.runKernel(pr,t)}const du=O({floor_:dC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n,e,t=0,s=0){const o=N(n,"x","gather"),i=N(e,"indices","gather","int32"),r={x:o,indices:i},a={axis:t,batchDims:s};return D.runKernel(pl,r,a)}const Uh=O({gather_:pC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(n,e){let t=N(n,"a","greater","string_or_numeric"),s=N(e,"b","greater","string_or_numeric");[t,s]=ht(t,s),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(fl,o)}const kn=O({greater_:fC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(n,e){let t=N(n,"a","greaterEqual","string_or_numeric"),s=N(e,"b","greaterEqual","string_or_numeric");[t,s]=ht(t,s),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(mr,o)}const Do=O({greaterEqual_:mC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(n){const t={input:N(n,"input","imag")};return D.runKernel(Jc,t)}const Gh=O({imag_:gC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xC(n){const t={x:N(n,"x","isFinite")};return D.runKernel(xr,t)}const bC=O({isFinite_:xC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yC(n){const t={x:N(n,"x","isInf")};return D.runKernel(br,t)}const wC=O({isInf_:yC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vC(n){const t={x:N(n,"x","isNaN")};return D.runKernel(yr,t)}const kC=O({isNaN_:vC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CC(n,e=.2){const s={x:N(n,"x","leakyRelu")},o={alpha:e};return D.runKernel(ml,s,o)}const Hh=O({leakyRelu_:CC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(n,e){let t=N(n,"a","less","string_or_numeric"),s=N(e,"b","less","string_or_numeric");[t,s]=ht(t,s),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(gl,o)}const pu=O({less_:IC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C(n,e){let t=N(n,"a","lessEqual","string_or_numeric"),s=N(e,"b","lessEqual","string_or_numeric");[t,s]=ht(t,s),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(xl,o)}const bi=O({lessEqual_:$C});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(n,e=5,t=1,s=1,o=.5){const i=N(n,"x","localResponseNormalization");C(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),C(si(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let r=i,a=!1;i.rank===3&&(a=!0,r=F(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:r},u={depthRadius:e,bias:t,alpha:s,beta:o},c=D.runKernel(vl,l,u);return a?F(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const NC=O({localResponseNormalization_:SC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n){const t={x:N(n,"x","log","float32")};return D.runKernel(wr,t)}const cs=O({log_:EC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TC(n){const t={x:N(n,"x","log1p")};return D.runKernel(vr,t)}const qm=O({log1p_:TC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RC(n,e){C(vc(n),()=>"The f passed in variableGrads(f) must be a function"),C(e==null||Array.isArray(e)&&e.every(u=>u instanceof nu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in D.registeredVariables)e.push(D.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),C(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const i=!0,{value:r,grads:a}=D.gradients(n,e,null,i);C(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),C(r.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${r.rank} tensor`);const l={};return e.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:r,grads:l}}function yi(n){return D.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(n){const t={x:N(n,"x","neg")};return D.runKernel(El,t)}const pt=O({neg_:LC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(n){const t={x:N(n,"x","softplus")};return D.runKernel(Mr,t)}const ta=O({softplus_:DC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(n){const e=N(n,"x","logSigmoid");return yi(s=>({value:pt(ta(pt(s))),gradFunc:r=>R(r,gi(pt(s)))}))(e)}const FC=O({logSigmoid_:AC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(n,e){let t=N(n,"a","sub"),s=N(e,"b","sub");[t,s]=ht(t,s);const o={a:t,b:s};return D.runKernel(zr,o)}const ge=O({sub_:OC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _C(n,e=-1){const t=N(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return yi((o,i)=>{const a=Kn(o,e,!0),l=ge(o,a),u=ge(ie(l,"float32"),cs(fe(us(l),e,!0)));return i([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,f=!0,m=us(p);return ge(h,R(fe(h,e,f),m))}}})(t)}const jm=O({logSoftmax_:_C});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n,e=null,t=!1){const s=N(n,"x","logSumExp"),o=$e(e,s.shape),i=Kn(s,o,!0),r=ge(s,i),a=us(r),l=fe(a,o),u=cs(l),c=Z(F(i,u.shape),u);if(t){const h=xt(c.shape,o);return F(c,h)}return c}const Km=O({logSumExp_:MC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PC(n,e){const t=N(n,"a","logicalAnd","bool"),s=N(e,"b","logicalAnd","bool");we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(bl,o)}const Ts=O({logicalAnd_:PC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BC(n){const t={x:N(n,"x","logicalNot","bool")};return D.runKernel(yl,t)}const qh=O({logicalNot_:BC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zC(n,e){const t=N(n,"a","logicalOr","bool"),s=N(e,"b","logicalOr","bool");we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(wl,o)}const Xm=O({logicalOr_:zC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(n,e){const t=N(n,"a","logicalXor","bool"),s=N(e,"b","logicalXor","bool");return we(t.shape,s.shape),Ts(Xm(n,e),qh(Ts(n,e)))}const WC=O({logicalXor_:VC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n,e,t,s,o){const i=N(n,"x","maxPool"),r=1;let a=i,l=!1;i.rank===3&&(l=!0,a=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),C(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),C(Ut(t,r),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),nn("maxPool",s,o);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:o},h=D.runKernel(Cl,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const jh=O({maxPool_:UC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GC(n,e=[1,1,1],t,s,o,i="NDHWC"){const r=N(n,"x","maxPool3d");let a=r,l=!1;r.rank===4&&(l=!0,a=F(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),C(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),C(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),nn("maxPool3d",s,o);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:i},h=D.runKernel(Il,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const HC=O({maxPool3d_:GC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC(n,e){let t=N(n,"a","maximum"),s=N(e,"b","maximum");[t,s]=ht(t,s),t.dtype==="bool"&&(t=ie(t,"int32"),s=ie(s,"int32")),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(kr,o)}const Ys=O({maximum_:qC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n,e=null,t=!1){const o={x:N(n,"x","mean")},i={axis:e,keepDims:t};return D.runKernel($l,o,i)}const bt=O({mean_:jC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lt(n,e="float32"){if($s(n),e==="complex64"){const s=Lt(n,"float32"),o=Lt(n,"float32");return Co(s,o)}const t=Wt(G(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zs(n,e="float32"){if($s(n),e==="complex64"){const s=Zs(n,"float32"),o=Lt(n,"float32");return Co(s,o)}const t=Cc(G(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(n,e){let t=N(n,"a","minimum"),s=N(e,"b","minimum");[t,s]=ht(t,s),t.dtype==="bool"&&(t=ie(t,"int32"),s=ie(s,"int32")),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(Cr,o)}const na=O({minimum_:KC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n,e,t){C(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=N(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");C(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const o=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)C(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),C(e[a][0]>=0&&e[a][0]<=s.shape[a]-o&&e[a][1]>=0&&e[a][1]<=s.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-o} or less than 0 for input of shape ${s.shape}`);const i={paddings:e,mode:t},r={x:s};return D.runKernel(Nl,r,i)}const YC=O({mirrorPad_:XC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZC(n,e){let t=N(n,"a","mod"),s=N(e,"b","mod");[t,s]=ht(t,s);const o={a:t,b:s};return D.runKernel(Ir,o)}const JC=O({mod_:ZC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n,e=null,t=!1){n=N(n,"x","moments");const s=$e(e,n.shape),o=bt(n,s,t);let i=o.shape;t||(i=xt(o.shape,s));const r=tt(ge(ie(n,"float32"),F(o,i))),a=bt(r,s,t);return{mean:o,variance:a}}const Kh=O({moments_:QC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eI(n,e){let t=N(n,"a","notEqual","string_or_numeric"),s=N(e,"b","notEqual","string_or_numeric");[t,s]=ht(t,s),we(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(Tl,o)}const fu=O({notEqual_:eI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tI(n,e,t=1,s=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const r={indices:N(n,"indices","oneHot","int32")},a={dtype:o,depth:e,onValue:t,offValue:s};return D.runKernel(Ll,r,a)}const Ym=O({oneHot_:tI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nI(n){const t={x:N(n,"x","onesLike")};return D.runKernel(Rl,t)}const Fn=O({onesLike_:nI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(n,e,t=0){const s=N(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:t},i={x:s};return D.runKernel(Al,i,o)}const Xh=O({pad_:sI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oI(n,e,t){const s=N(n,"x","spaceToBatchND");C(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),C(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),C(s.shape.reduce((r,a,l)=>l>0&&l<=e.length?r&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:r,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const o={x:s},i={blockShape:e,paddings:t};return D.runKernel(Ul,o,i)}const Yh=O({spaceToBatchND_:oI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(n,e,t,s,o,i,r){o==null&&(o=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=N(n,"x","maxPool");let l=a,u=!1;a.rank===3&&(u=!0,l=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),C(Ut(i,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${o}'`);const c=An(l.shape,e,i,o,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=aI([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=rI([c.inHeight,c.inWidth],h,d),g=p?s:"valid",x=p?l:Yh(l,h,f),w=(t==="avg"?()=>_h(x,e,i,g,r):()=>jh(x,e,i,g,r))(),y=p?w:Mh(w,h,m);return u?F(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function rI(n,e,t){const s=t.map(c=>c[0]),o=t.map(c=>c[1]),i=n.concat(s,o),r=e.map((c,h)=>(c-i[h]%c)%c),a=o.map((c,h)=>c+r[h]),l=e.map((c,h)=>[s[h],a[h]]),u=e.map((c,h)=>[0,r[h]]);return[l,u]}function aI(n,e){const s=n.map((r,a)=>r+(r-1)*(e[a]-1)).map(r=>r-1),o=s.map(r=>Math.floor(r/2)),i=s.map((r,a)=>r-o[a]);return s.map((r,a)=>[o[a],i[a]])}const lI=O({pool_:iI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n,e){const t=N(n,"x","prelu"),s=N(e,"alpha","prelu"),o={x:t,alpha:s};return D.runKernel(Fl,o)}const Zh=O({prelu_:uI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(n,e=null,t=!1){let s=N(n,"x","prod");s.dtype==="bool"&&(s=ie(s,"int32"));const o={x:s},i={axis:e,keepDims:t};return D.runKernel(Ol,o,i)}const hI=O({prod_:cI});var Jh={exports:{}};Jh.exports,function(n){(function(e,t,s){function o(l){var u=this,c=a();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function i(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function r(l,u){var c=new o(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}function a(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=r:this.alea=r})(go,n)}(Jh);var dI=Jh.exports,Qh={exports:{}};Qh.exports,function(n){(function(e,t,s){function o(a){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function r(a,l){var u=new o(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=r:this.xor128=r})(go,n)}(Qh);var pI=Qh.exports,ed={exports:{}};ed.exports,function(n){(function(e,t,s){function o(a){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function r(a,l){var u=new o(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=r:this.xorwow=r})(go,n)}(ed);var fI=ed.exports,td={exports:{}};td.exports,function(n){(function(e,t,s){function o(a){var l=this;l.next=function(){var c=l.x,h=l.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,l.i=h+1&7,p};function u(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}u(l,a)}function i(a,l){return l.x=a.x.slice(),l.i=a.i,l}function r(a,l){a==null&&(a=+new Date);var u=new o(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.x&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=r:this.xorshift7=r})(go,n)}(td);var mI=td.exports,nd={exports:{}};nd.exports,function(n){(function(e,t,s){function o(a){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,p,f;return l.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(c^c>>>16)|0};function u(c,h){var d,p,f,m,g,x=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;c.w=g,c.X=x,c.i=f}u(l,a)}function i(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function r(a,l){a==null&&(a=+new Date);var u=new o(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.X&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=r:this.xor4096=r})(go,n)}(nd);var gI=nd.exports,sd={exports:{}};sd.exports,function(n){(function(e,t,s){function o(a){var l=this,u="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):u+=a;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function i(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function r(a,l){var u=new o(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&i(c,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=r:this.tychei=r})(go,n)}(sd);var xI=sd.exports,Zm={exports:{}},bI={},yI=Object.freeze({__proto__:null,default:bI}),wI=uv(yI);(function(n){(function(e,t,s){var o=256,i=6,r=52,a="random",l=s.pow(o,i),u=s.pow(2,r),c=u*2,h=o-1,d;function p(y,v,k){var I=[];v=v==!0?{entropy:!0}:v||{};var $=x(g(v.entropy?[y,w(t)]:y??b(),3),I),E=new f(I),S=function(){for(var L=E.g(i),_=l,P=0;L<u;)L=(L+P)*o,_*=o,P=E.g(1);for(;L>=c;)L/=2,_/=2,P>>>=1;return(L+P)/_};return S.int32=function(){return E.g(4)|0},S.quick=function(){return E.g(4)/4294967296},S.double=S,x(w(E.S),t),(v.pass||k||function(L,_,P,A){return A&&(A.S&&m(A,E),L.state=function(){return m(E,{})}),P?(s[a]=L,_):L})(S,$,"global"in v?v.global:this==s,v.state)}function f(y){var v,k=y.length,I=this,$=0,E=I.i=I.j=0,S=I.S=[];for(k||(y=[k++]);$<o;)S[$]=$++;for($=0;$<o;$++)S[$]=S[E=h&E+y[$%k]+(v=S[$])],S[E]=v;(I.g=function(L){for(var _,P=0,A=I.i,B=I.j,V=I.S;L--;)_=V[A=h&A+1],P=P*o+V[h&(V[A]=V[B=h&B+_])+(V[B]=_)];return I.i=A,I.j=B,P})(o)}function m(y,v){return v.i=y.i,v.j=y.j,v.S=y.S.slice(),v}function g(y,v){var k=[],I=typeof y,$;if(v&&I=="object")for($ in y)try{k.push(g(y[$],v-1))}catch{}return k.length?k:I=="string"?y:y+"\0"}function x(y,v){for(var k=y+"",I,$=0;$<k.length;)v[h&$]=h&(I^=v[h&$]*19)+k.charCodeAt($++);return w(v)}function b(){try{var y;return d&&(y=d.randomBytes)?y=y(o):(y=new Uint8Array(o),(e.crypto||e.msCrypto).getRandomValues(y)),w(y)}catch{var v=e.navigator,k=v&&v.plugins;return[+new Date,e,k,e.screen,w(t)]}}function w(y){return String.fromCharCode.apply(0,y)}if(x(s.random(),t),n.exports){n.exports=p;try{d=wI}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:go,[],Math)})(Zm);var vI=Zm.exports,kI=dI,CI=pI,II=fI,$I=mI,SI=gI,NI=xI,Ao=vI;Ao.alea=kI,Ao.xor128=CI,Ao.xorwow=II,Ao.xorshift7=$I,Ao.xor4096=SI,Ao.tychei=NI;var od=Ao;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jm{constructor(e,t,s,o,i){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const r=i||Math.random();this.random=od.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let e,t,s=!1;for(;!s;){let o,i,r;do o=2*this.random()-1,i=2*this.random()-1,r=o*o+i*i;while(r>=1||r===0);const a=Math.sqrt(-2*Math.log(r)/r);e=this.mean+this.stdDev*o*a,t=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class EI{constructor(e=0,t=1,s,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=od.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TI(n,e=0,t=1,s,o){if($s(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new Jm(e,t,s,!1,o),r=Se(n,s);for(let a=0;a<r.values.length;a++)r.values[a]=i.nextValue();return r.toTensor()}const RI=O({randomNormal_:TI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LI(n,e=0,t=1,s="float32",o){$s(n);const i=Se(n,s),r=new EI(e,t,null,o);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const sa=O({randomUniform_:LI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const o={start:n,stop:e,step:t,dtype:s};return D.runKernel(ih,{},o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(n){const t={input:N(n,"input","real")};return D.runKernel(rh,t)}const mu=O({real_:DI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(n){const t={x:N(n,"x","reciprocal")};return D.runKernel(Nr,t)}const FI=O({reciprocal_:AI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(n){const t={x:N(n,"x","relu")};return D.runKernel(Er,t)}const Fo=O({relu_:OI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(n){const t={x:N(n,"x","relu6")};return D.runKernel(Tr,t)}const Qm=O({relu6_:_I});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n,e){const s={x:N(n,"x","reverse")},o={dims:e};return D.runKernel(Bl,s,o)}const Oo=O({reverse_:MI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PI(n){const t={x:N(n,"x","round")};return D.runKernel(Rr,t)}const eg=O({round_:PI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(n){const t={x:N(n,"x","rsqrt","float32")};return D.runKernel(Lr,t)}const tg=O({rsqrt_:BI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(n){const t={x:N(n,"x","selu")};return D.runKernel(Dr,t)}const ng=O({selu_:zI});function VI(n,e,t,s,o,i=[1,1],r="NHWC"){const a=N(n,"x","separableConv2d"),l=N(e,"depthwiseFilter","separableConv2d"),u=N(t,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=F(a,[1,a.shape[0],a.shape[1],a.shape[2]])),r==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");C(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),C(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),C(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),C(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),C(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];C(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Vh(c,l,s,o,r,i),g=Ro(f,u,1,"valid",r);return h?F(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const sg=O({separableConv2d_:VI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n){const t={x:N(n,"x","sign")};return D.runKernel(Or,t)}const UI=O({sign_:WI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GI(n){const t={x:N(n,"x","sin","float32")};return D.runKernel(Ar,t)}const og=O({sin_:GI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(n){const t={x:N(n,"x","sinh")};return D.runKernel(Fr,t)}const ig=O({sinh_:HI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n,e,t){const s=N(n,"x","slice1d");return C(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ye(s,[e],[t])}const id=O({slice1d_:qI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jI(n,e,t){const s=N(n,"x","slice2d");return C(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ye(s,e,t)}const rg=O({slice2d_:jI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KI(n,e,t){const s=N(n,"x","slice3d");return C(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ye(s,e,t)}const rd=O({slice3d_:KI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n,e,t){const s=N(n,"x","slice4d");return C(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ye(s,e,t)}const gu=O({slice4d_:XI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n,e=-1){const t=N(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},o={dim:e};return D.runKernel(Hl,s,o)}const ad=O({softmax_:YI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(n){C(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Kc,e)}const ag=O({fft_:ZI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n){C(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Zc,e)}const ld=O({ifft_:JI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const o=F(n,[t,e]);s=ld(o)}else{const o=[t,2*(e-1)],i=F(mu(n),[t,e]),r=F(Gh(n),[t,e]),a=Oo(Ye(i,[0,1],[t,e-2]),1),l=R(Oo(Ye(r,[0,1],[t,e-2]),1),_e(-1)),u=sn([i,a],1),c=sn([r,l],1),h=F(Co(u,c),[o[0],o[1]]);s=ld(h)}if(s=mu(s),n.rank===3&&n.shape[0]!==0){const o=s,i=n.shape[0];s=F(s,[i,s.shape[0]/i,s.shape[1]]),o.dispose()}return s}const e$=O({irfft_:QI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,e,t=0){const o={x:N(n,"x","split")},i={numOrSizeSplits:e,axis:t};return D.runKernel(Gl,o,i)}const Cn=O({split_:t$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,e){C(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let o;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,o=Ye(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,o=sn([n,Lt(f)],n.shape.length-1),t=e}else o=n;const i=Ee(o),r=F(Co(o,i),[s,t]),a=ag(r),l=Math.floor(t/2)+1,u=mu(a),c=Gh(a),h=Cn(u,[l,t-l],u.shape.length-1),d=Cn(c,[l,t-l],c.shape.length-1),p=o.shape.slice();return p[o.shape.length-1]=l,F(Co(h[0],d[0]),p)}const s$=O({rfft_:n$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n,e){let t=N(n,"a","squaredDifference"),s=N(e,"b","squaredDifference");[t,s]=ht(t,s),we(t.shape,s.shape);const o={a:t,b:s},i={};return D.runKernel(Br,o,i)}const i$=O({squaredDifference_:o$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(n,e){const t=N(n,"x","squeeze","string_or_numeric");return F(t,Vs(t.shape,e).newShape)}const ia=O({squeeze_:r$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,e=0){const t=vm(n,"tensors","stack","string_or_numeric");C(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&C(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,o={axis:e};return D.runKernel(Dl,s,o)}const Rs=O({stack_:a$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,e=0){const s={x:N(n,"x","step")},o={alpha:e};return D.runKernel(Gr,s,o)}const ra=O({step_:l$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n,e,t,s,o=0,i=0,r=0,a=0,l=0){const c={x:N(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:o,endMask:i,ellipsisMask:r,newAxisMask:a,shrinkAxisMask:l};return D.runKernel(hh,c,h)}const c$=O({stridedSlice_:u$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(n){const t={x:N(n,"x","tan","float32")};return D.runKernel(Vr,t)}const d$=O({tan_:h$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(n,e){df(n);const t=su(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ou(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(n,e,t){if(df(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=su(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ou(n,e,s,t)}function lg(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(i+` update.rank < ${o}. `);if(n.length<s+(t.rank-o))throw new Error(i+` Output shape length < ${s+(t.rank-o)}`);if(t.rank!==o+n.length-s)throw new Error(i+` update.rank != ${o+n.length-s}`);for(let r=0;r<o;++r)if(t.shape[r]!==e.shape[r])throw new Error(i+` updates.shape[${r}] (${t.shape[r]}) != indices.shape[${r}] (${e.shape[r]}).`);for(let r=0;r<t.rank-o;++r)if(t.shape[r+o]!==n[r+s])throw new Error(i+` updates.shape[${r+o}] (${t.shape[r+o]}) != shape[${r+o}] (${n[r+o]})`)}function p$(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}lg(t,e,n)}function _o(n,e,t){const s=e.shape.length,o=s>1?e.shape[s-1]:1,i=t.length;let r=1;for(let h=o;h<i;++h)r*=t[h];const a=o<1?1:o,l=G(e.shape)/a,u=[...ce(t.slice(0,o)),1],c=G(t);return{sliceRank:o,numUpdates:l,sliceSize:r,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n,e=1,t=!0){const s=N(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);const i={x:s},r={k:e,sorted:t},[a,l]=D.runKernel(dh,i,r);return{values:a,indices:l}}const m$=O({topk_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,e=0,t=1,s,o){if($s(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new Jm(e,t,s,!0,o),r=Se(n,s);for(let a=0;a<r.values.length;a++)r.values[a]=i.nextValue();return r.toTensor()}const ug=O({truncatedNormal_:g$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(n,e=0){const t=N(n,"x","unique","string_or_numeric");C(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},o={axis:e},[i,r]=D.runKernel(fh,s,o);return{values:i,indices:r}}const b$=O({unique_:x$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n,e,t){const s=N(n,"x","unsortedSegmentSum"),o=N(e,"segmentIds","unsortedSegmentSum","int32");C(si(t),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:o},r={numSegments:t};return D.runKernel(jl,i,r)}const cg=O({unsortedSegmentSum_:y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n,e=0){const t=N(n,"x","unstack","string_or_numeric");C(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},o={axis:e};return D.runKernel(ql,s,o)}const Mo=O({unstack_:w$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n,e=!0,t,s){return D.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hg(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const s=Se(n,"int32"),o=Se([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const r=s.indexToLoc(t[i]),a=i*n.length;o.values.set(r,a)}return o.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n,e,t){const s=N(n,"x","transpose");if(e==null&&(e=s.shape.map((r,a)=>a).reverse()),C(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(r=>{C(r>=0&&r<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const o={x:s},i={perm:e};return s.dtype==="complex64"?M(()=>{let r=mu(s),a=Gh(s);return r=D.runKernel(li,{x:r},i),a=D.runKernel(li,{x:a},i),t&&(a=pt(a)),Co(r,a)}):D.runKernel(li,o,i)}const Te=O({transpose_:k$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(n,e){if(e==null)return n.shape.slice();if(Fe(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(n,e,t,s){const o=N(n,"x","dropout");if(C(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),C(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof wt?o.clone():o;const i=C$(o,t),r=1-e,a=me(du(Z(sa(i,0,1,"float32",s),r)),r);return R(o,a)}const $$=O({dropout_:I$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(n,e,t,s,o,i="NHWC",r){let a=n;n.rank===3&&(a=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]])),C(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),C(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),C(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];C(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),C(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),nn("conv2dDerFilter",o,r);const h={x:a,dy:l},d={strides:s,pad:o,dataFormat:i,dimRoundingMode:r,filterShape:t};return D.runKernel(Oc,h,d)}const ud=O({conv2DBackpropFilter_:S$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cd(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return R(n,ra(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function hd(n,e){let t=e;const s=vt(n.shape,e.shape);return s.length>0&&(t=fe(t,s)),F(t,n.shape)}function dd(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Fo(n);if(e==="elu")return uu(n);if(e==="relu6")return Qm(n);if(e==="prelu")return Zh(n,t);if(e==="leakyrelu")return Hh(n,s);if(e==="sigmoid")return gi(n);throw new Error(`Unknown fused activation ${e}.`)}const pd=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$({x:n,filter:e,strides:t,pad:s,dataFormat:o="NHWC",dilations:i=[1,1],dimRoundingMode:r,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",pd(D.state.gradientDepth,l)===!1){C(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=Ro(n,e,t,s,o,i,r);return a!=null&&(k=Z(k,a)),dd(k,l,u,c)}const h=N(n,"x","conv2d","float32"),d=N(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=F(h,[1,h.shape[0],h.shape[1],h.shape[2]])),C(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),C(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),nn("fused conv2d",s,r);const m=o==="NHWC"?p.shape[3]:p.shape[1];C(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),C(Ut(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const g=Ft(p.shape,d.shape,t,i,s,r);let x;a!=null&&(x=N(a,"bias","fused conv2d"),[x]=ht(x,h),o==="NHWC"?we(g.outShape,x.shape):(C(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),C(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(u!=null){const k=u.shape;if(C(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)C(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{we(k,g.outShape)}catch{const $=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error($)}b=N(u,"prelu weights","fused conv2d")}const w=(k,I)=>{C(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[$,E,S,L]=I,_=cd(k,S,l);C(Eo(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const P=Ph(E.shape,_,$,t,s),A=ud(E,_,$.shape,t,s),B=[P,A];if(L!=null){const V=hd(L,_);B.push(V)}return B},y={x:p,filter:d,bias:x,preluActivationWeights:b},v={strides:t,pad:s,dataFormat:o,dilations:i,dimRoundingMode:r,activation:l,leakyreluAlpha:c};return a==null?yi((I,$,E)=>{let S=D.runKernel(Yl,y,v);return E([$,I,S]),f&&(S=F(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:w}})(p,d):yi((I,$,E,S)=>{let L=D.runKernel(Yl,y,v);return S([$,I,L,E]),f&&(L=F(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:w}})(p,d,x)}const E$=O({fusedConv2d_:N$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(n,e,t,s,o,i=[1,1],r){let a=n;n.rank===3&&(a=F(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:a,dy:l},c={strides:s,pad:o,dimRoundingMode:r,dilations:i,filterShape:t};return D.runKernel(Wc,u,c)}const R$=O({depthwiseConv2dNativeBackpropFilter_:T$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L$(n,e,t,s,o,i=[1,1],r){let a=e,l=!1;e.rank===3&&(l=!0,a=F(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:a,filter:t},c={strides:s,pad:o,dimRoundingMode:r,dilations:i,inputShape:n},h=D.runKernel(Uc,u,c);return l?F(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const D$=O({depthwiseConv2dNativeBackpropInput_:L$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:o,activation:i="linear",preluActivationWeights:r,leakyreluAlpha:a=.2}){if(pd(D.state.gradientDepth,i)===!1){let L=Oe(n,e,t,s);return o!=null&&(L=Z(L,o)),dd(L,i,r,a)}let l=N(n,"a","fused matMul"),u=N(e,"b","fused matMul");[l,u]=ht(l,u);const c=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=G(f),x=G(m);C(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=we(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),y=t?F(l,[g,c,d]):F(l,[g,d,c]),v=s?F(u,[x,p,h]):F(u,[x,h,p]);let k;o!=null&&(k=N(o,"bias","fused matMul"),[k]=ht(k,l),we(w,k.shape));let I;r!=null&&(I=N(r,"prelu weights","fused matMul"));const $=(L,_)=>{const[P,A,B,V]=_,H=cd(F(L,B.shape),B,i);let W,q;if(!t&&!s?(W=Oe(H,A,!1,!0),q=Oe(P,H,!0,!1)):!t&&s?(W=Oe(H,A,!1,!1),q=Oe(H,P,!0,!1)):t&&!s?(W=Oe(A,H,!1,!0),q=Oe(P,H,!1,!1)):(W=Oe(A,H,!0,!0),q=Oe(H,P,!0,!0)),o!=null){const K=hd(V,H);return[W,q,K]}else return[W,q]},E={a:y,b:v,bias:k,preluActivationWeights:I},S={transposeA:t,transposeB:s,activation:i,leakyreluAlpha:a};return o==null?yi((_,P,A)=>{const B=D.runKernel(Xl,E,S);return A([_,P,B]),{value:F(B,w),gradFunc:$}})(y,v):yi((_,P,A,B)=>{const V=D.runKernel(Xl,E,S);return B([_,P,V,A]),{value:F(V,w),gradFunc:$}})(y,v,k)}const dg=O({fusedMatMul_:A$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(n,e,t,s,o="bilinear",i=0){const r=N(n,"image","cropAndResize"),a=N(e,"boxes","cropAndResize","float32"),l=N(t,"boxInd","cropAndResize","int32"),u=a.shape[0];C(r.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${r.rank}.`),C(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),C(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),C(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),C(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),C(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const c={image:r,boxes:a,boxInd:l},h={method:o,extrapolationValue:i,cropSize:s};return D.runKernel(Bc,c,h)}const O$=O({cropAndResize_:F$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(n){const e=N(n,"image","flipLeftRight","float32");C(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(Yc,t,{})}const M$=O({flipLeftRight_:_$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n){const e=N(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];C(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),C(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Xn(e,o)}const B$=O({grayscaleToRGB_:P$});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n){const e=N(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];C(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),C(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const o=e.dtype,i=ie(e,"float32"),r=mn([.2989,.587,.114]);let a;switch(e.rank){case 2:a=ea("ij,j->i",i,r);break;case 3:a=ea("ijk,k->ij",i,r);break;case 4:a=ea("ijkl,l->ijk",i,r);break;case 5:a=ea("ijklm,m->ijkl",i,r);break;case 6:a=ea("ijklmn,n->ijklm",i,r);break;default:throw new Error("Not a valid tensor rank.")}return a=on(a,-1),ie(a,o)}const V$=O({rgbToGrayscale_:z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W$(n,e,t=0,s=.5){const o=N(n,"image","rotateWithOffset","float32");C(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const i={image:o},r={radians:e,fillValue:t,center:s};return D.runKernel(mh,i,r)}const U$=O({rotateWithOffset_:W$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wi(n,e,t,s,o,i){s==null&&(s=.5),o==null&&(o=Number.NEGATIVE_INFINITY),i==null&&(i=0);const r=n.shape[0];return t=Math.min(t,r),C(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),C(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),C(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),C(e.rank===1,()=>"scores must be a 1D tensor"),C(e.shape[0]===r,()=>`scores has incompatible shape with boxes. Expected ${r}, but was ${e.shape[0]}`),C(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G$(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const i=N(n,"boxes","nonMaxSuppression","float32"),r=N(e,"scores","nonMaxSuppression","float32"),a=wi(i,r,t,s,o);t=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:o};return D.runKernel(nh,{boxes:i,scores:r},l)}const H$=O({nonMaxSuppression_:G$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,e,t){const s=j$(n,e,t),o=s<0?-(s+1):s;n.splice(o,0,e)}function j$(n,e,t){return X$(n,e,t||K$)}function K$(n,e){return n>e?1:n<e?-1:0}function X$(n,e,t){let s=0,o=n.length,i=0,r=!1;for(;s<o;){i=s+(o-s>>>1);const a=t(e,n[i]);a>0?s=i+1:(o=i,r=!a)}return r?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(n,e,t,s,o){return xd(n,e,t,s,o,0)}function md(n,e,t,s,o,i){return xd(n,e,t,s,o,0,!1,i,!0)}function gd(n,e,t,s,o,i){return xd(n,e,t,s,o,i,!0)}function xd(n,e,t,s,o,i,r=!1,a=!1,l=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(pg);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<t&&u.length>0;){const g=u.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<o)break;let y=!1;for(let v=h.length-1;v>=w;--v){const k=Y$(n,b,h[v]);if(k>=s){y=!0;break}if(g.score=g.score*Z$(s,c,k),g.score<=o)break}g.suppressBeginIndex=h.length,y||(g.score===x?(h.push(b),d.push(g.score)):g.score>o&&q$(u,g,pg))}const p=h.length,f=t-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return r&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Y$(n,e,t){const s=n.subarray(e*4,e*4+4),o=n.subarray(t*4,t*4+4),i=Math.min(s[0],s[2]),r=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),d=Math.max(o[1],o[3]),p=(a-i)*(l-r),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(r,c),x=Math.min(a,h),b=Math.min(l,d),w=Math.max(x-m,0)*Math.max(b-g,0);return w/(p+f-w)}function Z$(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function pg(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function J$(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const i=N(n,"boxes","nonMaxSuppressionAsync"),r=N(e,"scores","nonMaxSuppressionAsync"),a=wi(i,r,t,s,o);t=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l=await Promise.all([i.data(),r.data()]),u=l[0],c=l[1],{selectedIndices:h}=fd(u,c,t,s,o);return i!==n&&i.dispose(),r!==e&&r.dispose(),mn(h,"int32")}const Q$=J$;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,i=0){const r=N(n,"boxes","nonMaxSuppression"),a=N(e,"scores","nonMaxSuppression"),l=wi(r,a,t,s,o,i);t=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:r,scores:a},c={maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:i},h=D.runKernel(oh,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const tS=O({nonMaxSuppressionWithScore_:eS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nS(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,i=0){const r=N(n,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),l=wi(r,a,t,s,o,i);t=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([r.data(),a.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=gd(c,h,t,s,o,i);return r!==n&&r.dispose(),a!==e&&a.dispose(),{selectedIndices:mn(d,"int32"),selectedScores:mn(p)}}const sS=nS;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,i=!1){const r=N(n,"boxes","nonMaxSuppression"),a=N(e,"scores","nonMaxSuppression"),l=wi(r,a,t,s,o,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:r,scores:a},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},f=D.runKernel(sh,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const iS=O({nonMaxSuppressionPadded_:oS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rS(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,i=!1){const r=N(n,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),l=wi(r,a,t,s,o,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([r.data(),a.data()]),{selectedIndices:f,validOutputs:m}=md(d,p,u,c,h,i);return r!==n&&r.dispose(),a!==e&&a.dispose(),{selectedIndices:mn(f,"int32"),validOutputs:_e(m,"int32")}}const aS=rS;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n,e,t=!1,s=!1){const o=N(n,"images","resizeBilinear");C(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),C(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),C(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=o,r=!1;o.rank===3&&(r=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},u=D.runKernel(Pl,a,l);return r?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const fg=O({resizeBilinear_:lS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,e,t=!1,s=!1){const o=N(n,"images","resizeNearestNeighbor");C(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),C(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),C(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),C(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=o,r=!1;o.rank===3&&(r=!0,i=F(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},u=D.runKernel(Ml,a,l);return r?F(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const mg=O({resizeNearestNeighbor_:uS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,e="binary",t=!1,s=.5){const o=N(n,"image","threshold"),i=.2989,r=.587,a=.114,l=o.shape[0]*o.shape[1];let u=R(mn([s]),255),c,h,d,p;if(C(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),C(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),C(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),C(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[c,h,d]=Cn(o,[1,1,1],-1);const g=R(c,i),x=R(h,r),b=R(d,a);p=Z(Z(g,x),b)}else p=n;if(e==="otsu"){const g=uk(ie(eg(p),"int32"),Kr([]),256);u=hS(g,l)}const f=t?bi(p,u):kn(p,u);return ie(R(f,255),"int32")}function hS(n,e){let t=mn([-1]),s=mn([0]),o=mn([0]),i,r,a,l,u,c;for(let h=0;h<n.size-1;h++){i=Ye(n,0,h+1),r=Ye(n,h+1),u=me(fe(i),e),c=me(fe(r),e);const d=fe(R(i,oa(0,i.size)));a=me(d,fe(i));const p=lu(r.shape,i.size),f=Z(oa(0,r.size),p),m=R(r,f);l=me(fe(m),fe(r));const g=ge(a,l),x=ge(a,l),b=R(u,c);o=R(R(b,g),x);const w=kn(o,s);s=Xt(w,o,s),t=Xt(w,mn([h]),t)}return t}const dS=O({threshold_:cS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n,e,t="nearest",s="constant",o=0,i){const r=N(n,"image","transform","float32"),a=N(e,"transforms","transform","float32");C(r.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${r.rank}.`),C(a.rank===2&&(a.shape[0]===r.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),C(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:r,transforms:a},u={interpolation:t,fillMode:s,fillValue:o,outputShape:i};return D.runKernel(ph,l,u)}const fS=O({transform_:pS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,e,t){const s=N(n,"a","bandPart");C(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const o=s.shape,[i,r]=s.shape.slice(-2);let a,l;typeof e=="number"?(C(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),C(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),a=N(e<0?i:e,"numLower","bandPart")):(C(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Xt(pu(e,0),i,na(e,i))),typeof t=="number"?(C(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),C(t<=r,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${r}).`),l=N(t<0?r:t,"numUpper","bandPart")):(C(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Xt(pu(t,0),r,na(t,r)));const u=F(oa(0,i,1,"int32"),[-1,1]),c=oa(0,r,1,"int32"),h=ge(u,c),d=Ts(bi(h,a),Do(h,pt(l))),p=Lt([i,r],s.dtype);return F(Rs(Mo(F(s,[-1,i,r])).map(f=>Xt(d,f,p))),o)}const gS=O({bandPart_:mS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n){let e;if(Array.isArray(n)){e=!1,C(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=n[0].shape[0];for(let i=1;i<n.length;++i)C(n[i].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${o})`)}else e=!0,n=Cn(n,n.shape[0],0).map(o=>ia(o,[0]));C(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let o=0;o<n.length;++o)t.push(D.tidy(()=>{let i=s[o];if(o>0)for(let r=0;r<o;++r){const a=R(fe(R(t[r],i)),t[r]);i=ge(i,a)}return me(i,hu(i,"euclidean"))}));return e?Rs(t,0):t}const bS=O({gramSchmidt_:xS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n,e=!1){if(C(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return gg(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=Mo(F(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),o=[],i=[];s.forEach(l=>{const[u,c]=gg(l,e);o.push(u),i.push(c)});const r=F(Rs(o,0),n.shape),a=F(Rs(i,0),n.shape);return[r,a]}}function gg(n,e=!1){return D.tidy(()=>{C(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let o=Hm(t),i=No(n);const r=aa([[1]],[1,1]);let a=No(r);const l=t>=s?s:t;for(let u=0;u<l;++u){const c=i,h=a,d=o;[a,i,o]=D.tidy(()=>{const p=Ye(i,[u,u],[t-u,1]),f=hu(p),m=Ye(i,[u,u],[1,1]),g=Xt(kn(m,0),aa([[-1]]),aa([[1]])),x=ge(m,R(g,f)),b=me(p,x);b.shape[0]===1?a=No(r):a=sn([r,Ye(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const w=pt(me(Oe(g,x),f)),y=Ye(i,[u,0],[t-u,s]),v=R(w,a),k=Te(a);if(u===0)i=ge(y,Oe(v,Oe(k,y)));else{const E=ge(y,Oe(v,Oe(k,y)));i=sn([Ye(i,[0,0],[u,s]),E],0)}const I=Te(v),$=Ye(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=ge($,Oe(Oe($,a),I));else{const E=ge($,Oe(Oe($,a),I));o=sn([Ye(o,[0,0],[t,u]),E],1)}return[a,i,o]}),Ce([c,h,d])}return!e&&t>s&&(o=Ye(o,[0,0],[t,s]),i=Ye(i,[0,0],[s,s])),[o,i]})}const wS=O({qr_:yS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ls={flipLeftRight:M$,grayscaleToRGB:B$,resizeNearestNeighbor:mg,resizeBilinear:fg,rgbToGrayscale:V$,rotateWithOffset:U$,cropAndResize:O$,nonMaxSuppression:H$,nonMaxSuppressionAsync:Q$,nonMaxSuppressionWithScore:tS,nonMaxSuppressionWithScoreAsync:sS,nonMaxSuppressionPadded:iS,nonMaxSuppressionPaddedAsync:aS,threshold:dS,transform:fS},vS={bandPart:gS,gramSchmidt:bS,qr:wS};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kS=new Map,CS=new Map;class vi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class On{constructor(){this.classNameMap={}}static getMap(){return On.instance==null&&(On.instance=new On),On.instance}static register(e){On.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function j(n,e,t){C(n.className!=null,()=>"Class being registered does not have the static className property defined."),C(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),C(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,o=e+">"+s;return On.register(n),kS.set(o,n),CS.set(n,o),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Js extends vi{minimize(e,t=!1,s){const{value:o,grads:i}=this.computeGradients(e,s);if(s!=null){const r=s.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(r)}else this.applyGradients(i);return Ce(i),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return RC(e,t)}dispose(){this.iterations_!=null&&Ce(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:_e(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Js,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xg extends Js{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const i=D.registeredVariables[s],r=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accum_grad`,variable:M(()=>Ee(i).variable(r))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${s}/accum_var`,variable:M(()=>Ee(i).variable(r))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;M(()=>{const c=Z(R(l,this.rho),R(tt(a),1-this.rho)),h=R(me(Gt(Z(u,this.epsilon)),Gt(Z(l,this.epsilon))),a),d=Z(R(u,this.rho),R(tt(h),1-this.rho));l.assign(c),u.assign(d);const p=Z(R(h,-this.learningRate),i);i.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ce(this.accumulatedGrads.map(e=>e.variable)),Ce(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bg extends Js{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const i=D.registeredVariables[s];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accumulator`,variable:M(()=>lu(i.shape,this.initialAccumulatorValue).variable(!1))});const r=Array.isArray(e)?e[o].tensor:e[s];if(r==null)return;const a=this.accumulatedGrads[o].variable;M(()=>{const l=Z(a,tt(r));a.assign(l);const u=Z(R(me(r,Gt(Z(l,D.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ce(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yg extends Js{static get className(){return"Adam"}constructor(e,t,s,o=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],M(()=>{this.accBeta1=_e(t).variable(),this.accBeta2=_e(s).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);M(()=>{const s=ge(1,this.accBeta1),o=ge(1,this.accBeta2);t.forEach((i,r)=>{const a=D.registeredVariables[i],l=!1;this.accumulatedFirstMoment[r]==null&&(this.accumulatedFirstMoment[r]={originalName:`${i}/m`,variable:M(()=>Ee(a).variable(l))}),this.accumulatedSecondMoment[r]==null&&(this.accumulatedSecondMoment[r]={originalName:`${i}/v`,variable:M(()=>Ee(a).variable(l))});const u=Array.isArray(e)?e[r].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[r].variable,h=this.accumulatedSecondMoment[r].variable,d=Z(R(c,this.beta1),R(u,1-this.beta1)),p=Z(R(h,this.beta2),R(tt(u),1-this.beta2)),f=me(d,s),m=me(p,o);c.assign(d),h.assign(p);const g=Z(R(me(f,Z(Gt(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ce(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),M(()=>{this.accBeta1.assign(Lo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Lo(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wg extends Js{static get className(){return"Adamax"}constructor(e,t,s,o=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],M(()=>{this.iteration=_e(0).variable(),this.accBeta1=_e(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);M(()=>{const s=ge(1,this.accBeta1),o=me(-this.learningRate,Z(R(this.iteration,this.decay),1));t.forEach((i,r)=>{const a=D.registeredVariables[i],l=!1;this.accumulatedFirstMoment[r]==null&&(this.accumulatedFirstMoment[r]={originalName:`${i}/m`,variable:Ee(a).variable(l)}),this.accumulatedWeightedInfNorm[r]==null&&(this.accumulatedWeightedInfNorm[r]={originalName:`${i}/v`,variable:Ee(a).variable(l)});const u=Array.isArray(e)?e[r].tensor:e[i];if(u==null)return;const c=this.accumulatedFirstMoment[r].variable,h=this.accumulatedWeightedInfNorm[r].variable,d=Z(R(c,this.beta1),R(u,1-this.beta1)),p=R(h,this.beta2),f=Kt(u),m=Ys(p,f);c.assign(d),h.assign(m);const g=Z(R(me(o,s),me(d,Z(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ce(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bd extends Js{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const i=Array.isArray(e)?e[o].tensor:e[s];if(i==null)return;const r=D.registeredVariables[s];M(()=>{const a=Z(R(this.c,i),r);r.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=rs(_e(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vg extends bd{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=_e(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const i=D.registeredVariables[s];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${s}/momentum`,variable:M(()=>Ee(i).variable(!1))});const r=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[s];a!=null&&M(()=>{let l;const u=Z(R(this.m,r),a);this.useNesterov?l=Z(R(this.c,Z(a,R(u,this.m))),i):l=Z(R(this.c,u),i),r.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ce(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kg extends Js{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,o=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const i=D.registeredVariables[s],r=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${s}/rms`,variable:M(()=>Ee(i).variable(r))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${s}/momentum`,variable:M(()=>Ee(i).variable(r))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${s}/mg`,variable:M(()=>Ee(i).variable(r))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;M(()=>{const c=Z(R(l,this.decay),R(tt(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[o].variable,d=Z(R(h,this.decay),R(a,1-this.decay)),p=me(R(a,this.learningRate),Gt(ge(c,Z(tt(d),this.epsilon)))),f=Z(R(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const m=ge(i,f);i.assign(m)}else{const h=Z(R(l,this.decay),R(tt(a),1-this.decay)),d=Z(R(u,this.momentum),me(R(a,this.learningRate),Gt(Z(h,this.epsilon))));l.assign(h),u.assign(d);const p=ge(i,d);i.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ce(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ce(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ce(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS=[xg,bg,yg,wg,vg,kg,bd];function $S(){for(const n of IS)j(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cg(n,e,t,s){r(n),t=t??0,s=s??1,a(t,s);let o=0;const i=l=>(l.then(u=>{const c=t+ ++o/n.length*(s-t);return e(c),u}),l);function r(l){C(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){C(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),C(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),C(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function SS(n,e){e==null&&(e={});const t=e.fetchFunc==null?z().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await Cg(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(a):await Cg(a,e.onProgress,.5,1)}function NS(n,e){var t;const s=e.fetchFunc==null?z().platform.fetch:e.fetchFunc;let o=0,i;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async r=>{for(var a;o<n.length;){i||(i=(await s(n[o],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await i.read();if(l){o++,i=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,o/n.length);continue}r.enqueue(u);return}r.close()}})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ES="application/octet-stream",TS="application/json";class yd{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(C(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=z().platform.fetch,C(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&C(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=Gv(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(o)],{type:TS}),"model.json"),e.weightData!=null){const r=qs.join(e.weightData);t.body.append("model.weights.bin",new Blob([r],{type:ES}),"model.weights.bin")}const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:Eh(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let r=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?r+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":r+=" Please make sure the server is serving valid JSON for this request.",new Error(r)}const s=t.modelTopology,o=t.weightsManifest;if(s==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return qv(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Sm(e.weightsManifest),o=()=>NS(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:o})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,o]=RS(t),i=this.weightPathPrefix||s,r=[],a=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(u)):r.push(i+u+o);return this.weightUrlConverter&&r.push(...await Promise.all(a)),r}async loadWeights(e){const t=await this.getWeightUrls(e),s=Sm(e),o=await SS(t,this.loadOptions);return[s,o]}}yd.URL_SCHEME_REGEX=/^https?:\/\//;function RS(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),o=t>e?n.substring(t):"";return[s+"/",o]}function Ig(n){return n.match(yd.URL_SCHEME_REGEX)!=null}const $g=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Ig(s)):t=Ig(n),t)return Sg(n,e)}return null};Tt.registerSaveRouter($g),Tt.registerLoadRouter($g);function Sg(n,e){return new yd(n,e)}function LS(n,e){return Sg(n,e)}function wd(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(G(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const o=e.shape,i=o[o.length-1];let r=1;for(let h=0;h<o.length-1;++h)r*=o[h];const a=n.shape,l=o.slice();l.pop();let u=1;for(let h=i;h<t;++h)u*=a[h],l.push(a[h]);const c=[...ce(n.shape).map(h=>h/u),1].slice(0,i);return[l,r,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vd=-2,DS=-1;function kd(n,e,t){const s=n.shape.length;C(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),C(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let o=0;o<s;++o)C(e[o]+t[o]<=n.shape[o],()=>`Error in slice${s}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${n.shape[o]})`)}function AS(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Cd(n,e,t){const s=[];for(let o=0;o<n.length;o++)s[o]=Math.ceil((e[o]-n[o])/t[o]);return s}function Ng(n,e,t,s){const o=[...n];for(let i=o.length;i<s.length;i++)o.push(1);for(let i=0;i<t;i++)i===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function Eg(n,e,t){return t<=n?t:t-(e-1)}function Tg(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function FS(n,e,t,s,o,i,r,a,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;c=Rg(r,p,f,s,n),h=Lg(a,p,f,o,n),d=Ng(i,p,f,n)}else for(let p=0;p<u;p++)c[p]=Ag(r,s,i,n,p,l),h[p]=Fg(a,o,i,n,p,l),d[p]=Dg(i,p,l);return{begin:c,end:h,strides:d}}function Rg(n,e,t,s,o){const i=[...o],r=Tg(t,e);for(let a=0;a<i.length;a++)if(r.indexOf(a)>-1)i[a]=0;else{const l=Eg(e,t,a);let u=s[l];n&1<<l&&(u=0),i[a]=u}return i}function Lg(n,e,t,s,o){const i=[...o],r=Tg(t,e);for(let a=0;a<i.length;a++)if(r.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const l=Eg(e,t,a);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[a]=u}for(let a=0;a<i.length;a++){const l=o[a];i[a]<0&&(i[a]+=l),i[a]=mo(0,i[a],o[a])}return i}function Dg(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function Ag(n,e,t,s,o,i){let r=e[o];const a=t[o]||1;(n&1<<o||i&1<<o||r==null)&&(a>0?r=Number.MIN_SAFE_INTEGER:r=Number.MAX_SAFE_INTEGER);const l=s[o];return r<0&&(r+=l),r=mo(0,r,l-1),r}function Fg(n,e,t,s,o,i){let r=e[o];const a=t[o]||1;(n&1<<o||i&1<<o||r==null)&&(a>0?r=Number.MAX_SAFE_INTEGER:r=Number.MIN_SAFE_INTEGER);const l=s[o];return r<0&&(r+=l),a>0?r=mo(0,r,l):r=mo(-1,r,l-1),r}function Id(n,e,t){let s=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){s=o;break}for(let o=s+1;o<t.length;o++)if(e[o]>0||t[o]!==n[o])return!1;return!0}function $d(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function xu(n,e,t){let s;const o=n.shape.length;typeof e=="number"?s=[e,...new Array(o-1).fill(0)]:e.length<o?s=e.concat(new Array(o-e.length).fill(0)):s=e.slice(),s.forEach(r=>{C(r!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(o).fill(-1):typeof t=="number"?i=[t,...new Array(o-1).fill(-1)]:t.length<o?i=t.concat(new Array(o-t.length).fill(-1)):i=t,i=i.map((r,a)=>r>=0?r:(C(r===-1,()=>`Negative size values should be exactly -1 but got ${r} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,i]}function Sd(n,e,t,s,o,i,r,a,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,r!=null&&r&r-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:o,endMask:i,ellipsisMask:r,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)c&&1<<w&a&&h.numAddAxisAfterEllipsis++,1<<w&r&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};OS(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let w=0;w<n.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const y=!!(d.shrinkAxisMask&1<<w),v=n[w];if(v===-1){g.push(y?1:-1);continue}const k=[d.beginMask&1<<w,d.endMask&1<<w],I=[d.strides[w]>0?0:-1,d.strides[w]>0?v:v-1];if(y&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const $=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(y){const _=d.begin[w]<0?v+d.begin[w]:d.begin[w];if(d.begin[w]=_,d.end[w]=d.begin[w]+1,_<0||_>=v)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=Og(d.begin[w],0,d.strides[w],v,k,I),d.end[w]=Og(d.end[w],1,d.strides[w],v,k,I);const L=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===v;p=p&&L,f=f&&(w===0&&d.strides[w]===1||L)}else p=p&&d.strides[w]===1&&$,f=f&&(w===0&&d.strides[w]===1||$);let E,S=!1;if(d.beginValid&&d.endValid?(E=d.end[w]-d.begin[w],S=!0):y?(E=1,S=!0):$&&v>=0&&(d.strides[w]<0?E=-v:E=v,S=!0),S){let L;E===0||E<0!=d.strides[w]<0?L=0:L=Math.trunc(E/d.strides[w])+(E%d.strides[w]!==0?1:0),g.push(L)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const y=d.finalShapeGatherIndices[w];y>=0?x.push(g[y]):y===vd&&x.push(1)}return{finalShapeSparse:x.filter((w,y)=>d.finalShapeGatherIndices[y]!==vd),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function OS(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const o=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(vd),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(DS),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function Og(n,e,t,s,o,i){if(o[e])return t>0?i[e]:i[e+1&1];{const r=n<0?s+n:n;return r<i[0]?i[0]:r>i[1]?i[1]:r}}var _S=Object.freeze({__proto__:null,assertParamsValid:kd,computeFlatOffset:$d,computeOutShape:Cd,getNormalizedAxes:FS,isSliceContinous:Id,maskToAxes:AS,parseSliceParams:xu,sliceInfo:Sd,startForAxis:Ag,startIndicesWithElidedDims:Rg,stopForAxis:Fg,stopIndicesWithElidedDims:Lg,stridesForAxis:Dg,stridesWithElidedDims:Ng});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MS{static sgd(e){return new bd(e)}static momentum(e,t,s=!1){return new vg(e,t,s)}static rmsprop(e,t=.9,s=0,o=null,i=!1){return new kg(e,t,s,o,i)}static adam(e=.001,t=.9,s=.999,o=null){return new yg(e,t,s,o)}static adadelta(e=.001,t=.95,s=null){return new xg(e,t,s)}static adamax(e=.002,t=.9,s=.999,o=null,i=0){return new wg(e,t,s,o,i)}static adagrad(e,t=.1){return new bg(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ki=MS;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PS=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function _g(){return new Promise(n=>PS(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nd(n,e){const t=n[0].length;n.forEach((o,i)=>{C(o.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),C(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((o,i)=>{for(let r=0;r<t;r++)C(r===e||o[r]===s[r],()=>`Error in concat${t}D: Shape of tensors[${i}] (${o}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function hs(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Yn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Yn||(Yn={}));function Mg(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let o=1;o<t.length;++o){const i=t[o],r=s[s.length-t.length+o],a=s[r];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+n}] = ${i} but shape[${o+n}] = ${a}`)}else s[r]=i}return s}function Pg(n){const e={FIRST_DIM_SIZE:Yn.FIRST_DIM_SIZE,VALUE_ROWIDS:Yn.VALUE_ROWIDS,ROW_LENGTHS:Yn.ROW_LENGTHS,ROW_SPLITS:Yn.ROW_SPLITS,ROW_LIMITS:Yn.ROW_LIMITS,ROW_STARTS:Yn.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function Bg(n){return n.length===0?0:n[0]===Yn.FIRST_DIM_SIZE?n.length-1:n.length}function zg(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let o=0;o<Math.min(t,s-1);++o){const i=n[o],r=e[o+1];if(i>=0&&r>=0&&i!==1&&i!==r)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-n.length}] = ${i} but ragged tensor input.flatValues.shape[${o-n.length}] = ${r}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ed=30;function bu(n){return n<=Ed?n:kc(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Td(n,e,t){const s=t*(typeof n=="number"?n:n[0]),o=e*(typeof n=="number"?n:n[1]);return[s,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(n,e,t,s=!0){let o=[];if(s)o=o.concat(e.slice(0)),o.push(n[0]/t),o=o.concat(n.slice(1));else{o=o.concat(n[0]);const i=e.length;for(let r=0;r<i;++r)o=o.concat([n[r+1]/e[r],e[r]]);o=o.concat(n.slice(i+1))}return o}function ua(n,e,t=!0){const s=[];if(t){s.push(e);for(let o=e+1;o<n;++o)o<=2*e?(s.push(o),s.push(o-(e+1))):s.push(o)}else{const o=[],i=[];for(let r=1;r<n;++r)r>=e*2+1||r%2===1?i.push(r):o.push(r);s.push(...o),s.push(0),s.push(...i)}return s}function ca(n,e,t,s=!0){const o=[];s?o.push(n[0]/t):o.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?s?o.push(e[i-1]*n[i]):o.push(n[i]/e[i-1]):o.push(n[i]);return o}function Rd(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function Ld(n,e,t){const s=n.slice(0,1);for(let o=0;o<t;++o)s.push(n[o+1]-e[o][0]-e[o][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yu=1.7580993408473768,wu=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dd=.3275911,Ad=.254829592,Fd=-.284496736,Od=1.421413741,_d=-1.453152027,Md=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function Vg(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function Wg(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=0;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function Ug(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=2;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function Pd(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function Gg(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function Hg(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let o=0;o<Math.ceil(n/2);o++){const i=(e?2:-2)*Math.PI*(o/n);t[o]=Math.cos(i),s[o]=Math.sin(i)}return{real:t,imag:s}}function qg(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),o=Math.cos(s),i=Math.sin(s);return{real:o,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bd="->",BS=/->/g,jg=",",Kg="...";function zd(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(BS,"").length)/Bd.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Bd}").`);const[s,o]=n.split(Bd);C(s.indexOf(Kg)===-1,()=>`The ellipsis notation ("${Kg}") is not supported yet.`);const i=s.split(jg),r=i.length;if(e!==r)throw new Error(`Expected ${r} input tensors, received ${e}`);if(r>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<o.length;++d){const p=o[d];if(!i.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==jg&&a.push(p)}const l=new Array(i.length);for(let d=0;d<r;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<i[d].length;++p)l[d].push(a.indexOf(i[d][p]))}const u=a.length,c=o.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function Vd(n,e){let t=new Array(n);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;const s=[];for(let o=0;o<n;++o)t[o]===-1&&s.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:s}}function Wd(n,e,t){const s=new Array(n);for(let o=0;o<t.length;++o){const i=t[o].shape;for(let r=0;r<e[o].length;++r)s[e[o][r]]===void 0?s[e[o][r]]=i[r]:C(s[e[o][r]]===i[r],()=>`Expected dimension ${s[e[o][r]]} at axis ${r} of input shaped ${JSON.stringify(i)}, but got dimension ${i[r]}`)}}function Ud(n,e){const t=n,s=[];let o=0;n.length===0&&t.push(-1),o=n.length+1;for(let r=0;r<o;++r)s.push([]);const i=[];for(let r=0;r<t.length;++r){const a=t[r],l=zS(e,a);for(const u of l)i.indexOf(u)===-1&&(s[r].push(u),i.push(u))}return{path:t,steps:s}}function Gd(n){return n.every((e,t)=>e===t)}function zS(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Hd(n,e,t=0){let s=[];if(typeof e=="number")C(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const o=e.reduce((r,a)=>(a===-1&&(r+=1),r),0);C(o<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const r=e.reduce((a,l)=>l>0?a+l:a);e[i]=n.shape[t]-r}C(n.shape[t]===e.reduce((r,a)=>r+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xg(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Yg(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function Zg(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jg(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function Qg(n,e){return`size ${n} must be non-negative, not ${e}`}function e0(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function t0(n,e){const t=G(n),s=G(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function n0(n,e){const t=G(n),s=G(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(){return"segment ids must be >= 0"}function s0(){return"segment ids are not increasing"}function o0(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function i0(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0(n,e){let t=!1,s;for(n<=Ed?(s=n,t=!0):s=kc(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=kc(n,s+1);return s}function a0(n,e,t){const s=[],o=n.length;for(let i=0;i<o;i++)i!==e?s.push(n[i]):s.push(t);return s}function jd(n,e,t,s){const o=e.shape.length,i=n.shape.length;if(s!==0&&(s<-o||s>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${s}`);if(s<0&&(s+=o),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const r=n.shape[t],a=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<o;h++)a.push(e.shape[h]);for(let h=t+1;h<i;h++)a.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:r,outputShape:a}}var VS=Object.freeze({__proto__:null,collectGatherOpShapeInfo:jd,computeOutShape:a0,segOpComputeOptimalWindowSize:r0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(n){try{return n.map(e=>Hs(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function l0(n){return n.map(e=>Gs(e))}var WS=Object.freeze({__proto__:null,ERF_A1:Ad,ERF_A2:Fd,ERF_A3:Od,ERF_A4:_d,ERF_A5:Md,ERF_P:Dd,PARALLELIZE_THRESHOLD:Ed,get RowPartitionType(){return Yn},SELU_SCALE:wu,SELU_SCALEALPHA:yu,applyActivation:dd,assertAndGetBroadcastShape:we,assertAxesAreInnerMostDims:Ot,assertParamsConsistent:Nd,assignToTypedArray:Gg,axesAreInnerMostDims:Wh,calculateShapes:_o,checkEinsumDimSizes:Wd,checkPadOnDimRoundingMode:nn,combineLocations:Um,combineRaggedTensorToTensorShapes:Mg,complexWithEvenIndex:Wg,complexWithOddIndex:Ug,computeConv2DInfo:Ft,computeConv3DInfo:Ks,computeDefaultPad:Fh,computeDilation2DInfo:Yr,computeOptimalWindowSize:bu,computeOutAndReduceShapes:Rt,computeOutShape:hs,computePool2DInfo:An,computePool3DInfo:Ns,convertConv2DDataFormat:Es,decodeEinsumEquation:zd,eitherStridesOrDilationsAreOne:Ut,expandShapeToKeepDim:xt,exponent:qg,exponents:Hg,fromStringArrayToUint8:l0,fromUint8ToStringArray:As,getAxesPermutation:at,getBroadcastDims:xi,getComplexWithIndex:Pd,getEinsumComputePath:Ud,getEinsumPermutation:Vd,getFusedBiasGradient:hd,getFusedDyActivation:cd,getImageCenter:Td,getInnerMostAxes:dt,getPermuted:ua,getRaggedRank:Bg,getReductionAxes:vt,getReshaped:la,getReshapedPermuted:ca,getRowPartitionTypesHelper:Pg,getSliceBeginCoords:Rd,getSliceSize:Ld,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Xg,getSparseFillEmptyRowsNegativeIndexErrorMessage:Yg,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Zg,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:e0,getSparseReshapeInputOutputMismatchErrorMessage:n0,getSparseReshapeInputOutputMultipleErrorMessage:t0,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Jg,getSparseReshapeNegativeOutputDimErrorMessage:Qg,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:i0,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:qd,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:s0,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:o0,getUndoAxesPermutation:Xs,isIdentityPermutation:Gd,log:rv,mergeRealAndImagArrays:Ds,prepareAndValidate:wd,prepareSplitSize:Hd,segment_util:VS,shouldFuse:pd,slice_util:_S,splitRealAndImagArrays:Vg,stridesOrDilationsArePositive:To,tupleValuesAreOne:Eo,upcastType:fn,validateDefaultValueShape:zg,validateInput:p$,validateUpdateShape:lg,warn:wn});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$S();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0={kernelName:Xa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,ra(ie(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const US={kernelName:Yi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=tt(ie(t,"float32")),o=Gt(ge(_e(1),s));return pt(me(n,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GS={kernelName:Zi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Gt(ge(tt(ie(t,"float32")),1));return me(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS={kernelName:ai,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=we(t.shape,s.shape);return{a:()=>{let a=n;const l=vt(t.shape,o);return l.length>0&&(a=fe(a,l)),F(a,t.shape)},b:()=>{let a=n;const l=vt(s.shape,o);return l.length>0&&(a=fe(a,l)),F(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qS={kernelName:Nc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,o)=>{t[o]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jS={kernelName:Ya,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS={kernelName:Za,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XS={kernelName:Ji,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,Gt(ge(_e(1),tt(ie(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS={kernelName:Qi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Gt(Z(_e(1),tt(ie(t,"float32"))));return me(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZS={kernelName:nr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=we(t.shape,s.shape);return{a:()=>{const a=Z(tt(t),tt(s));let l=R(n,me(s,a));const u=vt(t.shape,o);return u.length>0&&(l=fe(l,u)),F(l,t.shape)},b:()=>{const a=Z(tt(t),tt(s));let l=pt(R(n,me(t,a)));const u=vt(s.shape,o);return u.length>0&&(l=fe(l,u)),F(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS={kernelName:er,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,Z(tt(ie(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS={kernelName:tr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,ge(_e(1),tt(ie(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n,e,t,s,o,i){const r=N(n,"dy","avgPool3dGrad"),a=N(e,"input","avgPool3dGrad");let l=r,u=a,c=!1;a.rank===4&&(c=!0,l=F(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]),u=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),C(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),C(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),nn("avgPool3dGrad",o,i);const h={dy:l,input:u},d={filterSize:t,strides:s,pad:o,dimRoundingMode:i},p=D.runKernel(Lc,h,d);return c?F(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const tN=O({avgPool3dGrad_:eN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nN={kernelName:Qa,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:i,pad:r,dimRoundingMode:a}=t;return{x:()=>tN(n,s,o,i,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n,e,t,s,o){const i=N(n,"dy","avgPoolGrad"),r=N(e,"input","avgPoolGrad");C(r.rank===i.rank,()=>`Rank of input (${r.rank}) does not match rank of dy (${i.rank})`);let a=r,l=i,u=!1;r.rank===3&&(u=!0,a=F(r,[1,r.shape[0],r.shape[1],r.shape[2]]),l=F(i,[1,i.shape[0],i.shape[1],i.shape[2]])),C(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),C(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:l,input:a},h={filterSize:t,strides:s,pad:o},d=D.runKernel(Rc,c,h);return u?F(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const oN=O({avgPoolGrad_:sN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iN={kernelName:Ja,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:i,pad:r}=t;return{x:()=>oN(n,s,o,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN={kernelName:el,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,o]=e,{transposeA:i,transposeB:r}=t;return!i&&!r?{a:()=>Oe(n,o,!1,!0),b:()=>Oe(s,n,!0,!1)}:!i&&r?{a:()=>Oe(n,o,!1,!1),b:()=>Oe(n,s,!0,!1)}:i&&!r?{a:()=>Oe(o,n,!1,!0),b:()=>Oe(s,n,!1,!1)}:{a:()=>Oe(o,n,!0,!0),b:()=>Oe(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aN={kernelName:tl,gradFunc:(n,e,t)=>{const{blockShape:s,crops:o}=t;return{x:()=>Yh(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lN={kernelName:nv,gradFunc:(n,e,t)=>{const s=t,o=s.inputShape,i=s.shape,r=Array.from(i);for(let l=o.length-1;l>=0;l--)if(o[l]===i[l])r[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${i}].`);const a=[];for(let l=0;l<r.length;l++)r[l]>1&&a.push(l);return{x:()=>fe(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uN={kernelName:sr,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cN={kernelName:or,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hN={kernelName:ir,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:o,clipValueMax:i}=t;return{x:()=>Xt(Ts(Do(s,o),bi(s,i)),n,Ee(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dN={kernelName:nl,inputsToSave:["x"],gradFunc:u0.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pN={kernelName:sl,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:o}=t,i=$e(o,e[0].shape)[0],r=s.map(l=>l[i]);return Cn(n,r,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fN={kernelName:ol,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{dilations:i,strides:r,pad:a,dataFormat:l}=t;return C(Eo(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>Ph(s.shape,n,o,r,a,l),filter:()=>ud(s,n,o.shape,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mN={kernelName:il,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{strides:i,pad:r,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>Ro(n,o,i,r,a,1,l),filter:()=>ud(n,s,o.shape,i,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,e,t,s,o){let i=n;n.rank===4&&(i=F(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let r=e;r.rank===4&&(r=F(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),C(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),C(r.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${r.shape}.`),C(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),C(i.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${t[3]}.`),C(r.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${r.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:i,dy:r},l={strides:s,pad:o,filterShape:t};return D.runKernel(_c,a,l)}const xN=O({conv3DBackpropFilter_:gN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN={kernelName:rl,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:i}=t;C(Eo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[r,a]=e;return{x:()=>Pm(r.shape,n,a,o,i),filter:()=>xN(r,n,a.shape,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN={kernelName:rr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(pt(og(ie(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wN={kernelName:ar,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(ig(ie(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN={kernelName:al,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o,exclusive:i,reverse:r}=t;return{x:()=>{const a=at([o],s.rank);let l=zm(n,o,i,!r);return a!=null&&(l=Te(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN={kernelName:ll,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:i,dimRoundingMode:r}=t,a=s??[1,1];C(Eo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,u]=e;return C(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),C(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),C(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),C(Ut(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),nn("depthwiseConv2d",i,r),{x:()=>D$(l.shape,n,u,o,i,a,r),filter:()=>R$(l,n,u.shape,o,i,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN={kernelName:ul,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,i={x:s,filter:o,dy:n},r={x:s,filter:o,dy:n};return{x:()=>D.runKernel(Gc,i,t),filter:()=>D.runKernel(Hc,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IN={kernelName:ur,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>D.runKernel(jc,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N={kernelName:cr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=R(us(pt(tt(t))),2/Math.sqrt(Math.PI));return{x:()=>R(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SN={kernelName:hr,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN={kernelName:hl,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>F(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN={kernelName:dr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,us(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TN={kernelName:pr,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN={kernelName:fr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=we(t.shape,s.shape);return{a:()=>{const a=me(n,ie(s,"float32")),l=vt(t.shape,o);return l.length>0?F(fe(a,l),t.shape):a},b:()=>{let a=R(n,ie(t,"float32"));const l=vt(s.shape,o);l.length>0&&(a=F(fe(a,l),s.shape));const u=tt(s);return pt(me(a,ie(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN={kernelName:dl,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[o,i,r,a]=e,l=a??_e(1),u=vt(i.shape,o.shape),c=[];if(i.rank===1){for(let y=0;y<o.shape.length-1;++y)c.push(o.shape[y]);c.push(1)}const h=ge(o,i),d=R(n,l),p=tg(Z(r,_e(s))),f=R(R(R(p,p),p),_e(-.5));return{x:()=>i.rank===1?F(R(R(n,Xn(F(p,[1,1,1,i.shape[0]]),c)),l),o.shape):F(R(R(n,p),l),o.shape),mean:()=>{let y=R(R(p,_e(-1)),d);return i.rank===1&&(y=fe(y,u)),F(y,i.shape)},variance:()=>{let y=R(R(f,h),d);return i.rank===1&&(y=fe(y,u)),F(y,i.shape)},scale:()=>{const y=R(h,p);let v=R(n,y);return i.rank===1&&(v=fe(v,u)),F(v,i.shape)},offset:()=>{let y=n;return i.rank===1&&(y=fe(y,u)),F(y,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DN={kernelName:pl,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,o]=e,{axis:i,batchDims:r}=t,a=$e(i,s.shape)[0],l=(u,c,h)=>()=>{const d=u.shape,p=c.size,f=d.slice(0,a),m=f.length,g=d.slice(i,d.length).slice(1),x=g.length,b=c0(0,m),w=c0(m+1,m+1+x),y=h0([f,[p],g]),v=F(h,y),k=F(c,[p]),I=h0([[m],b,w]),$=Te(v,I);let E=cg($,k,u.shape[a]);const S=Xs(I);return E=Te(E,S),E};if(r===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>Rs(c.map((p,f)=>l(p,o.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>o}}else return{x:l(s,o,n),indices:()=>o}}};function c0(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function h0(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN={kernelName:mr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Ee(t),b:()=>Ee(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FN={kernelName:gr,gradFunc:n=>({x:()=>ie(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ON={kernelName:xr,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _N={kernelName:br,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN={kernelName:yr,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PN={kernelName:ml,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:o}=t,i=kn(s,0);return{x:()=>Xt(i,n,R(n,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN={kernelName:vr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,Z(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN={kernelName:wr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,ie(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VN={kernelName:ov,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;return{logits:()=>{const r=us(s);return ge(n,R(fe(n,o,!0),r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(n,e,t,s=5,o=1,i=1,r=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:o,alpha:i,beta:r};return D.runKernel(Qc,a,l)}const UN=O({localResponseNormalizationBackprop_:WN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN={kernelName:vl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{depthRadius:i,bias:r,alpha:a,beta:l}=t;return{x:()=>UN(s,o,n,i,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d0(n,e,t,s){return e.rank<t.rank&&(e=F(e,xt(e.shape,s))),n.rank<t.rank&&(n=F(n,xt(n.shape,s))),{x:()=>R(n,ie(ls(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p0={kernelName:kl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:o}=s,i=e[0],r=e[1],a=$e(o,i.shape),l=d0(n,r,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN={kernelName:kr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>R(n,ie(Do(t,s),"float32")),b:()=>R(n,ie(pu(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n,e,t,s,o,i,r){const a=N(n,"dy","maxPool3dGrad"),l=N(e,"input","maxPool3dGrad"),u=N(t,"output","maxPool3dGrad");let c=a,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=F(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=F(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=F(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),C(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),C(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),C(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),nn("maxPool3dGrad",i,r);const f={dy:c,input:h,output:d},m={filterSize:s,strides:o,pad:i,dimRoundingMode:r},g=D.runKernel(th,f,m);return p?F(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const jN=O({maxPool3dGrad_:qN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KN={kernelName:Il,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=t;return{x:()=>jN(n,s,o,i,r,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,e,t,s,o,i,r){const a=N(n,"dy","maxPoolGrad"),l=N(e,"input","maxPoolGrad"),u=N(t,"output","maxPoolGrad");C(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),C(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),C(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),nn("maxPoolGrad",i,r);const c={dy:a,input:l,output:u},h={filterSize:s,strides:o,pad:i,dimRoundingMode:r};return D.runKernel(eh,c,h)}const YN=O({maxPoolGrad_:XN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZN={kernelName:Cl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:i,strides:r,pad:a}=t;return{x:()=>YN(n,s,o,i,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JN={kernelName:$l,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t,i=$e(o,s.shape),a=Rt(s.shape,i)[1],l=G(a);return{x:()=>{const c=s.shape.slice();i.forEach(p=>{c[p]=1});const h=F(n,c);return me(R(h,Zs(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QN={kernelName:Sl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:o}=s,[i,r]=e,a=$e(o,i.shape),l=d0(n,r,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eE={kernelName:Cr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>R(n,ie(bi(t,s),"float32")),b:()=>R(n,ie(kn(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tE={kernelName:Nl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,i=o.map(r=>r[0]);return{x:()=>Ye(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nE={kernelName:Ir,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=we(t.shape,s.shape);return{a:()=>{const a=vt(t.shape,o);return a.length>0?F(fe(n,a),t.shape):n},b:()=>{const a=R(n,pt(du(me(t,s)))),l=vt(s.shape,o);return l.length>0?F(fe(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE={kernelName:$r,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=we(t.shape,s.shape);return{a:()=>{const a=R(n,ie(s,"float32")),l=vt(t.shape,o);return l.length>0?F(fe(a,l),t.shape):a},b:()=>{const a=R(n,ie(t,"float32")),l=vt(s.shape,o);return l.length>0?F(fe(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oE={kernelName:El,gradFunc:n=>({x:()=>pt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iE={kernelName:Ll,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Lt(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rE={kernelName:Rl,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aE={kernelName:Dl,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return Mo(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f0={kernelName:Al,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,i=o.map(r=>r[0]);return{x:()=>Ye(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lE={kernelName:Sr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,o]=e,i=t,r=s,a=we(i.shape,r.shape);return{a:()=>{const c=ie(r,"float32");let h=R(n,R(c,Lo(i,ge(c,_e(1)))));const d=vt(i.shape,a);return d.length>0&&(h=fe(h,d)),F(h,i.shape)},b:()=>{const c=kn(i,0),h=Xt(c,cs(i),Ee(i));let d=R(n,R(o,h));const p=vt(r.shape,a);return p.length>0&&(d=fe(d,p)),F(d,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uE={kernelName:Fl,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,o=kn(t,0);return{x:()=>Xt(o,n,R(n,s)),alpha:()=>{let i=Xt(o,Ee(n),R(n,t));const r=vt(s.shape,n.shape);return r.length>0&&(i=fe(i,r)),F(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n,e,t){const s=n.shape.slice();s[t]=1;const o=F(e,s),i=zh(n,t,!0,!1),r=zh(n,t,!0,!0),a=R(i,r);return R(o,a)}function hE(n,e,t){const s=n.shape.length,o=s-t.length,i=at(t,s);let r=n;i!=null&&(r=Te(n,i));const a=r.shape.slice(),u=a.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);a.push(u);const c=r.reshape(a);let h=cE(c,e,o);if(h=h.reshape(r.shape),i!=null){const d=Xs(i);h=Te(h,d)}return h}const dE={kernelName:Ol,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;let i=[];return o==null?i=s.shape.map((r,a)=>a):typeof o=="number"?i=[o]:i=o,{x:()=>hE(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE={kernelName:lr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=we(t.shape,s.shape);return{a:()=>{const a=me(n,ie(s,"float32")),l=vt(t.shape,o);return l.length>0?F(fe(a,l),t.shape):a},b:()=>{let a=R(n,ie(t,"float32"));const l=vt(s.shape,o);l.length>0&&(a=F(fe(a,l),s.shape));const u=tt(s);return pt(me(a,ie(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE={kernelName:Nr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,pt(tt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mE={kernelName:Tr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=R(bi(t,6),ra(t));return{x:()=>R(n,ie(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE={kernelName:Er,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,ie(ra(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE={kernelName:_l,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>F(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE={kernelName:Pl,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>D.runKernel(lh,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yE={kernelName:Ml,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>D.runKernel(ah,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wE={kernelName:Bl,gradFunc:(n,e,t)=>{const{dims:s}=t,o=$e(s,n.shape);return{x:()=>Oo(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE={kernelName:Rr,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kE={kernelName:Lr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>pt(me(n,R(Lo(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE={kernelName:zl,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>ie(Ee(t),"float32"),t:()=>R(n,ie(t,n.dtype)),e:()=>R(n,ie(qh(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE={kernelName:Dr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=kn(t,_e(0)),o=_e(yu),i=_e(wu),r=R(n,i),a=R(R(n,o),us(ie(t,"float32")));return Xt(s,r,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $E={kernelName:_r,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,R(t,ge(_e(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SE={kernelName:Or,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE={kernelName:Ar,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(Bh(ie(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EE={kernelName:Fr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(Bm(ie(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE={kernelName:Vl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:o,size:i}=t,r=s.shape,[a,l]=xu(s,o,i),u=[];for(let c=0;c<n.rank;c++)u.push([a[c],r[c]-a[c]-l[c]]);return{x:()=>Xh(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RE={kernelName:Hl,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:o}=t,i=!0,r=R(n,s);return{logits:()=>ge(r,R(fe(r,[o],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LE={kernelName:Mr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,gi(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m0={kernelName:Ul,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:o}=t;return{x:()=>Mh(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g0={kernelName:Gl,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>sn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DE={kernelName:Pr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,R(Gt(ie(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE={kernelName:uh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,R(ie(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FE={kernelName:Br,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=_e(2);return{a:()=>R(n,R(o,ge(t,s))),b:()=>R(n,R(o,ge(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OE={kernelName:Gr,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _E={kernelName:zr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=we(t.shape,s.shape);return{a:()=>{let a=n;const l=vt(t.shape,o);return l.length>0&&(a=fe(a,l)),F(a,t.shape)},b:()=>{let a=n;const l=vt(s.shape,o);return l.length>0&&(a=fe(a,l)),F(pt(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME={kernelName:Wl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,o=s.shape.slice(),{axis:i}=t;$e(i,s.shape).forEach(u=>{o[u]=1});const a=F(n,o),l=R(a,Zs(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE={kernelName:Vr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>me(n,tt(Bh(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BE={kernelName:Wr,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(ge(_e(1),tt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zE={kernelName:Ur,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:o}=t;return{x:()=>{let r=Ee(s);if(s.rank===1)for(let a=0;a<o[0];++a)r=Z(r,Ye(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)r=Z(r,Ye(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)r=Z(r,Ye(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)for(let c=0;c<o[3];++c)r=Z(r,Ye(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return r}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE={kernelName:li,gradFunc:(n,e,t)=>{const s=t,{perm:o}=s,i=Xs(o);return{x:()=>Te(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE={kernelName:ql,gradFunc:(n,e,t)=>{const s=t,{axis:o}=s;return{value:()=>Rs(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UE={kernelName:jl,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>GE(n,t)}}};function GE(n,e){const t=Ys(e,Ee(e)),s=Uh(n,t);let o=Do(e,_e(0,"int32"));const i=s.rank-o.rank;for(let a=0;a<i;++a)o=on(o,a+1);o=Ts(o,Zs(s.shape,"bool"));const r=Ee(s);return Xt(o,s,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE={kernelName:Kl,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE=[u0,US,GS,HS,qS,jS,KS,XS,YS,ZS,JS,QS,nN,iN,rN,aN,lN,uN,cN,hN,dN,pN,mN,fN,bN,yN,wN,vN,kN,CN,pE,IN,$N,SN,NN,EN,RN,TN,LN,DN,AN,FN,ON,_N,MN,PN,BN,zN,VN,GN,p0,p0,HN,KN,ZN,JN,QN,eE,tE,nE,sE,oE,iE,rE,aE,f0,f0,lE,uE,dE,fE,mE,gE,xE,bE,yE,wE,vE,kE,CE,IE,$E,SE,NE,EE,TE,RE,LE,m0,m0,g0,g0,DE,FE,AE,OE,_E,ME,PE,BE,zE,VE,WE,UE,HE];for(const n of qE)av(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.abs=function(){return this.throwIfDisposed(),Kt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acos=function(){return this.throwIfDisposed(),k2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acosh=function(){return this.throwIfDisposed(),I2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.add=function(n){return this.throwIfDisposed(),Z(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.all=function(n,e){return this.throwIfDisposed(),Om(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.any=function(n,e){return this.throwIfDisposed(),Ah(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMax=function(n){return this.throwIfDisposed(),Xr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMin=function(n){return this.throwIfDisposed(),T2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asScalar=function(){return this.throwIfDisposed(),C(this.size===1,()=>"The array must have only 1 element."),F(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asType=function(n){return this.throwIfDisposed(),ie(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as1D=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as2D=function(n,e){return this.throwIfDisposed(),F(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),F(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),F(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as5D=function(n,e,t,s,o){return this.throwIfDisposed(),F(this,[n,e,t,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asin=function(){return this.throwIfDisposed(),L2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asinh=function(){return this.throwIfDisposed(),A2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan=function(){return this.throwIfDisposed(),O2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan2=function(n){return this.throwIfDisposed(),M2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atanh=function(){return this.throwIfDisposed(),B2(this)},U().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),_h(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Mh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchNorm=function(n,e,t,s,o){return this.throwIfDisposed(),au(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Qr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cast=function(n){return this.throwIfDisposed(),ie(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ceil=function(){return this.throwIfDisposed(),dk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),vn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof wt&&(n=[n]),sn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv1d=function(n,e,t,s,o,i){return this.throwIfDisposed(),_m(this,n,e,t,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2dTranspose=function(n,e,t,s,o){return this.throwIfDisposed(),Mm(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2d=function(n,e,t,s,o,i){return this.throwIfDisposed(),Ro(this,n,e,t,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cos=function(){return this.throwIfDisposed(),Bh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cosh=function(){return this.throwIfDisposed(),Bm(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),zh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),zm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),Mk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthwiseConv2d=function(n,e,t,s,o,i){return this.throwIfDisposed(),Vh(this,n,e,t,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dilation2d=function(n,e,t,s,o){return this.throwIfDisposed(),zk(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.divNoNan=function(n){return this.throwIfDisposed(),Hk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.div=function(n){return this.throwIfDisposed(),me(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dot=function(n){return this.throwIfDisposed(),jk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.elu=function(){return this.throwIfDisposed(),uu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.equal=function(n){return this.throwIfDisposed(),ls(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.erf=function(){return this.throwIfDisposed(),Wm(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),iC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.exp=function(){return this.throwIfDisposed(),us(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expandDims=function(n){return this.throwIfDisposed(),on(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expm1=function(){return this.throwIfDisposed(),uC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.fft=function(){return this.throwIfDisposed(),ag(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.flatten=function(){return this.throwIfDisposed(),F(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floor=function(){return this.throwIfDisposed(),du(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floorDiv=function(n){return this.throwIfDisposed(),Fm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Uh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Do(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greater=function(n){return this.throwIfDisposed(),kn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ifft=function(){return this.throwIfDisposed(),ld(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.irfft=function(){return this.throwIfDisposed(),e$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isFinite=function(){return this.throwIfDisposed(),bC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isInf=function(){return this.throwIfDisposed(),wC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isNaN=function(){return this.throwIfDisposed(),kC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Hh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.lessEqual=function(n){return this.throwIfDisposed(),bi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.less=function(n){return this.throwIfDisposed(),pu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),NC(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSigmoid=function(){return this.throwIfDisposed(),FC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSoftmax=function(n){return this.throwIfDisposed(),jm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Km(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log=function(){return this.throwIfDisposed(),cs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log1p=function(){return this.throwIfDisposed(),qm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ts(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalNot=function(){return this.throwIfDisposed(),qh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalOr=function(n){return this.throwIfDisposed(),Xm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalXor=function(n){return this.throwIfDisposed(),WC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Oe(this,n,e,t)},U().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),jh(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.max=function(n,e){return this.throwIfDisposed(),Kn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.maximum=function(n){return this.throwIfDisposed(),Ys(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mean=function(n,e){return this.throwIfDisposed(),bt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.min=function(n,e){return this.throwIfDisposed(),cu(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.minimum=function(n){return this.throwIfDisposed(),na(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),YC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mod=function(n){return this.throwIfDisposed(),JC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mul=function(n){return this.throwIfDisposed(),R(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.neg=function(){return this.throwIfDisposed(),pt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.norm=function(n,e,t){return this.throwIfDisposed(),hu(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.notEqual=function(n){return this.throwIfDisposed(),fu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Ym(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.onesLike=function(){return this.throwIfDisposed(),Fn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pad=function(n,e){return this.throwIfDisposed(),Xh(this,n,e)},U().prototype.pool=function(n,e,t,s,o,i){return this.throwIfDisposed(),lI(this,n,e,t,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pow=function(n){return this.throwIfDisposed(),Lo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prelu=function(n){return this.throwIfDisposed(),Zh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prod=function(n,e){return this.throwIfDisposed(),hI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reciprocal=function(){return this.throwIfDisposed(),FI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu=function(){return this.throwIfDisposed(),Fo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu6=function(){return this.throwIfDisposed(),Qm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshapeAs=function(n){return this.throwIfDisposed(),F(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshape=function(n){return this.throwIfDisposed(),F(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),fg(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),mg(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reverse=function(n){return this.throwIfDisposed(),Oo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rfft=function(){return this.throwIfDisposed(),s$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.round=function(){return this.throwIfDisposed(),eg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rsqrt=function(){return this.throwIfDisposed(),tg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.selu=function(){return this.throwIfDisposed(),ng(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.separableConv2d=function(n,e,t,s,o,i){return this.throwIfDisposed(),sg(this,n,e,t,s,o,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sigmoid=function(){return this.throwIfDisposed(),gi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sign=function(){return this.throwIfDisposed(),UI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sin=function(){return this.throwIfDisposed(),og(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sinh=function(){return this.throwIfDisposed(),ig(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.slice=function(n,e){return this.throwIfDisposed(),Ye(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softmax=function(n){return this.throwIfDisposed(),ad(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softplus=function(){return this.throwIfDisposed(),ta(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Yh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.split=function(n,e){return this.throwIfDisposed(),Cn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sqrt=function(){return this.throwIfDisposed(),Gt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.square=function(){return this.throwIfDisposed(),tt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squaredDifference=function(n){return this.throwIfDisposed(),i$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squeeze=function(n){return this.throwIfDisposed(),ia(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof wt?[this,n]:[this,...n];return Rs(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.step=function(n){return this.throwIfDisposed(),ra(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stridedSlice=function(n,e,t,s,o,i,r,a){return this.throwIfDisposed(),c$(this,n,e,t,s,o,i,r,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sub=function(n){return this.throwIfDisposed(),ge(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sum=function(n,e){return this.throwIfDisposed(),fe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tan=function(){return this.throwIfDisposed(),d$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tanh=function(){return this.throwIfDisposed(),ru(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tile=function(n){return this.throwIfDisposed(),Xn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toBool=function(){return this.throwIfDisposed(),ie(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toFloat=function(){return this.throwIfDisposed(),ie(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toInt=function(){return this.throwIfDisposed(),ie(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.topk=function(n,e){return this.throwIfDisposed(),m$(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.transpose=function(n){return this.throwIfDisposed(),Te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unique=function(n){return this.throwIfDisposed(),b$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),cg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unstack=function(n){return this.throwIfDisposed(),Mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.where=function(n,e){return this.throwIfDisposed(),Xt(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.zerosLike=function(){return this.throwIfDisposed(),Ee(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ds extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ds.prototype)}}class _n extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_n.prototype)}}class T extends Error{constructor(e){super(e),Object.setPrototypeOf(this,T.prototype)}}class ke extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ke.prototype)}}class Kd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kd.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class x0{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Po(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function ps(n,e){if(!n)throw new Kd(e)}function b0(n,e){let t=0;for(const s of n)s===e&&t++;return t}function rn(n){return n.length===1?n[0]:n}function Ve(n){return Array.isArray(n)?n:[n]}function Fs(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Bo(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Mn={};function Xd(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Yd(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Yd(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Yd(s))}}}function ha(n,e={},t={},s="object",o=!1){if(typeof n=="string"){const i=n;let r;if(i in t)r=t[i];else if(i in Mn)r=Mn[i];else if(r=e[i],r==null)throw new T(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}else{const i=n;if(i.className==null||i.config==null)throw new T(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const r=i.className;let a,l;if(r in t?[a,l]=t[r]:r in Mn?[a,l]=Mn.className:r in e&&([a,l]=e[r]),a==null)throw new T(`Unknown ${s}: ${r}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(Mn))u[p]=Mn[p];for(const p of Object.keys(t))u[p]=t[p];const c=i.config;c.customObjects=u;const h=Object.assign({},Mn);for(const p of Object.keys(t))Mn[p]=t[p];Yd(i.config);const d=l(a,i.config,t,o);return Mn=Object.assign({},h),d}else{const u=Object.assign({},Mn);for(const h of Object.keys(t))Mn[h]=t[h];const c=new a(i.config);return Mn=Object.assign({},u),c}}}function jE(n,e){return n<e?-1:n>e?1:0}function vu(n,e){return-1*jE(n,e)}function Qs(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function KE(n){if(n==null)throw new T(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function zo(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new T(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Zd(n,e,t=0,s=1/0){return ps(t>=0),ps(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(o=>typeof o===e)}function Dt(n,e){Array.isArray(n)?(C(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Dt(t,`element ${s+1} of ${e}`))):C(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${y0(n)}.`)}function y0(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>y0(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function XE(n,e,t){let s=t!=null?t():en(),o;return(...r)=>{const a=t!=null?t():en();return a-s<e||(s=a,o=n(...r)),o}}function w0(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let YE=0;function v0(){return YE++}const ku={};function Cu(n=""){return n in ku||(ku[n]=0),ku[n]+=1,n+ku[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ZE=["channelsFirst","channelsLast"],JE=["nearest","bilinear"],QE=["valid","same","causal"],eT=["max","avg"],tT=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ci=new Map;function ft(n){zo(ZE,"DataFormat",n)}function nT(n){zo(JE,"InterpolationFormat",n)}function In(n){zo(QE,"PaddingMode",n)}function k0(n){zo(eT,"PoolMode",n)}const da=[],C0="/";function Vo(n,e){da.push(n);try{const t=e();return da.pop(),t}catch(t){throw da.pop(),t}}function sT(){return da.length===0?"":da.join(C0)+C0}function I0(n){if(!S0(n))throw new Error("Not a valid tensor name: '"+n+"'");return sT()+n}function $0(n){if(!S0(n))throw new Error("Not a valid tensor name: '"+n+"'");Ci.has(n)||Ci.set(n,0);const e=Ci.get(n);if(Ci.set(n,Ci.get(n)+1),e>0){const t=`${n}_${e}`;return Ci.set(t,1),t}else return n}const oT=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function S0(n){return!!n.match(oT)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iT(n){return n===parseInt(n.toString(),10)}function eo(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let o=e;o<t;++o)s*=n[o];return s}function Ii(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function to(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Zn(n,e){if(e<n)throw new T(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Jd;function kt(){return Jd==null&&(Jd=_v().epsilon()),Jd}function Jn(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fs(n,e){return ie(n,e)}function pa(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),F(n,t)}function rT(n,e){return M(()=>{if(n.shape.length!==2)throw new T(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=pa(n,1);return tp(t,[1,e,1])})}function aT(n){const e=[eo(n.shape)];return F(n,e)}function lT(n){if(n.rank<=1)throw new T(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],eo(n.shape,1)];return F(n,e)}function Wo(n,e,t){return M(()=>{switch(n.rank){case 1:return id(n,e,t);case 2:return rg(n,[e,0],[t,n.shape[1]]);case 3:return rd(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return gu(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Ye(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Ye(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new T(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Qd(n,e,t){return M(()=>{switch(n.rank){case 1:return id(n,e,t);case 2:return rg(n,[0,e],[n.shape[0],t]);case 3:return rd(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return gu(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new T(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Iu(n,e,t,s){return M(()=>{switch(n.rank){case 1:return id(n,e,t);case 2:switch(s){case 1:return Wo(n,e,t);case 2:return Qd(n,e,t);default:throw new T(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Wo(n,e,t);case 2:return rd(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Qd(n,e,t);default:throw new T(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Wo(n,e,t);case 2:return gu(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return gu(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Qd(n,e,t);default:throw new T(`The axis is not within the rank of the tensor ${s}`)}default:throw new T(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function ep(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),sn(n,e)}function N0(n,e){switch(n.rank){case 1:return mk([n,e]);case 2:return xk([n,e],0);case 3:return yk([n,e],0);case 4:return vk([n,e],0);default:throw new T(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function tp(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new T(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Xn(n,e)}function $u(n,e=0,t=1,s,o){return RI(n,e,t,s,o)}function ms(n,e,t,s){if(n.rank<2||e.rank<2)throw new ke(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const o=n.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(o!==i)throw new ke(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return dg({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?np(n.rank,s,Jn()):null,activation:t});{const o=n.shape.slice(),i=o.pop();n=F(n,[-1,i]);const r=e.shape.slice(),a=r.pop(),l=r.pop(),u=[...r,a],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=F(Te(e,c),[l,-1]);const h=[...o,...u];return F(dg({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?np(n.rank,s,Jn()):null,activation:t}),h)}}function E0(n,e,t){return M(()=>(Array.isArray(e)?e=mn(e,"int32"):e=ie(e,"int32"),Uh(n,e,t)))}function fa(n){return R(n,n)}function np(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new T(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1,1]):F(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?F(e,[1,1,1,1,s[0]]):F(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?F(e,[1,s[0],1,1]):F(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?F(e,[1,1,1,s[0]]):F(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?F(e,[1,s[0],1]):F(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?F(e,[1,1,s[0]]):F(e,[1].concat(s))}else if(n<3)return e;throw new T(`Unsupported input rank by biasAdd: ${e.rank}`)}function Qn(n,e,t){return M(()=>(t==null&&(t=Jn()),ft(t),Z(n,np(n.rank,e,t))))}function uT(n,e=1){if(e!==1)throw new ke(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return uu(n)}function cT(n){return M(()=>me(n,Z(Kt(n),1)))}function T0(n,e,t,s){return M(()=>$$(n,e,t,s))}function hT(n){return M(()=>{const e=Z(.5,R(.2,n));return vn(e,0,1)})}function ma(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const dT=["fanIn","fanOut","fanAvg"],pT=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fT(n){zo(dT,"FanMode",n)}function mT(n){zo(pT,"Distribution",n)}class Pn extends vi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class R0 extends Pn{apply(e,t){return Lt(e,t)}}R0.className="Zeros",j(R0);class sp extends Pn{apply(e,t){return Zs(e,t)}}sp.className="Ones",j(sp);class L0 extends Pn{constructor(e){if(super(),typeof e!="object")throw new T(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new T(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return M(()=>R(_e(this.value),Zs(e,t)))}getConfig(){return{value:this.value}}}L0.className="Constant",j(L0);class D0 extends Pn{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return sa(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}D0.className="RandomUniform",j(D0);class A0 extends Pn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ke(`randomNormal does not support dType ${t}.`);return $u(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}A0.className="RandomNormal",j(A0);class F0 extends Pn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ke(`truncatedNormal does not support dType ${t}.`);return ug(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}F0.className="TruncatedNormal",j(F0);class O0 extends Pn{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return M(()=>{if(e.length!==2||e[0]!==e[1])throw new T("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,Hm(e[0]))})}getConfig(){return{gain:this.gain}}}O0.className="Identity",j(O0);function gT(n,e="channelsLast"){let t,s;if(ft(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const o=eo(n,2);t=n[1]*o,s=n[0]*o}else if(e==="channelsLast"){const o=eo(n,0,n.length-2);t=n[n.length-2]*o,s=n[n.length-1]*o}}else{const o=eo(n);t=Math.sqrt(o),s=Math.sqrt(o)}return[t,s]}class gn extends Pn{constructor(e){if(super(),e.scale<0)throw new T(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,fT(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,mT(this.distribution),this.seed=e.seed}apply(e,t){const s=gT(e),o=s[0],i=s[1];let r=this.scale;if(this.mode==="fanIn"?r/=Math.max(1,o):this.mode==="fanOut"?r/=Math.max(1,i):r/=Math.max(1,(o+i)/2),this.distribution==="normal"){const a=Math.sqrt(r);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ke(`${this.getClassName()} does not support dType ${t}.`);return ug(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*r);return sa(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gn.className="VarianceScaling",j(gn);class op extends gn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return gn.className}}op.className="GlorotUniform",j(op);class ip extends gn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return gn.className}}ip.className="GlorotNormal",j(ip);class rp extends gn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return gn.className}}rp.className="HeNormal",j(rp);class ap extends gn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return gn.className}}ap.className="HeUniform",j(ap);class lp extends gn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return gn.className}}lp.className="LeCunNormal",j(lp);class up extends gn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return gn.className}}up.className="LeCunUniform",j(up);class _0 extends Pn{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return M(()=>{if(e.length<2)throw new ke("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=G(e.slice(0,-1)),o=e[e.length-1],i=s*o;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const r=[Math.max(o,s),Math.min(o,s)],a=$u(r,0,1,t,this.seed),l=vS.qr(a,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(o,s)*Math.min(o,s)],[Math.min(o,s)+1]);return u=R(u,h.sign()),s<o&&(u=u.transpose()),R(_e(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}_0.className="Orthogonal",j(_0);const M0={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function P0(n,e={}){return ha(n,On.getMap().classNameMap,e,"initializer")}function lt(n){return Xd(n)}function ot(n){if(typeof n=="string"){const e=n in M0?M0[n]:n;if(e==="GlorotNormal")return new ip;if(e==="GlorotUniform")return new op;if(e==="HeNormal")return new rp;if(e==="HeUniform")return new ap;if(e==="LeCunNormal")return new lp;if(e==="LeCunUniform")return new up;{const t={};return t.className=e,t.config={},P0(t)}}else return n instanceof Pn?n:P0(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cp(n){return Array.isArray(n)&&Array.isArray(n[0])}function Su(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function xe(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new T(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Le(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new T(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nu(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,o)=>s*o);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const B0="Variable";class xT{constructor(e,t="float32",s=B0,o=!0,i=null){this.dtype=t??"float32",this.shape=e.shape,this.id=v0(),s=s??B0,this.originalName=I0(s),this.name=$0(this.originalName),this.trainable_=o,this.constraint=i,this.val=v$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),bT(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function bT(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function hp(n){return n.map(e=>e.read())}function dp(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ct{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class gs{constructor(e,t,s,o,i,r,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=o,this.callArgs=i,this.outputTensorIndex=a,this.id=v0(),r!=null&&(this.originalName=I0(r),this.name=$0(this.originalName)),this.rank=t.length}}let yT=0;class Eu{constructor(e,t){this.callArgs=t,this.id=yT++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let wT=0;class Ne extends vi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=wT++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=Fs(s)+"_"+Cu(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),s=[i].concat(e.inputShape)}this.batchInputShape=s;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new _n(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new T(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return rn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return rn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ds(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ds(`Layer ${this.name} is not connected, no input to return.`);return rn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ds(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ds(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return rn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Ve(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Ve(this.inputSpec);if(t.length!==s.length)throw new T(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let o=0;o<t.length;o++){const i=t[o],r=s[o];if(r==null)continue;const a=i.rank;if(r.ndim!=null&&a!==r.ndim)throw new T(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new T(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new T(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&i.dtype!==r.dtype)throw new T(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${i.dtype}.`);if(r.axes){const l=i.shape;for(const u in r.axes){const c=Number(u),h=r.axes[u],d=c>=0?l[c]:l[l.length+c];if(h!=null&&[h,null].indexOf(d)===-1)throw new T(`Input ${o} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${l}.`)}}if(r.shape!=null)for(let l=0;l<r.shape.length;++l){const u=r.shape[l],c=i.shape[l];if(u!=null&&c!=null&&u!==c)throw new T(`Input ${o} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Ve(e),o=CT(e),i=IT(e);if(o===i)throw new T("Arguments to apply() must be all SymbolicTensors or all Tensors");return Vo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const r=[];for(const a of Ve(e))r.push(a.shape);this.build(rn(r)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const a=Ve(r),l=[];for(let u of a)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(r=rn(l),this.activityRegularizer!=null)throw new ke("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}else{const r=vT(e),a=this.computeOutputShape(r);let l;const u=kT(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,h)=>new gs(u,c,this,Ve(e),t,this.name,h)):l=new gs(u,a,this,Ve(e),t,this.name),this.addInboundNode(e,l,null,null,r,a,t),this._refCount++,this.activityRegularizer!=null)throw new ke("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,o)=>{s!=null&&e[o]!=null&&e[o]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ds(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new ds(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new _n(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Nu(this.weights)}build(e){this.built=!0}getWeights(e=!1){return hp(e?this.trainableWeights:this.weights)}setWeights(e){M(()=>{const t=this.weights;if(t.length!==e.length)throw new T(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],o=hp(t);for(let i=0;i<o.length;++i){const r=o[i],a=t[i],l=e[i];if(!Fe(r.shape,l.shape))throw new T(`Layer weight shape ${r.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}dp(s)})}addWeight(e,t,s,o,i,r,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new T(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(o=l!=null?l():ot("zeros"));const u=o.apply(t,s),c=new xT(u,s,e,r,a);return u.dispose(),i!=null&&this.addLoss(()=>i.apply(c.read())),r==null&&(r=!0),r?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Ve(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const o=this.computeMask(e,s),i=Ve(t),r=Ve(o);if(i.length!==r.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let a=0;a<i.length;a++)i[a].kerasMask=r[a]}addInboundNode(e,t,s,o,i,r,a=null){const l=Ve(e);t=Ve(t),s=Ve(s),o=Ve(o),i=Su(i),r=Su(r);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Eu({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:o,inputShapes:i,outputShapes:r},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function vT(n){n=Ve(n);const e=[];for(const t of n)e.push(t.shape);return rn(e)}function kT(n){return"float32"}function z0(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const o=[];for(let i=0;i<s.inboundLayers.length;i++){const r=s.inputTensors[i],a=s.inboundLayers[i],l=s.nodeIndices[i],u=z0(r,a,l);for(const c of u)o.indexOf(c)===-1&&o.push(c)}return o}}}function CT(n){let e=!0;for(const t of Ve(n))if(!(t instanceof gs)){e=!1;break}return e}function IT(n){let e=!0;for(const t of Ve(n))if(t instanceof gs){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ga extends Ne{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Cu("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new T("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new T("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new T("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const o=new gs(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Eu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new T(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ga.className="InputLayer",j(ga);function $T(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new T("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new ga({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ST(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return ie(e,n.dtype)}catch{throw new T(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class no{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof no)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=ST(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new T(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof gs){if(this.id2Value[e.id]==null)throw new T(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new T(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof gs){if(this.id2Value[e.id]==null)throw new T(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new T(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ce(this.id2Mask)}}const Tu=new x0,Ru=new x0;function NT(n){Tu!=null&&Tu.setMaxEntries(n),Ru!=null&&Ru.setMaxEntries(n)}function xa(n,e,t,s){const o=t==null?!1:t.training,i=Array.isArray(n),r=i?n:[n],a=r.map(f=>f.name),l=[],u=e.names();for(const f of a)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);const c=a.join(",")+"|"+e.names().sort().join(",");let h=Tu.get(c),d;if(h==null){const f=ET(r,e);h=f.sorted,d=f.recipientCounts,Tu.put(c,h),Ru.put(c,d)}d={},o||Object.assign(d,Ru.get(c));const p=new no(e);for(let f=0;f<h.length;++f){const m=h[f],g=m.sourceLayer;if(g instanceof ga)continue;const x=[],b=[],w=[];let y=!1;for(const E of m.inputs){const S=p.getValue(E),L=p.getMask(E);x.push(S),b.push(L),L!=null&&(y=!0),o||(d[E.name]--,d[E.name]===0&&!e.hasKey(E)&&a.indexOf(E.name)===-1&&!S.isDisposed&&E.sourceLayer.stateful!==!0&&w.push(S))}y&&(t=t||{},t.mask=b[0]);const v=Ve(g.apply(x,t));let k=null;g.supportsMasking&&(k=g.computeMask(x,b));const I=RT(m),$=Array.isArray(I)?I:[I];for(let E=0;E<$.length;++E){p.hasKey($[E])||p.add($[E],v[E],Array.isArray(k)?k[0]:k);const S=a.indexOf($[E].name);S!==-1&&(l[S]=v[E])}o||Ce(w)}return p.disposeMasks(),i?l:l[0]}function ET(n,e){C(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const o=V0(n[0],e);t=o.sorted,s=o.recipientMap}else{const o=new Set;for(const i of n){const{sorted:r,recipientMap:a}=V0(i,e);for(const l of r)o.has(l.name)||(t.push(l),o.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(u=>s[l].add(u))}}return{sorted:t,recipientCounts:TT(s)}}function TT(n){const e={};for(const t in n)e[t]=n[t].size;return e}function V0(n,e){const t=new Set,s=[],o={};for(const a of e.names())t.add(a);const i=[],r=[];for(i.push(n);i.length>0;){const a=i[i.length-1];if(t.has(a.name)){i.pop();continue}const l=r[r.length-1]===i.length-1;if(a.inputs.length===0||l)i.pop(),s.push(a),t.add(a.name),l&&r.pop();else{r.push(i.length-1);for(const u of a.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(a.name),!t.has(u.name)&&i.push(u)}}return{sorted:s,recipientMap:o}}function RT(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const o of n.sourceLayer.inboundNodes[s].outputTensors)if(o.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */z().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,NT);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pp(n,e){return M(()=>Gt(fe(R(n,n),e,!0)))}class ba extends vi{getConfig(){return{}}}class W0 extends ba{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{const t=pp(e,this.axis),s=vn(t,0,this.maxValue);return R(e,me(s,Z(kt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}W0.className="MaxNorm",j(W0);class U0 extends ba{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>me(e,Z(kt(),pp(e,this.axis))))}getConfig(){return{axis:this.axis}}}U0.className="UnitNorm",j(U0);class G0 extends ba{apply(e){return Fo(e)}}G0.className="NonNeg",j(G0);class H0 extends ba{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return M(()=>{const t=pp(e,this.axis),s=Z(R(this.rate,vn(t,this.minValue,this.maxValue)),R(1-this.rate,t));return R(e,me(s,Z(kt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}H0.className="MinMaxNorm",j(H0);const q0={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function It(n){return Xd(n)}function j0(n,e={}){return ha(n,On.getMap().classNameMap,e,"constraint")}function $t(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in q0?q0[n]:n,config:{}};return j0(t)}else return n instanceof ba?n:j0(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Uo(n){if(n==null)return;const e=[],t=[],s=[];for(const o in n){const i=n[o];if(typeof i!="number"){const r=i;e.push(r.data()),t.push(o),s.push(r)}}if(e.length>0){const o=await Promise.all(e);for(let i=0;i<o.length;++i)n[t[i]]=o[i][0];Ce(s)}}function K0(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var X0;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(X0||(X0={}));const LT=125;class ya{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class DT{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class AT extends ya{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const o in t){const i=t[o];if(typeof i=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+i*s;else{let r;o in this.totals?r=this.totals[o]:this.totals[o]=0;const a=M(()=>Z(this.totals[o],R(i,s)));this.totals[o]=a,r!=null&&r.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:M(()=>{const o=R(me(1,this.seen),this.totals[s]);t[s]=o,this.totals[s].dispose(),rs(t[s])}))}}class FT extends ya{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const i in this.history){const r=this.history[i];for(let a=0;a<r.length;++a)if(typeof r[a]!="number"){const l=r[a];e.push(l.data()),t.push(i),s.push(a)}}const o=await Promise.all(e);for(let i=0;i<o.length;++i)this.history[t[i]][s[i]].dispose(),this.history[t[i]][s[i]]=o[i][0]}}class OT extends ya{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_g,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=LT),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");wc(this.yieldEvery)&&(this.maybeWait=XE(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const o=[];this.yield!=null&&(await Uo(s),o.push(this.yield(e,t,s))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Uo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Uo(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Uo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Uo(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):wc(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Uo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Uo(e),await this.trainEnd(e))}}function Y0(n,e){return n==null&&(n={}),n instanceof ya?[n]:Array.isArray(n)&&n[0]instanceof ya?n:Ve(n).map(s=>new OT(s,e))}class Bn{constructor(){}static registerCallbackConstructor(e,t){C(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Bn.checkForDuplicate(t),Bn.constructors[e]==null&&(Bn.constructors[e]=[]),Bn.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Bn.constructors)Bn.constructors[+t].forEach(o=>{if(o===e)throw new T("Duplicate callback constructor.")})}static clear(){Bn.constructors={}}static createCallbacks(e){const t=[];for(const s in Bn.constructors){const o=+s;e>=o&&t.push(...Bn.constructors[o])}return t.map(s=>new s)}}Bn.constructors={};function Z0(n,e,t,s,o,i,r,a,l){const u=new FT,c=[new AT,...Bn.createCallbacks(e)];n!=null&&c.push(...n),c.push(u);const h=new DT(c);return h.setParams({epochs:t,initialEpoch:s,samples:o,steps:i,batchSize:r,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xs(n,e={},t=!1){return ha(n,On.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lu(n,e){return M(()=>{n.dtype!=="float32"&&(n=ie(n,"float32"));const t=fe(fa(n),e,!0),s=lu(t.shape,kt()),o=Gt(Ys(t,s));return me(n,o)})}function Du(n,e){return M(()=>bt(fa(ge(e,n)),-1))}function fp(n,e){return M(()=>bt(Kt(ge(e,n)),-1))}function mp(n,e){return M(()=>{const t=ge(n,e),s=vn(Kt(n),kt(),Number.MAX_VALUE),o=Kt(me(t,s));return R(100,bt(o,-1))})}function _T(n,e){return M(()=>{const t=vn(e,kt(),Number.MAX_VALUE),s=cs(Z(1,t)),o=vn(n,kt(),Number.MAX_VALUE),i=cs(Z(1,o));return bt(fa(ge(s,i)),-1)})}function MT(n,e){return M(()=>{const t=Ys(0,ge(1,R(n,e)));return bt(fa(t),-1)})}function PT(n,e){return M(()=>{const t=Ys(0,ge(1,R(n,e)));return bt(t,-1)})}function BT(n,e){return M(()=>{const t=fe(R(n,e),-1),s=Kn(R(ge(1,n),e),-1);return Ys(0,Z(1,ge(s,t)))})}function zT(n,e){return M(()=>{const t=Math.log(2),s=ge(e,n),o=ge(Z(s,ta(R(-2,s))),t);return bt(o,-1)})}function wa(n,e,t=!1){return M(()=>{if(t)e=ad(e);else{const s=fe(e,e.shape.length-1,!0);e=me(e,s)}return e=vn(e,kt(),1-kt()),pt(fe(R(ie(n,"float32"),cs(e)),e.shape.length-1))})}function Au(n,e,t=!1){return M(()=>{const s=ie(du(aT(n)),"int32");e=vn(e,kt(),1-kt());const o=e.shape,i=F(Ym(s,o[o.length-1]),o);return wa(i,e,t)})}function VT(n,e){if(!Fe(n.shape,e.shape))throw new T(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return M(()=>{const t=Fo(e),s=pt(Kt(e));return Z(ge(t,R(e,n)),qm(us(s)))})}function Fu(n,e){return M(()=>{let t;return t=vn(e,kt(),1-kt()),t=cs(me(t,ge(1,t))),bt(VT(n,t),-1)})}function WT(n,e){return M(()=>{const t=vn(n,kt(),1),s=vn(e,kt(),1);return fe(R(n,cs(me(t,s))),-1)})}function UT(n,e){return M(()=>{const t=cs(Z(kt(),e));return bt(ge(e,R(n,t)),-1)})}function J0(n,e){return M(()=>{const t=Lu(n,-1),s=Lu(e,-1),o=R(t,s);return pt(fe(o,-1))})}const Ou={meanSquaredError:Du,meanAbsoluteError:fp,meanAbsolutePercentageError:mp,meanSquaredLogarithmicError:_T,squaredHinge:MT,hinge:PT,categoricalHinge:BT,logcosh:zT,categoricalCrossentropy:wa,sparseCategoricalCrossentropy:Au,binaryCrossentropy:Fu,kullbackLeiblerDivergence:WT,poisson:UT,cosineProximity:J0};function gp(n){if(typeof n=="string"){if(n in Ou)return Ou[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new T(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Q0(n,e){return M(()=>{const t=R(.5,Fn(e)),s=fs(kn(e,t),n.dtype);return bt(ls(n,s),-1)})}function ex(n,e){return M(()=>fs(ls(Xr(n,-1),Xr(e,-1)),"float32"))}function GT(n,e){return M(()=>ie(fe(Ts(ls(n,1),ls(e,1))),"float32"))}function HT(n,e){return M(()=>ie(fe(Ts(ls(n,0),ls(e,1))),"float32"))}function qT(n,e){return M(()=>{const t=GT(n,e),s=HT(n,e),o=Z(t,s);return ie(Xt(kn(o,0),me(t,o),0),"float32")})}function jT(n,e){return Fu(n,e)}function KT(n,e){return n.rank===e.rank&&(n=ia(n,[n.rank-1])),e=Xr(e,-1),e.dtype!==n.dtype&&(e=ie(e,n.dtype)),ie(ls(n,e),"float32")}const XT=Du,YT=Du,ZT=fp,JT=fp,QT=mp,eR=mp,tx=wa,tR=J0,nx=Au,_u={binaryAccuracy:Q0,categoricalAccuracy:ex,precision:qT,categoricalCrossentropy:tx,sparseCategoricalCrossentropy:nx,mse:XT,MSE:YT,mae:ZT,MAE:JT,mape:QT,MAPE:eR,cosine:tR};function nR(n){if(typeof n=="string"&&n in _u)return _u[n];if(typeof n!="string"&&n!=null)return n;throw new T(`Unknown metric ${n}`)}function Mu(n){if(ps(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Ou))if(Ou[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(_u))if(_u[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sR(n){const e={Adagrad:()=>ki.adagrad(.01),Adadelta:()=>ki.adadelta(1,.95,kt()),Adam:()=>ki.adam(.001,.9,.999,kt()),Adamax:()=>ki.adamax(.002,.9,.999,kt(),0),RMSProp:()=>ki.rmsprop(.001,.9,0,kt()),SGD:()=>ki.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new T(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sx=1*1024*1024;function ox(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!xp(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>sx&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${sx}.`)}}function xp(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!xp(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!xp(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oR(n,e,t,s=console.log){const o=rR(n),i=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let r;if(!o){i.push("Receives inputs"),r=[];for(const c in n.nodesByDepth)r.push(...n.nodesByDepth[c])}s("_".repeat(e)),Pu(i,t,s),s("=".repeat(e));const a=n.layers;for(let c=0;c<a.length;++c)o?aR(a[c],t,s):lR(a[c],t,r,s),s((c===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=iR(n),u=Nu(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function iR(n){let e;return n.collectedTrainableWeights!=null?e=Nu(n.collectedTrainableWeights):e=Nu(n.trainableWeights),e}function rR(n){let e=!0;const t=[],s=[];for(const o in n.nodesByDepth)t.push(n.nodesByDepth[o]);for(const o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}s.push(...o)}if(e)for(const o of n.layers){let i=!1;for(const r of o.inboundNodes)if(s.indexOf(r)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function Pu(n,e,t=console.log){let s="";for(let o=0;o<n.length;++o)o>0&&(s=s.slice(0,s.length-1)+" "),s+=n[o],s=s.slice(0,e[o]),s+=" ".repeat(e[o]-s.length);t(s)}function aR(n,e,t){let s,o;try{o=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=n.name,r=n.getClassName(),a=[`${i} (${r})`,o,s,n.countParams().toString()];Pu(a,e,t)}function lR(n,e,t,s){let o,i;try{i=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{o=JSON.stringify(n.outputShape)}catch{o="multiple"}const r=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];r.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),u=r.length===0?"":r[0],c=[`${a} (${l})`,i,o,n.countParams().toString(),u];Pu(c,e,s);for(let h=1;h<r.length;++h)Pu(["","","","",r[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ix(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Bu(n,e){if(n===null)return null;if(typeof n=="string")return Bo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const i=n[o];ix(e,o,i)?t.push(i):t.push(Bu(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s];if(s==="name"&&typeof o=="string")t[s]=o;else{const i=Bo(s);t[i]=Bu(o,i)}}return t}}function bp(n,e){if(n==null)return null;if(typeof n=="string")return Fs(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const i=n[o];ix(e,o,i)?t.push(i):t.push(bp(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s],i=Fs(s);(s==="name"||s==="className")&&typeof o=="string"?t[i]=o:t[i]=bp(o,s)}return t}}/** @license See the LICENSE file. */const rx="4.20.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const uR=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class es extends Ne{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=Cu(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Qs(this.inputs).length!==this.inputs.length)throw new T(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Qs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;ps(y===0,"input layer has >1 nodes"),ps(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const w=this.inputLayers[b];if(!(w instanceof ga))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const t={},s={},o={},i={},r={},a=[],l=(b,w,y,v,k,I)=>{(v==null||k==null||I==null)&&(v=b.sourceLayer,k=b.nodeIndex,I=b.tensorIndex);const $=v.inboundNodes[k];if(y.indexOf($)!==-1)throw new _n(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf($)!==-1)return;this.containerNodes.add(es.nodeKey(v,k)),v.id in r||(r[v.id]=Object.keys(r).length),y.indexOf($)===-1&&y.push($);const E=$.inboundLayers.length;for(let S=0;S<E;S++){const L=$.inputTensors[S],_=$.inboundLayers[S],P=$.nodeIndices[S],A=$.tensorIndices[S];l(L,w,y,_,P,A)}for(w.push($);y.indexOf($)>=0;)y.splice(y.indexOf($),1);a.push($)},u=[],c=[];for(const b of this.outputs)l(b,u,c);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in t||(t[b.id]=0);let w=t[b.id];const y=o[b.outboundLayer.id]==null?0:o[b.outboundLayer.id];w=Math.max(w,y),o[b.outboundLayer.id]=w,i[b.outboundLayer.id]=b.outboundLayer,t[b.id]=w;for(let v=0;v<b.inboundLayers.length;v++){const k=b.inboundLayers[v],I=b.nodeIndices[v],$=k.inboundNodes[I],E=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(w+1,E),s[$.id]=$}}const d={};for(const b in t){const w=t[b];w in d||(d[w]=[]),d[w].push(s[b])}const p={};for(const b in o){const w=o[b];w in p||(p[w]=[]),p[w].push(i[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(vu);this.layers=[];for(const b of f){const w=p[b];w.sort((y,v)=>{const k=r[y.id],I=r[v.id];return k<I?-1:k>I?1:0});for(const y of w)y instanceof es&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=p,f=Object.keys(d).map(b=>parseInt(b,10)).sort(vu);const m=this.inputs.slice(),g=[];for(const b of f)for(const w of d[b]){const y=w.outboundLayer;if(y!=null){for(const v of w.inputTensors)if(m.indexOf(v)===-1)throw new _n(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${y.name}". The following previous layers were accessed without issue: ${g}`);for(const v of w.outputTensors)m.push(v);g.push(y.name)}}this.nodesByDepth=d;const x=this.layers.map(b=>b.name);for(const b of x){const w=x.filter(y=>y===b).length;if(w!==1)throw new _n(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Eu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new T("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let o=0;const i=uR(e);i&&this.parseWeights(e);for(const a of this.layers)for(const[l,u]of a.weights.entries()){const c=i?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new T(`Duplicate weight name: ${c}`);s[c]=u,o++}const r=[];for(const a in e){let l=a;if(s[a]==null){const u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)r.push([s[l],e[a]]);else if(t)throw new T(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new T(`${a.length} of ${o} weights are not set: ${a}`)}dp(r)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),o=["vars","layer_checkpoint_dependencies"],i=s.map(r=>r.startsWith("_")?r.slice(1):r).filter(r=>!o.includes(r)).join("/");i!==t&&(e[i]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${rx}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=bp(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return M(()=>{e=Ve(e);const s=new no;for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o]);return xa(this.outputs,s,t)})}computeMask(e,t){return M(()=>{e=Ve(e);let s;return t==null?s=Po(null,e.length):s=Ve(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=Su(e);if(t.length!==this.inputLayers.length)throw new T(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],u=t[a],c=l.name+"_0_0";s[c]=u}const o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(vu);if(o.length>1)for(const a of o){const l=this.nodesByDepth[a];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++){const g=u.inboundLayers[m],x=u.nodeIndices[m],b=u.tensorIndices[m],w=`${g.name}_${x}_${b}`,y=s[w];h.push(y)}const d=c.computeOutputShape(rn(h)),p=Su(d),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const g=`${c.name}_${f}_${m}`;s[g]=p[m]}}}const i=[],r=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],h=`${l.name}_${u}_${c}`;r.push(h)}for(let a=0;a<r.length;a++){const l=r[a];ps(l in s),i.push(s[l])}return rn(i)}runInternalGraph(e,t){t==null&&(t=Po(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=t[l];s[u.id]=[c,h]}const o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(vu);for(const l of o){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,x,b,w;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[y,v]=f[0];m.mask==null&&(m.mask=v),b=Ve(h.call(y,m)),w=Ve(h.computeMask(y,v)),g=[y],x=[v]}else g=f.map(y=>y[0]),x=f.map(y=>y[1]),m.mask==null&&(m.mask=x),b=Ve(h.call(g,m)),w=Ve(h.computeMask(g,x));if(h.activityRegularizer)throw new ke("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<p.length;++y){const v=p[y],k=b[y],I=w[y];s[v.id]=[k,I]}}}}const i=[],r=[],a=[];for(const l of this.outputs){ps(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];a.push(u.shape),i.push(u),r.push(c)}return[i,r,a]}buildNodeConversionMap(e){const t={};let s;for(const o of this.layers){s=o instanceof es?1:0;for(let i=0;i<o.inboundNodes.length;i++){const r=es.nodeKey(o,i);this.containerNodes.has(r)&&(t[r]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new T("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new T(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new T(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return M(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const o=es.nodeKey(t,s);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const r of this.layers){const a=r.getClassName(),l=r.getConfig(),u=[];for(let h=0;h<r.inboundNodes.length;h++){const d=r.inboundNodes[h],p=es.nodeKey(r,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${r.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],b=d.nodeIndices[g],w=d.tensorIndices[g],y=es.nodeKey(x,b);let v=t[y];v==null&&(v=0),m.push([x.name,v,w,f])}u.push(m)}}}const c={};c.name=r.name,c.className=a,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const o=[];for(let r=0;r<this.inputLayers.length;r++){const a=this.inputLayers[r],l=this.inputLayersNodeIndices[r],u=es.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[r];o.push([a.name,c,h])}e.inputLayers=o;const i=[];for(let r=0;r<this.outputLayers.length;r++){const a=this.outputLayers[r],l=this.outputLayersNodeIndices[r],u=es.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[r];i.push([a.name,c,h])}return e.outputLayers=i,e}static fromConfig(e,t,s={},o=!1){const i={},r={};function a(g,x){g.name in r?r[g.name].push(x):r[g.name]=[x]}function l(g,x){const b=[];let w;for(const y of x){const v=y[0],k=y[1],I=y[2];if(w=y[3]==null?{}:y[3],!(v in i)){a(g,x);return}const $=i[v];if($.inboundNodes.length<=k){a(g,x);return}const E=$.inboundNodes[k];b.push(E.outputTensors[I])}b.length>0&&g.apply(rn(b),w)}function u(g){const x=g.name,b=xs(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(o),i[x]=b,g.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new T(`Corrupted configuration, expected array for nodeData: ${y}`);a(b,y)})}const c=t.name,h=t.layers;for(const g of h)u(g);for(;!KE(r);)for(const g of h){const x=i[g.name];if(x.name in r){const b=r[x.name];delete r[x.name];for(const w of b)l(x,w)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const x=g[0],b=g[1],w=g[2];ps(x in i);const v=i[x].inboundNodes[b].outputTensors;d.push(v[w])}const m=t.outputLayers;for(const g of m){const x=g[0],b=g[1],w=g[2];ps(x in i);const v=i[x].inboundNodes[b].outputTensors;p.push(v[w])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new T("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){M(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cR(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(o=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const o=[];return e.forEach(i=>{i in n?o.push(n[i]):o.push(null)}),o}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function ax(n,e){return cR(n,e,"classWeight")}async function lx(n,e,t,s){if(t!=null){const o=M(()=>{if(n.shape.length===1)return No(n);if(n.shape.length===2){if(n.shape[1]>1)return Xr(n,1);if(n.shape[1]===1)return F(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await o.data());Ce(o);const r=[];return i.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);r.push(t[a])}),mn(r,"float32")}else return null}function hR(n,e){return R(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const dR=32;function ux(n,e){let t,s;const o=e;t=o.xs,s=o.ys,C(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=cx("input",n.inputNames,t),r=cx("output",n.outputNames,s),a=i[0].shape[0];C(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),C(r.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${r.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)C(i[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<r.length;l++)C(r[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:i,ys:r}}function cx(n,e,t){if(t instanceof wt)return[t];if(Array.isArray(t))return C(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const o of e){if(t[o]==null)throw new T(`The feature data generated by the dataset lacks the required ${n} key '${o}'.`);s.push(t[o])}return s}}function pR(n){if(n.length===3)throw new ke("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function fR(n,e,t){const s=t.batchesPerEpoch!=null;if(C(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),C(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),C(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),C(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),C(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const o=t.validationData!=null;let i,r;if(o)if(hx(t.validationData))C(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=pR(t.validationData);i=g.xs,r=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;o?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();const c=Y0(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=Z0(c,h,t.epochs,null,null,mR(e,t),null,o,u);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let x=0,b=0;for(s||(m=await e.iterator());!s||x<t.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:y,ys:v}=ux(n,w.value),k={};k.batch=b,k.size=y[0].shape[0],await d.onBatchBegin(b,k);const I=[];if(t.classWeight!=null){const S=ax(t.classWeight,n.outputNames);for(let L=0;L<S.length;++L)I.push(await lx(v[L],null,S[L]))}const $=y.concat(v).concat(I),E=a($);Ce($);for(let S=0;S<l.length;++S){const L=l[S],_=E[S];k[L]=_,rs(_)}await d.onBatchEnd(b,k),K0(k),b++,x++}if(s?x>=t.batchesPerEpoch:w.done){if(o){let y;hx(t.validationData)?y=Ve(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):y=Ve(n.evaluate(i,r,{batchSize:t.validationBatchSize==null?dR:t.validationBatchSize,verbose:0}));for(let v=0;v<n.metricsNames.length;++v)g[`val_${n.metricsNames[v]}`]=y[v]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function mR(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function hx(n){return typeof n.iterator=="function"}function gR(n){return typeof n.next=="function"}async function xR(n,e,t){t=t||{};const s=t.batches!=null,o=n.testFunction;let i=[];if(t.verbose>0)throw new ke("Verbose mode is not implemented yet.");C(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const r=gR(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const u=await r.next();if(i=M(()=>{if(u.value){const{xs:c,ys:h}=ux(n,u.value),d=c.concat(h),p=M(()=>o(d));if(Ce(d),l===0)for(let m=0;m<p.length;++m)i.push(_e(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=i[m];i[m]=M(()=>Z(i[m],R(f,g))),l>0&&Ce(x)}Ce(p),a+=f,++l}return i}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const c=i[u];i[u]=me(i[u],a),Ce(c)}return rn(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yp(n){C(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function va(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Wo(s,e,t-e)):Wo(n,e,t-e)}function wp(n,e){return M(()=>n==null?null:Array.isArray(n)?n.map(t=>wp(t,e)):E0(n,e.dtype==="int32"?e:ie(e,"int32")))}function vp(n,e){const t=[];let s=0,o=null;for(;s<n;)o=s+e,o>=n&&(o=n),t.push([s,o]),s=o;return t}function dx(n){const e=[];n instanceof wt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(pa(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ts(n,e){if(n==null)return;const t=[];if(e instanceof wt)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(const o in e){const i=e[o];t.push(i.id)}const s=[];if(n instanceof wt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(o=>{t.indexOf(o.id)===-1&&s.push(o)});else if(n!=null)for(const o in n){const i=n[o];t.indexOf(i.id)===-1&&s.push(i)}s.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bR(n){return n instanceof wt}function kp(n){return Array.isArray(n)}function px(n){return!bR(n)&&!kp(n)}function fx(n,e,t,s=!0,o=""){if(e==null||e.length===0){if(n!=null){let r=!1;if(kp(n)&&n.length>0)r=!0;else if(px(n)){for(const a in n)if(n.hasOwnProperty(a)){r=!0;break}}else r=!0;if(r)throw new T(`Error when checking model ${o} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(r=>null);let i;if(px(n)){n=n,i=[];for(const r of e){if(n[r]==null)throw new T(`No data provided for "${r}". Need data for each key in: ${e}`);i.push(n[r])}}else if(kp(n)){if(n=n,n.length!==e.length)throw new T(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,e.length>1)throw new T(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=dx(i),t!=null)for(let r=0;r<e.length;++r){if(t[r]==null)continue;const a=i[r];if(a.shape.length!==t[r].length)throw new T(`Error when checking ${o}: expected ${e[r]} to have ${t[r].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[r].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[r][l];if(c!=null&&c>=0&&u!==c)throw new T(`${o} expected a batch of elements where each example has shape [${t[r].slice(1,t[r].length)}] (i.e.,tensor shape [*,${t[r].slice(1,t[r].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function yR(n,e,t){const s=Qs(n.map(i=>i.shape[0]));s.sort();const o=Qs(e.map(i=>i.shape[0]));if(o.sort(),s.length>1)throw new T(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(o.length>1)throw new T(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(s.length>0&&o.length>0&&!Fe(s,o))throw new T(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${o[0]} target sample(s).`)}function wR(n,e,t){const s=[Du,Fu,wa];for(let o=0;o<n.length;++o){const i=n[o],r=e[o],a=t[o];if(r!=null){if(r===wa&&i.shape[i.shape.length-1]===1)throw new T(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(r)!==-1){const l=i.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new T(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function mx(n,e,t,s=!0,o=""){let i;if(Array.isArray(n)){if(n.length!==e.length)throw new T(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(e.length>1)throw new T(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(t!=null)for(let r=0;r<e.length;++r){if(t[r]==null)continue;const a=i[r];if(a.shape.length!==t[r].length)throw new T(`Error when checking ${o}: expected ${e[r]} to have ${t[r].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[r].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[r][l];if(c!=null&&c!==u)throw new T(`Error when checking ${o}: expected ${e[r]} to have shape ${JSON.stringify(t[r])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function vR(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const o of e){let i=t.hasOwnProperty(o)?t[o]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const kR="layers-model";class $i extends es{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new T("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");oR(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=sR(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Js))throw new T("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const r in e.loss)if(this.outputNames.indexOf(r)===-1)throw new T(`Unknown entry in loss dictionary: "${r}". Only expected the following keys: ${this.outputNames}`);for(const r of this.outputNames)e.loss[r]==null&&console.warn(`Output "${r}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${r} during training`),t.push(gp(e.loss[r]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new T(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>gp(a))}else{const r=gp(e.loss);this.outputs.forEach(a=>{t.push(r)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let r=0;r<this.outputs.length;++r){const a=this.internalOutputShapes[r],l=this.outputNames[r];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[r])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Vo("loss",()=>{for(let r=0;r<this.outputs.length;++r){if(s.indexOf(r)!==-1)continue;const a=this.lossFunctions[r];this.outputs.length>1&&(this.metricsTensors.push([a,r]),this.metricsNames.push(this.outputNames[r]+"_loss"))}});const o=vR(e.metrics,this.outputNames),i=(r,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[r]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,r])};Vo("metric",()=>{for(let r=0;r<this.outputs.length;++r){if(s.indexOf(r)!==-1)continue;const a=o[r];(u=>{const c="";let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[r];g[g.length-1]===1||this.lossFunctions[r]===Fu?["accuracy","acc"].indexOf(f)!==-1?d=Q0:["crossentropy","ce"].indexOf(f)!==-1&&(d=jT):this.lossFunctions[r]===Au?["accuracy","acc"].indexOf(f)!==-1?d=KT:["crossentropy","ce"].indexOf(f)!==-1&&(d=nx):["accuracy","acc"].indexOf(f)!==-1?d=ex:["crossentropy","ce"].indexOf(f)!==-1&&(d=tx);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=c+x}else p=nR(f),h=c+Mu(f);let m;Vo(h,()=>{m=p}),i(r,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const o=s.batchSize==null?32:s.batchSize;yp(o);const r=this.standardizeUserDataXY(e,t,!0,o);try{const a=r[0].concat(r[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,a,o,s.verbose,s.steps);return rn(u)}finally{ts(r[0],e),ts(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),xR(this,e,t)}checkNumSamples(e,t,s,o="steps"){let i;if(s!=null){if(i=null,t!=null)throw new T(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new T(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return i}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new T("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),o=s?t:[t],i=this.retrieveSymbolicTensors(o),r=new no;if(e instanceof wt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new T(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)r.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new T(`No value is provided for the model's input ${l.name}`);r.add(l,u)}const a=xa(i,r);return s?a:a[0]}retrieveSymbolicTensors(e){const t=Po(null,e.length);let s=e.length;for(const o of this.layers){const i=Array.isArray(o.output)?o.output:[o.output],r=i.map(a=>a.name);for(let a=0;a<e.length;++a){const l=r.indexOf(e[a]);if(l!==-1&&(t[a]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const o=[];throw t.forEach((i,r)=>{i==null&&o.push(e[r])}),new T(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,s=!1){return M(()=>{const o=this.checkNumSamples(e);if(s)throw new ke("Verbose predictLoop() is not implemented yet.");const i=vp(o,t),r=this.outputs.map(a=>[]);for(let a=0;a<i.length;++a)M(()=>{const u=i[a][0],c=i[a][1],h=va(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new no(d);return xa(this.outputs,p)}).forEach((u,c)=>r[c].push(u));return rn(r.map(a=>sn(a,0)))})}predict(e,t={}){const s=dx(e);mx(s,this.inputNames,this.feedInputShapes,!1);try{const o=t.batchSize==null?32:t.batchSize;return yp(o),this.predictLoop(s,o)}finally{ts(s,e)}}predictOnBatch(e){mx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,o){if(this.optimizer_==null)throw new _n("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let r=0;r<this.feedOutputShapes.length;++r){const a=this.feedOutputShapes[r];this.feedLossFns[r]===Au?i.push(a.slice(0,a.length-1).concat([1])):i.push(a)}if(e=fx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fx(t,this.feedOutputNames,i,!1,"target"),yR(e,t),wR(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new T(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,o,i=!0,r){const[a,l]=this.standardizeUserDataXY(e,t,i,r);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){const c=ax(o,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await lx(l[h],null,c[h]))}return[a,l,u]}testLoop(e,t,s,o=0,i){return M(()=>{const r=this.checkNumSamples(t,s,i,"steps"),a=[];if(o>0)throw new ke("Verbose mode is not implemented yet.");if(i!=null)throw new ke("steps mode in testLoop() is not implemented yet");{const l=vp(r,s),u=mn(Zn(0,r));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],p=Wo(u,h,d-h),f=wp(t,p),m=e(f);if(c===0)for(let g=0;g<m.length;++g)a.push(_e(0));for(let g=0;g<m.length;++g){const x=m[g];a[g]=Z(a[g],R(d-h,x))}}for(let c=0;c<a.length;++c)a[c]=me(a[c],r)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const o=e[s];let i=o;if(b0(e,o)>1){const r=b0(e.slice(0,s),o);i+=`_${r}`}t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),r=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new no(h),p=xa(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(o[m],p[m]);i[m]!=null&&(x=hR(x,i[m]));const b=bt(x);t.push(b),m===0?f=x:f=Z(f,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const x=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=bt(x(o[b],p[b]))}rs(g),r.push(g)}return f=bt(f),this.calculateLosses().forEach(m=>{f=Z(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,l)].concat(r)}}makeTestFunction(){this.testFunction=e=>M(()=>{const t=[];let s;const o=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=[];for(let u=0;u<this.inputs.length;++u)r.push({key:this.inputs[u],value:o[u]});const a=new no(r),l=xa(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=bt(c(i[u],l[u]));u===0?s=h:s=Z(s,h),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=bt(c(i[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,i,r,a,l,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;yp(p);const m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);o=m[0],i=m[1],d=m[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new ke("validationData including sample weights is not supported yet."):new T(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const S=await this.standardizeUserData(l,u,null,null,!0,p);c=S[0],h=S[1],x=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const E=Math.floor(o[0].shape[0]*(1-s.validationSplit)),S=o[0].shape[0];c=va(o,E,S),r=o,o=va(o,0,E),h=va(i,E,S),a=i,i=va(i,0,E),x=c.concat(h)}else s.validationSteps!=null&&(g=!0);const b=o.concat(i).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,k;g?(this.makeTestFunction(),v=this.testFunction,k=y.slice().concat(y.map(E=>"val_"+E))):(v=null,x=[],k=y.slice());const I=Y0(s.callbacks,s.yieldEvery);return await this.fitLoop(w,b,y,p,s.epochs,s.verbose,I,v,x,s.shuffle,k,s.initialEpoch,null,null)}finally{this.isTraining=!1,ts(o,e),ts(i,t),ts(r,e),ts(a,t),ts(c,l),ts(h,u),d!=null&&Ce(d)}}async fitLoop(e,t,s,o,i,r,a,l,u,c,h,d,p,f){o==null&&(o=32),i==null&&(i=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new T("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,o,p,"steps_per_epoch");let x;g!=null&&(x=Zn(0,g)),r==null&&(r=1);const{callbackList:b,history:w}=Z0(a,r,i,d,g,p,o,m,h);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let y=d;y<i;++y){await b.onEpochBegin(y);const v={};if(p!=null)throw new ke("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new ke("batch shuffling is not implemneted yet");c&&Uw(x);const k=mn(x),I=vp(g,o);for(let $=0;$<I.length;++$){const E={};if(await b.onBatchBegin($,E),M(()=>{const S=I[$][0],L=I[$][1],_=Wo(k,S,L-S);E.batch=$,E.size=L-S;const P=wp(t,_),A=e(P);for(let B=0;B<s.length;++B){const V=s[B],H=A[B];E[V]=H,rs(H)}if($===I.length-1&&m){const B=this.testLoop(l,u,o);for(let V=0;V<s.length;++V){const H=s[V],W=B[V];rs(W),v["val_"+H]=W}}}),await b.onBatchEnd($,E),K0(E),this.stopTraining_)break}k.dispose()}if(await b.onEpochEnd(y,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return fR(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),o=s[0],i=s[1],a=this.makeTrainFunction()(o.concat(i)),l=[];for(const u of a){const c=await u.data();l.push(c[0])}return Ce(a),ts(s[0],e),ts(s[1],t),rn(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,o=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let r=0;r<o.length;++r)s&&!o[r].trainable||t.push({name:o[r].originalName,tensor:i[r]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=km().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-km().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Fs(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Fs(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const o of t)if(typeof s[o]=="string")e[o]=Fs(s[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Fs(Mu(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Fs(Mu(e)));{const e={};for(const t in this.metrics)e[t]=Fs(Mu(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Bu(e.optimizer_config),s=xs(t);let o;if(typeof e.loss=="string")o=Bo(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(r=>Bo(r));else if(e.loss!=null){o={};for(const r in e.loss)o[r]=Bo(e.loss[r])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(r=>Bo(r));else if(e.metrics!=null){i={};for(const r in e.metrics)i[r]=Bo(e.metrics[r])}this.compile({loss:o,metrics:i,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=Zv(e);if(u.length===0)throw new T(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new T(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new T("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Im(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:kR,generatedBy:`TensorFlow.js tfjs-layers v${rx}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await Im(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=Uv([s.data,c])}return this.userDefinedMetadata!=null&&(ox(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){ox(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}$i.className="Model",j($i);class gx extends $i{}gx.className="Functional",j(gx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function xx(n,e){if(e==null&&(e={}),typeof n=="string"){const t=Jv(n,e);if(t.length===0)t.push(LS(n,e));else if(t.length>1)throw new T(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return CR(n,void 0,e)}async function CR(n,e,t){if(t==null&&(t={}),n.load==null)throw new T("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let o=s.modelTopology;o.model_config!=null&&(o=o.model_config);const i=t.strict==null?!0:t.strict,r=s.weightData!=null&&s.weightSpecs!=null&&i,a=xs(Bu(o),e,r),l=s.trainingConfig;if(l!=null&&a.loadTrainingConfig(l),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new T("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:c}=IR(s.weightData,s.weightSpecs);a.loadWeights(u,i),a.optimizer!=null&&c.length>0&&await a.optimizer.setWeights(c),Ce(u),Ce(c.map(h=>h.tensor))}return a}function IR(n,e){const t=Mv(n,e),s={},o=[];return e.forEach(i=>{i.group==="optimizer"?o.push({name:i.name,tensor:t[i.name]}):s[i.name]=t[i.name]}),{modelWeights:s,optimizerWeights:o}}class ka extends $i{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Cu("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new T(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof ka||e instanceof $i;let s;if(t){if(s=e,s.outputs.length!==1)throw new T("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new T("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new T("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=$T({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new T(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new T("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=z0(this.outputs[0])}this.inboundNodes=[],new Eu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Po(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Le(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new $i({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new _n("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new _n("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new _n("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new _n("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},o=!1){let i,r={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new T("Legacy serialization format not supported yet.");i=t}else C(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=t.layers,delete t.layers,r=t;const a=new e(r);if(!(a instanceof ka))throw new ke(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of i){const c=xs(l,void 0,o);o&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(e){if(this.model==null)throw new T("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new T("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}ka.className="Sequential",j(ka);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ht=class extends vi{getConfig(){return{}}};class bx extends Ht{apply(e,t=1){return uT(e,t)}}bx.className="elu",j(bx);class yx extends Ht{apply(e){return ng(e)}}yx.className="selu",j(yx);class wx extends Ht{apply(e){return Fo(e)}}wx.className="relu",j(wx);class vx extends Ht{apply(e){return M(()=>na(6,Fo(e)))}}vx.className="relu6",j(vx);class kx extends Ht{apply(e){return e}}kx.className="linear",j(kx);class Cx extends Ht{apply(e){return gi(e)}}Cx.className="sigmoid",j(Cx);class Ix extends Ht{apply(e){return hT(e)}}Ix.className="hardSigmoid",j(Ix);class $x extends Ht{apply(e){return ta(e)}}$x.className="softplus",j($x);class Sx extends Ht{apply(e){return cT(e)}}Sx.className="softsign",j(Sx);class Nx extends Ht{apply(e){return ru(e)}}Nx.className="tanh",j(Nx);let Cp=class extends Ht{apply(e,t=-1){return ad(e,t)}};Cp.className="softmax",j(Cp);class Ex extends Ht{apply(e,t=-1){return jm(e,t)}}Ex.className="logSoftmax",j(Ex);class Tx extends Ht{apply(e){return M(()=>M(()=>{const t=Math.sqrt(2),s=R(.5,Z(1,Wm(me(e,t))));return R(e,s)}))}}Tx.className="gelu",j(Tx);class Rx extends Ht{apply(e){return M(()=>R(.5,R(e,Z(1,ru(R(Gt(me(2,Math.PI)),Z(e,R(.044715,Lo(e,3)))))))))}}Rx.className="gelu_new",j(Rx);class Lx extends Ht{apply(e){return M(()=>R(e,ru(ta(e))))}}Lx.className="mish",j(Lx);class Dx extends Ht{apply(e,t=1){return M(()=>R(gi(R(e,t)),e))}}Dx.className="swish",j(Dx);function so(n){return n.getClassName()}function Ip(n,e={}){return ha(n,On.getMap().classNameMap,e,"activation")}function oo(n){if(n==null){const e={};return e.className="linear",e.config={},Ip(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Ip(e)}else return n instanceof Ht?n:Ip(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $R(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Ax extends vi{}class Fx extends Ax{constructor(e){super(),$R(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return M(()=>{let t=Lt([1]);return this.hasL1&&(t=Z(t,fe(R(this.l1,Kt(e))))),this.hasL2&&(t=Z(t,fe(R(this.l2,fa(e))))),F(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Fx.className="L1L2",j(Fx);const Ox={l1l2:"L1L2"};function He(n){return Xd(n)}function _x(n,e={}){return ha(n,On.getMap().classNameMap,e,"regularizer")}function it(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Ox?Ox[n]:n,config:{}};return _x(t)}else return n instanceof Ax?n:_x(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Mx extends Ne{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=xe(e);let s=Fo(e);return this.maxValue!=null&&(s=vn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Mx.className="ReLU",j(Mx);class Px extends Ne{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=xe(e);return Hh(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Px.className="LeakyReLU",j(Px);class Bx extends Ne{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ot(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=it(e.alphaRegularizer),this.alphaConstraint=$t(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new T(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Le(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)s[o]=e[o];this.inputSpec=[new Ct({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=xe(e),Zh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:lt(this.alphaInitializer),alphaRegularizer:He(this.alphaRegularizer),alphaConstraint:It(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Bx.className="PReLU",j(Bx);let zx=class extends Ne{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ke(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=xe(e);return uu(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};zx.className="ELU",j(zx);class Vx extends Ne{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=xe(e);return R(s,ie(kn(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Vx.className="ThresholdedReLU",j(Vx);class Wx extends Ne{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Cp().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return M(()=>{let s=xe(e);const o=t.mask;if(o!=null){const i=R(ge(Zs(s.shape),ie(o,s.dtype)),_e(-1e9));s=Z(s,i)}return this.axis instanceof Array?this.axis.length>1?us(ge(s,Km(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Wx.className="Softmax",j(Wx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Si(n,e,t){if(typeof n=="number")return Po(n,e);if(n.length!==e)throw new T(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const o=n[s];if(!iT(o))throw new T(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${o}`)}return n}function ns(n,e,t,s,o=1){if(n==null)return n;const i=e+(e-1)*(o-1);let r;return t==="same"?r=n:r=n-i+1,Math.floor((r+s-1)/s)}function bs(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+to([t-e,0]);else if(s==="same")n=n*e;else throw new T(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $p(n,e){return M(()=>(ft(e),e==="channelsFirst"?Te(n,[0,2,3,1]):n))}function Ux(n,e){return M(()=>(ft(e),e==="channelsFirst"?Te(n,[0,2,3,4,1]):n))}function SR(n,e,t,s=1,o="valid",i,r=1){return M(()=>{if(i==null&&(i=Jn()),ft(i),n.shape.length!==3)throw new T(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new T(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new T(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(i==="channelsFirst"&&(n=Te(n,[0,2,1])),o==="causal")throw new ke("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=_m(n,e,s,o==="same"?"same":"valid","NWC",r);return t!=null&&(a=Qn(a,t)),a})}function Gx(n,e,t,s=[1,1],o="valid",i,r,a=null){return M(()=>{if(i==null&&(i=Jn()),ft(i),n.rank!==3&&n.rank!==4)throw new T(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new T(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=$p(n,i);if(o==="causal")throw new ke("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=E$({x:l,filter:e,strides:s,pad:o==="same"?"same":"valid",dilations:r,dataFormat:"NHWC",bias:t,activation:a}),i==="channelsFirst"&&(l=Te(l,[0,3,1,2])),l})}function NR(n,e,t,s=[1,1,1],o="valid",i,r){return M(()=>{if(i==null&&(i=Jn()),ft(i),n.rank!==4&&n.rank!==5)throw new T(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new T(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=Ux(n,i);if(o==="causal")throw new ke("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Nk(a,e,s,o==="same"?"same":"valid","NDHWC",r),t!=null&&(a=Qn(a,t)),i==="channelsFirst"&&(a=Te(a,[0,4,1,2,3])),a})}class zu extends Ne{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",zu.verifyArgs(t),this.rank=e,Dt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ke(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Si(t.kernelSize,e,"kernelSize"),this.strides=Si(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,In(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ft(this.dataFormat),this.activation=oo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=ot(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=$t(t.biasConstraint),this.biasRegularizer=it(t.biasRegularizer),this.activityRegularizer=it(t.activityRegularizer),this.dilationRate=Si(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new T(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new T(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new T(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(ps("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Zd(e.kernelSize,"number",1,3))throw new T(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:so(this.activation),useBias:this.useBias,biasInitializer:lt(this.biasInitializer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),biasConstraint:It(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ni extends zu{constructor(e,t){super(e,t),this.kernel=null,Ni.verifyArgs(t),this.filters=t.filters,Dt(this.filters,"filters"),this.kernelInitializer=ot(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=$t(t.kernelConstraint),this.kernelRegularizer=it(t.kernelRegularizer)}build(e){e=Le(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new T(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],o=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return M(()=>{e=xe(e);let s;const o=this.bias==null?null:this.bias.read(),i=w0(this.activation.getClassName());if(i!=null&&this.rank===2)s=Gx(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=SR(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Gx(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=NR(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ke("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Le(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<s.length;++i){const r=ns(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);t.push(r)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){const e={filters:this.filters,kernelInitializer:lt(this.kernelInitializer),kernelRegularizer:He(this.kernelRegularizer),kernelConstraint:It(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new T(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ca extends Ni{constructor(e){super(2,e),Ca.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Zd(e.kernelSize,"number",1,2))throw new T(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ca.className="Conv2D",j(Ca);class Ia extends Ni{constructor(e){super(3,e),Ia.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new T(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ia.className="Conv3D",j(Ia);class Hx extends Ca{constructor(e){if(super(e),this.inputSpec=[new Ct({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new T(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Le(e),e.length!==4)throw new T("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new T("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ct({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return M(()=>{let s=xe(e);if(s.shape.length!==4)throw new T(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,i=o[0];let r,a;this.dataFormat==="channelsFirst"?(r=2,a=3):(r=1,a=2);const l=o[r],u=o[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=bs(l,d,c,this.padding),m=bs(u,p,h,this.padding),g=[i,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Te(s,[0,2,3,1]));let x=Mm(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Te(x,[0,3,1,2])),this.bias!=null&&(x=Qn(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=Le(e);const t=e.slice();let s,o,i;this.dataFormat==="channelsFirst"?(s=1,o=2,i=3):(s=3,o=1,i=2);const r=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[o]=bs(t[o],l,r,this.padding),t[i]=bs(t[i],u,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Hx.className="Conv2DTranspose",j(Hx);class qx extends Ia{constructor(e){if(super(e),this.inputSpec=[new Ct({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new T(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Le(e),e.length!==5)throw new T("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new T("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ct({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return M(()=>{let s=xe(e);if(s.shape.length!==5)throw new T(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,i=o[0];let r,a,l;this.dataFormat==="channelsFirst"?(l=2,r=3,a=4):(l=1,r=2,a=3);const u=o[l],c=o[r],h=o[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],b=bs(u,m,d,this.padding),w=bs(c,g,p,this.padding),y=bs(h,x,f,this.padding),v=[i,b,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=Te(s,[0,2,3,4,1]));let k=Rk(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=Te(k,[0,4,1,2,3])),this.bias!==null&&(k=Qn(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=Le(e);const t=e.slice();let s,o,i,r;this.dataFormat==="channelsFirst"?(s=1,o=2,i=3,r=4):(s=4,o=1,i=2,r=3);const a=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[o]=bs(t[o],c,a,this.padding),t[i]=bs(t[i],h,l,this.padding),t[r]=bs(t[r],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qx.className="Conv3DTranspose",j(qx);class jx extends Ni{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new T("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new T("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new T(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ot(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=it(t.depthwiseRegularizer),this.depthwiseConstraint=$t(t.depthwiseConstraint),this.pointwiseInitializer=ot(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=it(t.pointwiseRegularizer),this.pointwiseConstraint=$t(t.pointwiseConstraint)}build(e){if(e=Le(e),e.length<this.rank+2)throw new T(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new T(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],o=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(s*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new Ct({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return M(()=>{e=xe(e);let s;if(this.rank===1)throw new ke("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Te(e,[0,2,3,1])),s=sg(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Qn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Te(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=lt(this.depthwiseInitializer),e.pointwiseInitializer=lt(this.pointwiseInitializer),e.depthwiseRegularizer=He(this.depthwiseRegularizer),e.pointwiseRegularizer=He(this.pointwiseRegularizer),e.depthwiseConstraint=It(this.depthwiseConstraint),e.pointwiseConstraint=It(this.pointwiseConstraint),e}}jx.className="SeparableConv";class Kx extends jx{constructor(e){super(2,e)}}Kx.className="SeparableConv2D",j(Kx);class Vu extends Ni{constructor(e){super(1,e),Vu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Zd(e.kernelSize,"number",1,1))throw new T(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Vu.className="Conv1D",j(Vu);class Xx extends Ne{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return M(()=>{if(e=xe(e),this.dataFormat==="channelsLast"){const s=Iu(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Iu(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Iu(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Iu(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Xx.className="Cropping2D",j(Xx);class Yx extends Ne{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ft(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,nT(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return M(()=>{let s=xe(e);const o=s.shape;if(this.dataFormat==="channelsFirst"){s=Te(s,[0,2,3,1]);const i=this.size[0]*o[2],r=this.size[1]*o[3],a=this.interpolation==="nearest"?Ls.resizeNearestNeighbor(s,[i,r]):Ls.resizeBilinear(s,[i,r]);return Te(a,[0,3,1,2])}else{const i=this.size[0]*o[1],r=this.size[1]*o[2];return this.interpolation==="nearest"?Ls.resizeNearestNeighbor(s,[i,r]):Ls.resizeBilinear(s,[i,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Yx.className="UpSampling2D",j(Yx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ER(n,e,t=[1,1],s="valid",o,i){return M(()=>{o==null&&(o=Jn()),ft(o);let r=$p(n,o);if(n.rank!==4)throw new T(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new T(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return r=Vh(r,e,t,s==="same"?"same":"valid","NHWC",i),o==="channelsFirst"&&(r=Te(r,[0,3,1,2])),r})}class Zx extends zu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ot(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=$t(e.depthwiseConstraint),this.depthwiseRegularizer=it(e.depthwiseRegularizer)}build(e){if(e=Le(e),e.length<4)throw new T(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new T(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],o=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{e=xe(e);let s=ER(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Qn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Le(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=ns(t,this.kernelSize[0],this.padding,this.strides[0]),r=ns(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,i,r]:[e[0],i,r,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=lt(this.depthwiseInitializer),e.depthwiseRegularizer=He(this.depthwiseRegularizer),e.depthwiseConstraint=It(this.depthwiseRegularizer),e}}Zx.className="DepthwiseConv2D",j(Zx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jx(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new T("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function o(i){return i==null||Array.isArray(i)?i:[i]}return e=o(e),t=o(t),{inputs:n,initialState:e,constants:t}}function Qx(n,e,t,s=!1,o,i,r=!1,a=!1){return M(()=>{const l=e.shape.length;if(l<3)throw new T(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Zn(2,l));e=Te(e,u),r&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ie(ie(o,"bool"),"float32"),o.rank===l-1&&(o=on(o,-1)),o=Te(o,u)),s&&(e=Oo(e,0),o!=null&&(o=Oo(o,0)));const c=[];let h,d=t;const p=e.shape[0],f=Mo(e);let m;o!=null&&(m=Mo(o));for(let x=0;x<p;++x){const b=f[x],w=M(()=>n(b,d));if(o==null)h=w[0],d=w[1];else{const y=M(()=>{const v=m[x],k=ge(Fn(v),v),I=Z(R(w[0],v),R(d[0],k)),$=d.map((E,S)=>Z(R(w[1][S],v),R(E,k)));return{output:I,newStates:$}});h=y.output,d=y.newStates}a&&c.push(h)}let g;return a&&(g=Rs(c,1)),[h,g,d]})}class io extends Ne{constructor(e){super(e);let t;if(e.cell==null)throw new T("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Ep({cells:e.cell}):t=e.cell,t.stateSize==null)throw new T("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ct({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Zn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){cp(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let o;if(this.returnSequences?o=[e[0],e[1],s]:o=[e[0],s],this.returnState){const i=[];for(const r of t)i.push([e[0],r]);return[o].concat(i)}else return o}computeMask(e,t){return M(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const o=this.states.map(i=>null);return[s].concat(o)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ke("Constants support is not implemented in RNN yet.");cp(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Ct({shape:[t,null,...s]});const o=[e[0]].concat(e.slice(2));this.cell.build(o);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!Fe(this.stateSpec.map(r=>r.shape[r.shape.length-1]),i))throw new T(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(r=>new Ct({shape:[null,r]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new ds("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new T("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Lt([s,o])):this.states_=[Lt([s,this.cell.stateSize])];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Lt([s,o])):this.states_[0]=Lt([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new T(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let o=0;o<this.states_.length;++o){const i=e[o],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[s,r];if(!Fe(i.shape,a))throw new T(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>rs(o.clone()))})}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const i=Jx(e,s,o,this.numConstants);e=i.inputs,s=i.initialState,o=i.constants;let r=[],a=[];if(s!=null){t.initialState=s,r=r.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Ct({shape:u.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(t.constants=o,r=r.concat(o),this.numConstants=o.length),r[0]instanceof gs){const u=[e].concat(r),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return M(()=>{const s=t==null?null:t.mask,o=t==null?null:t.training;let i=t==null?null:t.initialState;e=xe(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==r)throw new T(`RNN Layer has ${r} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:o},u=Qx((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},e,i,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,o);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return M(()=>{let t=Lt(e.shape);return t=fe(t,[1,2]),t=pa(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?tp(t,[1,s]):t):this.cell.stateSize>1?[tp(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===io.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const o=t.cell,i=xs(o,s);return new e(Object.assign(t,{cell:i}))}}io.className="RNN",j(io);class Wu extends Ne{}class Sp extends Wu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dt(this.units,"units"),this.activation=oo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ot(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=it(e.kernelRegularizer),this.recurrentRegularizer=it(e.recurrentRegularizer),this.biasRegularizer=it(e.biasRegularizer),this.kernelConstraint=$t(e.kernelConstraint),this.recurrentConstraint=$t(e.recurrentConstraint),this.biasConstraint=$t(e.biasConstraint),this.dropout=Ii([1,to([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ii([1,to([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Le(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new T(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>Fn(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>Fn(s),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let i;const r=this.dropoutMask,a=this.recurrentDropoutMask;r!=null?i=ms(R(e,r),this.kernel.read()):i=ms(e,this.kernel.read()),this.bias!=null&&(i=Qn(i,this.bias.read())),a!=null&&(s=R(s,a));let l=Z(i,ms(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:so(this.activation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),recurrentInitializer:lt(this.recurrentInitializer),biasInitializer:lt(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:It(this.kernelConstraint),recurrentConstraint:It(this.recurrentConstraint),biasConstraint:It(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Sp.className="SimpleRNNCell",j(Sp);class eb extends io{constructor(e){e.cell=new Sp(e),super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:i})})}static fromConfig(e,t){return new e(t)}}eb.className="SimpleRNN",j(eb);class Np extends Wu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new T("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Dt(this.units,"units"),this.activation=oo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=oo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ot(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=it(e.kernelRegularizer),this.recurrentRegularizer=it(e.recurrentRegularizer),this.biasRegularizer=it(e.biasRegularizer),this.kernelConstraint=$t(e.kernelConstraint),this.recurrentConstraint=$t(e.recurrentConstraint),this.biasConstraint=$t(e.biasConstraint),this.dropout=Ii([1,to([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ii([1,to([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Le(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return M(()=>{if(e=e,e.length!==2)throw new T(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>Fn(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>Fn(o),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,r=this.recurrentDropoutMask;let a,l,u;0<this.dropout&&this.dropout<1&&(e=R(e,i[0]));let c=ms(e,this.kernel.read());this.useBias&&(c=Qn(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,r[0]));const h=this.recurrentKernel.read(),[d,p]=Cn(h,[2*this.units,this.units],h.rank-1),f=ms(o,d),[m,g,x]=Cn(c,3,c.rank-1),[b,w]=Cn(f,2,f.rank-1);a=this.recurrentActivation.apply(Z(m,b)),l=this.recurrentActivation.apply(Z(g,w));const y=ms(R(l,o),p);u=this.activation.apply(Z(x,y));const v=Z(R(a,o),R(Z(1,pt(a)),u));return[v,v]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:so(this.activation),recurrentActivation:so(this.recurrentActivation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),recurrentInitializer:lt(this.recurrentInitializer),biasInitializer:lt(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:It(this.kernelConstraint),recurrentConstraint:It(this.recurrentConstraint),biasConstraint:It(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Np.className="GRUCell",j(Np);class tb extends io{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Np(e),super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}tb.className="GRU",j(tb);class Uu extends Wu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dt(this.units,"units"),this.activation=oo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=oo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ot(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=it(e.kernelRegularizer),this.recurrentRegularizer=it(e.recurrentRegularizer),this.biasRegularizer=it(e.biasRegularizer),this.kernelConstraint=$t(e.kernelConstraint),this.recurrentConstraint=$t(e.recurrentConstraint),this.biasConstraint=$t(e.biasConstraint),this.dropout=Ii([1,to([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ii([1,to([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Le(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,r=this.units;o=new(t=class extends Pn{apply(l,u){const c=i.apply([r]),h=new sp().apply([r]),d=i.apply([r*2]);return N0(N0(c,h),d)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return M(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new T(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>Fn(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>Fn(o),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=R(e,r[0]));let d=ms(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,a[0])),d=Z(d,ms(o,this.recurrentKernel.read())),this.useBias&&(d=Qn(d,this.bias.read()));const[p,f,m,g]=Cn(d,4,d.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=Z(R(u,i),R(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=R(h,this.activation.apply(c));return[x,x,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:so(this.activation),recurrentActivation:so(this.recurrentActivation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),recurrentInitializer:lt(this.recurrentInitializer),biasInitializer:lt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:It(this.kernelConstraint),recurrentConstraint:It(this.recurrentConstraint),biasConstraint:It(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Uu.className="LSTMCell",j(Uu);class nb extends io{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Uu(e),super(e)}call(e,t){return M(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}nb.className="LSTM",j(nb);class Ep extends Wu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return M(()=>{e=e;let s=e.slice(1);const o=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(s.splice(0,a.stateSize.length)):o.push(s.splice(0,1));o.reverse();const i=[];let r;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=o[a],a===0?r=[e[0]].concat(s):r=[r[0]].concat(s),r=l.call(r,t),i.push(r.slice(1))}s=[];for(const a of i.slice().reverse())s.push(...a);return[r[0]].concat(s)})}build(e){cp(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,o)=>{Vo(`RNNCell_${o}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=i=>({className:i.getClassName(),config:i.getConfig()}),o={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),o)}static fromConfig(e,t,s={}){const o=[];for(const i of t.cells)o.push(xs(i,s));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return hp(e)}setWeights(e){const t=[];for(const s of this.cells){const o=s.weights.length,i=e.splice(o);for(let r=0;r<s.weights.length;++r)t.push([s.weights[r],i[r]])}dp(t)}}Ep.className="StackedRNNCells",j(Ep);function ro(n){const{ones:e,rate:t,training:s=!1,count:o=1,dropoutFunc:i}=n,r=()=>i!=null?i(e(),t):T0(e(),t),a=()=>ma(r,e,s);return!o||o<=1?rs(a().clone()):Array(o).fill(void 0).map(a).map(u=>rs(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var TR=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,s=Object.getOwnPropertySymbols(n);o<s.length;o++)e.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(n,s[o])&&(t[s[o]]=n[s[o]]);return t};class sb extends io{constructor(e){if(e.unroll)throw new ke("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ke("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ct({ndim:5})]}call(e,t){return M(()=>{if(this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new T("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,o=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:i})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return M(()=>{const{stateSize:t}=this.cell,s=e.shape,o=this.computeSingleOutputShape(s),i=[o[0],...o.slice(2)],r=Lt(i);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){M(()=>{if(!this.stateful)throw new ds("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,o=this.computeSingleOutputShape(s),i=[o[0],...o.slice(2)];if(s[0]==null)throw new T("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Lt(i)):this.states_=[Lt(i)];else if(e==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Lt(i)):this.states_[0]=Lt(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new T(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],u=i;if(!Fe(l.shape,u))throw new T(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>rs(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:o,padding:i,strides:r,dilationRate:a}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=ns(u,o[0],i,r[0],a[0]),d=ns(c,o[1],i,r[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}sb.className="ConvRNN2D";class Tp extends Uu{constructor(e){const{filters:t,kernelSize:s,strides:o,padding:i,dataFormat:r,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Dt(this.filters,"filters"),this.kernelSize=Si(s,2,"kernelSize"),this.kernelSize.forEach(l=>Dt(l,"kernelSize")),this.strides=Si(o||1,2,"strides"),this.strides.forEach(l=>Dt(l,"strides")),this.padding=i||"valid",In(this.padding),this.dataFormat=r||"channelsLast",ft(this.dataFormat),this.dilationRate=Si(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Dt(l,"dilationRate"))}build(e){var t;e=Le(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new T(`The channel dimension of the input should be defined. Found ${e[s]}`);const o=e[s],i=4,r=this.kernelSize.concat([o,this.filters*i]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(t=class extends Pn{apply(d,p){const f=u.apply([c]),m=Zs([c]),g=u.apply([c*2]);return ep([f,m,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return M(()=>{if(e.length!==3)throw new T(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,o=e[0],i=e[1],r=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ro({ones:()=>Fn(o),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(K,X,J)=>!X||!X[J]?K:R(X[J],K);let c=u(o,l,0),h=u(o,l,1),d=u(o,l,2),p=u(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ro({ones:()=>Fn(i),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(i,f,0),g=u(i,f,1),x=u(i,f,2),b=u(i,f,3);const w=3,[y,v,k,I]=Cn(this.kernel.read(),a,w),[$,E,S,L]=this.useBias?Cn(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,y,$,this.padding),h=this.inputConv(h,v,E,this.padding),d=this.inputConv(d,k,S,this.padding),p=this.inputConv(p,I,L,this.padding);const[_,P,A,B]=Cn(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,_),g=this.recurrentConv(g,P),x=this.recurrentConv(x,A),b=this.recurrentConv(b,B);const V=this.recurrentActivation.apply(Z(c,m)),H=this.recurrentActivation.apply(Z(h,g)),W=Z(R(H,r),R(V,this.activation.apply(Z(d,x)))),q=R(this.recurrentActivation.apply(Z(p,b)),this.activation.apply(W));return[q,q,W]})}getConfig(){const e=super.getConfig(),t=TR(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,o){const i=Ro(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Qn(i,s,this.dataFormat):i}recurrentConv(e,t){return Ro(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Tp.className="ConvLSTM2DCell",j(Tp);class ob extends sb{constructor(e){const t=new Tp(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}ob.className="ConvLSTM2D",j(ob);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rp extends Ne{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let o=0;o<this.noiseShape.length;++o)s.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return s}call(e,t){return M(()=>{this.invokeCallHook(e,t);const s=xe(e);if(0<this.rate&&this.rate<1){const o=t.training==null?!1:t.training,i=this.getNoiseShape(s);return ma(()=>T0(s,this.rate,i,this.seed),()=>s,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Rp.className="Dropout",j(Rp);class ib extends Rp{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}ib.className="SpatialDropout1D",j(ib);class rb extends Ne{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Dt(this.units,"units"),this.activation=oo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ot(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ot(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=$t(e.kernelConstraint),this.biasConstraint=$t(e.biasConstraint),this.kernelRegularizer=it(e.kernelRegularizer),this.biasRegularizer=it(e.biasRegularizer),this.activityRegularizer=it(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Le(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Le(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return M(()=>{this.invokeCallHook(e,t);const s=xe(e),o=w0(this.activation.getClassName());let i;return o!=null?i=ms(s,this.kernel.read(),o,this.bias?this.bias.read():null):(i=ms(s,this.kernel.read()),this.bias!=null&&(i=Qn(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:so(this.activation),useBias:this.useBias,kernelInitializer:lt(this.kernelInitializer),biasInitializer:lt(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:It(this.kernelConstraint),biasConstraint:It(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}rb.className="Dense",j(rb);class ab extends Ne{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Le(e);for(const t of e.slice(1))if(t==null)throw new T(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],eo(e,1)]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let s=xe(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const o=[0];for(let i=2;i<s.rank;++i)o.push(i);o.push(1),s=Te(s,o)}return lT(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ab.className="Flatten",j(ab);class lb extends Ne{constructor(e){super(e),this.supportsMasking=!0,this.activation=oo(e.activation)}call(e,t){return M(()=>{this.invokeCallHook(e,t);const s=xe(e);return this.activation.apply(s)})}getConfig(){const e={activation:so(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}lb.className="Activation",j(lb);class ub extends Ne{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return M(()=>(e=xe(e),rT(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ub.className="RepeatVector",j(ub);class cb extends Ne{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",o=t.slice();let i=1,r=null;for(let l=0;l<o.length;++l){const u=o[l];if(this.isUnknown(u))if(r===null)r=l;else throw new T("Can only specifiy one unknown dimension.");else i*=u}const a=eo(e);if(r!==null){if(i===0||a%i!==0)throw new T(s);o[r]=a/i}else if(a!==i)throw new T(s);return o}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return M(()=>{this.invokeCallHook(e,t);const s=xe(e),o=s.shape,i=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return F(s,i)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}cb.className="Reshape",j(cb);class hb extends Ne{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Zn(1,e.dims.length+1);if(!Fe(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ct({ndim:this.dims.length+1})]}computeOutputShape(e){e=Le(e);const t=e.slice();return this.dims.forEach((s,o)=>{t[o+1]=e[s]}),t}call(e,t){return Te(xe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}hb.className="Permute",j(hb);class db extends Ne{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=xe(e);return Ah(fu(s,this.maskValue),-1)}call(e,t){return M(()=>{this.invokeCallHook(e,t);const s=xe(e),r=Ah(fu(s,this.maskValue),-1,!0);return R(s,ie(r,s.dtype))})}}db.className="Masking",j(db);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pb extends Ne{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ve(e.inputLength))}this.inputDim=e.inputDim,Dt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Dt(this.outputDim,"outputDim"),this.embeddingsInitializer=ot(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=it(e.embeddingsRegularizer),this.activityRegularizer=it(e.activityRegularizer),this.embeddingsConstraint=$t(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return M(()=>this.maskZero?(e=xe(e),fu(e,Ee(e))):null)}computeOutputShape(e){if(e=Le(e),this.inputLength==null)return[...e,this.outputDim];const t=Ve(this.inputLength);if(t.length!==e.length-1)throw new T(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let o=0;o<t.length;++o){const i=t[o],r=e[o+1];if(i!=null&&r!=null&&i!==r)throw new T(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(t[s]=r),s++}}return[e[0],...t,this.outputDim]}call(e,t){return M(()=>{this.invokeCallHook(e,t);let s=xe(e);s.dtype!=="int32"&&(s=fs(s,"int32"));const o=E0(this.embeddings.read(),F(s,[s.size]));return F(o,Le(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:lt(this.embeddingsInitializer),embeddingsRegularizer:He(this.embeddingsRegularizer),activityRegularizer:He(this.activityRegularizer),embeddingsConstraint:It(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}pb.className="Embedding",j(pb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Go extends Ne{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ke}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){const i=e[e.length-t.length+o],r=t[o];if(i==null||r==null||i<0||r<0)s.push(null);else if(i===1)s.push(r);else if(r===1)s.push(i);else{if(i!==r)throw new T("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(i)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Le(e)]),e=e,e.length<2)throw new T(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const i of e)i!=null&&i[0]!==null&&t.push(i[0]);if(t=Qs(t),t.length>1)throw new T(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const r=e[i]==null?null:e[i].slice(1);s=this.computeElementwiseOpOutputShape(s,r)}const o=e.map(i=>i.length);e.indexOf(null)===-1&&Qs(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return M(()=>{if(e=e,this.reshapeRequired){const s=[],o=e.map(i=>i.rank);if(o.indexOf(null)===-1){const i=to(o);for(let r of e){const a=r.rank;for(let l=0;l<i-a;++l)r=pa(r,1);s.push(r)}return this.mergeFunction(s)}else{let i=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=F(l,[h].concat(eo(c.slice(1))));p=Te(p,[1,0]),p=F(p,d),s.push(p),i=!0}else if(u>1){const c=Zn(1,u).concat([0]);s.push(Te(l,c)),i=!0}else s.push(l)}let r=this.mergeFunction(s);const a=r.rank;if(i){if(a==null){const l=r.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));r=F(Te(F(r,[-1,c]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Zn(0,a-1));r=Te(r,l)}}return r}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,i)}let s=[];for(const o of e)o!=null&&o[0]!==null&&s.push(o[0]);return s=Qs(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return M(()=>{if(t==null)return null;if(!Array.isArray(t))throw new T("`mask` should be an Array");if(!Array.isArray(e))throw new T("`inputs` should be an Array");if(t.length!==e.length)throw new T(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:on(o,0));let s=t[0];for(let o=1;o<t.length-1;++o)s=Ts(s,t[o]);return s})}}class fb extends Go{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Z(t,e[s]);return t})}}fb.className="Add",j(fb);class mb extends Go{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=R(t,e[s]);return t})}}mb.className="Multiply",j(mb);class gb extends Go{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Z(t,e[s]);return R(1/e.length,t)})}}gb.className="Average",j(gb);class xb extends Go{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Ys(t,e[s]);return t})}}xb.className="Maximum",j(xb);class bb extends Go{constructor(e){super(e)}mergeFunction(e){return M(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=na(t,e[s]);return t})}}bb.className="Minimum",j(bb);class yb extends Go{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new T("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const o of e)if(o!=null){t=!1;break}if(t)return;const s=[];for(let o=0;o<e.length;++o){const i=e[o].slice();i.splice(this.axis,1);let r=!1;for(const a of s)if(Fe(a,i)){r=!0;break}r||s.push(i)}if(s.length>1)throw new T("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return M(()=>ep(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new T("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),o=this.axis<0?s.length+this.axis:this.axis;for(const i of t.slice(1)){if(s[o]==null||i[o]==null){s[o]=null;break}s[o]+=i[o]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new T("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new T("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new T(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return M(()=>{let s=!0;if(t.forEach(r=>{if(r!=null){s=!1;return}}),s)return null;const o=[];for(let r=0;r<e.length;++r)t[r]==null?o.push(ie(Fn(e[r]),"bool")):t[r].rank<e[r].rank?o.push(on(t[r],-1)):o.push(t[r]);const i=sn(o,this.axis);return Om(i,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}yb.className="Concatenate",j(yb);function $a(n,e){for(;n<0;)n+=e;return n}function RR(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new ke("batchDot is not implemented for tensors of 4D or higher rank yet");if(C(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),C(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new ke("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,o=e.shape.length;t==null&&(t=[s-1,o-2]);const i=t;return M(()=>{let r;if(s>o){r=s-o;const l=[];for(let u=0;u<r;++u)l.push(1);e=F(e,e.shape.concat(l))}else if(o>s){r=o-s;const l=[];for(let u=0;u<r;++u)l.push(1);n=F(n,n.shape.concat(l))}else r=0;let a;if(n.shape.length===2&&e.shape.length===2)i[0]===i[1]?a=fe(R(n,e),i[0]):a=fe(R(Te(n,[1,0]),e),i[1]);else{const l=i[0]!==n.shape.length-1,u=i[1]===e.shape.length-1;a=Oe(n,e,l,u)}if(r>0){let l;s>o?l=s+o-3:l=s-1;const u=[];for(let c=l;c<l+r;++c)u.push(c);a=ia(a,u)}return a.shape.length===1&&(a=on(a,1)),a})}class wb extends Go{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){C(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new ke("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);if(t[o[0]]!==s[o[1]])throw new T(`Dimension incompatibility: ${t[o[0]]} !== ${s[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new T(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((i,r)=>$a(i,e[r].shape.length)):o=[$a(this.axes,t.shape.length),$a(this.axes,s.shape.length)],this.normalize&&(t=Lu(t,o[0]),s=Lu(s,o[1])),RR(t,s,o)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[$a(this.axes,e.length),$a(this.axes,t.length)],s}computeOutputShape(e){C(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new ke("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);t.splice(o[0],1),s.splice(o[1],1),s.splice(0,1);const i=t.concat(s);return i.length===1&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}wb.className="Dot",j(wb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vb extends Ne{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);const s=xe(e);return ma(()=>Z($u(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}vb.className="GaussianNoise",j(vb);class kb extends Ne{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{this.invokeCallHook(e,t);const s=xe(e);return this.rate>0&&this.rate<1?ma(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return R(s,$u(s.shape,1,i))},()=>s,t.training||!1):s})}}kb.className="GaussianDropout",j(kb);class Cb extends Ne{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||xe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return M(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return ma(()=>{const i=xe(e),l=-1.6732632423543772*1.0507009873554805;let u=Do(sa(s),this.rate);u=fs(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-c*l*this.rate,d=Z(R(i,u),R(Z(u,-1),l));return Z(R(d,c),h)},()=>xe(e),t.training||!1)}return e})}}Cb.className="AlphaDropout",j(Cb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sa(n,e,t,s,o,i=.001){let r;if(n.rank===2)r=sk(n,e,t,s,o,i);else if(n.rank===3)r=ik(n,e,t,s,o,i);else if(n.rank===4)r=ak(n,e,t,s,o,i);else throw new ke(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return r}function LR(n,e,t,s,o=.001){return M(()=>{const i=Kh(n,s),r=i.mean,a=i.variance;return[Sa(n,r,a,t,e,o),r,a]})}function DR(n,e,t,s,o=.001){return M(()=>{const i=Kh(n,s),r=i.mean,a=i.variance,l=[];for(const f of Zn(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const u=F(r,l),c=F(a,l),h=e==null?null:F(e,l),d=t==null?null:F(t,l);return[Sa(n,u,c,d,h,o),r,a]})}function AR(n,e,t,s,o=.001){return Fe(s.slice().sort(),Zn(0,n.rank-1))?LR(n,e,t,s,o):DR(n,e,t,s,o)}class Ib extends Ne{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ot(e.betaInitializer||"zeros"),this.gammaInitializer=ot(e.gammaInitializer||"ones"),this.movingMeanInitializer=ot(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ot(e.movingVarianceInitializer||"ones"),this.betaConstraint=$t(e.betaConstraint),this.gammaConstraint=$t(e.gammaConstraint),this.betaRegularizer=it(e.betaRegularizer),this.gammaRegularizer=it(e.gammaRegularizer)}build(e){e=Le(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new T(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ct({ndim:e.length,axes:{[t]:s}})];const o=[s];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return M(()=>{const s=t.training==null?!1:t.training,o=xe(e),i=o.shape,r=i.length,a=Zn(0,r),l=this.axis>=0?this.axis:this.axis+r;a.splice(l,1);const u=Po(1,r);u[l]=i[l];const c=a.slice();c.sort();const h=!Fe(c,Zn(0,r).slice(0,r-1)),d=()=>{if(h){const b=F(this.movingMean.read(),u),w=F(this.movingVariance.read(),u),y=this.center?F(this.beta.read(),u):null,v=this.scale?F(this.gamma.read(),u):null;return Sa(o,b,w,y,v,this.epsilon)}else return Sa(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=AR(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,w,y)=>{M(()=>{const v=1-y,k=b.read(),I=R(ge(k,w),v);b.write(ge(k,I))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:lt(this.betaInitializer),gammaInitializer:lt(this.gammaInitializer),movingMeanInitializer:lt(this.movingMeanInitializer),movingVarianceInitializer:lt(this.movingVarianceInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer),betaConstraint:It(this.betaConstraint),gammaConstraint:It(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ib.className="BatchNormalization",j(Ib);class $b extends Ne{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ot(e.betaInitializer||"zeros"),this.gammaInitializer=ot(e.gammaInitializer||"ones"),this.betaRegularizer=it(e.betaRegularizer),this.gammaRegularizer=it(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Le(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==Qs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]),o=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){const s=xe(e),o=s.shape,i=o.length;return M(()=>{let{mean:a,variance:l}=Kh(s,this.axis,!0);const u=Po(1,i);for(const m of this.axis)u[m]=o[m];const c=m=>m!=null&&m.shape.length!==i?F(m,u):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<i;++m)this.axis.indexOf(m)!==-1?(p.push(o[m]),f.push(1)):(p.push(1),f.push(o[m]));return a=Xn(a,p),l=Xn(l,p),h!=null&&(h=Xn(h,f)),d!=null&&(d=Xn(d,f)),Sa(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:lt(this.betaInitializer),gammaInitializer:lt(this.gammaInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}$b.className="LayerNormalization",j($b);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function FR(n,e,t){return M(()=>{if(n.rank!==4)throw new T(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new T("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Jn()),t!=="channelsLast"&&t!=="channelsFirst")throw new T(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Xh(n,s)})}class Sb extends Ne{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Jn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new T(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new T(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new T(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Ct({ndim:4})]}computeOutputShape(e){e=Le(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return M(()=>FR(xe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Sb.className="ZeroPadding2D",j(Sb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gu(n,e,t,s,o,i){return M(()=>{ft(o),k0(i),In(s),t==null&&(t=[1,1]),s==null&&(s="valid"),o==null&&(o=Jn()),i==null&&(i="max"),n=$p(n,o);let r;const a=s==="same"?"same":"valid";return i==="max"?r=jh(n,e,t,a):r=_h(n,e,t,a),o==="channelsFirst"&&(r=Te(r,[0,3,1,2])),r})}function Nb(n,e,t,s,o,i){return M(()=>{ft(o),k0(i),In(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),o==null&&(o=Jn()),i==null&&(i="max"),n=Ux(n,o);let r;const a=s==="same"?"same":"valid";return i==="max"?r=HC(n,e,t,a):r=j2(n,e,t,a),o==="channelsFirst"&&(r=Te(r,[0,4,1,2,3])),r})}class Eb extends Ne{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new T(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Dt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new T(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Dt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,In(this.padding),this.inputSpec=[new Ct({ndim:3})]}computeOutputShape(e){e=Le(e);const t=ns(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return M(()=>{this.invokeCallHook(e,t),e=pa(xe(e),2);const s=this.poolingFunction(xe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ia(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Tb extends Eb{constructor(e){super(e)}poolingFunction(e,t,s,o,i){return ft(i),In(o),Gu(e,t,s,o,i,"max")}}Tb.className="MaxPooling1D",j(Tb);class Rb extends Eb{constructor(e){super(e)}poolingFunction(e,t,s,o,i){return ft(i),In(o),Gu(e,t,s,o,i,"avg")}}Rb.className="AveragePooling1D",j(Rb);class Lb extends Ne{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new T(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Dt(this.poolSize,"poolSize"),Dt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ft(this.dataFormat),In(this.padding),this.inputSpec=[new Ct({ndim:4})]}computeOutputShape(e){e=Le(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=ns(t,this.poolSize[0],this.padding,this.strides[0]),s=ns(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(xe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Db extends Lb{constructor(e){super(e)}poolingFunction(e,t,s,o,i){return ft(i),In(o),Gu(e,t,s,o,i,"max")}}Db.className="MaxPooling2D",j(Db);class Ab extends Lb{constructor(e){super(e)}poolingFunction(e,t,s,o,i){return ft(i),In(o),Gu(e,t,s,o,i,"avg")}}Ab.className="AveragePooling2D",j(Ab);class Fb extends Ne{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new T(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Dt(this.poolSize,"poolSize"),Dt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ft(this.dataFormat),In(this.padding),this.inputSpec=[new Ct({ndim:5})]}computeOutputShape(e){e=Le(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=ns(t,this.poolSize[0],this.padding,this.strides[0]),s=ns(s,this.poolSize[1],this.padding,this.strides[1]),o=ns(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,o]:[e[0],t,s,o,e[4]]}call(e,t){return M(()=>(this.invokeCallHook(e,t),this.poolingFunction(xe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ob extends Fb{constructor(e){super(e)}poolingFunction(e,t,s,o,i){return ft(i),In(o),Nb(e,t,s,o,i,"max")}}Ob.className="MaxPooling3D",j(Ob);class _b extends Fb{constructor(e){super(e)}poolingFunction(e,t,s,o,i){return ft(i),In(o),Nb(e,t,s,o,i,"avg")}}_b.className="AveragePooling3D",j(_b);class Mb extends Ne{constructor(e){super(e),this.inputSpec=[new Ct({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ke}}class Pb extends Mb{constructor(e){super(e||{})}call(e,t){return M(()=>{const s=xe(e);return bt(s,1)})}}Pb.className="GlobalAveragePooling1D",j(Pb);class Bb extends Mb{constructor(e){super(e||{})}call(e,t){return M(()=>{const s=xe(e);return Kn(s,1)})}}Bb.className="GlobalMaxPooling1D",j(Bb);class zb extends Ne{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ft(this.dataFormat),this.inputSpec=[new Ct({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ke}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vb extends zb{call(e,t){return M(()=>{const s=xe(e);return this.dataFormat==="channelsLast"?bt(s,[1,2]):bt(s,[2,3])})}}Vb.className="GlobalAveragePooling2D",j(Vb);class Wb extends zb{call(e,t){return M(()=>{const s=xe(e);return this.dataFormat==="channelsLast"?Kn(s,[1,2]):Kn(s,[2,3])})}}Wb.className="GlobalMaxPooling2D",j(Wb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ub extends Ne{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const o=t.layer,i=xs(o,s);delete t.layer;const r={layer:i};return Object.assign(r,t),new e(r)}}class Gb extends Ub{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Le(e),e.length<3)throw new T(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Le(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),o=e[1];return[s[0],o].concat(s.slice(1))}call(e,t){return M(()=>(e=xe(e),Qx((r,a)=>[xe(this.layer.call(r,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}Gb.className="TimeDistributed",j(Gb);function OR(n){zo(tT,"BidirectionalMergeMode",n)}const _R="concat";class Hb extends Ub{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=xs(s),t.goBackwards=t.goBackwards!==!0;const o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=xs(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?_R:e.mergeMode,OR(this.mergeMode),e.weights)throw new ke("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,o,i;return this.returnState&&(i=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,o=[s]):this.mergeMode==null?o=[s,s.slice()]:o=[s],this.returnState?this.mergeMode==null?o.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):rn(o)}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const i=Jx(e,s,o,this.numConstants);if(e=i.inputs,s=i.initialState,o=i.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&o==null)return super.apply(e,t);const r=[],a=[];if(s!=null){const u=s.length;if(u%2>0)throw new T("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,r.push(...s);const c=s.map(h=>new Ct({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),a.push(...c)}if(o!=null)throw new ke("Support for constants in Bidirectional layers is not implemented yet.");const l=r[0]instanceof gs;for(const u of r)if(u instanceof gs!==l)throw new T("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(r),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return M(()=>{const s=t.initialState;let o,i;if(s==null)o=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let r;this.returnState&&(Array.isArray(o)&&(r=o.slice(1).concat(i.slice(1))),o=o[0],i=i[0]),this.returnSequences&&(i=Oo(i,1));let a;return this.mergeMode==="concat"?a=ep([o,i]):this.mergeMode==="sum"?a=Z(o,i):this.mergeMode==="ave"?a=R(.5,Z(o,i)):this.mergeMode==="mul"?a=R(o,i):this.mergeMode==null&&(a=[o,i]),this.returnState?this.mergeMode==null?a.concat(r):[a].concat(r):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Vo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Vo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(r=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=xs(t.layer);if(delete t.layer,t.numConstants!=null)throw new ke("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=t;return o.layer=s,new e(o)}}Hb.className="Bidirectional",j(Hb);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qb extends Ne{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return M(()=>(e=xe(e),e.dtype!=="float32"&&(e=fs(e,"float32")),Z(R(e,this.scale),this.offset)))}}qb.className="Rescaling",j(qb);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:MR,cropAndResize:PR}=Ls;class jb extends Ne{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,o,i,r,a,l){return M(()=>{let u,c=!1;const h=t/r,d=s/a,p=(o+t)/r,f=(i+s)/a,m=[h,d,p,f],g=[];e.rank===3?(c=!0,u=Rs([e])):u=e;for(let v=0;v<u.shape[0];v++)g.push(m);const x=Kr(g,[g.length,4]),b=oa(0,g.length,1,"int32"),y=PR(u,x,b,[o,i],"nearest");return fs(c?xe(Mo(y)):y,l)})}upsize(e,t,s,o){return M(()=>{const i=MR(e,[t,s]);return fs(i,o)})}call(e,t){return M(()=>{const s=xe(e),o=s.dtype,i=s.shape,r=i[i.length-3],a=i[i.length-2];let l=0;r!==this.height&&(l=Math.floor((r-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,r,a,o):this.upsize(e,this.height,this.width,o)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Le(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}jb.className="CenterCrop",j(jb);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function BR(n,e,t,s){let o=xe(n);if(o.dtype!=="int32"&&(o=fs(o,"int32")),e==="int")return o;const i=o.shape;if(o.rank===0&&(o=on(o,-1)),e==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=on(o,-1)),o.rank>2)throw new T(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${o.rank}.`);const r=["multiHot","oneHot"].includes(e),a=o;let l;if(typeof s<"u"&&e==="count"?l=Vm(a,s,t,r):l=Vm(a,[],t,r),e!=="tfIdf")return l;if(s)return R(l,s);throw new T("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Kb extends Ne{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Le(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return M(()=>{e=xe(e),e.dtype!=="int32"&&(e=fs(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new T(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=xe(t.countWeights)}const o=Kn(e),i=cu(e),r=kn(this.numTokens,o).bufferSync().get(0),a=Do(i,0).bufferSync().get(0);if(!(r&&a))throw new T(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return BR(e,this.outputMode,this.numTokens,s)})}}Kb.className="CategoryEncoding",j(Kb);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const zR=["bilinear","nearest"],Xb=new Set(zR);class Yb extends Ne{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(Xb.has(e.interpolation))this.interpolation=e.interpolation;else throw new T(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Le(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return M(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Ls.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Ls.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Xb]} are supported`)})}}Yb.className="Resizing",j(Yb);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zb{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}Zb.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jb extends Ne{constructor(e){super(e),this.randomGenerator=new Zb(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Jb.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VR=["bilinear","nearest"],Qb=new Set(VR);class e1 extends Jb{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new T(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new T(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new T(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Qb.has(s))this.interpolation=s;else throw new T(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Le(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return M(()=>{const s=xe(e);this.imgHeight=s.shape[s.shape.length-3];const o=s.shape[s.shape.length-2];this.widthFactor=sa([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*o;i=Math.round(i);const r=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Ls.resizeBilinear(e,r);case"nearest":return Ls.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Qb]} are supported`)}})}}e1.className="RandomWidth",j(e1);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */z().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var t1;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(t1||(t1={}));var n1;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(n1||(n1={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var s1;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(s1||(s1={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ae(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&C(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WR=hg;class Hu extends Ki{nextDataId(){return Hu.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new fo(this,is())}write(e,t,s){this.firstUse&&(this.firstUse=!1,z().get("IS_NODE")&&wn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:s,refCount:1}),o}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&Xi(s[0])){const i=s.map(r=>Gs(r));o=this.write(i,e,t)}else o=this.write(s,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,o,i){this.data.set(e,{values:t,dtype:o,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const o=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return Ds(o,i)}return Xw(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>Hs(o));return Se(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Se(e.shape,e.dtype,t)}makeOutput(e,t,s){return is().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=en();return e(),{kernelMs:en()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ae([e],"where");const t=this.readSync(e.dataId);return WR(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Hu.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o1(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const UR={kernelName:Xa,backendName:"cpu",kernelFunc:n=>{const{x:e}=n.inputs,t=n.backend;ae(e,"abs");let s=new Float32Array(G(e.shape));const o=t.data.get(e.dataId).values;return s=o1(o),t.makeOutput(s,e.shape,e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(n){return(e,t,s,o,i)=>{const r=we(e,t),a=r.length,l=ce(r),u=G(r),c=Vt(i,u),h=e.length,d=t.length,p=ce(e),f=ce(t),m=xi(e,r),g=xi(t,r);if(m.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=n(s[x%s.length],o[x%o.length]);else for(let x=0;x<c.length;++x){const b=ri(x,a,l),w=b.slice(-h);m.forEach(I=>w[I]=0);const y=os(w,h,p),v=b.slice(-d);g.forEach(I=>v[I]=0);const k=os(v,d,f);c[x]=n(s[y],o[k])}return[c,r]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,i=t.data.get(s.dataId).values,r=t.data.get(o.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",i),imag:t.makeTensorInfo(o.shape,"float32",r)},a}const GR={kernelName:Fc,backendName:"cpu",kernelFunc:xn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qu(n,e,t="float32"){if(t==="complex64"){const o=qu(n,e,"float32"),i=qu(n,e,"float32");return xn({inputs:{real:o,imag:i},backend:n})}const s=Wt(G(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const HR={kernelName:gr,backendName:"cpu",kernelFunc:ys};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.real,i=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,i)}const qR={kernelName:rh,backendName:"cpu",kernelFunc:Ho};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i1(n,e,t,s){if(s==="int32"){const o=Int32Array.from(n);return[e,"int32",o]}if(s==="bool"){const o=vo([0],t),[i,r]=mt((a,l)=>a!==l?1:0)(e,[],n,o,"bool");return[r,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function ao(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:i}=s;if(i==="complex64"){if(o.dtype==="complex64")return ys({inputs:{x:o},backend:t});const c=qu(t,o.shape,o.dtype),h=ao({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),d=xn({inputs:{real:h,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),d}if(o.dtype==="complex64"){const c=Ho({inputs:{input:o},backend:t}),h=ao({inputs:{x:c},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(c),h}if(!mf(o.dtype,i)){const c=ys({inputs:{x:o},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:i}}const r=t.data.get(o.dataId).values,[a,l,u]=i1(r,o.shape,o.dtype,i);return t.makeTensorInfo(a,l,u)}const jR={kernelName:sr,backendName:"cpu",kernelFunc:ao};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n,e,t,s){return t==null?({inputs:o,backend:i})=>{const{a:r,b:a}=o,l=i;ae([r,a],n);const u=l.data.get(r.dataId).values,c=l.data.get(a.dataId).values,h=r.dtype==="string"?As(u):u,d=r.dtype==="string"?As(c):c,p=s||r.dtype,[f,m]=e(r.shape,a.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:o,backend:i})=>{const{a:r,b:a}=o,l=i;if(r.dtype==="complex64"||a.dtype==="complex64"){const u=ao({inputs:{x:r},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=ao({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(x.dataId).values,y=l.data.get(b.dataId).values,[v,k,I]=t(r.shape,a.shape,p,f,w,y),$=l.makeTensorInfo(I,"float32",v),E=l.makeTensorInfo(I,"float32",k),S=xn({inputs:{real:$,imag:E},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo($),l.disposeIntermediateTensorInfo(E),S}else{const u=l.data.get(r.dataId).values,c=l.data.get(a.dataId).values,h=s||r.dtype,[d,p]=e(r.shape,a.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function Lp(n){return(e,t,s,o,i,r)=>{const a=we(e,t),l=G(a),u=a.length,c=ce(a),h=Vt("float32",l),d=Vt("float32",l),p=xi(e,a),f=xi(t,a),m=Ds(s,o),g=Ds(i,r),x=e.length,b=ce(e),w=t.length,y=ce(t);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const k=v%m.length,I=v%g.length,$=n(m[k*2],m[k*2+1],g[I*2],g[I*2+1]);h[v]=$.real,d[v]=$.imag}else for(let v=0;v<h.length;v++){const k=ri(v,u,c),I=k.slice(-x);p.forEach(_=>I[_]=0);const $=os(I,x,b),E=k.slice(-w);f.forEach(_=>E[_]=0);const S=os(E,w,y),L=n(m[$*2],m[$*2+1],g[S*2],g[S*2+1]);h[v]=L.real,d[v]=L.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r1=mt((n,e)=>n+e),KR=Lp((n,e,t,s)=>({real:n+t,imag:e+s})),Ei=St(ai,r1,KR),XR={kernelName:ai,backendName:"cpu",kernelFunc:Ei};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dp(n,e,t,s,o){const i=G(s),r=Wt(o,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(i>0?r[l]+=e[a]:r[l]+=1)}return r}function a1(n,e,t,s=!1){const o=n.shape[0],i=n.shape[1],r=Se([o,t],e.dtype);for(let a=0;a<o;a++)for(let l=0;l<i;l++){const u=n.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?r.set(1,a,u):e.size>0?r.set(r.get(a,u)+e.get(a,l),a,u):r.set(r.get(a,u)+1,a,u))}return r}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l1=mt((n,e)=>n&e),YR=St(Ac,l1),ZR={kernelName:Ac,backendName:"cpu",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(n){return(e,t,s)=>{const o=ct(t,e.length);for(let i=0;i<e.length;++i)o[i]=n(e[i],s);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(n,e,t){const s=ws(e);return lo(n,s,t)}function lo(n,e,t){return({inputs:s,attrs:o,backend:i})=>{const{x:r}=s;ae(r,n);const a=i,l=a.data.get(r.dataId).values;let u;if(r.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=As(l)}else u=l;const c=t||r.dtype,h=e(u,c,o);return a.makeTensorInfo(r.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u1=ws(n=>Math.ceil(n)),JR=lo(or,u1),QR={kernelName:or,backendName:"cpu",kernelFunc:JR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c1(n,e,t,s){const o=ct(t,G(e));if(s&&t!=="string"){let i=0;n.forEach(r=>{const a=G(r.shape);o.set(r.vals,i),i+=a})}else{let i=0;n.forEach(r=>{const a=t==="string"?As(r.vals):r.vals;let l=0;for(let u=0;u<r.shape[0];++u){const c=u*e[1]+i;for(let h=0;h<r.shape[1];++h)o[c+h]=a[l++]}i+=r.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h1=mt((n,e)=>n===e?1:0),d1=St(cl,h1,null,"bool"),eL={kernelName:cl,backendName:"cpu",kernelFunc:d1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p1=ws(n=>Math.exp(n)),f1=lo(hr,p1,"float32"),tL={kernelName:hr,backendName:"cpu",kernelFunc:f1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m1=ws(n=>Math.expm1(n)),nL=lo(dr,m1),sL={kernelName:dr,backendName:"cpu",kernelFunc:nL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g1=ws(n=>Math.floor(n)),oL=lo(pr,g1),iL={kernelName:pr,backendName:"cpu",kernelFunc:oL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x1=mt((n,e)=>Math.floor(n/e)),rL=St(fr,x1,null,"int32"),aL={kernelName:fr,backendName:"cpu",kernelFunc:rL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b1(n,e,t,s,o,i,r,a,l){const u=Se([s,i],t);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<o;p++){const f=n[c*o+p];d+=f*r[p],h.push(f)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<i;p++)u.values[c*i+p]=e.get(...e.indexToLoc(d*i+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y1(n,e,t){const s=Se(t,n.dtype);for(let o=0;o<s.size;++o){const r=s.indexToLoc(o).slice(),a=r[0],l=r[2],u=e.locToIndex([a,l]);r[2]=e.values[u];const c=n.locToIndex(r);0<=c&&c<n.values.length&&(s.values[o]=n.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w1=mt((n,e)=>n>e?1:0),lL=St(fl,w1,null,"bool"),uL={kernelName:fl,backendName:"cpu",kernelFunc:lL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v1=mt((n,e)=>n>=e?1:0),cL=St(mr,v1,null,"bool"),hL={kernelName:mr,backendName:"cpu",kernelFunc:cL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k1=mt((n,e)=>n<e?1:0),dL=St(gl,k1,null,"bool"),pL={kernelName:gl,backendName:"cpu",kernelFunc:dL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C1=mt((n,e)=>n<=e?1:0),fL=St(xl,C1,null,"bool"),mL={kernelName:xl,backendName:"cpu",kernelFunc:fL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I1(n,e,t){const s=(e-n)/(t-1),o=Wt(t,"float32");o[0]=n;for(let i=1;i<o.length;i++)o[i]=o[i-1]+s;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $1=ws(n=>Math.log(n)),gL=lo(wr,$1),xL={kernelName:wr,backendName:"cpu",kernelFunc:gL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S1(n,e,t,s){const o=Vt(s,G(t));for(let i=0;i<o.length;++i){const r=i*e;let a=n[r];for(let l=0;l<e;++l){const u=n[r+l];(Number.isNaN(u)||u>a)&&(a=u)}o[i]=a}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N1=mt((n,e)=>Math.max(n,e)),bL=St(kr,N1),yL={kernelName:kr,backendName:"cpu",kernelFunc:bL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E1=mt((n,e)=>Math.min(n,e)),wL=St(Cr,E1),vL={kernelName:Cr,backendName:"cpu",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ap=mt((n,e)=>n*e),kL=Lp((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),ju=St($r,Ap,kL),CL={kernelName:$r,backendName:"cpu",kernelFunc:ju};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1(n,e,t){const s=Us(-1,t);return Ap([],e,s,n,t)}function IL(n){const{inputs:e,backend:t}=n,{x:s}=e;ae(s,"neg");const o=t.data.get(s.dataId).values,[i,r]=T1(o,s.shape,s.dtype);return t.makeTensorInfo(r,s.dtype,i)}const $L={kernelName:El,backendName:"cpu",kernelFunc:IL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R1=mt((n,e)=>n!==e?1:0),SL=St(Tl,R1,null,"bool"),NL={kernelName:Tl,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fp(n,e,t,s,o){const i=e.length,r=G(e),a=ce(e),l=ce(o),u=Vt(t,G(o));for(let c=0;c<r;++c){const h=ri(c,i,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=os(d,i,l);u[p]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(n){const{inputs:e,attrs:t,backend:s}=n,{x:o}=e,{perm:i}=t;ae(o,"transpose");const r=o.shape.length,a=new Array(r);for(let h=0;h<a.length;h++)a[h]=o.shape[i[h]];const l=s.data.get(o.dataId).values,u=Fp(l,o.shape,o.dtype,i,a);return{dataId:s.write(u,a,o.dtype),shape:a,dtype:o.dtype}}const EL={kernelName:li,backendName:"cpu",kernelFunc:an};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(n,e,t,s){const[o,i]=Rt(n,s),r=fn(e,"int32"),a=Wt(G(o),r),l=G(i);for(let u=0;u<a.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=t[c+d];a[u]=h}return{outVals:a,outShape:o,outDtype:r}}function TL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s;ae(o,"prod");const a=o.shape.length,l=$e(i,o.shape),u=at(l,a);let c=l,h=o;const d=[];u!=null&&(h=an({inputs:{x:o},backend:t,attrs:{perm:u}}),d.push(h),c=dt(c.length,a));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=L1(h.shape,h.dtype,p,c);let x=m;return r&&(x=xt(m,l)),d.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(x,g,f)}const RL={kernelName:Ol,backendName:"cpu",kernelFunc:TL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n,e,t){n.forEach((s,o)=>{if(s<0||s>=t){const i=ri(o,e.length,ce(e)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${t})`)}})}function DL(n,e){for(let t=0;t<n.length;++t){const s=n[t],o=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>o)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function AL(n,e,t,s){const o=[];let i=0;const r=e.length-1+t.length,a=new Array(r).fill(null).map(()=>[0]);DL(t,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)a[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[c];for(let x=c;x<h;++x)a[f].push(p[x+1]+g)}c=p[c],h=p[h]}h!==c&&(o.push([c,h]),i+=h-c)}return{outSplits:a,valueSlices:o,numValues:i}}function FL(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,o=ct("int32",s);e.push(o),n[t].forEach((i,r)=>o[r]=i)}return e}function D1(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function OL(n,e,t,s,o,i){const r=D1(e,2)[1],a=D1(i,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)o[l*a+h]=n[c*r+h];++l}}function _L(n,e,t,s,o){const i=e.slice();i[0]=o;const r=ct(t,G(i)),a=n.length,l=a===0?0:a/e[0];return OL(n,e,s,l,r,i),[r,i]}function A1(n,e,t,s,o,i,r,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(LL(i,r,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=AL(i,r,n,u),p=FL(c),f=_L(t,s,o,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F1=2147483647;function O1(n,e,t,s,o,i,r){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(r.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=o.length===0,u=r.length===0,c=[];a||c.push(e[0]),l||c.push(o[0]),u||c.push(r[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=ct("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=a?n[0]:n[g],b=l?s[0]:s[g],w=u?i[0]:i[g];if(w===0)throw new Error("Requires delta != 0");let y;if(w>0&&b<x||w<0&&b>x)y=0;else if(y=Math.ceil(Math.abs((b-x)/w)),y>F1)throw new Error(`Requires ((limit - start) / delta) <= ${F1}`);d[g+1]=d[g]+y}const p=d[h],f=ct(t,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let b=a?n[0]:n[g];const w=u?i[0]:i[g];for(let y=0;y<x;++y)f[m++]=b,b+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var zn=Yn;class Ku{constructor(e,t,s,o,i,r,a,l,u,c){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=o,this.valuesDType=i,this.defaultValue=r,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Pg(c),this.raggedRank=Bg(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===zn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===zn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case zn.VALUE_ROWIDS:return Ku.getMaxWidthValueRowID(t);case zn.ROW_SPLITS:return Ku.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${zn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let o=0;o<t-1;++o){const i=e[o+1]-e[o];i>s&&(s=i)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,o=e[0],i=0;for(let r=1;r<t;++r){const a=e[r];a!==o&&(o=a,i=Math.max(r-s,i),s=r)}return Math.max(t-s,i)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return M1(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;zg(s,t);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Mg(this.raggedRank,o,t);r[0]<0&&(r[0]=e);for(let a=1;a<=this.raggedRank;++a)r[a]<0&&(r[a]=this.getMaxWidth(a));return r}calculateFirstParentOutputIndex(e,t,s){const o=Math.min(e,s),i=[];let r=0;for(let a=0;a<o;++a,r+=t)i.push(r);for(let a=o;a<e;++a)i.push(-1);return C(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,s,o){const i=e.length,r=[];for(let a=0;a<i-1;++a){const l=e[a+1]-e[a];let u=Math.min(o,l),c=t[a];c===-1&&(u=0);for(let h=0;h<u;++h)r.push(c),c+=s;for(let h=0;h<l-u;++h)r.push(-1)}if(i>0&&r.length!==e[i-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(e,t,s,o){const i=e.length,r=[];if(i===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];r.push(u);for(let c=1;c<i;++c){const h=e[c];if(h===l)u>=0&&(++a,a<o?u+=s:u=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}r.push(u)}if(r.length!==e.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(e,t,s,o){const i=this.getRowPartitionTensor(e),r=this.getRowPartitionTypeByDimension(e);switch(r){case zn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,s,o);case zn.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,s,o);default:throw new Error(`Unsupported partition type: ${zn[r]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case zn.FIRST_DIM_SIZE:return e[0];case zn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case zn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${zn[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let l=o.length-2;l>=0;--l)o[l]=o[l+1]*s[l+1];const i=M1(s,!1),r=ct(this.valuesDType,G(i));if(o[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,o[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,o[u],s[u]);this.setOutput(this.raggedRank,l,r,i)}return[i,r]}setOutput(e,t,s,o){if(s.length===0)return;const i=this.values,r=s;let a=o.slice();a=a.slice(e+1);const l=G(a),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;M(()=>{const m=F(c,f);c=Qr(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let m=f<u?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=i.subarray(h*l),x=r.subarray(d*l),b=(p-d)*l;_1(x,g,b)}if(f>=u){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)r.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=r.slice(p*l);_1(g,c,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function _1(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function M1(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function P1(n,e,t,s,o,i,r,a,l,u){return new Ku(n,e,t,s,o,i,r,a,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n,e,t,s){const o=n===e,i=n<e&&t<0,r=e<n&&t>1;if(o||i||r)return Wt(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=Wt(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z1=ws(n=>1/Math.sqrt(n)),ML=lo(Lr,z1),PL={kernelName:Lr,backendName:"cpu",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qo(n,e,t,s,o,i,r,a,l,u){const c=[s/o,o],h=n.values,d=e.values;if(s===0)return Se(t,e.dtype);const p=l instanceof At?l:Se(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<i;f++){const m=[];let g=0;for(let x=0;x<r;x++){const b=h[f*r+x];m.push(b),g+=b*a[x]}if(g<0||g>=s/o)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let x=0;x<o;x++)u?p.values[g*o+x]+=d[f*o+x]:p.values[g*o+x]=e.rank===0?d[0]:d[f*o+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BL=ws(n=>1/(1+Math.exp(-n))),V1=We(_r,n=>1/(1+Math.exp(-n))),zL={kernelName:_r,backendName:"cpu",kernelFunc:V1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W1(n,e,t,s,o){const i=Id(s,e,t),r=G(t),a=ce(s);if(i){const h=$d(e,a);return o==="string"?n.slice(h,h+r):n.subarray(h,h+r)}const l=o==="string"?As(n):n,u=Se(s,o,l),c=Se(t,o);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+e[m]);c.set(u.get(...p),...d)}return o==="string"?l0(c.values):c.values}function jo(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:i,size:r}=s;ae(o,"slice");const[a,l]=xu(o,i,r);kd(o,a,l);const u=t.data.get(o.dataId).values,c=W1(u,a,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,c)}const VL={kernelName:Vl,backendName:"cpu",kernelFunc:jo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n,e,t,s,o,i,r){const a=e[0],l=i[0],u=new Array(l),c=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(Xg(a));const g=ct(t,0),x=ct(o,0);return[g,[0,h],x,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const x=n[g*h];if(x<0)throw new Error(Yg(g,x));if(x>=l)throw new Error(Zg(g,x,l));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<l;++g){const x=f[g]===0;u[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,x=s;for(let b=0;b<a;++b)c[b]=b;return[g,[a,h],x,u,c]}else{const g=f[l-1],x=ct(t,g*h),b=ct(o,g),w=new Array(l).fill(0);for(let y=0;y<a;++y){const v=n[y*h],k=w[v],I=(v===0?0:f[v-1])+k;w[v]++;for(let $=0;$<h;++$)x[I*h+$]=n[y*h+$];b[I]=s[y],c[y]=I}for(let y=0;y<l;++y)if(w[y]===0){const k=y===0?0:f[y-1];x[k*h+0]=y;for(let I=1;I<h;++I)x[k*h+I]=0;b[k]=r}return[x,[g,h],b,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1(n,e,t,s,o){const i=G(s),r=e[0],a=o.length,l=[];let u=1,c=-1;for(let g=0;g<a;++g){const x=o[g];if(x===-1){if(c!==-1)throw new Error(Jg(c,g));c=g,l.push(1)}else{if(x<0)throw new Error(Qg(g,x));u*=x,l.push(x)}}if(c!==-1){if(u<=0)throw new Error(e0());const g=Math.trunc(i/u);if(u*g!==i)throw new Error(t0(s,l));l[c]=g}if(G(l)!==i)throw new Error(n0(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=ct(t,r*a);for(let g=0;g<r;++g){let x=0;for(let b=0;b<d;++b)x+=n[g*d+b]*p[b];for(let b=0;b<a;++b)m[g*a+b]=Math.trunc(x/f[b]),x%=f[b]}return[m,[r,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Op(n,e,t,s,o,i=!1,r=0){const a=s.length,l=[e[0],n.length/e[0]],u=l[1],h=a>0?o[a-1]+1:0;if(h<0)throw new Error(qd());const d=e.slice();d[0]=h;const p=d.reduce((w,y)=>w*y,1),f=ct(t,p);if(a===0)return h>0&&f.fill(r),[f,d];if(h<=0)throw new Error(qd());let m=0,g=1,x=0,b=o[m];for(;;){let w=0;if(g<a){if(w=o[g],b===w){++g;continue}if(b>=w)throw new Error(s0())}if(b<0||b>=h)throw new Error(o0(b,h));b>x&&f.fill(r,x*u,b*u);for(let y=m;y<g;++y){const v=s[y];if(v<0||v>=l[0])throw new Error(i0(y,s[y],l[0]));for(let k=0;k<u;k++)f[b*u+k]+=n[v*u+k]}if(i)for(let y=0;y<u;y++)f[b*u+y]/=g-m;if(m=g,++g,x=b+1,b=w,g>a)break}return x<h&&f.fill(r,x*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WL=ws(n=>Math.sqrt(n)),UL=We(Pr,n=>Math.sqrt(n)),GL={kernelName:Pr,backendName:"cpu",kernelFunc:UL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H1=mt((n,e)=>{const t=n-e;return t*t}),HL=St(Br,H1),qL={kernelName:Br,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q1=ws((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:o}=e;return n.replace(new RegExp(t,s?"g":""),o)}),jL=lo(ch,q1),KL={kernelName:ch,backendName:"cpu",kernelFunc:jL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j1(n,e,t,s){const o=Se(n,e.dtype);for(let i=0;i<o.size;i++){const r=o.indexToLoc(i),a=new Array(r.length);for(let l=0;l<a.length;l++)a[l]=r[l]*t[l]+s[l];o.set(e.get(...a),...r)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XL{constructor(e,t,s,o,i,r){this.separator=Gs(e),this.nGramWidths=t,this.leftPad=Gs(s),this.rightPad=Gs(o),this.padWidth=i,this.preserveShort=r}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,o,i,r){for(let a=0;a<i;++a){const l=this.getPadWidth(r),u=Math.max(0,l-a),c=Math.max(0,l-(i-(a+1))),h=r-(u+c),d=t+(u>0?0:a-l);let p=0;p+=u*this.leftPad.length;for(let b=0;b<h;++b)p+=e[d+b].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[o+a]=new Uint8Array(p);const m=s[o+a];let g=0;const x=b=>b.forEach(w=>m[g++]=w);for(let b=0;b<u;++b)x(this.leftPad),x(this.separator);for(let b=0;b<h-1;++b)x(e[d+b]),x(this.separator);if(h>0){x(e[d+h-1]);for(let b=0;b<c;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<c-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const s=e.length,o=t.length;if(o>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<o;++u){let c=t[u]>=l;if(c=c&&t[u]<=s,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${s}]`);l=t[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const i=o-1,r=ct("int32",o);if(s===0||o===0){const l=new Array(s);for(let u=0;u<=i;++u)r[u]=0;return[l,r]}r[0]=0;for(let l=1;l<=i;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),r[l]=r[l-1]+c}const a=new Array(r[i]);for(let l=0;l<i;++l){const u=t[l];let c=r[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,u,a,c,p,h),c+=p}),this.preserveShort&&c===r[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,u,a,c,1,d)}}return[a,r]}}function K1(n,e,t,s,o,i,r,a){return new XL(t,s,o,i,r,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(n,e,t,s){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)s.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let r=n.indexOf(i);for(;r!==-1;){const a=n.subarray(0,r);(!t||a.length!==0)&&s.push(a),n=n.subarray(r+1),r=n.indexOf(i)}(!t||n.length!==0)&&s.push(n);return}let o=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const r=n.subarray(o,i);(!t||r.length!==0)&&s.push(r),o=i+1}}function X1(n,e,t){const s=n.length,o=[];let i=0,r=0;const a=new Array(s);for(let d=0;d<s;++d){const p=o.length;YL(n[d],e,t,o);const f=o.length-p;a[d]=f,i+=f,r=Math.max(r,f)}const l=ct("int32",i*2),u=new Array(i),c=[s,r];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=o[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1(n,e){const t=ct("int32",n.length);for(let s=0;s<n.length;++s)t[s]=gv(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1=mt((n,e)=>n-e),ZL=Lp((n,e,t,s)=>({real:n-t,imag:e-s})),_p=St(zr,Z1,ZL),JL={kernelName:zr,backendName:"cpu",kernelFunc:_p};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1(n,e){const t=new Array(n.rank);for(let o=0;o<t.length;o++)t[o]=n.shape[o]*e[o];const s=Se(t,n.dtype);for(let o=0;o<s.values.length;++o){const i=s.indexToLoc(o),r=new Array(n.rank);for(let l=0;l<r.length;l++)r[l]=i[l]%n.shape[l];const a=n.locToIndex(r);s.values[o]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function Q1(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,u=Math.log(a),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*c/a+h)),p=Math.min(s,Math.floor(e+(a-l)*c/a+h));Q1(n,e,d,p)}const o=n[e];let i=t,r=s;for(ni(n,t,e),Na(n[s],o)>0&&ni(n,t,s);i<r;){for(ni(n,i,r),i++,r--;Na(n[i],o)<0;)i=i+1;for(;Na(n[r],o)>0;)r=r-1}Na(n[t],o)===0?ni(n,t,r):(r=r+1,ni(n,r,s)),r<=e&&(t=r+1),e<=r&&(s=r-1)}}function ey(n,e,t,s,o){const i=e[e.length-1],[r,a]=[n.length/i,i],l=Vt(t,r*s),u=Vt("int32",r*s);for(let h=0;h<r;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((b,w)=>f[w]={value:b,index:w}),s<f.length&&(Q1(f,s),f=f.slice(0,s)),o&&f.sort(Na);const m=h*s,g=l.subarray(m,m+s),x=u.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,x[b]=f[b].index}const c=e.slice();return c[c.length-1]=s,[Se(c,t,l),Se(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ty(n,e,t,s){const o=$e(e,t)[0],i=[1,t[0],1];for(let f=0;f<o;f++)i[0]*=t[f];i[1]=t[o];for(let f=o+1;f<t.length;f++)i[2]*=t[f];const r=new Map,a=new Int32Array(t[o]),l=new At(i,s,n),u=[],c=i[0]===1&&i[2]===1;for(let f=0;f<t[o];f++){let m;if(c)m=n[f].toString();else{const x=[];for(let b=0;b<i[0];b++)for(let w=0;w<i[2];w++)x.push(l.get(b,f,w));m=x.join(",")}const g=r.get(m);if(g!=null)a[f]=g;else{const x=r.size;r.set(m,x),a[f]=x,u.push(f)}}const h=i.slice();h[1]=r.size;const d=new At(h,s);u.forEach((f,m)=>{for(let g=0;g<i[0];g++)for(let x=0;x<i[2];x++)d.set(l.get(g,f,x),g,m,x)});const p=t.slice();return p[o]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var QL=Object.freeze({__proto__:null,addImpl:r1,bincountImpl:Dp,bincountReduceImpl:a1,bitwiseAndImpl:l1,castImpl:i1,ceilImpl:u1,concatImpl:c1,equalImpl:h1,expImpl:p1,expm1Impl:m1,floorDivImpl:x1,floorImpl:g1,gatherNdImpl:b1,gatherV2Impl:y1,greaterEqualImpl:v1,greaterImpl:w1,lessEqualImpl:C1,lessImpl:k1,linSpaceImpl:I1,logImpl:$1,maxImpl:S1,maximumImpl:N1,minimumImpl:E1,multiplyImpl:Ap,negImpl:T1,notEqualImpl:R1,prodImpl:L1,raggedGatherImpl:A1,raggedRangeImpl:O1,raggedTensorToTensorImpl:P1,rangeImpl:B1,rsqrtImpl:z1,scatterImpl:qo,sigmoidImpl:BL,simpleAbsImpl:o1,sliceImpl:W1,sparseFillEmptyRowsImpl:U1,sparseReshapeImpl:G1,sparseSegmentReductionImpl:Op,sqrtImpl:WL,squaredDifferenceImpl:H1,staticRegexReplaceImpl:q1,stridedSliceImpl:j1,stringNGramsImpl:K1,stringSplitImpl:X1,stringToHashBucketFastImpl:Y1,subImpl:Z1,tileImpl:J1,topKImpl:ey,transposeImpl:Fp,uniqueImpl:ty});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Cm("cpu",()=>new Hu,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ny=We(ur,n=>n>=0?n:Math.exp(n)-1),eD={kernelName:ur,backendName:"cpu",kernelFunc:ny};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:i}=s;ae([o],"leakyRelu");const r=G(o.shape),a=t.data.get(o.dataId).values,l=Vt("float32",r);for(let u=0;u<a.length;u++)l[u]=a[u]<0?i*a[u]:a[u];return t.makeTensorInfo(o.shape,"float32",l)}const tD={kernelName:ml,backendName:"cpu",kernelFunc:sy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nD=mt((n,e)=>n<0?e*n:n);function oy(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e;ae([s,o],"prelu");const i=t.data.get(s.dataId).values,r=t.data.get(o.dataId).values,[a,l]=nD(s.shape,o.shape,i,r,"float32");return t.makeTensorInfo(l,"float32",a)}const sD={kernelName:Fl,backendName:"cpu",kernelFunc:oy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iy=We(Er,n=>Math.max(0,n)),oD={kernelName:Er,backendName:"cpu",kernelFunc:iy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ry=We(Tr,n=>Math.min(Math.max(0,n),6)),iD={kernelName:Tr,backendName:"cpu",kernelFunc:ry};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xu(n,e,t,s,o){if(t==="linear")return ys({inputs:{x:e},backend:n});if(t==="relu")return iy({inputs:{x:e},backend:n});if(t==="elu")return ny({inputs:{x:e},backend:n});if(t==="relu6")return ry({inputs:{x:e},backend:n});if(t==="prelu")return oy({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return sy({inputs:{x:e},backend:n,attrs:{alpha:o}});if(t==="sigmoid")return V1({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:i}=s,r=G(o.shape),a=ff(i,r),l=G(a);C(r===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${o.shape}) has ${r} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);const u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=a,h.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}const rD={kernelName:_l,backendName:"cpu",kernelFunc:Ze};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ay(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:i}=e,{transposeA:r,transposeB:a}=s;ae([o,i],"matMul");const l=o.shape.length,u=i.shape.length,c=r?o.shape[l-2]:o.shape[l-1],h=a?i.shape[u-1]:i.shape[u-2],d=r?o.shape[l-1]:o.shape[l-2],p=a?i.shape[u-2]:i.shape[u-1],f=o.shape.slice(0,-2),m=i.shape.slice(0,-2),g=G(f),x=G(m),w=we(o.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);C(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${o.shape} and ${i.shape} and transposeA=${r} and transposeB=${a} must match.`);const y=r?[g,c,d]:[g,d,c],v=a?[x,p,h]:[x,h,p],k=Ze({inputs:{x:o},backend:t,attrs:{shape:y}}),I=Ze({inputs:{x:i},backend:t,attrs:{shape:v}}),$=r?k.shape[1]:k.shape[2],E=r?k.shape[2]:k.shape[1],S=a?I.shape[1]:I.shape[2],L=Math.max(g,x),_=t.data.get(k.dataId).values,P=t.data.get(I.dataId).values,A=ce(k.shape),B=ce(I.shape),[V,H,W]=r?[A[0],1,A[1]]:[A[0],A[1],1],[q,K,X]=a?[1,B[1],B[0]]:[B[1],1,B[0]],J=E*S,Y=Se([L,E,S],k.dtype),ne=Y.values,Q=t.blockSize;for(let se=0;se<L;se++){const ue=se%g,he=se%x;for(let de=0;de<E;de+=Q){const ye=Math.min(de+Q,E);for(let ve=0;ve<S;ve+=Q){const De=Math.min(ve+Q,S);for(let Ue=0;Ue<$;Ue+=Q){const qe=Math.min(Ue+Q,$);for(let Pe=de;Pe<ye;Pe++)for(let Be=ve;Be<De;Be++){let je=0;for(let Ke=Ue;Ke<qe;Ke++){const Gn=_[ue*V+Pe*H+Ke*W],oe=P[Ke*q+Be*K+he*X];je+=Gn*oe}ne[se*J+(Pe*S+Be)]+=je}}}}}return t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(I),t.makeTensorInfo(w,Y.dtype,Y.values)}const aD={kernelName:el,backendName:"cpu",kernelFunc:ay};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:i,bias:r,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=ay({inputs:{a:o,b:i},attrs:{transposeA:l,transposeB:u},backend:t}),r&&(p=Ei({inputs:{a:d,b:r},backend:t}),m.push(d),d=p),c&&(f=Xu(t,d,c,a,h),m.push(d),d=f);for(const x of m)t.disposeIntermediateTensorInfo(x);return d}const uD={kernelName:Xl,backendName:"cpu",kernelFunc:lD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cD=We(Yi,n=>Math.acos(n)),hD={kernelName:Yi,backendName:"cpu",kernelFunc:cD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dD=We(Zi,n=>Math.acosh(n)),pD={kernelName:Zi,backendName:"cpu",kernelFunc:dD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n){const{inputs:e,backend:t}=n,s=e;ae(e,"addN");const o=s.map(a=>t.data.get(a.dataId).values),i=Se(s[0].shape,s[0].dtype),r=i.values;for(let a=0;a<s.length;a++){const l=o[a];for(let u=0;u<r.length;u++)r[u]+=l[u]}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const mD={kernelName:Nc,backendName:"cpu",kernelFunc:fD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s;ae(o,"all");const a=$e(i,o.shape);let l=a;const u=at(l,o.shape.length);let c=o;u!=null&&(c=an({inputs:{x:o},backend:t,attrs:{perm:u}}),l=dt(l.length,o.shape.length)),Ot("all",l,c.shape.length);const[h,d]=Rt(c.shape,l),p=G(d),f=Wt(G(h),c.dtype),m=t.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];w=w&&v}f[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(r){const x=xt(h,a),b=Ze({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}const xD={kernelName:Ec,backendName:"cpu",kernelFunc:gD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s;ae(o,"any");const a=$e(i,o.shape);let l=a;const u=at(l,o.shape.length);let c=o;u!=null&&(c=an({inputs:{x:o},backend:t,attrs:{perm:u}}),l=dt(l.length,o.shape.length)),Ot("any",l,c.shape.length);const[h,d]=Rt(c.shape,l),p=G(d),f=Wt(G(h),c.dtype),m=t.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];w=w||v}f[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(r){const x=xt(h,a),b=Ze({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}const yD={kernelName:Tc,backendName:"cpu",kernelFunc:bD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i}=s;ae(o,"argMax");let r=$e(i,o.shape);const a=at(r,o.shape.length);let l=o;const u=[];a!=null&&(l=an({inputs:{x:o},backend:t,attrs:{perm:a}}),u.push(l),r=dt(r.length,l.shape.length)),r=[r[0]],Ot("argMax",r,l.shape.length);const[c,h]=Rt(l.shape,r),d=G(c),p=Wt(d,"int32"),f=G(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const v=m[x+y];v>b&&(b=v,w=y)}p[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const vD={kernelName:Ya,backendName:"cpu",kernelFunc:wD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i}=s;ae(o,"argMin");let r=$e(i,o.shape);const a=at(r,o.shape.length);let l=o;const u=[];a!=null&&(l=an({inputs:{x:o},backend:t,attrs:{perm:a}}),u.push(l),r=dt(r.length,l.shape.length)),r=[r[0]],Ot("argMin",r,l.shape.length);const[c,h]=Rt(l.shape,r),d=G(c),p=Wt(d,"int32"),f=G(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const v=m[x+y];v<b&&(b=v,w=y)}p[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const CD={kernelName:Za,backendName:"cpu",kernelFunc:kD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ID=We(Ji,n=>Math.asin(n)),$D={kernelName:Ji,backendName:"cpu",kernelFunc:ID};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SD=We(Qi,n=>Math.asinh(n)),ND={kernelName:Qi,backendName:"cpu",kernelFunc:SD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ED=We(er,n=>Math.atan(n)),TD={kernelName:er,backendName:"cpu",kernelFunc:ED};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD=mt((n,e)=>Math.atan2(n,e)),LD=St(nr,RD),DD={kernelName:nr,backendName:"cpu",kernelFunc:LD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD=We(tr,n=>Math.atanh(n)),FD={kernelName:tr,backendName:"cpu",kernelFunc:AD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(n,e,t,s,o,i){const r=o.strideHeight,a=o.strideWidth,l=o.dilationHeight,u=o.dilationWidth,c=o.effectiveFilterHeight,h=o.effectiveFilterWidth,d=o.padInfo.top,p=o.padInfo.left,f=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Se(o.outShape,t),g=m.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],b=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let y=0;y<o.batchSize;++y){const v=y*x,k=y*s[0];for(let I=0;I<o.inChannels;++I)for(let $=0;$<o.outHeight;++$){const E=$*r-d,S=Math.max(0,E),L=Math.min(o.inHeight,c+E),_=v+$*b;for(let P=0;P<o.outWidth;++P){const A=P*a-p,B=Math.max(0,A),V=Math.min(o.inWidth,h+A);let H=f,W=0,q=0;for(let X=S;X<L;X+=l){const J=k+X*s[1];for(let Y=B;Y<V;Y+=u){const ne=J+Y*s[2],Q=n[ne+I];i==="max"&&Q>H?H=Q:i==="avg"&&(W+=Q,q++)}if(isNaN(H))break}const K=_+P*w+I;g[K]=i==="avg"?W/q:H}}}return m}function ly(n,e,t,s,o=!1,i=!1){const r=Se(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Se(e,t,n);for(let g=0;g<s.batchSize;++g)for(let x=0;x<s.inChannels;++x)for(let b=0;b<s.outHeight;++b){const w=b*a-p;let y=w;for(;y<0;)y+=u;const v=Math.min(s.inHeight,h+w);for(let k=0;k<s.outWidth;++k){const I=k*l-f;let $=I;for(;$<0;)$+=c;const E=Math.min(s.inWidth,d+I);let S=Number.NEGATIVE_INFINITY,L=-1;for(let _=y;_<v;_+=u){const P=_-w;for(let A=$;A<E;A+=c){const B=A-I,V=m.get(g,_,A,x);V>S&&(S=V,o?L=i?((g*s.inHeight+_)*s.inWidth+A)*s.inChannels+x:(_*s.inWidth+A)*s.inChannels+x:L=P*d+B)}}r.set(L,g,b,k,x)}}return r}function uy(n,e,t,s,o,i){const r=o.strideDepth,a=o.strideHeight,l=o.strideWidth,u=o.dilationDepth,c=o.dilationHeight,h=o.dilationWidth,d=o.effectiveFilterDepth,p=o.effectiveFilterHeight,f=o.effectiveFilterWidth,m=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,b=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Se(o.outShape,t),y=w.values,v=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],k=o.outShape[2]*o.outShape[3]*o.outShape[4],I=o.outShape[3]*o.outShape[4],$=o.outShape[4];for(let E=0;E<o.batchSize;++E){const S=E*v,L=E*s[0];for(let _=0;_<o.inChannels;++_)for(let P=0;P<o.outDepth;++P){const A=P*r-m;let B=A;for(;B<0;)B+=u;const V=Math.min(o.inDepth,d+A),H=S+P*k;for(let W=0;W<o.outHeight;++W){const q=W*a-g;let K=q;for(;K<0;)K+=c;const X=Math.min(o.inHeight,p+q),J=H+W*I;for(let Y=0;Y<o.outWidth;++Y){const ne=Y*l-x;let Q=ne;for(;Q<0;)Q+=h;const se=Math.min(o.inWidth,f+ne),ue=J+Y*$;let he=b,de=0,ye=0;for(let De=B;De<V;De+=u){const Ue=L+De*s[1];for(let qe=K;qe<X;qe+=c){const Pe=Ue+qe*s[2];for(let Be=Q;Be<se;Be+=h){const je=Pe+Be*s[3],Ke=n[je+_];if(i==="max"&&Ke>he?he=Ke:i==="avg"&&(de+=Ke,ye++),isNaN(he))break}if(isNaN(he))break}if(isNaN(he))break}const ve=ue+_;y[ve]=i==="avg"?de/Math.max(ye,1):he}}}}return w}function OD(n,e){const t=Se(e.outShape,"int32"),s=e.strideDepth,o=e.strideHeight,i=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const b=x*s-d;let w=b;for(;w<0;)w+=r;const y=Math.min(e.inDepth,u+b);for(let v=0;v<e.outHeight;++v){const k=v*o-p;let I=k;for(;I<0;)I+=a;const $=Math.min(e.inHeight,c+k);for(let E=0;E<e.outWidth;++E){const S=E*i-f;let L=S;for(;L<0;)L+=l;const _=Math.min(e.inWidth,h+S);let P=Number.NEGATIVE_INFINITY,A=-1;for(let B=w;B<y;B+=r){const V=B-b;for(let H=I;H<$;H+=a){const W=H-k;for(let q=L;q<_;q+=l){const K=q-S,X=n.get(m,B,H,q,g);X>=P&&(P=X,A=V*c*h+W*c+K)}}}t.set(A,m,x,v,E,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _D(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;ae(o,"avgPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,u=1;C(Ut(r,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=An(o.shape,i,r,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Fe(c.inShape,c.outShape))h=ys({inputs:{x:o},backend:t});else{const d=t.data.get(o.dataId).values,p=ce(o.shape),f=Mp(d,o.shape,o.dtype,p,c,"avg");h=t.makeTensorInfo(c.outShape,o.dtype,f.values)}return h}const MD={kernelName:Ja,backendName:"cpu",kernelFunc:_D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:i,strides:r,pad:a,dimRoundingMode:l,dataFormat:u}=s;ae(o,"avgPool3d");const c=Ns(o.shape,i,r,1,a,l,u),h=t.data.get(o.dataId).values,d=uy(h,o.shape,o.dtype,ce(o.shape),c,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const BD={kernelName:Qa,backendName:"cpu",kernelFunc:PD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i}=e,{filterSize:r,strides:a,pad:l,dimRoundingMode:u}=s;ae([o,i],"avgPool3DGrad");const c=Ns(i.shape,r,a,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=y-1-c.padInfo.front,$=k-1-c.padInfo.left,E=v-1-c.padInfo.top,S=Se(i.shape,"float32"),L=1/(f*m*g),_=t.bufferSync(o);for(let P=0;P<c.batchSize;++P)for(let A=0;A<c.inChannels;++A)for(let B=0;B<c.inDepth;++B)for(let V=0;V<c.inHeight;++V)for(let H=0;H<c.inWidth;++H){const W=B-I,q=V-E,K=H-$;let X=0;for(let J=0;J<y;J+=x){const Y=(W+J)/h;if(!(Y<0||Y>=c.outDepth||Math.floor(Y)!==Y))for(let ne=0;ne<v;ne+=b){const Q=(q+ne)/d;if(!(Q<0||Q>=c.outHeight||Math.floor(Q)!==Q))for(let se=0;se<k;se+=w){const ue=(K+se)/p;if(ue<0||ue>=c.outWidth||Math.floor(ue)!==ue)continue;const he=_.get(P,Y,Q,ue,A);X+=he}}}S.set(X*L,P,B,V,H,A)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const VD={kernelName:Lc,backendName:"cpu",kernelFunc:zD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i}=e,r=i;ae([o,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=An(r.shape,a,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,y=x-1-c.padInfo.top,v=Se(r.shape,"float32"),k=1/(p*f),I=t.data.get(o.dataId).values,$=Se(o.shape,"float32",I);for(let E=0;E<c.batchSize;++E)for(let S=0;S<c.inChannels;++S)for(let L=0;L<c.inHeight;++L)for(let _=0;_<c.inWidth;++_){const P=L-y,A=_-w;let B=0;for(let V=0;V<x;V+=m){const H=(P+V)/h;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let W=0;W<b;W+=g){const q=(A+W)/d;if(q<0||q>=c.outWidth||Math.floor(q)!==q)continue;const K=$.get(E,H,q,S);B+=K}}v.set(B*k,E,L,_,S)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const UD={kernelName:Rc,backendName:"cpu",kernelFunc:WD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,scale:i,offset:r,mean:a,variance:l}=e;C(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ae([o,a,l,i,r],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(l.dataId).values,p=i?t.data.get(i.dataId).values:new Float32Array([1]),f=r?t.data.get(r.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,x=p.length,b=d.length,w=h.length;let y=0,v=0,k=0,I=0;for(let $=0;$<c.length;++$)m[$]=f[y++]+(c[$]-h[v++])*p[k++]/Math.sqrt(d[I++]+u),y>=g&&(y=0),v>=w&&(v=0),k>=x&&(k=0),I>=b&&(I=0);return t.makeTensorInfo(o.shape,o.dtype,m)}const HD={kernelName:dl,backendName:"cpu",kernelFunc:GD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:i,crops:r}=s;ae([o],"batchToSpaceND");const a=i.reduce((x,b)=>x*b),l=la(o.shape,i,a),u=ua(l.length,i.length),c=ca(o.shape,i,a),h=Rd(r,i.length),d=Ld(c,r,i.length),p=Ze({inputs:{x:o},backend:t,attrs:{shape:l}}),f=an({inputs:{x:p},backend:t,attrs:{perm:u}}),m=Ze({inputs:{x:f},backend:t,attrs:{shape:c}}),g=jo({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const jD={kernelName:tl,backendName:"cpu",kernelFunc:qD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:i}=e,{size:r}=s,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values,u=Dp(a,l,i.dtype,i.shape,r);return t.makeTensorInfo([r],i.dtype,u)}const XD={kernelName:Dc,backendName:"cpu",kernelFunc:KD};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YD(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,i=t.data.get(s.dataId).values,r=t.data.get(o.dataId).values,a=we(Array.from(i),Array.from(r));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const ZD={kernelName:vf,backendName:"cpu",kernelFunc:YD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JD=We(ir,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),QD={kernelName:ir,backendName:"cpu",kernelFunc:JD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA={kernelName:nl,backendName:"cpu",kernelFunc:n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(G(e.shape)),o=t.data.get(e.dataId),i=o.complexTensorInfos.real,r=o.complexTensorInfos.imag,a=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values;for(let u=0;u<a.length;u++){const c=a[u],h=l[u];s[u]=Math.hypot(c,h)}return t.makeOutput(s,e.shape,"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ti(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.imag,i=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,i)}const tA={kernelName:Jc,backendName:"cpu",kernelFunc:Ti};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ri(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,i=$e(o,e[0].shape)[0],r=e.map(m=>m.shape);Nd(r,i);let a=hs(e.map(m=>m.shape),i);if(G(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>G(m.shape)>0);if(l.length===1)return ys({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const m=l.map(y=>Ho({inputs:{input:y},backend:t})),g=l.map(y=>Ti({inputs:{input:y},backend:t})),x=Ri({inputs:m,backend:t,attrs:{axis:i}}),b=Ri({inputs:g,backend:t,attrs:{axis:i}}),w=xn({inputs:{real:x,imag:b},backend:t});return m.forEach(y=>t.disposeIntermediateTensorInfo(y)),g.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),w}const u=l.map(m=>{const x=[-1,G(m.shape.slice(i))];return Ze({inputs:{x:m},backend:t,attrs:{shape:x}})}),c=u.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=hs(u.map(m=>m.shape),1);const h=u[0].shape[0]===1,d=c1(c,a,e[0].dtype,h),p=hs(l.map(m=>m.shape),i),f=t.makeTensorInfo(p,e[0].dtype,d);return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const nA={kernelName:sl,backendName:"cpu",kernelFunc:Ri};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cy(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i}=e,{strides:r,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s;ae([o,i],"conv2d");const h=Es(l),d=Ft(o.shape,i.shape,r,u,a,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,b=d.padInfo.top,w=d.dataFormat==="channelsLast",y=new At(d.outShape,o.dtype),v=ce(o.shape),k=ce(i.shape),I=v[0],$=w?v[1]:v[2],E=w?v[2]:1,S=w?1:v[1],L=y.strides[0],_=w?y.strides[1]:y.strides[2],P=w?y.strides[2]:1,A=w?1:y.strides[1],B=t.data.get(o.dataId).values,V=t.data.get(i.dataId).values,H=y.values;for(let W=0;W<d.batchSize;++W){const q=W*I,K=W*L;for(let X=0;X<d.outHeight;++X){const J=K+X*_,Y=X*d.strideHeight-b;for(let ne=0;ne<p;++ne){const Q=Y+ne*m;if(Q<0||Q>=d.inHeight)continue;const se=ne*k[0],ue=q+Q*$;for(let he=0;he<d.outWidth;++he){const de=J+he*P,ye=he*d.strideWidth-x;for(let ve=0;ve<f;++ve){const De=ye+ve*g;if(De<0||De>=d.inWidth)continue;const Ue=se+ve*k[1],qe=ue+De*E;let Pe=Ue;for(let Be=0;Be<d.inChannels;++Be){const je=B[qe+Be*S];for(let Ke=0;Ke<d.outChannels;++Ke)H[de+Ke*A]+=je*V[Pe+Ke];Pe+=d.outChannels}}}}}}return t.makeTensorInfo(y.shape,y.dtype,H)}const sA={kernelName:ol,backendName:"cpu",kernelFunc:cy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:i}=e,{strides:r,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;ae([o,i],"conv2dBackpropFilter");const h=Es(l),d=Ft(o.shape,c,r,1,a,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",b=new At(d.filterShape,"float32"),w=d.padInfo.left,y=d.padInfo.top,v=t.data.get(o.dataId).values,k=t.data.get(i.dataId).values,I=new At(o.shape,o.dtype,v),$=new At(i.shape,i.dtype,k);for(let E=0;E<m;++E){const S=Math.max(0,Math.ceil((y-E)/p)),L=Math.min(d.outHeight,(d.inHeight+y-E)/p);for(let _=0;_<g;++_){const P=Math.max(0,Math.ceil((w-_)/f)),A=Math.min(d.outWidth,(d.inWidth+w-_)/f);for(let B=0;B<d.inChannels;++B)for(let V=0;V<d.outChannels;++V){let H=0;for(let W=0;W<d.batchSize;++W)for(let q=S;q<L;++q){const K=E+q*p-y;for(let X=P;X<A;++X){const J=_+X*f-w;x?H+=I.get(W,K,J,B)*$.get(W,q,X,V):H+=I.get(W,B,K,J)*$.get(W,V,q,X)}}b.set(H,E,_,B,V)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const iA={kernelName:Oc,backendName:"cpu",kernelFunc:oA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:i}=e,{inputShape:r,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s;ae([o,i],"conv2dBackpropInput");const h=ce(i.shape),d=ce(o.shape);let p=Es(u);const f=Ft(r,i.shape,a,1,l,c,!1,p),m=new At(f.inShape,"float32"),g=m.values,x=t.data.get(o.dataId).values,b=t.data.get(i.dataId).values,[w,y,v]=h,{batchSize:k,filterHeight:I,filterWidth:$,inChannels:E,inHeight:S,inWidth:L,outChannels:_,outHeight:P,outWidth:A,strideHeight:B,strideWidth:V}=f;p=f.dataFormat;const H=I-1-f.padInfo.top,W=$-1-f.padInfo.left,q=p==="channelsLast",K=m.strides[0],X=q?m.strides[1]:m.strides[2],J=q?m.strides[2]:1,Y=q?1:m.strides[1],ne=d[0],Q=q?d[1]:d[2],se=q?d[2]:1,ue=q?1:d[1];for(let he=0;he<k;++he)for(let de=0;de<E;++de)for(let ye=0;ye<S;++ye){const ve=ye-H,De=Math.max(0,Math.ceil(ve/B)),Ue=Math.min(P,(I+ve)/B);for(let qe=0;qe<L;++qe){const Pe=qe-W,Be=Math.max(0,Math.ceil(Pe/V)),je=Math.min(A,($+Pe)/V);let Ke=0;for(let oe=De;oe<Ue;++oe){const Je=oe*B-ve;for(let Ae=Be;Ae<je;++Ae){const Sn=Ae*V-Pe,ut=ne*he+Q*oe+se*Ae,Nn=w*(I-1-Je)+y*($-1-Sn)+v*de;for(let un=0;un<_;++un){const nt=x[ut+ue*un],gt=b[Nn+un];Ke+=nt*gt}}}const Gn=K*he+X*ye+J*qe+Y*de;g[Gn]=Ke}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const aA={kernelName:il,backendName:"cpu",kernelFunc:rA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i}=e,{strides:r,pad:a,dilations:l}=s;ae([o,i],"conv3d");const u=Ks(o.shape,i.shape,r,l,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,x=g.front,b=g.left,w=g.top,y=new At(u.outShape,o.dtype),v=t.data.get(o.dataId).values,k=t.data.get(i.dataId).values,I=y.values,$=ce(o.shape),E=ce(i.shape);for(let S=0;S<u.batchSize;++S){const L=S*$[0],_=S*y.strides[0];for(let P=0;P<u.outDepth;++P){const A=_+P*y.strides[1],B=P*u.strideDepth-x;for(let V=0;V<c;++V){const H=B+V*p;if(H<0||H>=u.inDepth)continue;const W=V*E[0],q=L+H*$[1];for(let K=0;K<u.outHeight;++K){const X=A+K*y.strides[2],J=K*u.strideHeight-w;for(let Y=0;Y<h;++Y){const ne=J+Y*f;if(ne<0||ne>=u.inHeight)continue;const Q=W+Y*E[1],se=q+ne*$[2];for(let ue=0;ue<u.outWidth;++ue){const he=X+ue*u.outChannels,de=ue*u.strideWidth-b;for(let ye=0;ye<d;++ye){const ve=de+ye*m;if(ve<0||ve>=u.inWidth)continue;const De=Q+ye*E[2],Ue=se+ve*u.inChannels;let qe=De;for(let Pe=0;Pe<u.inChannels;++Pe){const Be=v[Ue+Pe];for(let je=0;je<u.outChannels;++je)I[he+je]+=Be*k[qe+je];qe+=u.outChannels}}}}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const uA={kernelName:rl,backendName:"cpu",kernelFunc:lA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:i}=e,{strides:r,pad:a,filterShape:l}=s;ae([o,i],"conv3dBackpropFilterV2");const u=ce(o.shape),c=ce(i.shape),h=Ks(o.shape,l,r,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,b=new At(h.filterShape,"float32"),w=b.values,[y,v,k,I]=b.strides,$=t.data.get(i.dataId).values,[E,S,L,_]=c,P=t.data.get(o.dataId).values,[A,B,V,H]=u,W=h.padInfo.front,q=h.padInfo.left,K=h.padInfo.top;for(let X=0;X<m;++X){const J=Math.max(0,Math.ceil((W-X)/d)),Y=Math.min(h.outDepth,(h.inDepth+W-X)/d),ne=X*y;for(let Q=0;Q<g;++Q){const se=Math.max(0,Math.ceil((K-Q)/p)),ue=Math.min(h.outHeight,(h.inHeight+K-Q)/p),he=Q*v+ne;for(let de=0;de<x;++de){const ye=Math.max(0,Math.ceil((q-de)/f)),ve=Math.min(h.outWidth,(h.inWidth+q-de)/f),De=de*k+he;for(let Ue=0;Ue<h.inChannels;++Ue){const qe=Ue*I+De;for(let Pe=0;Pe<h.outChannels;++Pe){let Be=0;for(let je=0;je<h.batchSize;++je){const Ke=je*A,Gn=je*E;for(let oe=J;oe<Y;++oe){const Ae=(X+oe*d-W)*B+Ke,Sn=oe*S+Gn;for(let ut=se;ut<ue;++ut){const un=(Q+ut*p-K)*V+Ae,nt=ut*L+Sn;for(let gt=ye;gt<ve;++gt){const ze=(de+gt*f-q)*H+un,Pt=gt*_+nt;Be+=P[ze+Ue]*$[Pt+Pe]}}}}w[qe+Pe]=Be}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const hA={kernelName:_c,backendName:"cpu",kernelFunc:cA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:i}=e,{pad:r,strides:a,inputShape:l}=s;ae([o],"conv3dBackpropInputV2");const u=ce(o.shape),c=ce(i.shape),h=Ks(l,i.shape,a,1,r),d=new At(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,b=t.data.get(o.dataId).values,[w,y,v,k]=u,I=t.data.get(i.dataId).values,[$,E,S,L]=c,{batchSize:_,filterDepth:P,filterHeight:A,filterWidth:B,inChannels:V,inDepth:H,inHeight:W,inWidth:q,outChannels:K,outDepth:X,outHeight:J,outWidth:Y,strideDepth:ne,strideHeight:Q,strideWidth:se}=h,ue=P-1-h.padInfo.front,he=A-1-h.padInfo.top,de=B-1-h.padInfo.left;for(let ye=0;ye<_;++ye)for(let ve=0;ve<V;++ve)for(let De=0;De<H;++De){const Ue=De-ue,qe=Math.max(0,Math.ceil(Ue/ne)),Pe=Math.min(X,(P+Ue)/ne);for(let Be=0;Be<W;++Be){const je=Be-he,Ke=Math.max(0,Math.ceil(je/Q)),Gn=Math.min(J,(A+je)/Q);for(let oe=0;oe<q;++oe){const Je=oe-de,Ae=Math.max(0,Math.ceil(Je/se)),Sn=Math.min(Y,(B+Je)/se);let ut=0;for(let Nn=qe;Nn<Pe;++Nn){const un=Nn*ne-Ue;for(let nt=Ke;nt<Gn;++nt){const gt=nt*Q-je;for(let yn=Ae;yn<Sn;++yn){const ze=yn*se-Je,Pt=w*ye+y*Nn+v*nt+k*yn,Cs=$*(P-1-un)+E*(A-1-gt)+S*(B-1-ze)+L*ve;for(let Is=0;Is<K;++Is){const Bt=b[Pt+Is],cn=I[Cs+Is];ut+=Bt*cn}}}}p[f*ye+m*De+g*Be+x*oe+ve]=ut}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const pA={kernelName:Mc,backendName:"cpu",kernelFunc:dA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA=We(rr,n=>Math.cos(n)),mA={kernelName:rr,backendName:"cpu",kernelFunc:fA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gA=We(ar,n=>Math.cosh(n)),xA={kernelName:ar,backendName:"cpu",kernelFunc:gA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:i,boxInd:r}=e,{cropSize:a,method:l,extrapolationValue:u}=s,[c,h,d,p]=o.shape,f=i.shape[0],[m,g]=a,x=Se([f,m,g,p],"float32"),b=t.data.get(i.dataId).values,w=t.data.get(r.dataId).values,y=t.data.get(o.dataId).values,v=ce(o.shape),k=ce(x.shape);for(let I=0;I<f;I++){const $=I*4,E=b[$],S=b[$+1],L=b[$+2],_=b[$+3],P=w[I];if(P>=c)continue;const A=m>1?(L-E)*(h-1)/(m-1):0,B=g>1?(_-S)*(d-1)/(g-1):0;for(let V=0;V<m;V++){const H=m>1?E*(h-1)+V*A:.5*(E+L)*(h-1);if(H<0||H>h-1){for(let W=0;W<g;W++)for(let q=0;q<p;q++){const K=q+W*k[2]+V*k[1]+I*k[0];x.values[K]=u}continue}if(l==="bilinear"){const W=Math.floor(H),q=Math.ceil(H),K=H-W;for(let X=0;X<g;X++){const J=g>1?S*(d-1)+X*B:.5*(S+_)*(d-1);if(J<0||J>d-1){for(let se=0;se<p;se++){const ue=se+X*k[2]+V*k[1]+I*k[0];x.values[ue]=u}continue}const Y=Math.floor(J),ne=Math.ceil(J),Q=J-Y;for(let se=0;se<p;se++){let ue=se+Y*v[2]+W*v[1]+P*v[0];const he=y[ue];ue=se+ne*v[2]+W*v[1]+P*v[0];const de=y[ue];ue=se+Y*v[2]+q*v[1]+P*v[0];const ye=y[ue];ue=se+ne*v[2]+q*v[1]+P*v[0];const ve=y[ue],De=he+(de-he)*Q,Ue=ye+(ve-ye)*Q;ue=se+X*k[2]+V*k[1]+I*k[0],x.values[ue]=De+(Ue-De)*K}}}else for(let W=0;W<g;++W){const q=g>1?S*(d-1)+W*B:.5*(S+_)*(d-1);if(q<0||q>d-1){for(let J=0;J<p;J++){const Y=J+W*k[2]+V*k[1]+I*k[0];x.values[Y]=u}continue}const K=Math.round(q),X=Math.round(H);for(let J=0;J<p;J++){const Y=J+K*v[2]+X*v[1]+P*v[0],ne=J+W*k[2]+V*k[1]+I*k[0];x.values[ne]=y[Y]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const yA={kernelName:Bc,backendName:"cpu",kernelFunc:bA};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,exclusive:r,reverse:a}=s;ae(o,"cumprod");const l=at([i],o.shape.length);let u=o;l!=null&&(u=an({inputs:{x:o},backend:t,attrs:{perm:l}}));const c=dt(1,o.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=fn(u.dtype,"int32"),d=Cc(G(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=r?1:p[w];else{const y=m(x,b-1);d[w]=r?p[y]*d[y]:p[w]*d[y]}}const g=t.makeTensorInfo(u.shape,h,d);if(l!=null){const x=Xs(l),b=an({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),b}return g}const vA={kernelName:Pc,backendName:"cpu",kernelFunc:wA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,exclusive:r,reverse:a}=s;ae(o,"cumsum");const l=at([i],o.shape.length);let u=o;l!=null&&(u=an({inputs:{x:o},backend:t,attrs:{perm:l}}));const c=dt(1,o.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=fn(u.dtype,"int32"),d=Wt(G(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=r?0:p[w];else{const y=m(x,b-1);d[w]=r?p[y]+d[y]:p[w]+d[y]}}const g=t.makeTensorInfo(u.shape,h,d);if(l!=null){const x=Xs(l),b=an({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),b}return g}const CA={kernelName:al,backendName:"cpu",kernelFunc:kA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:i}=e,{size:r,binaryOutput:a}=s;if(o.shape.length===1){const l=t.data.get(o.dataId).values,u=t.data.get(i.dataId).values,c=Dp(l,u,i.dtype,i.shape,r);return t.makeTensorInfo([r],i.dtype,c)}else if(o.shape.length===2){const l=t.bufferSync(o),u=t.bufferSync(i),c=a1(l,u,r,a);return t.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const $A={kernelName:zc,backendName:"cpu",kernelFunc:IA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:i,dataFormat:r}=s;C(r==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${r}`);const a=o.shape[0],l=o.shape[1],u=o.shape[2],c=o.shape[3],h=l*i,d=u*i,p=c/(i*i),f=t.data.get(o.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let x=0;x<a;++x)for(let b=0;b<h;++b){const w=Math.floor(b/i),y=b%i;for(let v=0;v<d;++v){const k=Math.floor(v/i),I=v%i,$=(y*i+I)*p;for(let E=0;E<p;++E){const L=E+$+c*(k+u*(w+l*x));m[g++]=f[L]}}}return t.makeTensorInfo([a,h,d,p],o.dtype,m)}const NA={kernelName:Vc,backendName:"cpu",kernelFunc:SA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hy(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i}=e,{strides:r,pad:a,dilations:l,dimRoundingMode:u}=s;ae([o,i],"depthwiseConv2DNative");const c=ce(o.shape),h=ce(i.shape);let d=l;d==null&&(d=[1,1]),C(Ut(r,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${d}'`);const p=Ft(o.shape,i.shape,r,d,a,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:b}=p,w=b.left,y=b.top,v=p.outChannels/p.inChannels,k=new At(p.outShape,o.dtype),I=t.data.get(o.dataId).values,$=t.data.get(i.dataId).values,E=k.values;for(let S=0;S<p.batchSize;++S){const L=S*c[0],_=S*k.strides[0];for(let P=0;P<p.outHeight;++P){const A=_+P*k.strides[1],B=P*p.strideHeight-y;for(let V=0;V<f;++V){const H=B+V*g;if(H<0||H>=p.inHeight)continue;const W=V*h[0],q=L+H*c[1];for(let K=0;K<p.outWidth;++K){const X=A+K*k.strides[2],J=K*p.strideWidth-w;for(let Y=0;Y<m;++Y){const ne=J+Y*x;if(ne<0||ne>=p.inWidth)continue;const Q=W+Y*h[1],se=q+ne*p.inChannels;let ue=X,he=Q;for(let de=0;de<p.inChannels;++de){const ye=I[se+de];for(let ve=0;ve<v;++ve)E[ue+ve]+=ye*$[he+ve];ue+=v,he+=v}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const EA={kernelName:ll,backendName:"cpu",kernelFunc:hy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:i}=e,{strides:r,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s;ae([o,i],"depthwiseConv2dNativeBackpropFilter");const h=Ft(o.shape,c,r,a,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new At(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,w=h.outChannels/h.inChannels,y=t.data.get(o.dataId).values,v=new At(o.shape,o.dtype,y),k=t.data.get(i.dataId).values,I=new At(i.shape,i.dtype,k);for(let $=0;$<f;++$){const E=Math.max(0,Math.ceil((b-$)/d)),S=Math.min(h.outHeight,(h.inHeight+b-$)/d);for(let L=0;L<m;++L){const _=Math.max(0,Math.ceil((x-L)/p)),P=Math.min(h.outWidth,(h.inWidth+x-L)/p);for(let A=0;A<h.outChannels;++A){const B=Math.trunc(A/w),V=A%w;let H=0;for(let W=0;W<h.batchSize;++W)for(let q=E;q<S;++q){const K=$+q*d-b;for(let X=_;X<P;++X){const J=L+X*p-x;H+=v.get(W,K,J,B)*I.get(W,q,X,A)}}g.set(H,$,L,B,V)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const RA={kernelName:Wc,backendName:"cpu",kernelFunc:TA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:i}=e,{strides:r,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s;ae([o,i],"depthwiseConv2DNativeBackpropInput");const h=ce(o.shape),d=ce(i.shape),p=Ft(c,i.shape,r,a,l,u,!0),f=new At(p.inShape,"float32"),m=f.values,[g,x,b]=f.strides,w=t.data.get(o.dataId).values,[y,v,k]=h,I=t.data.get(i.dataId).values,[$,E,S]=d,{batchSize:L,filterHeight:_,filterWidth:P,inChannels:A,inHeight:B,inWidth:V,outChannels:H,outHeight:W,outWidth:q,strideHeight:K,strideWidth:X}=p,J=_-1-p.padInfo.top,Y=P-1-p.padInfo.left,ne=H/A;for(let Q=0;Q<L;++Q)for(let se=0;se<A;++se)for(let ue=0;ue<B;++ue){const he=ue-J,de=Math.max(0,Math.ceil(he/K)),ye=Math.min(W,(_+he)/K);for(let ve=0;ve<V;++ve){const De=ve-Y,Ue=Math.max(0,Math.ceil(De/X)),qe=Math.min(q,(P+De)/X);let Pe=0;for(let Be=de;Be<ye;++Be){const je=Be*K-he;for(let Ke=Ue;Ke<qe;++Ke){const Gn=Ke*X-De,oe=y*Q+v*Be+k*Ke,Je=$*(_-1-je)+E*(P-1-Gn)+S*se;for(let Ae=0;Ae<ne;++Ae){const Sn=se*ne+Ae,ut=w[oe+Sn],Nn=I[Je+Ae];Pe+=ut*Nn}}}m[g*Q+x*ue+b*ve+se]=Pe}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const DA={kernelName:Uc,backendName:"cpu",kernelFunc:LA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n){const{inputs:e,backend:t}=n,{x:s}=e,o=G(s.shape),i=t.data.get(s.dataId).values,r=Se([o,o],s.dtype),a=r.values;for(let u=0;u<i.length;u++)a[u*o+u]=i[u];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,r.dtype,r.values)}const FA={kernelName:kf,backendName:"cpu",kernelFunc:AA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OA={kernelName:ul,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o}=n,{strides:i,pad:r,dilations:a}=t,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(o.dataId).values,d=o.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:y,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:E,outShape:S}=Yr(s.shape,o.shape,i,r,"NHWC",a),L=G(S),_=S.length,P=ct(s.dtype,L);for(let B=0;B<p;++B)for(let V=0;V<x;++V){const H=V*y-w.top;for(let W=0;W<b;++W){const q=W*v-w.left;for(let K=0;K<g;++K){let X=Number.MIN_SAFE_INTEGER;for(let Y=0;Y<k;++Y){const ne=H+Y*$;if(ne>=0&&ne<f)for(let Q=0;Q<I;++Q){const se=q+Q*E;if(se>=0&&se<m){const ue=os([B,ne,se,K],c,ce(s.shape)),he=os([Y,Q,K],d,ce(o.shape)),de=u[ue]+h[he];de>X&&(X=de)}}}const J=os([B,V,W,K],_,ce(S));P[J]=X}}}return{dataId:l.write(vo(P,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _A={kernelName:Hc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:i}=n,{strides:r,pad:a,dilations:l}=t,u=e,c=Hn(s.shape,u.data.get(s.dataId).values),h=Hn(o.shape,u.data.get(o.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:E}=Yr(s.shape,o.shape,r,a,"NHWC",l);C(i.rank===E.length,()=>`Error in ${Hc}, dy must have the same rank as output ${E.length}, but got ${i.rank}`);const S=Hn(E,u.data.get(i.dataId).values),L=xf(o.shape,o.dtype);for(let P=0;P<d;++P)for(let A=0;A<g;++A){const B=A*w-b.top;for(let V=0;V<x;++V){const H=V*y-b.left;for(let W=0;W<m;++W){let q=Number.MIN_SAFE_INTEGER,K=0,X=0;for(let J=0;J<v;++J){const Y=B+J*I;if(Y>=0&&Y<p)for(let ne=0;ne<k;++ne){const Q=H+ne*$;if(Q>=0&&Q<f){const se=c[P][Y][Q][W]+h[J][ne][W];se>q&&(q=se,K=J,X=ne)}}}L[K][X][W]+=S[P][A][V][W]}}}return{dataId:u.write(vo(L,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MA={kernelName:Gc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:i}=n,{strides:r,pad:a,dilations:l}=t,u=e,c=Hn(s.shape,u.data.get(s.dataId).values),h=Hn(o.shape,u.data.get(o.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:E}=Yr(s.shape,o.shape,r,a,"NHWC",l);C(i.rank===E.length,()=>`Error in ${Gc}, dy must have the same rank as output ${E.length}, but got ${i.rank}`);const S=Hn(E,u.data.get(i.dataId).values),L=xf(s.shape,s.dtype);for(let P=0;P<d;++P)for(let A=0;A<g;++A){const B=A*w-b.top;for(let V=0;V<x;++V){const H=V*y-b.left;for(let W=0;W<m;++W){let q=Number.MIN_SAFE_INTEGER,K=B<0?0:B,X=H<0?0:H;for(let J=0;J<v;++J){const Y=B+J*I;if(Y>=0&&Y<p)for(let ne=0;ne<k;++ne){const Q=H+ne*$;if(Q>=0&&Q<f){const se=c[P][Y][Q][W]+h[J][ne][W];se>q&&(q=se,K=Y,X=Q)}}}L[P][K][X][W]+=S[P][A][V][W]}}}return{dataId:u.write(vo(L,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const{inputs:e,backend:t,attrs:s}=n,{image:o}=e,{canvas:i,options:r}=s,{contextOptions:a,imageOptions:l}=r||{},u=(l==null?void 0:l.alpha)||1,c=(a==null?void 0:a.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(a==null?void 0:a.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=o.shape.slice(0,2),f=o.shape.length===2?1:o.shape[2],m=t.data.get(o.dataId).values,g=o.dtype==="float32"?255:1,x=new Uint8ClampedArray(p*d*4);for(let w=0;w<d*p;++w){const y=[0,0,0,255*u];for(let k=0;k<f;k++){const I=m[w*f+k];if(o.dtype==="float32"){if(I<0||I>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${I}.`)}else if(o.dtype==="int32"&&(I<0||I>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${I}.`);f===1?(y[0]=I*g,y[1]=I*g,y[2]=I*g):y[k]=I*g}const v=w*4;x[v+0]=Math.round(y[0]),x[v+1]=Math.round(y[1]),x[v+2]=Math.round(y[2]),x[v+3]=Math.round(y[3])}i.width=p,i.height=d;const b=new ImageData(x,p,d);return h.putImageData(b,0,0),o}const BA={kernelName:sv,backendName:"cpu",kernelFunc:PA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s;ae(o,"sum");let a;o.dtype==="bool"?a=ao({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):a=ys({inputs:{x:o},backend:t});const l=a.shape.length,u=$e(i,a.shape),c=at(u,l);let h=u,d=a;c!=null&&(d=an({inputs:{x:a},backend:t,attrs:{perm:c}}),h=dt(h.length,l)),Ot("sum",h,d.shape.length);const[p,f]=Rt(d.shape,h),m=fn(d.dtype,"int32");let g=qu(t,p,m);const x=G(f),b=t.data.get(g.dataId).values,w=t.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const v=y*x;let k=0;for(let I=0;I<x;++I)k+=w[v+I];b[y]=k}if(r){const y=xt(g.shape,u),v=g;g=Ze({inputs:{x:g},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(v)}return t.disposeIntermediateTensorInfo(a),c!=null&&t.disposeIntermediateTensorInfo(d),g}const zA={kernelName:Wl,backendName:"cpu",kernelFunc:Ea};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,i=e,{allDims:r,summedDims:a,idDims:l}=zd(o,i.length);Wd(r.length,l,i);const{path:u,steps:c}=Ud(a,l),h=c.length;let d=null,p=r.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:x,expandDims:b}=Vd(p,l[g]);let w;Gd(x)?w=i[g]:(w=an({inputs:{x:i[g]},backend:t,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);Fe(w.shape,y)||(w=Ze({inputs:{x:w},backend:t,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=ju({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Ea({inputs:{x:d},backend:t,attrs:{axis:u[m]-(r.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const WA={kernelName:qc,backendName:"cpu",kernelFunc:VA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n){const{inputs:e,backend:t}=n,{dy:s,y:o}=e;ae([s,o],"eluGrad");const i=new Float32Array(G(o.shape)),r=t.data.get(o.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<r.length;++l){const u=r[l];u>=0?i[l]=a[l]:i[l]=a[l]*(u+1)}return t.makeTensorInfo(o.shape,"float32",i)}const GA={kernelName:jc,backendName:"cpu",kernelFunc:UA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA=Dd,qA=Ad,jA=Fd,KA=Od,XA=_d,YA=Md,ZA=We(cr,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+HA*t);return e*(1-((((YA*s+XA)*s+KA)*s+jA)*s+qA)*s*Math.exp(-t*t))}),JA={kernelName:cr,backendName:"cpu",kernelFunc:ZA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yu(n){const{inputs:e,backend:t,attrs:s}=n,{input:o}=e,{dim:i}=s,r=o.shape.length,a=o.shape.slice();let l=i;return i<0&&(C(-(r+1)<=i,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),l=r+i+1),a.splice(l,0,1),Ze({inputs:{x:o},backend:t,attrs:{shape:a}})}const QA={kernelName:hl,backendName:"cpu",kernelFunc:Yu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eF=mt((n,e)=>n/e),Pp=St(lr,eF),Bp={kernelName:lr,backendName:"cpu",kernelFunc:Pp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dy(n,e,t){const s=n.shape,o=s[0],i=s[1],r=t.data.get(n.dataId),a=r.complexTensorInfos.real,l=r.complexTensorInfos.imag,u=[o,i],c=G(u),h=Vt("float32",c),d=Vt("float32",c);for(let g=0;g<o;g++){const x=jo({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,i]}}),b=jo({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,i]}}),w=xn({inputs:{real:x,imag:b},backend:t}),{real:y,imag:v}=tF(w,e,t),k=Ds(y,v);for(let I=0;I<i;I++){const $=Pd(k,I);h[g*i+I]=$.real,d[g*i+I]=$.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w)}const p=t.makeTensorInfo(u,"float32",h),f=t.makeTensorInfo(u,"float32",d),m=xn({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function tF(n,e,t){const s=G(n.shape),o=t.data.get(n.dataId),i=t.data.get(o.complexTensorInfos.real.dataId).values,r=t.data.get(o.complexTensorInfos.imag.dataId).values;if(nF(s)){const a=zp(i,r,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",a.real),c=t.makeTensorInfo(l,"float32",a.imag),h=t.makeTensorInfo([],"float32",Us(s,"float32")),d=ys({inputs:{x:h},backend:t}),p=Bp.kernelFunc({inputs:{a:u,b:h},backend:t}),f=Bp.kernelFunc({inputs:{a:c,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=Ds(i,r),l=sF(a,s,e);return Vg(l)}}function nF(n){return(n&n-1)===0}function zp(n,e,t,s,o){if(t===1)return{real:n,imag:e};const i=Ds(n,e),r=t/2,a=Wg(i),l=a.real,u=a.imag,c=[l.length],h=o.makeTensorInfo(c,"float32",l),d=o.makeTensorInfo(c,"float32",u),p=xn({inputs:{real:h,imag:d},backend:o}),f=Ug(i),m=f.real,g=f.imag,x=[m.length],b=o.makeTensorInfo(x,"float32",m),w=o.makeTensorInfo(x,"float32",g),y=xn({inputs:{real:b,imag:w},backend:o}),v=zp(l,u,r,s,o),k=v.real,I=v.imag,$=[k.length],E=o.makeTensorInfo($,"float32",k),S=o.makeTensorInfo($,"float32",I),L=xn({inputs:{real:E,imag:S},backend:o}),_=zp(m,g,r,s,o),P=_.real,A=_.imag,B=[P.length],V=o.makeTensorInfo(B,"float32",P),H=o.makeTensorInfo(B,"float32",A),W=xn({inputs:{real:V,imag:H},backend:o}),q=Hg(t,s),K=[q.real.length],X=o.makeTensorInfo(K,"float32",q.real),J=o.makeTensorInfo(K,"float32",q.imag),Y=xn({inputs:{real:X,imag:J},backend:o}),ne=ju({inputs:{a:Y,b:W},backend:o}),Q=Ei({inputs:{a:L,b:ne},backend:o}),se=_p({inputs:{a:L,b:ne},backend:o}),ue=Ho({inputs:{input:Q},backend:o}),he=Ho({inputs:{input:se},backend:o}),de=Ti({inputs:{input:Q},backend:o}),ye=Ti({inputs:{input:se},backend:o}),ve=Ri({inputs:[ue,he],backend:o,attrs:{axis:0}}),De=Ri({inputs:[de,ye],backend:o,attrs:{axis:0}}),Ue=o.data.get(ve.dataId).values,qe=o.data.get(De.dataId).values;return o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(S),o.disposeIntermediateTensorInfo(L),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(W),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(ne),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(de),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(ve),o.disposeIntermediateTensorInfo(De),{real:Ue,imag:qe}}function sF(n,e,t){const s=new Float32Array(e*2);for(let o=0;o<e;o++){let i=0,r=0;for(let a=0;a<e;a++){const l=qg(o*a,e,t),u=Pd(n,a);i+=u.real*l.real-u.imag*l.imag,r+=u.real*l.imag+u.imag*l.real}t&&(i/=e,r/=e),Gg(s,i,r,o)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n){const{inputs:e,backend:t}=n,{input:s}=e,o=G(s.shape),i=s.shape[s.shape.length-1],r=o/i,a=Ze({inputs:{x:s},backend:t,attrs:{shape:[r,i]}}),l=dy(a,!1,t),u=Ze({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const iF={kernelName:Kc,backendName:"cpu",kernelFunc:oF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vp(n){const{backend:e,attrs:t}=n,{shape:s,value:o,dtype:i}=t,r=i||ii(o),a=ct(r,G(s));return aF(a,o,r),e.makeTensorInfo(s,r,a)}const rF={kernelName:Xc,backendName:"cpu",kernelFunc:Vp};function aF(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lF={kernelName:Yc,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,o=t,i=Vt(s.dtype,G(s.shape)),[r,a,l,u]=s.shape,c=o.data.get(s.dataId).values;for(let d=0;d<r;d++){const p=d*l*a*u;for(let f=0;f<a;f++){const m=f*(l*u);for(let g=0;g<l;g++){const x=g*u;for(let b=0;b<u;b++){const w=Math.round(l-g-1),y=p+m+x+b;let v=c[y];if(w>=0&&w<l){const k=w*u,I=p+m+k+b;v=c[I]}i[y]=v}}}}return{dataId:o.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=cy({inputs:{x:o,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(r){const g=m;if(c==="NCHW"&&r.shape.length===1&&r.shape[0]!==1){const x=Ze({inputs:{x:r},backend:t,attrs:{shape:[r.shape[0],1,1]}});m=Ei({inputs:{a:m,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else m=Ei({inputs:{a:m,b:r},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(c==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=Ze({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=Xu(t,m,p,x,f),t.disposeIntermediateTensorInfo(x)}else m=Xu(t,m,p,a,f);t.disposeIntermediateTensorInfo(g)}return m}const cF={kernelName:Yl,backendName:"cpu",kernelFunc:uF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=hy({inputs:{x:o,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(r){const g=m;m=Ei({inputs:{a:m,b:r},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=Xu(t,m,p,a,f),t.disposeIntermediateTensorInfo(g)}return m}const dF={kernelName:Vf,backendName:"cpu",kernelFunc:hF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,i=G(s.shape),r=o.shape,a=r[r.length-1],[l,u,c,h]=wd(s,o);if(u===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(o.dataId).values,p=t.bufferSync(s),f=b1(d,p,s.dtype,u,a,c,h,s.shape,i);return t.makeTensorInfo(l,s.dtype,f.values)}const fF={kernelName:Cf,backendName:"cpu",kernelFunc:pF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:i}=e,{axis:r,batchDims:a}=s;ae([o,i],"gatherV2");const l=$e(r,o.shape)[0],u=t.data.get(i.dataId).values,c=o.shape[l];for(let y=0;y<u.length;++y){const v=u[y];C(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let h=a;a==null&&(h=0);const d=G(i.shape),p=jd(o,i,l,h),f=Ze({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Ze({inputs:{x:i},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=t.bufferSync(m),b=t.bufferSync(f),w=y1(b,x,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,w.dtype,w.values)}const gF={kernelName:pl,backendName:"cpu",kernelFunc:mF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xF(n){const{inputs:e,backend:t}=n,{input:s}=e,o=G(s.shape),i=s.shape[s.shape.length-1],r=o/i,a=Ze({inputs:{x:s},backend:t,attrs:{shape:[r,i]}}),l=dy(a,!0,t),u=Ze({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const bF={kernelName:Zc,backendName:"cpu",kernelFunc:xF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF=We(xr,n=>Number.isFinite(n)?1:0,"bool"),wF={kernelName:xr,backendName:"cpu",kernelFunc:yF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF=We(br,n=>Math.abs(n)===1/0?1:0,"bool"),kF={kernelName:br,backendName:"cpu",kernelFunc:vF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF=We(yr,n=>Number.isNaN(n)?1:0,"bool"),IF={kernelName:yr,backendName:"cpu",kernelFunc:CF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:i}=t,r=I1(s,o,i);return e.makeTensorInfo([r.length],"float32",r)}const SF={kernelName:If,backendName:"cpu",kernelFunc:$F};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF=We(vr,n=>Math.log1p(n)),EF={kernelName:vr,backendName:"cpu",kernelFunc:NF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF=mt((n,e)=>n&&e),RF=St(bl,TF,null,"bool"),LF={kernelName:bl,backendName:"cpu",kernelFunc:RF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=We(yl,n=>n?0:1,"bool"),AF={kernelName:yl,backendName:"cpu",kernelFunc:DF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FF=mt((n,e)=>n||e),OF=St(wl,FF,null,"bool"),_F={kernelName:wl,backendName:"cpu",kernelFunc:OF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:i,bias:r,alpha:a,beta:l}=s;ae(o,"LRN");const u=o.shape[3],c=u-1,h=t.data.get(o.dataId).values,d=G(o.shape),p=new Float32Array(d);function f(m){const g=m%u;let x=m-g+Math.max(0,g-i);const b=m-g+Math.min(g+i,c);let w=0;for(;x<=b;x++){const y=h[x];w+=y*y}return w}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(r+a*g,-l);p[m]=x}return t.makeTensorInfo(o.shape,o.dtype,p)}const PF={kernelName:vl,backendName:"cpu",kernelFunc:MF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,y:i,dy:r}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s;ae(r,"LRNGrad");const h=G(r.shape),d=r.shape[3],p=t.data.get(r.dataId).values,f=t.data.get(o.dataId).values,m=t.data.get(i.dataId).values,g=new Float32Array(h),x=h;for(let b=0;b<x;b++){const w=b%d,y=b-w+Math.max(0,w-a),v=b-w+Math.min(d,w+a+1);let k=0;for(let I=y;I<v;I++)k+=Math.pow(f[I],2);k=u*k+l;for(let I=y;I<v;I++){let $=-2*u*c*f[I]*m[b]/k;b===I&&($+=Math.pow(k,-c)),$*=p[b],g[I]+=$}}return t.makeTensorInfo(r.shape,o.dtype,g)}const zF={kernelName:Qc,backendName:"cpu",kernelFunc:BF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function py(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:i,keepDims:r}=s,a=t;let l=o.shape;const u=l.length,c=$e(i,l);let h=c;const d=at(h,u);let p=a.data.get(o.dataId).values;if(d!=null){const y=new Array(u);for(let v=0;v<y.length;v++)y[v]=l[d[v]];p=Fp(p,l,o.dtype,d,y),h=dt(h.length,u),l=y}ae(o,"max"),Ot("max",h,u);const[f,m]=Rt(l,h),g=G(m),x=S1(p,g,f,o.dtype),b=a.write(x,f,o.dtype);let w=f;return r&&(w=xt(f,c)),{dataId:b,shape:w,dtype:o.dtype}}const VF={kernelName:kl,backendName:"cpu",kernelFunc:py};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;ae(o,"maxPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,u=1;C(Ut(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=An(o.shape,i,r,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&Fe(c.inShape,c.outShape))h=ys({inputs:{x:o},backend:t});else{const d=t.data.get(o.dataId).values,p=ce(o.shape),f=Mp(d,o.shape,o.dtype,p,c,"max");h=t.makeTensorInfo(c.outShape,o.dtype,f.values)}return h}const UF={kernelName:Cl,backendName:"cpu",kernelFunc:WF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:i,strides:r,pad:a,dimRoundingMode:l,dataFormat:u}=s;ae(o,"maxPool3d");const c=Ns(o.shape,i,r,1,a,l,u),h=t.data.get(o.dataId).values,d=uy(h,o.shape,o.dtype,ce(o.shape),c,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const HF={kernelName:Il,backendName:"cpu",kernelFunc:GF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i}=e,{filterSize:r,strides:a,pad:l,dimRoundingMode:u}=s;ae([o,i],"maxPool3DGrad");const c=Ns(i.shape,r,a,1,l,u),h=t.bufferSync(i),d=OD(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,y=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=w-1-c.padInfo.front,I=v-1-c.padInfo.left,$=y-1-c.padInfo.top,E=Se(i.shape,"float32"),S=t.bufferSync(o);for(let L=0;L<c.batchSize;++L)for(let _=0;_<c.inChannels;++_)for(let P=0;P<c.inDepth;++P)for(let A=0;A<c.inHeight;++A)for(let B=0;B<c.inWidth;++B){const V=P-k,H=A-$,W=B-I;let q=0;for(let K=0;K<w;K+=g){const X=(V+K)/p;if(!(X<0||X>=c.outDepth||Math.floor(X)!==X))for(let J=0;J<y;J+=x){const Y=(H+J)/f;if(!(Y<0||Y>=c.outHeight||Math.floor(Y)!==Y))for(let ne=0;ne<v;ne+=b){const Q=(W+ne)/m;if(Q<0||Q>=c.outWidth||Math.floor(Q)!==Q)continue;const se=w*y*v-1-d.get(L,X,Y,Q,_),ue=K*y*v+J*v+ne,he=se===ue?1:0;if(he===0)continue;const de=S.get(L,X,Y,Q,_);q+=de*he}}}E.set(q,L,P,A,B,_)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const jF={kernelName:th,backendName:"cpu",kernelFunc:qF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i,output:r}=e,a=i;ae([i,r],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=An(a.shape,l,u,1,c,h),p=t.data.get(a.dataId).values,f=Se(d.outShape,a.dtype,ly(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,y=d.effectiveFilterWidth,v=y-1-d.padInfo.left,k=w-1-d.padInfo.top,I=Se(a.shape,"float32"),$=t.data.get(o.dataId).values,E=Se(o.shape,"float32",$);for(let S=0;S<d.batchSize;++S)for(let L=0;L<d.inChannels;++L)for(let _=0;_<d.inHeight;++_)for(let P=0;P<d.inWidth;++P){const A=_-k,B=P-v;let V=0;for(let H=0;H<w;H+=x){const W=(A+H)/m;if(!(W<0||W>=d.outHeight||Math.floor(W)!==W))for(let q=0;q<y;q+=b){const K=(B+q)/g;if(K<0||K>=d.outWidth||Math.floor(K)!==K)continue;const X=w*y-1-f.get(S,W,K,L),J=H*y+q,Y=X===J?1:0;if(Y===0)continue;const ne=E.get(S,W,K,L);V+=ne*Y}}I.set(V,S,_,P,L)}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const XF={kernelName:eh,backendName:"cpu",kernelFunc:KF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n,e,t,s,o){const i=ce(e),r=Mp(n,e,t,i,o,"max"),a=ly(n,e,t,o,!0,s);return[r.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZF={kernelName:$f,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:i,pad:r,includeBatchInIndex:a}=e,l=t;ae(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=An(s.shape,o,i,[1,1],r),[h,d]=YF(u,s.shape,s.dtype,a,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s,a=$e(i,o.shape),u=Rt(o.shape,a)[1],c=G(u),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=ao({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=Pp({inputs:{a:p,b:d},backend:t});h.push(f);const m=Ea({inputs:{x:f},backend:t,attrs:{axis:i,keepDims:r}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const QF={kernelName:$l,backendName:"cpu",kernelFunc:JF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s;ae(o,"min");const a=$e(i,o.shape);let l=a;const u=at(l,o.shape.length);let c=o;u!=null&&(c=an({inputs:{x:o},backend:t,attrs:{perm:u}}),l=dt(l.length,o.shape.length)),Ot("min",l,c.shape.length);const[h,d]=Rt(c.shape,l),p=G(d),f=Wt(G(h),c.dtype),m=t.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];(Number.isNaN(v)||v<w)&&(w=v)}f[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(r){const x=xt(h,a),b=Ze({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}const t3={kernelName:Sl,backendName:"cpu",kernelFunc:e3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:i,mode:r}=s;ae(o,"mirrorPad");const a=i.map((w,y)=>w[0]+o.shape[y]+w[1]),l=i.map(w=>w[0]),u=i.map((w,y)=>w[0]+o.shape[y]),c=r==="reflect"?0:1,h=t.data.get(o.dataId).values,d=o.shape.length,p=ce(o.shape),f=G(a),m=a.length,g=ce(a),x=Vt(o.dtype,f);for(let w=0;w<f;w++){let y=ri(w,m,g);for(let k=0;k<m;k++)y[k]<l[k]?y[k]=l[k]*2-y[k]-c:y[k]>=u[k]&&(y[k]=(u[k]-1)*2-y[k]+c);y=y.map((k,I)=>k-l[I]);const v=os(y,d,p);x[w]=h[v]}return{dataId:t.write(x,a,o.dtype),shape:a,dtype:o.dtype}}const s3={kernelName:Nl,backendName:"cpu",kernelFunc:n3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o3=mt((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),i3=St(Ir,o3),r3={kernelName:Ir,backendName:"cpu",kernelFunc:i3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fy(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:i}=s,r=o.shape.length;let a=i;if(a===-1&&(a=r-1),a!==r-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r} and dim was ${a}`);const l=$e([a],o.shape),u=py({inputs:{x:o},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=xt(u.shape,l),h=Ze({inputs:{x:u},backend:t,attrs:{shape:c}}),d=_p({inputs:{a:o,b:h},backend:t}),p=f1({inputs:{x:d},backend:t}),f=Ea({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),m=Ze({inputs:{x:f},backend:t,attrs:{shape:c}}),g=Pp({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const a3={kernelName:Hl,backendName:"cpu",kernelFunc:fy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:i,seed:r,normalized:a}=s;ae(o,"multinomial");const l=a?o:fy({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=t.data.get(l.dataId).values,d=[u,i],p=Wt(G(d),"int32");for(let f=0;f<u;++f){const m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const x=od.alea(r.toString()),b=f*i;for(let w=0;w<i;++w){const y=x();p[b+w]=g.length;for(let v=0;v<g.length;v++)if(y<g[v]){p[b+w]=v;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const u3={kernelName:Sf,backendName:"cpu",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3=fd;function h3(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:i}=e,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l}=s;ae(o,"NonMaxSuppression");const u=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values,{selectedIndices:h}=c3(u,c,r,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const d3={kernelName:nh,backendName:"cpu",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p3=md;function f3(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:i}=e,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s;ae(o,"NonMaxSuppressionPadded");const c=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=p3(c,h,r,a,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const m3={kernelName:sh,backendName:"cpu",kernelFunc:f3};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g3=gd;function x3(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:i}=e,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s;ae(o,"NonMaxSuppressionWithScore");const c=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,d=r,p=a,f=l,m=u,{selectedIndices:g,selectedScores:x}=g3(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const b3={kernelName:oh,backendName:"cpu",kernelFunc:x3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:i,depth:r,onValue:a,offValue:l}=s;ae(o,"oneHot");const u=G(o.shape),c=new Float32Array(u*r);c.fill(l);const h=t.data.get(o.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<r&&(c[d*r+h[d]]=a);return t.makeTensorInfo([...o.shape,r],i,c)}const w3={kernelName:Ll,backendName:"cpu",kernelFunc:y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zu(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ho({inputs:{input:s},backend:t}),i=Zu({inputs:{x:o},backend:t}),r=Ti({inputs:{input:s},backend:t}),a=Zu({inputs:{x:r},backend:t}),l=xn({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),l}else return Vp({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const v3={kernelName:Kl,backendName:"cpu",kernelFunc:Zu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function my(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ho({inputs:{input:s},backend:t}),i=my({inputs:{x:o},backend:t}),r=Ti({inputs:{input:s},backend:t}),a=Zu({inputs:{x:r},backend:t}),l=xn({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),l}else return Vp({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const k3={kernelName:Rl,backendName:"cpu",kernelFunc:my};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gy(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return Yu({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const i=e[0].shape,r=e[0].dtype;e.forEach(c=>{bc(i,c.shape,"All tensors passed to stack must have matching shapes"),C(r===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=Yu({inputs:{input:c},backend:t,attrs:{dim:o}});return a.push(h),h}),u=Ri({inputs:l,backend:t,attrs:{axis:o}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const C3={kernelName:Dl,backendName:"cpu",kernelFunc:gy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:i,constantValue:r}=s;ae(o,"pad");const a=i.map((b,w)=>b[0]+o.shape[w]+b[1]),l=i.map(b=>b[0]),u=t.data.get(o.dataId).values,c=G(o.shape),h=o.shape.length,d=ce(o.shape),p=G(a),f=a.length,m=ce(a),g=Vt(o.dtype,p);r!==0&&g.fill(r);for(let b=0;b<c;b++){const y=ri(b,h,d).map((k,I)=>k+l[I]),v=os(y,f,m);g[v]=u[b]}return{dataId:t.write(g,a,o.dtype),shape:a,dtype:o.dtype}}const xy={kernelName:Al,backendName:"cpu",kernelFunc:I3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $3=mt((n,e)=>Math.pow(n,e)),S3=St(Sr,$3),N3={kernelName:Sr,backendName:"cpu",kernelFunc:S3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:i,indices:r}=e,a=o.map(g=>t.data.get(g.dataId).values),l=o.map(g=>g.shape),u=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values,[h,d,p]=A1(a,l,u,i.shape,i.dtype,c,r.shape),f=h.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,i.dtype,d);return f.concat([m])}const T3={kernelName:Nf,backendName:"cpu",kernelFunc:E3};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:i}=e,r=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values,[u,c]=O1(r,s.shape,s.dtype,a,o.shape,l,i.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const L3={kernelName:Ef,backendName:"cpu",kernelFunc:R3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:i,defaultValue:r,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values,h=t.data.get(r.dataId).values,d=a.map(g=>t.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=P1(u,o.shape,c,i.shape,i.dtype,h,r.shape,d,p,l);return t.makeTensorInfo(f,i.dtype,m)}const A3={kernelName:Tf,backendName:"cpu",kernelFunc:D3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n){const{backend:e,attrs:t}=n,{start:s,stop:o,dtype:i,step:r}=t,a=B1(s,o,r,i);return e.makeTensorInfo([a.length],i,a)}const O3={kernelName:ih,backendName:"cpu",kernelFunc:F3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _3=We(Nr,n=>1/n),M3={kernelName:Nr,backendName:"cpu",kernelFunc:_3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:i,halfPixelCenters:r,size:a}=s;ae(o,"resizeBilinear");const l=ce(o.shape),[u,c]=a,[h,d,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(G([h,u,c,f])),x=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c];let w=0;const y=x[0]/b[0],v=x[1]/b[1];for(let k=0;k<h;k++)for(let I=0;I<u;I++){let $;r?$=y*(I+.5)-.5:$=y*I;const E=Math.max(0,Math.floor($)),S=$-E,L=Math.min(d-1,Math.ceil($)),_=k*l[0]+E*l[1],P=k*l[0]+L*l[1];for(let A=0;A<c;A++){let B;r?B=v*(A+.5)-.5:B=v*A;const V=Math.max(0,Math.floor(B)),H=B-V,W=Math.min(p-1,Math.ceil(B)),q=_+V*l[2],K=P+V*l[2],X=_+W*l[2],J=P+W*l[2];for(let Y=0;Y<f;Y++){const ne=m[q+Y],Q=m[K+Y],se=m[X+Y],ue=m[J+Y],he=ne+(se-ne)*H,de=Q+(ue-Q)*H,ye=he+(de-he)*S;g[w++]=ye}}}return t.makeTensorInfo([h,u,c,f],"float32",g)}const B3={kernelName:Pl,backendName:"cpu",kernelFunc:P3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:i}=e,{alignCorners:r}=s;ae([i,o],"resizeBilinearGrad");const a=ce(o.shape),[l,u,c,h]=o.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),m=[r&&d>1?u-1:u,r&&p>1?c-1:c],g=[r&&d>1?d-1:d,r&&p>1?p-1:p],x=m[0]/g[0],b=m[1]/g[1],w=t.data.get(i.dataId).values;let y=0;for(let v=0;v<l;v++){const k=v*a[0];for(let I=0;I<d;I++){const $=I*x,E=Math.floor($),S=Math.min(Math.ceil($),u-1),L=k+E*a[1],_=k+S*a[1],P=$-E,A=1-P;for(let B=0;B<p;B++){const V=B*b,H=Math.floor(V),W=Math.min(Math.ceil(V),c-1),q=V-H,K=1-q,X=L+H*a[2],J=L+W*a[2],Y=_+H*a[2],ne=_+W*a[2],Q=A*K,se=A*q,ue=P*K,he=P*q;for(let de=0;de<h;de++){const ye=w[y++];f[X+de]+=ye*Q,f[J+de]+=ye*se,f[Y+de]+=ye*ue,f[ne+de]+=ye*he}}}}return t.makeTensorInfo([l,c,u,h],"float32",f)}const V3={kernelName:lh,backendName:"cpu",kernelFunc:z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:i,halfPixelCenters:r,size:a}=s;ae(o,"resizeNearestNeighbor");const l=ce(o.shape),[u,c]=a,[h,d,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(h*u*c*f),x=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c],w=x[0]/b[0],y=x[1]/b[1];let v=0;for(let k=0;k<h;k++){const I=k*l[0];for(let $=0;$<u;$++){const E=r?w*($+.5):w*$;let S=Math.min(d-1,i?Math.round(E):Math.floor(E));r&&(S=Math.max(0,S));const L=I+S*l[1];for(let _=0;_<c;_++){const P=r?y*(_+.5):y*_;let A=Math.min(p-1,i?Math.round(P):Math.floor(P));r&&(A=Math.max(0,A));const B=L+A*l[2];for(let V=0;V<f;V++){const H=m[B+V];g[v++]=H}}}}return t.makeTensorInfo([h,u,c,f],o.dtype,g)}const U3={kernelName:Ml,backendName:"cpu",kernelFunc:W3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:i}=e,{alignCorners:r}=s;ae([i,o],"resizeNearestNeighborGrad");const a=ce(o.shape),l=ce(i.shape),[u,c,h,d]=o.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=t.data.get(i.dataId).values,x=[r&&p>1?c-1:c,r&&f>1?h-1:h],b=[r&&p>1?p-1:p,r&&f>1?f-1:f],w=x[0]/b[0],y=x[1]/b[1],v=1/w,k=1/y,I=Math.ceil(v)*2+2,$=Math.ceil(k)*2+2;for(let E=0;E<u;E++){const S=E*a[0];for(let L=0;L<c;L++){const _=S+L*a[1],P=Math.floor(L*v),A=Math.floor(P-I/2);for(let B=0;B<h;B++){const V=_+B*a[2],H=Math.floor(B*k),W=Math.floor(H-$/2);for(let q=0;q<d;q++){let K=0;for(let X=0;X<I;X++){const J=X+A;if(J<0||J>=p)continue;const Y=S+J*l[1],ne=J*w,Q=Math.min(c-1,r?Math.round(ne):Math.floor(ne));if(L===Q)for(let se=0;se<$;se++){const ue=se+W;if(ue<0||ue>=f)continue;const he=Y+ue*l[2],de=ue*y,ye=Math.min(h-1,r?Math.round(de):Math.floor(de));B===ye&&(K+=g[he+q])}}m[V+q]=K}}}}return t.makeTensorInfo(o.shape,o.dtype,m)}const H3={kernelName:ah,backendName:"cpu",kernelFunc:G3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:i}=s;ae(o,"reverse");const r=o.shape.length,a=$e(i,o.shape);if(r===0)return ys({inputs:{x:o},backend:t});const l=new At(o.shape,o.dtype),u=t.bufferSync(o);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();a.forEach(p=>d[p]=o.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const j3={kernelName:Bl,backendName:"cpu",kernelFunc:q3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K3={kernelName:mh,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:i,center:r}=e,a=t,l=Vt(s.dtype,G(s.shape)),[u,c,h,d]=s.shape,[p,f]=Td(r,c,h),m=255,g=Math.sin(o),x=Math.cos(o),b=a.data.get(s.dataId).values;for(let y=0;y<u;y++){const v=y*h*c*d;for(let k=0;k<c;k++){const I=k*(h*d);for(let $=0;$<h;$++){const E=$*d;for(let S=0;S<d;S++){const L=[u,k,$,S],_=L[2],P=L[1];let A=(_-p)*x-(P-f)*g,B=(_-p)*g+(P-f)*x;A=Math.round(A+p),B=Math.round(B+f);let V=i;if(typeof i!="number"&&(S===3?V=m:V=i[S]),A>=0&&A<h&&B>=0&&B<c){const W=B*(h*d),q=A*d,K=v+W+q+S;V=b[K]}const H=v+I+E+S;l[H]=V}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X3=We(Rr,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),Y3={kernelName:Rr,backendName:"cpu",kernelFunc:X3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:i}=e,{shape:r}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=_o(i,o,r),d=!0,p=t.bufferSync(o),f=t.bufferSync(i),m=qo(p,f,r,h,u,l,a,c,0,d);return t.makeTensorInfo(r,m.dtype,m.values)}const J3={kernelName:Rf,backendName:"cpu",kernelFunc:Z3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<e?t=o+1:s=o;return s}function eO(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<=e?t=o+1:s=o;return s}function tO(n,e,t,s,o,i){const r=ct("int32",t*o);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),u=a*o;for(let c=0;c<o;++c)r[u+c]=i==="left"?Q3(l,e[c+u]):eO(l,e[c+u])}return r}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:i}=e,{side:r}=s,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values,u=tO(a,l,o.shape[0],o.shape[1],i.shape[1],r);return t.makeTensorInfo(i.shape,"int32",u)}const sO={kernelName:Df,backendName:"cpu",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:i}=e;ae([s,o,i],"select");const r=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,u=t.data.get(i.dataId).values,c=fn(o.dtype,i.dtype),h=Wt(G(o.shape),c);let d=0;const p=r===0||r>1||o.shape.length===1?1:G(o.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=l[f]:h[d++]=u[f];return t.makeTensorInfo(o.shape,c,h)}const iO={kernelName:zl,backendName:"cpu",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rO=yu,aO=wu,lO=We(Dr,n=>n>=0?aO*n:rO*(Math.exp(n)-1)),uO={kernelName:Dr,backendName:"cpu",kernelFunc:lO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cO=We(Or,n=>n<0?-1:n>0?1:0),hO={kernelName:Or,backendName:"cpu",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO=We(Ar,n=>Math.sin(n)),pO={kernelName:Ar,backendName:"cpu",kernelFunc:dO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO=We(Fr,n=>Math.sinh(n)),mO={kernelName:Fr,backendName:"cpu",kernelFunc:fO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const by=Math.log(11920928955078125e-23)+2,gO=We(Mr,n=>{const e=n>-by,t=n<by,s=Math.exp(n);let o;return t?o=s:e?o=n:o=Math.log(1+s),o}),xO={kernelName:Mr,backendName:"cpu",kernelFunc:gO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:i,paddings:r}=s;ae([o],"spaceToBatchND");const a=G(i),l=[[0,0]];l.push(...r);for(let k=1+i.length;k<o.shape.length;++k)l.push([0,0]);const u=xy.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),c=la(u.shape,i,a,!1),h=ua(c.length,i.length,!1),d=ca(u.shape,i,a,!1),m=Ze({inputs:{x:u},backend:t,attrs:{shape:c}}),b=an({inputs:{x:m},backend:t,attrs:{perm:h}}),v=Ze({inputs:{x:b},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),v}const yO={kernelName:Ul,backendName:"cpu",kernelFunc:bO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:i,defaultValue:r}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(r.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${r.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,u=t.data.get(i.dataId).values,c=t.data.get(r.dataId).values[0],[h,d,p,f,m]=U1(a,s.shape,s.dtype,l,o.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const vO={kernelName:Af,backendName:"cpu",kernelFunc:wO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const r=Array.from(t.data.get(o.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(i.dataId).values),[u,c,h]=G1(a,s.shape,s.dtype,r,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const CO={kernelName:Ff,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(o.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const r=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values,[u,c]=Op(r,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const $O={kernelName:Of,backendName:"cpu",kernelFunc:IO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(o.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const r=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values,[u,c]=Op(r,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const NO={kernelName:_f,backendName:"cpu",kernelFunc:SO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:i,defaultValue:r}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=_o(i,o,a),p=!1,f=t.bufferSync(o);let m;switch(i.dtype){case"bool":{const g=t.bufferSync(i),x=!!t.data.get(r.dataId).values[0];m=qo(f,g,a,d,c,u,l,h,x,p);break}case"float32":{const g=t.bufferSync(i),x=t.data.get(r.dataId).values[0];m=qo(f,g,a,d,c,u,l,h,x,p);break}case"int32":{const g=t.bufferSync(i),x=t.data.get(r.dataId).values[0];m=qo(f,g,a,d,c,u,l,h,x,p);break}case"string":{const g=t.bufferSync(i),x=Hs(t.data.get(r.dataId).values[0]);m=qo(f,g,a,d,c,u,l,h,x,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return t.makeTensorInfo(a,m.dtype,m.values)}const TO={kernelName:Mf,backendName:"cpu",kernelFunc:EO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:i,axis:r}=s,a=$e(r,o.shape)[0],l=Hd(o,i,a),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(h=>{const d=[...c];d[a]=h;const p=jo({inputs:{x:o},backend:t,attrs:{begin:u,size:d}});return u[a]+=h,p})}const LO={kernelName:Gl,backendName:"cpu",kernelFunc:RO};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO={kernelName:uh,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;ae(t,"square");const o=s.data.get(t.dataId).values,i=new Float32Array(o.length);for(let a=0;a<o.length;++a){const l=o[a];i[a]=l*l}return{dataId:s.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AO=We(Gr,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),FO={kernelName:Gr,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:i,end:r,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;ae(o,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=Sd(o.shape,i,r,a,l,u,c,h,d);let v;if(m)v=Ze({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||x){C(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const k=Cd(b,w,y),I=jo({inputs:{x:o},backend:t,attrs:{begin:b,size:k}});v=Ze({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(I)}else{const k=t.bufferSync(o),I=j1(p,k,y,b);v=t.makeTensorInfo(f,I.dtype,I.values)}return v}const _O={kernelName:hh,backendName:"cpu",kernelFunc:OO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:i,leftPad:r,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.data.get(c.dataId).values,p=t.data.get(h.dataId).values,[f,m]=K1(d,p,o,i,r,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const PO={kernelName:Pf,backendName:"cpu",kernelFunc:MO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:i,delimiter:r}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(r.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const a=t.data.get(i.dataId).values,l=t.data.get(r.dataId).values[0],[u,c,h]=X1(a,l,o),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const zO={kernelName:Bf,backendName:"cpu",kernelFunc:BO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const r=t.data.get(i.dataId).values,a=Y1(r,o);return t.makeTensorInfo(i.shape,"int32",a)}const WO={kernelName:zf,backendName:"cpu",kernelFunc:VO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=We(Vr,n=>Math.tan(n)),GO={kernelName:Vr,backendName:"cpu",kernelFunc:UO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HO=We(Wr,n=>Math.tanh(n)),qO={kernelName:Wr,backendName:"cpu",kernelFunc:HO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n){const{inputs:e,backend:t}=n,{tensor:s,indices:o,updates:i}=e,{sliceRank:r,numUpdates:a,sliceSize:l,strides:u,outputSize:c}=_o(i,o,s.shape),h=!1,d=t.bufferSync(o),p=t.bufferSync(i),f=t.bufferSync(s),m=qo(d,p,s.shape,c,l,a,r,u,f,h);return t.makeTensorInfo(s.shape,m.dtype,m.values)}const KO={kernelName:Lf,backendName:"cpu",kernelFunc:jO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:i}=s;ae(o,"tile");const r=J1(t.bufferSync(o),i);return t.makeTensorInfo(r.shape,r.dtype,r.values)}const YO={kernelName:Ur,backendName:"cpu",kernelFunc:XO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:i,sorted:r}=s;ae(o,"topk");const a=t.data.get(o.dataId).values,[l,u]=ey(a,o.shape,o.dtype,i,r);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const JO={kernelName:dh,backendName:"cpu",kernelFunc:ZO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n){const{inputs:e,attrs:t,backend:s}=n,{image:o,transforms:i}=e,{interpolation:r,fillMode:a,fillValue:l,outputShape:u}=t,[c,h,d,p]=o.shape,[f,m]=u??[h,d],g=[c,f,m,p],x=ce(o.shape),b=x[0],w=x[1],y=x[2],v=ce(g),k=v[0],I=v[1],$=v[2],E=Vt(o.dtype,G(g));E.fill(l);const S=s.data.get(o.dataId).values,L=s.data.get(i.dataId).values;for(let P=0;P<c;++P){const A=i.shape[0]===1?L:L.subarray(P*8,P*8+8);for(let B=0;B<f;++B)for(let V=0;V<m;++V)for(let H=0;H<p;++H){let W;const q=A[6]*V+A[7]*B+1;if(q===0)continue;const K=(A[0]*V+A[1]*B+A[2])/q,X=(A[3]*V+A[4]*B+A[5])/q,J=yy(K,d,a),Y=yy(X,h,a);switch(r){case"nearest":W=i_(S,h,d,b,w,y,P,Y,J,H,l);break;case"bilinear":W=r_(S,h,d,b,w,y,P,Y,J,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${r}`)}const ne=P*k+B*I+V*$+H;E[ne]=W}return s.makeTensorInfo(g,o.dtype,E)}return{dataId:s.write(E,g,o.dtype),shape:o.shape,dtype:o.dtype}}const e_={kernelName:ph,backendName:"cpu",kernelFunc:QO};function yy(n,e,t){switch(t){case"reflect":return t_(n,e);case"wrap":return n_(n,e);case"nearest":return o_(n,e);case"constant":default:return s_(n)}}function t_(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return mo(0,t,e-1)}function n_(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return mo(0,t,e-1)}function s_(n,e){return n}function o_(n,e){return mo(0,n,e-1)}function Ta(n,e,t,s,o,i,r,a,l,u,c){const h=r*s+a*o+l*i+u;return 0<=a&&a<e&&0<=l&&l<t?n[h]:c}function i_(n,e,t,s,o,i,r,a,l,u,c){const h=Math.round(a),d=Math.round(l);return Ta(n,e,t,s,o,i,r,h,d,u,c)}function r_(n,e,t,s,o,i,r,a,l,u,c){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*Ta(n,e,t,s,o,i,r,h,d,u,c)+(l-d)*Ta(n,e,t,s,o,i,r,h,f,u,c),g=(f-l)*Ta(n,e,t,s,o,i,r,p,d,u,c)+(l-d)*Ta(n,e,t,s,o,i,r,p,f,u,c);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:i}=e;ae(i,"unique");const r=s.data.get(i.dataId).values,{outputValues:a,outputShape:l,indices:u}=ty(r,o,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const l_={kernelName:fh,backendName:"cpu",kernelFunc:a_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:i}=s;i<0&&(i+=o.shape.length);const r=o.shape.length,a=o.shape[i],l=new Array(r-1);let u=0;for(let p=0;p<r;p++)p!==i&&(l[u++]=o.shape[p]);const c=new Array(r).fill(0),h=o.shape.slice();h[i]=1;const d=new Array(a);for(let p=0;p<d.length;p++){c[i]=p;const f=jo({inputs:{x:o},backend:t,attrs:{begin:c,size:h}});d[p]=Ze({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return d}const c_={kernelName:ql,backendName:"cpu",kernelFunc:u_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:i}=e,{numSegments:r}=s;ae(o,"unsortedSegmentSum");const a=o.shape.length,l=i.shape.length,u=[],c=[],h=a-l;let d=i;for(let f=0;f<h;++f){const m=Yu({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<r;++f){const m=Us(f,"int32"),g=t.makeTensorInfo([],"int32",m),x=d1({inputs:{a:g,b:d},backend:t}),b=ao({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=ju({inputs:{a:b,b:o},backend:t}),y=Ea({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});u.push(y),c.push(g),c.push(x),c.push(b),c.push(w),c.push(y)}const p=gy({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const d_={kernelName:jl,backendName:"cpu",kernelFunc:h_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_=[uD,UR,hD,pD,XR,mD,xD,yD,vD,CD,$D,ND,TD,DD,FD,MD,BD,VD,UD,aD,HD,jD,XD,ZR,ZD,jR,QR,QD,GR,eA,nA,sA,iA,aA,uA,hA,pA,mA,xA,yA,vA,CA,$A,NA,EA,RA,DA,FA,OA,_A,MA,BA,WA,eD,GA,eL,JA,tL,QA,sL,iF,rF,lF,iL,aL,cF,dF,fF,gF,uL,hL,HR,bF,tA,wF,kF,IF,tD,pL,mL,SF,xL,EF,LF,AF,_F,PF,zF,VF,yL,UF,HF,jF,XF,ZF,QF,t3,vL,s3,r3,u3,CL,$L,d3,m3,b3,NL,w3,k3,C3,xy,N3,sD,RL,T3,L3,A3,O3,qR,Bp,M3,oD,iD,rD,B3,V3,U3,H3,j3,K3,Y3,PL,J3,sO,iO,uO,zL,hO,pO,mO,VL,a3,xO,yO,vO,CO,$O,NO,TO,LO,GL,DO,qL,KL,FO,_O,PO,zO,WO,JL,zA,GO,qO,KO,YO,JO,e_,EL,l_,c_,d_,v3];for(const n of p_)Hf(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko={},Ju={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function f_(n,e){Ko[n]=e}function ss(n,e){if(!(n in Ko)||e!=null){const s=g_(n,e);if(s!==null)Ko[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Ko[n];return t==null||t.isContextLost()?(delete Ko[n],ss(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ko[n])}function m_(n){if(!z().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function g_(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??m_(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Ko[n]},!1),z().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ju.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Ju)||t.getContext("experimental-webgl",Ju):t.getContext("webgl2",Ju)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ra;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Ra||(Ra={}));var $n;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})($n||($n={}));var _t;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(_t||(_t={}));function La(n,e){return[e,n]}function x_(n,e){return n*e}function Qu(n){const e=G(n),t=Math.ceil(e/4);return yc(t)}function Li(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function b_(n,e){const[t,s]=Li(n,e);return t*s*4}function Wp(n,e){const t=n;let s,o,i,r,a,l,u,c,h,d;return z().getNumber("WEBGL_VERSION")===2?(s=t.R32F,o=t.R16F,i=t.RGBA16F,r=t.RGBA32F,a=t.RED,u=4,c=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,o=n.RGBA,i=n.RGBA,r=t.RGBA,a=n.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:r,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(n,e){const t=e();return z().getBool("DEBUG")&&y_(n),t}function y_(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+C_(n,e))}const w_=596e-10,v_=65504;function k_(n){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||w_<Math.abs(n)&&Math.abs(n)<v_)}function C_(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function ec(n,e){return Os(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function I_(n,e){const t=Os(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(re(n,()=>n.shaderSource(t,e)),re(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function $_(n,e){const t=Os(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(re(n,()=>n.shaderSource(t,e)),re(n,()=>n.compileShader(t)),z().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw wy(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const S_=/ERROR: [0-9]+:([0-9]+):/g;function wy(n,e){const t=S_.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],o=n.split(`
`),i=o.length.toString().length+2,r=o.map((h,d)=>oi((d+1).toString(),i)+h);let a=0;for(let h=0;h<r.length;h++)a=Math.max(r[h].length,a);const l=r.slice(0,s-1),u=r.slice(s-1,s),c=r.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${oi(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function N_(n){return Os(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function E_(n,e){if(re(n,()=>n.linkProgram(e)),!z().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Up(n,e){if(re(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function T_(n,e){const t=Os(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),re(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function R_(n,e){const t=Os(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return re(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),re(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function L_(n){return Os(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function D_(n,e){const t=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+o+".")}}function A_(n){return Os(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function vy(n,e,t,s,o,i,r){const a=n.getAttribLocation(e,t);return a===-1?!1:(re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),re(n,()=>n.vertexAttribPointer(a,o,n.FLOAT,!1,i,r)),re(n,()=>n.enableVertexAttribArray(a)),!0)}function F_(n,e,t){B_(n,t),re(n,()=>n.activeTexture(n.TEXTURE0+t)),re(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function O_(n,e,t){return Os(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function __(n,e,t){return n.getUniformLocation(e,t)}function M_(n,e,t,s){re(n,()=>F_(n,e,s)),re(n,()=>n.uniform1i(t,s))}function Gp(n,e,t){re(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),re(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function ky(n,e){re(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),re(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function tc(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+P_(n,e))}function P_(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Os(n,e,t){const s=re(n,()=>e());if(s==null)throw new Error(t);return s}function B_(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Di(n,e=2){return G(n.slice(0,n.length-e))}function Ai(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function nc(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Di(n),...Ai(n)]),e}function z_(n,e=!1){let t=z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?xc(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Vs(n).newShape);let o=G(n),i=null;n.length<=1&&o<=t?i=[1,o]:n.length===2&&n[0]<=t&&n[1]<=t?i=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(i=[n[0],n[1]*n[2]*n[3]]);const r=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||r)if(e){const a=Di(n);let l=2,u=2;n.length&&([l,u]=Ai(n)),o=a*(l/2)*(u/2),i=yc(o).map(c=>c*2)}else i=yc(o);return i}function sc(n){return n%2===0}function oc(n,e){if(n=n.slice(-2),e=e.slice(-2),Fe(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||sc(t)&&sc(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&sc(n[0])&&sc(e[0])}let Hp,qp;function V_(n){if(Hp==null){const e=ss(n);Hp=e.getParameter(e.MAX_TEXTURE_SIZE)}return Hp}function W_(n){if(qp==null){const e=ss(n);qp=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,qp)}function U_(n){if(n===0)return 0;let e;const t=ss(n);return Vn(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Vn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Vn(n,e){return n.getExtension(e)!=null}function Cy(n){try{if(ss(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function G_(n){if(n===0)return!1;const e=ss(n);if(n===1){if(!Vn(e,"OES_texture_float"))return!1}else if(!Vn(e,"EXT_color_buffer_float"))return!1;return jp(e)}function H_(n){if(n===0)return!1;const e=ss(n);if(n===1){if(!Vn(e,"OES_texture_float")||!Vn(e,"WEBGL_color_buffer_float"))return!1}else{if(Vn(e,"EXT_color_buffer_float"))return jp(e);const s="EXT_color_buffer_half_float";if(Vn(e,s)){const o=e.getExtension(s);return q_(e,o)}return!1}return jp(e)}function jp(n){const e=Wp(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const r=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(i),r}function q_(n,e){const t=Wp(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(r),a}function j_(n){return n!==2?!1:ss(n).fenceSync!=null}function Da(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&C(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const le=z();le.registerFlag("HAS_WEBGL",()=>le.getNumber("WEBGL_VERSION")>0),le.registerFlag("WEBGL_VERSION",()=>Cy(2)?2:Cy(1)?1:0),le.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),le.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>le.get("WEBGL_VERSION")===2),le.registerFlag("WEBGL_CPU_FORWARD",()=>!0),le.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),le.registerFlag("WEBGL_PACK",()=>le.getBool("HAS_WEBGL")),le.registerFlag("WEBGL_PACK_NORMALIZATION",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_CLIP",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_REDUCE",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_LAZILY_UNPACK",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_CONV_IM2COL",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>le.getBool("WEBGL_PACK")),le.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>V_(le.getNumber("WEBGL_VERSION"))),le.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>W_(le.getNumber("WEBGL_VERSION"))),le.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=le.getNumber("WEBGL_VERSION");return n===0?0:U_(n)}),le.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>le.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!xm()),le.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>G_(le.getNumber("WEBGL_VERSION"))),le.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>le.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:le.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),le.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>H_(le.getNumber("WEBGL_VERSION"))),le.registerFlag("WEBGL_FENCE_API_ENABLED",()=>j_(le.getNumber("WEBGL_VERSION"))),le.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>le.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),le.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),le.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>xm()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),le.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),le.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),le.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),le.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),le.registerFlag("WEBGL_EXP_CONV",()=>!1),le.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>le.getBool("IS_TEST")),le.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),le.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),le.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),le.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(){let n,e,t,s,o,i,r,a,l,u;return z().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",o="texture",i="outputColor",r="out vec4 outputColor;",a=z().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",o="texture2D",i="gl_FragColor",r="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:o,output:i,defineOutput:r,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xo(n,e,t="index"){const s=ce(e);return s.map((o,i)=>{const r=`int ${n[i]} = ${t} / ${o}`,a=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${o}`:`index -= ${n[i]} * ${o}`;return`${r}; ${a};`}).join("")}function ic(n,e,t="index"){const s=ce(e);return s.map((o,i)=>{const r=`int ${n[i]} = ${t} / outShapeStrides[${i}]`,a=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${r}; ${a};`}).join("")}function K_(n,e){const t=n.length,s=n.map(i=>`${e}[${i}]`),o=new Array(t-1);o[t-2]=s[t-1];for(let i=t-3;i>=0;--i)o[i]=`(${o[i+1]} * ${s[i+1]})`;return o}function X_(n,e,t="index"){const s=n.map((i,r)=>r),o=K_(s,e);return o.map((i,r)=>{const a=`int ${n[r]} = ${t} / ${o[r]}`,l=r===o.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * ${o[r]}`:`index -= ${n[r]} * ${o[r]}`;return`${a}; ${l};`}).join("")}function Kp(n){const e=ce(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Xp(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Iy=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:$y}=WS;function Y_(n,e,t){const s=[];if(n.forEach(p=>{const f=G(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=Yp(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const o=s.join(`
`),i=n.map(p=>Z_(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),r=e.texShape,a=Yt(),l=eM(a);let u,c,h=sM(a);return e.isPacked?(u=J_(e.logicalShape,r,t.enableShapeUniforms),c=nM(a)):(u=Q_(e.logicalShape,r,t.enableShapeUniforms),c=tM(a)),t.packedInputs&&(h+=aM),[h,l,c,o,u,i,t.userCode].join(`
`)}function Fi(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return yM(n,e);case 1:return vM(n,e);case 2:return CM(n,e);case 3:return $M(n,e);case 4:return NM(n,e);case 5:return EM(n);case 6:return TM(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Sy(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return bM(n);case 1:return wM(n,e);case 2:return kM(n,e);case 3:return IM(n,e);default:return SM(n,e)}}function Z_(n,e,t=!1,s){let o="";t?o+=Sy(n,s):o+=Fi(n,s);const i=n.shapeInfo.logicalShape,r=e.logicalShape;return i.length<=r.length&&(t?o+=RM(n,e):o+=LM(n,e)),o}function J_(n,e,t){switch(n.length){case 0:return Ny();case 1:return lM(n,e,t);case 2:return gM(n,e,t);case 3:return cM(n,e,t);default:return dM(n,e,t)}}function Q_(n,e,t){switch(n.length){case 0:return Ny();case 1:return uM(n,e,t);case 2:return xM(n,e,t);case 3:return hM(n,e,t);case 4:return pM(n,e,t);case 5:return fM(n,e);case 6:return mM(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function eM(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function tM(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function nM(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function sM(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${oM}
    ${iM}
    ${rM}
  `}const oM=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,iM=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,rM=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,aM=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Ny(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function lM(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function uM(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function cM(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[2]/2),i=o*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function hM(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ic(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Xo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function dM(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[n.length-1]/2),i=o*Math.ceil(n[n.length-2]/2);let r=i,a="",l="b, r, c";for(let u=2;u<n.length-1;u++)r*=n[n.length-u-1],a=`
      int b${u} = index / ${r};
      index -= b${u} * ${r};
    `+a,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${n.length}(${l});
    }
  `}function pM(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ic(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Xo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function fM(n,e){const t=Xo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function mM(n,e){const t=Xo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function gM(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Fe(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const o=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function xM(n,e,t){return Fe(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Yo(n){return`offset${n}`}function bM(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Yt();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function yM(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[o,i]=n.shapeInfo.texShape;if(o===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const r=Yo(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${r});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${r});
      return sampleTexture(${t}, uv);
    }
  `}function wM(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=n.shapeInfo.texShape,i=Yt();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${t}, uv);
    }
  `;const r=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${i.texture2D}(${t}, uv);
    }
  `}function vM(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Oi(n)}
      }
    `;const o=n.shapeInfo.texShape,i=o[0],r=o[1];if(r===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Yo(t);return r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${t}, uv);
      }
    `:i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${r}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${r}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function kM(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,r=i[0],a=i[1],l=Yt();if(i!=null&&Fe(t,i))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${r}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function CM(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape;if(i!=null&&Fe(t,i)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=i[0],p=i[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:r,keptDims:a}=Vs(t),l=r;if(l.length<t.length){const d=_i(n,l),p=["row","col"];return`
      ${Fi(d,e)}
      float ${o}(int row, int col) {
        return ${o}(${Mi(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Oi(n)}
      }
    `;const u=i[0],c=i[1],h=Yo(s);return c===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function IM(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,r=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=_i(n,d),m=["b","row","col"];return`
        ${Sy(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Mi(m,p)});
        }
      `}const a=Yt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=r[0],u=r[1],c=Math.ceil(t[2]/2),h=c*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function $M(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[1]*t[2],r=t[2],{newShape:a,keptDims:l}=Vs(t),u=a;if(u.length<t.length){const m=_i(n,u),g=["row","col","depth"];return`
        ${Fi(m,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Mi(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${r}, 1)));
        ${Oi(n)}
      }
    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===i&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${r}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===r&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Yo(s);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${r} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function SM(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Yt();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,r=i.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[r-1]/2);let d=h*Math.ceil(i[r-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<r-1;m++)p=`int b${m}, `+p,d*=i[r-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${o.texture2D}(${t}, uv);
    }
  `}function NM(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[3],r=t[2]*i,a=t[1]*r,{newShape:l,keptDims:u}=Vs(t);if(l.length<t.length){const b=_i(n,l),w=["row","col","depth","depth2"];return`
      ${Fi(b,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Mi(w,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${r}, ${i}, 1)));
        ${Oi(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&c==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===i&&c==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=Yo(s);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${r} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function EM(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],i=e[3]*o,r=e[2]*i,a=e[1]*r,{newShape:l,keptDims:u}=Vs(e);if(l.length<e.length){const m=_i(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${Fi(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Mi(g,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${r}, ${i}, ${o})) +
          depth3;
        ${Oi(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${r}, ${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Yo(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${r} + depth * ${i} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function TM(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:i}=Vs(e);if(o.length<e.length){const g=_i(n,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Fi(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Mi(x,i)});
      }
    `}const r=e[5],a=e[4]*r,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${r}, 1)));
        ${Oi(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${r})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===r&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Yo(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${r} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Oi(n){const e=n.name,t=G(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function RM(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,r=e.logicalShape.length,a=$y(n.shapeInfo.logicalShape,e.logicalShape),l=Ge(r),u=r-i;let c;const h=["x","y","z","w","u","v"];i===0?c="":r<2&&a.length>=1?c="coords = 0;":c=a.map(b=>`coords.${h[b+u]} = 0;`).join(`
`);let d="";r<2&&i>0?d="coords":d=n.shapeInfo.logicalShape.map((b,w)=>`coords.${h[w+u]}`).join(", ");let p="return outputValue;";const m=G(n.shapeInfo.logicalShape)===1,x=G(e.logicalShape)===1;if(i===1&&!m&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)r===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const b=i-2,w=i-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function LM(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",i=e.texShape,r=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&Fe(r,i))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=Ge(l),c=$y(n.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function Ge(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Yp(n,e,t){const{newShape:s,keptDims:o}=Vs(e),i=e.length,r=n&&i===3&&e[0]===1,a=r?e.slice(1):s,l=!n&&i>1&&!Fe(e,t)&&s.length<i||r;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:o}}function _i(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Mi(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,e,t,s){const o=t.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),i=o.map(c=>c.shapeInfo),r={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=Y_(o,r,e),l=$_(n.gl,a),u=n.createProgram(l);return z().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:r,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:i,outShapeInfo:r},Ey(n,e,u)))}function Ey(n,e,t){const s=[],o=[];let i,r,a,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),z().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,c),offset:n.getUniformLocation(t,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,c),d.texShape=n.getUniformLocation(t,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",c),a=n.getUniformLocation(t,"outShapeStrides",c),r=n.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)o.push(n.getUniformLocation(t,h.name,c));return{variablesLocations:s,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:r}}function Ty(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const o=t.logicalShape,i=e[s],r=i.shape;if(!Fe(o,r))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${r} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,l=i.isUniform?null:i.texData.texShape;if(!Fe(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function AM(n,e,t,s,o){e.program.enableShapeUniforms||(Ty(e.inShapeInfos,t),Ty([e.outShapeInfo],[s]));const i=s.texData.texture,r=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,r[0],r[1]):n.setOutputMatrixTexture(i.texture,r[0],r[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),z().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:c,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=Yp(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(G(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=ce(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&o)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=o[l];if(u.type==="float")n.gl.uniform1fv(c,h);else if(u.type==="vec2")n.gl.uniform2fv(c,h);else if(u.type==="vec3")n.gl.uniform3fv(c,h);else if(u.type==="vec4")n.gl.uniform4fv(c,h);else if(u.type==="int")n.gl.uniform1iv(c,h);else if(u.type==="ivec2")n.gl.uniform2iv(c,h);else if(u.type==="ivec3")n.gl.uniform3iv(c,h);else if(u.type==="ivec4")n.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function FM(n,e,t){let s="";e.concat(t).forEach(r=>{const a=r.texData!=null&&r.texData.slice!=null&&r.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!r.isUniform){const l=r.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=Yp(n.packedInputs,r.shape,l);let d="",p="",f="";if(c.length===1&&n.packedInputs){const v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const v=ce(c);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}const m=r.shape.length,g=c.length===2&&Fe(r.shape,l),x=G(r.shape)===1,b=xi(r.shape,t.shape),w=!n.packedInputs&&m===t.shape.length&&Fe(l,t.texData.texShape),y=n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${u?h:""}_${c.length}_${x}_${b}_${g}_${d}_${p}_${f}_${y}_${a}`}else{const l=r.isUniform?"uniform":r.texData.texShape;s+=`${r.shape}_${l}_${a}`}});const o=n.userCode;let i=n.constructor.name;return i+="_"+s+"_"+o+`${z().getNumber("WEBGL_VERSION")}`,i}function qt(n){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ra.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Yt();this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ic(["r","c","d"],e):Xo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _M{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ra.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Yt();this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ic(["r","c","d"],e):Xo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MM{constructor(e){this.variableNames=["A"],this.outTexUsage=$n.DOWNLOAD;const t=Yt();this.outputShape=e,this.userCode=`
      ${Iy}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$n.DOWNLOAD;const t=Yt();this.outputShape=e,this.userCode=`
      ${Iy}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BM={R:0,G:1,B:2,A:3};class Ry{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=Yt();this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)");let r="";for(let a=0;a<s.length;a++){const l=s[a];r+=`
          if(offset == ${a}) {
            result = values[${BM[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Xp():Kp(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${r}
        }
        ${o.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zM{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Yt();this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length);let o="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){const l=r*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${r} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${r};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Xp():Kp(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n){const e=Yt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return I_(n,t)}function WM(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return T_(n,e)}function UM(n){const e=new Uint16Array([0,1,2,2,1,3]);return R_(n,e)}function Aa(n,e,t,s,o,i){D_(e,t);const r=L_(n),a=n.TEXTURE_2D;return re(n,()=>n.bindTexture(a,r)),re(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),re(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),re(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),re(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),z().getNumber("WEBGL_VERSION")===1?re(n,()=>n.texImage2D(a,0,s,e,t,0,o,i,null)):re(n,()=>n.texStorage2D(a,1,s,e,t)),re(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:r,texShape:[t,e]}}function Ly(n){return n.internalFormatFloat}function GM(n,e,t,s){const[o,i]=La(e,t);return Aa(n,o,i,Ly(s),s.textureFormatFloat,n.FLOAT)}function Dy(n){return n.internalFormatHalfFloat}function HM(n,e,t,s){const[o,i]=La(e,t);return Aa(n,o,i,Dy(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Ay(n){return n.downloadTextureFormat}function qM(n,e,t,s){const[o,i]=La(e,t);return Aa(n,o,i,Ay(s),n.RGBA,n.UNSIGNED_BYTE)}function Fy(n){return n.internalFormatPackedFloat}function jM(n,e,t,s){const[o,i]=Li(e,t);return Aa(n,o,i,Fy(s),n.RGBA,n.FLOAT)}function Oy(n){return n.internalFormatPackedHalfFloat}function KM(n,e,t,s){const[o,i]=Li(e,t);return Aa(n,o,i,Oy(s),n.RGBA,s.textureTypeHalfFloat)}function XM(n,e,t){return re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),vy(n,e,"clipSpacePos",t,3,20,0)&&vy(n,e,"uv",t,2,20,12)}function YM(n,e,t,s,o,i){re(n,()=>n.bindTexture(n.TEXTURE_2D,e));let r,a,l;o instanceof Uint8Array?(r=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(r=new Float32Array(t*s*4),a=n.FLOAT,l=i.internalFormatPackedFloat),r.set(o),z().getNumber("WEBGL_VERSION")===2?re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,r)):re(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,r)),re(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function ZM(n,e,t){re(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?z().getNumber("WEBGL_VERSION")===2?re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):re(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):z().getNumber("WEBGL_VERSION")===2?re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):re(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),re(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function JM(n,e,t,s){const o=n.createBuffer();re(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,o));const a=4*4*e*t;return re(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),re(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),re(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),o}function QM(n,e,t){const s=n,o=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,o),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),o}function eP(n,e,t,s){const[o,i]=La(e,t),r=4,a=new Uint8Array(x_(e*t,r));return re(n,()=>n.readPixels(0,0,o,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function tP(n,e,t,s,o,i,r,a){const l=n,u=new Float32Array(b_(i,r));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function nP(n,e,t){const s=new Float32Array(e*t*4);return re(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zp{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=z().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,f_(t,e)):this.gl=ss(t),e=this.gl,z().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>re(i,()=>i.createVertexArray()),this.bindVertexArray=r=>re(i,()=>i.bindVertexArray(r)),this.deleteVertexArray=r=>re(i,()=>i.deleteVertexArray(r)),this.getVertexArray=()=>re(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>re(e,()=>i.createVertexArrayOES()),this.bindVertexArray=r=>re(e,()=>i.bindVertexArrayOES(r)),this.deleteVertexArray=r=>re(e,()=>i.deleteVertexArrayOES(r)),this.getVertexArray=()=>re(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),z().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",r="OES_texture_half_float";if(this.textureFloatExtension=ec(this.gl,i),Vn(this.gl,r))this.textureHalfFloatExtension=ec(this.gl,r);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Vn(this.gl,o))this.colorBufferHalfFloatExtension=ec(this.gl,o);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Vn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Vn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=WM(this.gl),this.indexBuffer=UM(this.gl),this.framebuffer=A_(this.gl),this.textureConfig=Wp(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;re(e,()=>e.finish()),re(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),re(e,()=>e.deleteFramebuffer(this.framebuffer)),re(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),re(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),re(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),GM(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),HM(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),qM(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),ZM(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,o){this.throwIfDisposed(),YM(this.gl,e,t,s,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),KM(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),jM(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ky(this.gl,this.framebuffer),this.outputTexture=null),re(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>eP(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,o,i,r){return tP(this.gl,e,t,s,o,i,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return QM(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const o=JM(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(z().getBool("WEBGL_FENCE_API_ENABLED")){const o=e,i=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const r=o.clientWaitSync(i,0,0);return r===o.ALREADY_SIGNALED||r===o.CONDITION_SATISFIED},t=i}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>nP(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=VM(t));const s=N_(t);re(t,()=>t.attachShader(s,this.vertexShader)),re(t,()=>t.attachShader(s,e)),E_(t,s);const o=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Up(t,o),o}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;re(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),XM(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(re(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Up(this.gl,this.program),re(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?O_(this.gl,e,t):__(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),re(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),M_(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[o,i]=Li(t,s);this.setOutputMatrixTextureDriver(e,o,i)}setOutputMatrixWriteRegion(e,t,s,o){this.setOutputMatrixWriteRegionDriver(s,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,s,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Up(this.gl,this.program),tc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}re(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),re(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=ec(this.gl,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(o.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await pf(()=>this.disposed||this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),o=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=sP(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in z().platform&&(s=z().platform.setTimeoutCustom.bind(z().platform)),pf(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Gp(this.gl,e,this.framebuffer),this.debug&&tc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Gp(this.gl,this.outputTexture,this.framebuffer),this.debug&&tc(this.gl)):ky(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const o=this.gl;Gp(o,e,this.framebuffer),this.debug&&tc(o),this.outputTexture=e,re(o,()=>o.viewport(0,0,t,s)),re(o,()=>o.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,o){this.throwIfDisposed(),re(this.gl,()=>this.gl.scissor(e,t,s,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function sP(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:oP,bincountImpl:_y,bincountReduceImpl:iP,bitwiseAndImpl:rP,castImpl:aP,ceilImpl:lP,concatImpl:uP,equalImpl:cP,expImpl:hP,expm1Impl:dP,floorImpl:pP,gatherNdImpl:fP,gatherV2Impl:mP,greaterImpl:gP,greaterEqualImpl:xP,lessImpl:bP,lessEqualImpl:yP,linSpaceImpl:wP,logImpl:vP,maxImpl:kP,maximumImpl:CP,minimumImpl:IP,multiplyImpl:$P,negImpl:SP,notEqualImpl:NP,prodImpl:EP,raggedGatherImpl:TP,raggedRangeImpl:RP,raggedTensorToTensorImpl:LP,rangeImpl:DP,rsqrtImpl:AP,scatterImpl:FP,sigmoidImpl:OP,simpleAbsImpl:My,sliceImpl:_P,sparseFillEmptyRowsImpl:MP,sparseReshapeImpl:PP,sparseSegmentReductionImpl:Py,sqrtImpl:BP,staticRegexReplaceImpl:zP,stridedSliceImpl:VP,stringNGramsImpl:WP,stringSplitImpl:UP,stringToHashBucketFastImpl:GP,subImpl:HP,tileImpl:qP,topKImpl:jP,transposeImpl:Jp,uniqueImpl:KP}=QL;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Zt(n,e){return e===1?[n]:By(n,e)}function XP(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YP{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=qt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Zt("rc",this.rank),s=Ge(this.rank),o=this.getOutOfBoundsCondition(t),i=this.getSetup(t),r=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${r}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let o=0;o<=1;o++){let i=`${s===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let r=2;r<this.rank;r++)i=`${e[e.length-1-r]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length);let s="";for(let o=0;o<4;o++){let i="thisRC = rc;";o%2===1&&(i+="thisRC.z += 1;"),o>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${ZP(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Xp():Kp(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function ZP(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?X_(["r","c","d"],"inputShape"):Xo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JP{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const o=Wy(t,s),i=Uy(e,o,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const r=Vy(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return o===_t.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===_t.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===_t.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===_t.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===_t.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),a}releaseTexture(e,t,s,o){if(this.freeTextures==null)return;const i=Wy(s,o),r=Uy(t,i,o);r in this.freeTextures||(this.freeTextures[r]=[]);const a=Vy(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=z().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[r].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[r],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function QP(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Vy(n,e,t,s,o){const i=e4(e,s);let r;if(o){const[l,u]=Li(n[0],n[1]);r=l*u}else{const[l,u]=La(n[0],n[1]);r=l*u}const a=QP(t,i);return r*a}function e4(n,e){switch(n){case _t.PACKED_2X2_FLOAT32:return Fy(e);case _t.PACKED_2X2_FLOAT16:return Oy(e);case _t.UNPACKED_FLOAT32:return Ly(e);case _t.UNPACKED_FLOAT16:return Dy(e);case _t.PACKED_4X1_UNSIGNED_BYTE:return Ay(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function t4(n){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?_t.PACKED_2X2_FLOAT32:_t.UNPACKED_FLOAT32:n?_t.PACKED_2X2_FLOAT16:_t.UNPACKED_FLOAT16}function Wy(n,e){if(n===$n.UPLOAD)return _t.PACKED_2X2_FLOAT32;if(n===$n.RENDER||n==null)return t4(e);if(n===$n.DOWNLOAD||n===$n.PIXELS)return _t.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Uy(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vs{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Wn="if (isnan(x)) return x;",n4="return x;",Gy="return abs(x);",s4="return (x >= 0.0) ? x : (exp(x) - 1.0);",o4=Wn+`
  return (x < 0.0) ? 0.0 : x;
`,i4=Wn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,uo="return x;",r4="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a4="return x;",l4=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,u4=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,c4=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,h4="return 1.0 / (1.0 + exp(-1.0 * x));";class co{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d4{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length);const t=e.length,s=Zt("rc",t),o=Ge(t),i=XP(t,s),r=s.slice(-2),a=t<=1?"rc":`vec2(${r.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p4=hg,f4=1e-7,m4=1e-4,rc={};function g4(n){return n in rc||(rc[n]={}),rc[n]}const x4=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),b4=600;function y4(){return z().global.screen==null?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*b4/1024/1024}class ac extends Ki{nextDataId(){return ac.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Zp)t=e;else{const s=ss(z().getNumber("WEBGL_VERSION"),e);t=new Zp(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=ss(z().getNumber("WEBGL_VERSION"));t=new Zp(s),this.binaryCache=g4(z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new JP(this.gpgpu),this.numMBBeforeWarning=y4(),this.texData=new fo(this,is())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,o,i,r){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[o,i]},l.texShape=[o,i];const u=nc(t),c=new Ry(u,!1,r),h=this.runWebGLProgram(c,[a],s,[[o,i]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:s,values:e,usage:$n.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,o,i){if(z().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:o,values:t,usage:$n.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:o,complexTensorInfos:i,slice:r,shape:a,isPacked:l}=t;if(r!=null){let d;l?d=new co(a,uo):d=new vs(a,uo);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:o}],o),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=en());let h;if(o==="complex64"){const d=this.readSync(i.real.dataId),p=this.readSync(i.imag.dataId);h=Ds(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=en()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:o,slice:i,dtype:r,complexTensorInfos:a,isPacked:l}=t;if(i!=null){let f;l?f=new co(o,uo):f=new vs(o,uo);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:r}],r),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(z().getBool("DEBUG")&&!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(r!=="complex64"&&z().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Qu(o))}this.pendingRead.set(e,[]),r!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(r==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=Ds(m,g)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=G(o);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;re(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&is().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:o,shape:i,slice:r,dtype:a,isPacked:l,texture:u}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(r!=null){let p;l?p=new co(i,uo):p=new vs(i,uo);const f=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:a}],a),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=is().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>Hs(o));return Se(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Se(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!k_(s))throw z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:o}=this.texData.get(e),i=G(t);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Qu(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(d),f}const r=z().getBool("WEBGL_PACK")&&o===!0,a=r?nc(t):t,l=r?new PM(a):new MM(a),u=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=ko(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),r=ko(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);a.kernelMs=Gw(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:r[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:en(),endMs:null}}endTimer(e){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=en(),e)}async getQueryTime(e){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:o,usage:i,isPacked:r,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(t,o,i,r)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=x4){return z().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&G(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){wn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return p4(e.shape,t)}packedUnaryOp(e,t,s){const o=new co(e.shape,t),i=this.compileAndRun(o,[e],s);return is().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const o=My(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Gy,e.dtype);const t=new vs(e.shape,Gy),s=this.compileAndRun(t,[e]);return is().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&Xi(s[0])){const i=s.map(r=>Gs(r));o=this.write(i,e,t)}else o=this.write(s,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,s){return is().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new d4(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new YP(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Di(e.shape),...Ai(e.shape)],o={dtype:e.dtype,shape:s,dataId:e.dataId},i=[Di(t),...Ai(t)],r=new zy(i,s),a=!0,l=[s],u=this.runWebGLProgram(r,[o],e.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:o,shape:i,dtype:r}=s;if(t!=null){const d=G(i),p=t[0]*t[1]*4;C(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=nc(i);let l;o?l=new _M(a):l=new OM(a);const u=!0,c=[t??Qu(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:r,dataId:e}],r,c,u,t);return{dtype:r,shape:i,dataId:h.dataId}}runWebGLProgram(e,t,s,o,i=!1,r){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Ra.DENSE){const x=r??Qu(e.outputShape);l.texShape=x.map(b=>b*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),G(a.shape)===0)return l.values=Vt(a.dtype,0),a;const u=[],c=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!e.packedInputs&&G(x.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!e.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),u.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!oc(b.shape,x.shape)){const w=x,y=x.shape;x.shape=b.shape,x=this.packedReshape(x,y),u.push(x),b=this.texData.get(x.dataId),w.shape=y}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=FM(e,c,h),p=this.getAndSaveBinary(d,()=>DM(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),z().get("ENGINE_COMPILE_ONLY")||AM(this.gpgpu,p,c,h,o),u.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=z().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=en();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(e,t,s,o,i=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,o,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=M(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=z().getBool("DEBUG");z().set("DEBUG",!1);const t=this.abs(_e(1e-8)).dataSync()[0];if(z().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?f4:m4}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:o,values:i,texture:r,usage:a,isPacked:l}=t;if(r!=null)return;const u=this.activeTimers!=null;let c;u&&(c=en());let h=t.texShape;if(h==null&&(h=z_(s,l),t.texShape=h),i!=null){const d=nc(s);let p,f=h[1],m=h[0];const g=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!g)&&([f,m]=Li(h[0],h[1])),l?p=new zM(d,g):p=new Ry(d,g);const x=g?[m,f]:h,b=this.makeTensorInfo(x,o),w=this.texData.get(b.dataId);g?w.usage=$n.PIXELS:w.usage=$n.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,i);const y=[[m,f]],k=this.runWebGLProgram(p,[b],o,y,!0),I=this.texData.get(k.dataId);t.texShape=I.texShape,t.isPacked=I.isPacked,t.usage=I.usage,z().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(t.texture=I.texture,t.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=en()-c)}else{const d=this.acquireTexture(h,a,o,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:o}=s;return t!=null&&(s.values=w4(t,o)),s.values}acquireTexture(e,t,s,o){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*Ka(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(i){throw i}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await _g(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(wy(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:o,nanLoc:i,outShapeLocation:r,outShapeStridesLocation:a,outTexShapeLocation:l}=Ey(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=o,e.nanLoc=i,e.outShapeLocation=r,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:o,height:i,width:r,channels:a}=e,l=is().backend;if(!l.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(o,t,s,i,r,a);return is().makeTensorFromDataId(u,t,s,l)}}ac.nextDataId=0;function w4(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bm()&&Cm("webgl",()=>new ac,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qp=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Zo{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=we(t,s),this.enableShapeUniforms=qt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Pi{constructor(e,t,s,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=we(t,s);const i=this.outputShape.length;this.enableShapeUniforms=qt(i);let r="";if(o)if(i===0||G(this.outputShape)===1)r=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(r=`
          ${Ge(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?r+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:r+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=Zt("coords",i);this.enableShapeUniforms?r+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:r+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${r}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const v4={kernelName:gr,backendName:"webgl",kernelFunc:bn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,i=t.makeTensorInfo(s.shape,"complex64"),r=t.texData.get(i.dataId),a=bn({inputs:{x:s},backend:t}),l=bn({inputs:{x:o},backend:t});return r.complexTensorInfos={real:a,imag:l},i}const k4={kernelName:Fc,backendName:"webgl",kernelFunc:ho};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hy="return (a < 0.) ? b * a : a;",qy=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function C4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:i}=s,r=t.makeTensorInfo([],"float32",Us(i,"float32")),a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pi(qy,o.shape,r.shape):new Zo(Hy,o.shape,r.shape),l=t.runWebGLProgram(a,[o,r],"float32");return t.disposeIntermediateTensorInfo(r),l}const I4={kernelName:ml,backendName:"webgl",kernelFunc:C4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jy="return (a < 0.) ? b * a : a;",Ky=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function $4(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e,i=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pi(Ky,s.shape,o.shape):new Zo(jy,s.shape,o.shape);return t.runWebGLProgram(i,[s,o],"float32")}const S4={kernelName:Fl,backendName:"webgl",kernelFunc:$4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi="if (isnan(x)) return x;";function Re({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:o,backend:i})=>{const{x:r}=o,a=i,l=s||r.dtype;if(a.shouldExecuteOnCPU([r])&&t!=null){const h=a.texData.get(r.dataId),d=t(h.values,l);return a.makeTensorInfo(r.shape,l,d)}const u=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new co(r.shape,e):c=new vs(r.shape,n),a.runWebGLProgram(c,[r],l)}}function Mt({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:i}){return({inputs:r,backend:a})=>{const{a:l,b:u}=r,c=a;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[y,v]=w,k={dataId:y.dataId,dtype:y.dtype,shape:l.shape},I={dataId:v.dataId,dtype:v.dtype,shape:u.shape},$=new Zo(n,l.shape,u.shape);return c.runWebGLProgram($,[k,I],fn(y.dtype,v.dtype))}),b=ho({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),b}const h=i||fn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&o!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?As(f):f,x=l.dtype==="string"?As(m):m,[b,w]=o(l.shape,u.shape,g,x,h),y=c.makeTensorInfo(w,h),v=c.texData.get(y.dataId);return v.values=b,y}const d=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Pi(e,l.shape,u.shape,t):p=new Zo(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function Fa(n,e=!1){if(n==="linear")return e?a4:n4;if(n==="relu")return e?u4:o4;if(n==="elu")return e?l4:s4;if(n==="relu6")return e?c4:i4;if(n==="prelu")return e?Ky:jy;if(n==="leakyrelu")return e?qy:Hy;if(n==="sigmoid")return e?h4:r4;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xy{constructor(e,t,s,o=!1,i=!1,r=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=qt(this.outputShape.length);const c=o?e[1]:e[2],h=Math.ceil(c/2),d=o?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const b=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",y="rc.x";e[0]<t[0]?w=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${y};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yy={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Zy{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=we(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jy="return a * b;";function ef(n){const{inputs:e,backend:t}=n,{a:s,b:o}=e,i=fn(s.dtype,o.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(o.dataId),u=new Zy(Yy.REAL,s.shape,o.shape),c=new Zy(Yy.IMAG,s.shape,o.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=ho({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,o])){const a=t.texData.get(s.dataId),l=t.texData.get(o.dataId),[u,c]=$P(s.shape,o.shape,a.values,l.values,i),h=t.makeTensorInfo(c,i),d=t.texData.get(h.dataId);return d.values=u,h}let r;return z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?r=new Pi(Jy,s.shape,o.shape):r=new Zo(Jy,s.shape,o.shape),t.runWebGLProgram(r,[s,o],i)}const N4={kernelName:$r,backendName:"webgl",kernelFunc:ef};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n,e,t){const s=[Di(n.shape),...Ai(n.shape)],o={dtype:n.dtype,shape:s,dataId:n.dataId},i=[Di(e),...Ai(e)],r=new zy(i,s),a=!0,l=[s],u=t.runWebGLProgram(r,[o],n.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ee(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:i}=s,r=t,a=G(o.shape),l=ff(i,a),u=G(l);C(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=r.texData.get(o.dataId);return c.isPacked&&!oc(o.shape,l)&&!(c.texture!==null&&oc(c.shape,l))?E4(o,l,r):(r.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}const T4={kernelName:_l,backendName:"webgl",kernelFunc:ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qy{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:i,outSize:r}=e;this.outputShape=[o,r];const a=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const h=1/t;u=`sumValue += dot(values * ${si(h)?h.toPrecision(2):h}, ones);`}let c="";i%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R4{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:i,outSize:r}=e;this.outputShape=[o,r];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=bu(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Qo(n,e,t,s){const o=L4(n.shape);let i=n;for(let r=0;r<o.length;r++){const{inSize:a,windowSize:l,outSize:u}=o[r];let c,h;t==="mean"?c=r===0?new Qy({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},a):new Qy({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u}):c=new R4({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},t),h=i,i=s.runWebGLProgram(c,[i],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D4{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.rank=s.length;const o=Ge(this.rank),i=A4(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function A4(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let o=0;o<n.length;o++)s[n[o]]=t[o];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F4{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[t[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=Ge(this.rank),i=By("rc",this.rank),r=new Array(this.rank);for(let c=0;c<t.length;c++)r[t[c]]=i[c];const a=`vec2(${r.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${r.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lc(n,e,t){const s=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new F4(n.shape,e):new D4(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n,e,t,s){const o=e,i=n.shape.length,r=$e(o,n.shape);let a=r;const l=at(a,i),u=l!=null;let c=n;u&&(c=lc(n,l,s),a=dt(a.length,i)),Ot("sum",a,i);const[h,d]=Rt(c.shape,a);let p=h;t&&(p=xt(h,r));const f=G(d),g=G(n.shape)/f,x=ee({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),b=$h(n.dtype),w=Qo(x,b,"sum",s),y=ee({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),u&&s.disposeIntermediateTensorInfo(c),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uc(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s;return O4(o,i,r,t)}const _4={kernelName:Wl,backendName:"webgl",kernelFunc:uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{perm:i}=s,r=t,a=o.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=o.shape[i[c]];let u;if(r.shouldExecuteOnCPU([o])){const h=r.texData.get(o.dataId).values,d=Jp(h,o.shape,o.dtype,i,l);u=r.makeTensorInfo(l,o.dtype);const p=r.texData.get(u.dataId);p.values=d}else u=lc(o,i,r);return u}const M4={kernelName:li,backendName:"webgl",kernelFunc:Jt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ew=1e3;function cc({a:n,b:e,transposeA:t,transposeB:s,backend:o,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),x=G(m),b=G(g),y=we(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);C(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=t?[x,h,p]:[x,p,h],k=s?[b,f,d]:[b,d,f],I=ee({inputs:{x:n},backend:o,attrs:{shape:v}}),$=ee({inputs:{x:e},backend:o,attrs:{shape:k}}),E=[I,$],S=Math.max(x,b),L=t?I.shape[1]:I.shape[2],_=i!=null,P=r!=null,A=l==="leakyrelu",B=l!=null?Fa(l,!0):null,V=_||P||A||B!=null;let H;if((p===1||f===1)&&L>ew&&V===!1){let q=I,K=$;t&&(q=Jt({inputs:{x:I},backend:o,attrs:{perm:[0,2,1]}}),E.push(q)),s&&(K=Jt({inputs:{x:$},backend:o,attrs:{perm:[0,2,1]}}),E.push(K));const X=f!==1,J=f===1;let Y=q;X&&(Y=ee({inputs:{x:q},backend:o,attrs:{shape:[S,L,1]}}),E.push(Y));const ne=f===1?2:1;let Q=K;J&&(Q=ee({inputs:{x:K},backend:o,attrs:{shape:[S,1,L]}}),E.push(Q));const se=ef({inputs:{a:Y,b:Q},backend:o});H=uc({inputs:{x:se},backend:o,attrs:{axis:ne,keepDims:!0}}),E.push(se)}else{const q=fn(n.dtype,e.dtype),K=new Xy(v,k,[S,p,f],t,s,_,B,P,A),X=[I,$];if(i!=null&&X.push(i),P&&X.push(r),A){const J=o.makeTensorInfo([],"float32",Us(a,"float32"));X.push(J),E.push(J)}H=o.runWebGLProgram(K,X,q)}const W=ee({inputs:{x:H},backend:o,attrs:{shape:y}});E.push(H);for(const q of E)o.disposeIntermediateTensorInfo(q);return W}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:i,bias:r,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return cc({a:o,b:i,transposeA:l,transposeB:u,backend:t,bias:r,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const B4={kernelName:Xl,backendName:"webgl",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tw="return abs(x);";function z4(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=t.texData.get(s.dataId),r=My(i.values);return t.makeTensorInfo(s.shape,s.dtype,r)}let o;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new co(s.shape,tw):o=new vs(s.shape,tw),t.runWebGLProgram(o,[s],s.dtype)}const V4={kernelName:Xa,backendName:"webgl",kernelFunc:z4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4=Wn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,U4=Re({opSnippet:W4}),G4={kernelName:Yi,backendName:"webgl",kernelFunc:U4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4=Wn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,q4=Re({opSnippet:H4}),j4={kernelName:Zi,backendName:"webgl",kernelFunc:q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nw="return a + b;",K4=Mt({opSnippet:nw,packedOpSnippet:nw,supportsComplex:!0,cpuKernelImpl:oP}),X4={kernelName:ai,backendName:"webgl",kernelFunc:K4};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y4{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,r)=>`T${r}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const o=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z4{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,r)=>`T${r}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const o=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hc(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return bn({inputs:{x:s[0]},backend:t});if(s.length>z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=hc({inputs:s.slice(0,l),backend:t}),c=hc({inputs:s.slice(l),backend:t});return hc({inputs:[u,c],backend:t})}const o=s.map(l=>l.dtype).reduce((l,u)=>fn(l,u)),i=s.map(l=>l.shape),a=z().getBool("WEBGL_PACK")?new Z4(s[0].shape,i):new Y4(s[0].shape,i);return t.runWebGLProgram(a,s,o)}const J4={kernelName:Nc,backendName:"webgl",kernelFunc:hc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s,a=o.shape.length,l=$e(i,o.shape);let u=l;const c=at(u,a);let h=o;c!=null&&(h=Jt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=dt(u.length,a)),Ot("all",u,a);const[d,p]=Rt(h.shape,u),f=G(p),m=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Qo(m,m.dtype,"all",t);let x;if(r){const b=xt(d,l);x=ee({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ee({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),x}const eB={kernelName:Ec,backendName:"webgl",kernelFunc:Q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s,a=o.shape.length,l=$e(i,o.shape);let u=l;const c=at(u,a);let h=o;c!=null&&(h=Jt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=dt(u.length,a)),Ot("any",u,a);const[d,p]=Rt(h.shape,u),f=G(p),m=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Qo(m,m.dtype,"any",t);let x;if(r){const b=xt(d,l);x=ee({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ee({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),x}const nB={kernelName:Tc,backendName:"webgl",kernelFunc:tB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sB{constructor(e,t,s){this.variableNames=["A"];const{windowSize:o,batchSize:i,outSize:r}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,r];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oB{constructor(e,t,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,C(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],r=Math.ceil(i/t);this.outputShape=e.slice(0,-1),r>1&&this.outputShape.push(r),o||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=Ge(l),c=Zt("coords",l);let h,d;if(r===1){d=l+1;const $=Ge(d);h=`
        ${$} sourceLocR = ${$}(${c.join()}, 0);
        ++${c[l-1]};
        ${$} sourceLocG = ${$}(${c.join()}, 0);
        ++${c[l-2]};
        ${$} sourceLocA = ${$}(${c.join()}, 0);
        --${c[l-1]};
        ${$} sourceLocB = ${$}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map($=>"int "+$),g=Zt("sourceLocR",d-1).concat("inIdx.r"),x=Zt("sourceLocG",d-1).concat("inIdx.g"),b=Zt("sourceLocB",d-1).concat("inIdx.b"),w=Zt("sourceLocA",d-1).concat("inIdx.a"),y=s==="max"?"greaterThan":"lessThan",v=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,k=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,I=o?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${I}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sw(n,e,t,s=null){let o=e.shape[0],i=e.shape[1];s!=null&&(o=s.shape[0],i=s.shape[1]);const r=bu(i),a={windowSize:r,inSize:i,batchSize:o,outSize:Math.ceil(i/r)},l=new sB(a,t,s==null),u=[e];s!=null&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=sw(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}function ow(n,e,t,s=null){const o=s!=null?s.shape:e.shape,i=o[o.length-1],r=bu(i),a=new oB(o,r,t,s==null),l=s==null?[e]:[e,s],u=n.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){const c=ow(n,e,t,u);return n.disposeIntermediateTensorInfo(u),c}return u}function iw(n,e,t,s){const o=[t];if(Ot("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,e.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],r=n.texData.get(e.dataId),a=r!==null&&r.isPacked;let l=e;a&&(l=n.unpackTensor(e),i.push(l));const[u,c]=Rt(l.shape,o),h=G(c),d=ee({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});i.push(d);const p=sw(n,d,s);i.push(p);const f=ee({inputs:{x:p},backend:n,attrs:{shape:u}});return i.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return ow(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i}=s;let r=$e(i,o.shape);const a=at(r,o.shape.length);let l=o;const u=[];a!=null&&(l=Jt({inputs:{x:o},backend:t,attrs:{perm:a}}),u.push(l),r=dt(r.length,l.shape.length)),Ot("argMax",[r[0]],l.shape.length);const c=iw(t,l,r[0],"max");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const rB={kernelName:Ya,backendName:"webgl",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i}=s;let r=$e(i,o.shape);const a=at(r,o.shape.length);let l=o;const u=[];a!=null&&(l=Jt({inputs:{x:o},backend:t,attrs:{perm:a}}),u.push(l),r=dt(r.length,l.shape.length)),Ot("argMin",[r[0]],l.shape.length);const c=iw(t,l,r[0],"min");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const lB={kernelName:Za,backendName:"webgl",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uB=Wn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,cB=Re({opSnippet:uB}),hB={kernelName:Ji,backendName:"webgl",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dB=Wn+"return log(x + sqrt(x * x + 1.0));",pB=Re({opSnippet:dB}),fB={kernelName:Qi,backendName:"webgl",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mB=Wn+`
  return atan(x);
`,gB=Re({opSnippet:mB}),xB={kernelName:er,backendName:"webgl",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bB=Qp+`
  return atan(a, b);
`,yB=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Jo+`
  return result;
`,wB=Mt({opSnippet:bB,packedOpSnippet:yB}),vB={kernelName:nr,backendName:"webgl",kernelFunc:wB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kB=Wn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,CB=Re({opSnippet:kB}),IB={kernelName:tr,backendName:"webgl",kernelFunc:CB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oa{constructor(e,t,s,o=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const $=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?i?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(y="avgValue / max(count, 1.0)");const v=Math.floor(r/4)*4,k=r%4,I=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${I}
          }

          int xC = xCCorner + ${v};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${I}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${I}
          }
        }
        setOutput(${y});
      }
    `}}class tf{constructor(e,t,s,o=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg";let y="0.0";if(w||(y="-1.0 / 1e-20"),s){const S=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${S} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / max(count, 1.0)");const I=Math.floor(r/4)*4,$=r%4,E=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${I}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${I};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${k});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;Da(o,"avgPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,u=1;C(Ut(r,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=An(o.shape,i,r,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&Fe(c.inShape,c.outShape))return bn({inputs:{x:o},backend:t});const h=new Oa(c,"avg",!1);return t.runWebGLProgram(h,[o],"float32")}const SB={kernelName:Ja,backendName:"webgl",kernelFunc:$B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:i,strides:r,pad:a,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=Ns(o.shape,i,r,c,a,l,u),d=new tf(h,"avg",!1);return t.runWebGLProgram(d,[o],"float32")}const EB={kernelName:Qa,backendName:"webgl",kernelFunc:NB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TB{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,r=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class RB{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,i=e.strideDepth,r=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,x=1/(t*s*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i}=e,r=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Ns(r.shape,a,l,h,u,c),p=new RB(d);return t.runWebGLProgram(p,[o],r.dtype)}const DB={kernelName:Lc,backendName:"webgl",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i}=e,r=i;Da([o,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=An(r.shape,a,l,1,u),h=new TB(c);return t.runWebGLProgram(h,[o],r.dtype)}const FB={kernelName:Rc,backendName:"webgl",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:i}=e,{transposeA:r,transposeB:a}=s;return cc({a:o,b:i,transposeA:r,transposeB:a,backend:t})}const _B={kernelName:el,backendName:"webgl",kernelFunc:OB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MB{constructor(e,t,s,o,i,r){this.outputShape=[],this.variableNames=["x","mean","variance"],we(e,t),we(e,s);let a="0.0";o!=null&&(we(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&(we(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${r}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PB{constructor(e,t,s,o,i,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],we(e,t),we(e,s);let a="vec4(0.0)";o!=null&&(we(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(we(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${r}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BB={kernelName:dl,backendName:"webgl",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:o,variance:i,offset:r,scale:a}=n;C(o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),C(r==null||o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),C(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[s,o,i];let c=null;r!=null&&(c=r.shape,u.push(r));let h=null;a!=null&&(h=a.shape,u.push(a));const d=z().getBool("WEBGL_PACK_NORMALIZATION")?new PB(s.shape,o.shape,i.shape,c,h,l):new MB(s.shape,o.shape,i.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zB{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=VB(this.rank);let o;const i=e.map((r,a)=>`sourceLoc.${nf[a]} = start[${a}] + coords.${nf[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${s}));
      }
    `}}const nf=["x","y","z","w","u","v"];function VB(n){if(n===1)return"sourceLoc";if(n<=6)return nf.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WB{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ge(this.rank),s=Zt("coords",this.rank),o=Zt("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,r=`getChannel(getSource(${o.join()}), ${i})`,a=`
      result.x = ${r};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${r};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${r};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${r};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${o[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n,e,t,s){const o=s.texData.get(n.dataId),i=s.makeTensorInfo(t,n.dtype),r=s.texData.get(i.dataId);Object.assign(r,o),r.refCount=1,r.shape=t,r.dtype=n.dtype;let a=$d(e,ce(n.shape));o.slice&&(a+=o.slice.flatOffset),r.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||n.dataId};const l=s.dataRefCount.get(r.slice.origDataId)||1;return s.dataRefCount.set(r.slice.origDataId,l+1),i}function zi(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:i,size:r}=s,[a,l]=xu(o,i,r);if(kd(o,a,l),G(l)===0)return t.makeTensorInfo(l,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){const h=t.texData.get(o.dataId),d=_P(h.values,a,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,d)}const{isPacked:u}=t.texData.get(o.dataId),c=Id(o.shape,a,l);if(u||!c){const h=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WB(l):new zB(l),d=[a];return t.runWebGLProgram(h,[o],o.dtype,d)}return t.uploadToGPU(o.dataId),UB(o,a,l,t)}const GB={kernelName:Vl,backendName:"webgl",kernelFunc:zi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HB={kernelName:tl,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:i,crops:r}=s;C(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((b,w)=>b*w),l=la(o.shape,i,a),u=ua(l.length,i.length),c=ca(o.shape,i,a),h=Rd(r,i.length),d=Ld(c,r,i.length),p=[],f=ee({inputs:{x:o},backend:t,attrs:{shape:l}}),m=Jt({inputs:{x:f},backend:t,attrs:{perm:u}}),g=ee({inputs:{x:m},backend:t,attrs:{shape:c}}),x=zi({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:i}=e,{size:r}=s,a=t.readSync(o.dataId),l=t.readSync(i.dataId),u=_y(a,l,i.dtype,i.shape,r);return t.makeTensorInfo([r],i.dtype,u)}const jB={kernelName:Dc,backendName:"webgl",kernelFunc:qB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KB=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,XB=`
  return float(int(a.r) & int(b.r));
`;function YB(n){const{inputs:e,backend:t}=n,{a:s,b:o}=e,i=z().getBool("WEBGL_PACK_BINARY_OPERATIONS"),r=z().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,o])||r===1){const l=t.texData.get(s.dataId).values,u=t.texData.get(o.dataId).values,[c,h]=rP(s.shape,o.shape,l,u,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=c,d}let a;return i?a=new Pi(KB,s.shape,o.shape,!1):a=new Zo(XB,s.shape,o.shape),t.runWebGLProgram(a,[s,o],s.dtype)}const ZB={kernelName:Ac,backendName:"webgl",kernelFunc:YB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,i=t.readSync(s.dataId),r=t.readSync(o.dataId),a=we(Array.from(i),Array.from(r));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const QB={kernelName:vf,backendName:"webgl",kernelFunc:JB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rw=Mt({opSnippet:"return float(a != b);",cpuKernelImpl:NP,dtype:"bool"}),ez={kernelName:Tl,backendName:"webgl",kernelFunc:rw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return bn({inputs:{x:o.complexTensorInfos.real},backend:t})}const tz={kernelName:rh,backendName:"webgl",kernelFunc:_a};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nz="return float(int(x));";function sz(n,e){const t=new vs(n.shape,nz),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sf(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:i}=s;if(i==="complex64"){if(o.dtype==="complex64")return bn({inputs:{x:o},backend:t});const r=Lt(o.shape),a=sf({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=ho({inputs:{real:a,imag:r},backend:t});return r.dispose(),t.disposeIntermediateTensorInfo(a),l}if(o.dtype==="complex64"){const r=_a({inputs:{input:o},backend:t}),a=sf({inputs:{x:r},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(r),a}if(!mf(o.dtype,i)){const r=bn({inputs:{x:o},backend:t});return{dataId:r.dataId,shape:r.shape,dtype:i}}if(t.shouldExecuteOnCPU([o])){const r=t.texData.get(o.dataId).values,[a,l,u]=aP(r,o.shape,o.dtype,i);return t.makeTensorInfo(a,l,u)}if(i==="int32")return sz(o,t);if(i==="bool"){const r=t.makeTensorInfo([],"bool",Vt("bool",1)),l=rw({inputs:{a:o,b:r},backend:t});return t.disposeIntermediateTensorInfo(r),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}const oz={kernelName:sr,backendName:"webgl",kernelFunc:sf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aw="return ceil(x);",iz=Re({opSnippet:aw,packedOpSnippet:aw,cpuKernelImpl:lP}),rz={kernelName:or,backendName:"webgl",kernelFunc:iz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class az{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{clipValueMin:i,clipValueMax:r}=s;let a;z().getBool("WEBGL_PACK_CLIP")?a=new lz(o.shape):a=new az(o.shape);const l=[[i],[r]];return t.runWebGLProgram(a,[o],o.dtype,l)}const cz={kernelName:ir,backendName:"webgl",kernelFunc:uz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hz{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lw(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function dz(n){const{inputs:e,backend:t}=n,{x:s}=e,o=t.texData.get(s.dataId),i=new hz(s.shape),r=[lw(s,o.complexTensorInfos.real),lw(s,o.complexTensorInfos.imag)];return t.runWebGLProgram(i,r,r[0].dtype)}const pz={kernelName:nl,backendName:"webgl",kernelFunc:dz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fz{constructor(e){this.outputShape=[],this.outputShape=hs(e,1),this.variableNames=e.map((r,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++){const a=t[r-1];s.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${a}));`)}const o=t.length,i=t[t.length-1];s.push(`else setOutput(getT${o}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mz{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hs(e,t);const s=this.outputShape,o=s.length,i=Ge(o),r=Zt("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][t];const u=a[t],c=a.slice(-2),h=a.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${dc(a,u,g)}),
            vec2(${dc(c,u,g)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${dc(a,u,f)}),
          vec2(${dc(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${r}), 0., 0., 0.);

        ${r[o-1]} = ${r[o-1]} + 1;
        if (${r[o-1]} < ${s[o-1]}) {
          result.g = getValue(${r});
        }

        ${r[o-2]} = ${r[o-2]} + 1;
        if (${r[o-2]} < ${s[o-2]}) {
          result.a = getValue(${r});
        }

        ${r[o-1]} = ${r[o-1]} - 1;
        if (${r[o-2]} < ${s[o-2]} &&
            ${r[o-1]} < ${s[o-1]}) {
          result.b = getValue(${r});
        }
        setOutput(result);
      }
    `}}function dc(n,e,t){const s=n.indexOf(e);return n.map((i,r)=>r===s?`${i} - ${t}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pc(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return bn({inputs:{x:o.complexTensorInfos.imag},backend:t})}const gz={kernelName:Jc,backendName:"webgl",kernelFunc:pc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ma(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(b=>_a({inputs:{input:b},backend:t})),f=n.map(b=>pc({inputs:{input:b},backend:t})),m=Ma(p,e,t),g=Ma(f,e,t),x=ho({inputs:{real:m,imag:g},backend:t});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}let o=t.shouldExecuteOnCPU(n);if(s==="string"&&(o=!0),o){const p=n.map(y=>{const k=[-1,G(y.shape.slice(e))];return ee({inputs:{x:y},backend:t,attrs:{shape:k}})}),f=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),m=hs(p.map(y=>y.shape),1),g=p[0].shape[0]===1,x=uP(f,m,s,g),b=hs(n.map(y=>y.shape),e),w=t.makeTensorInfo(b,s,x);return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),w}const i=n.filter(p=>G(p.shape)>0),r=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const p=r?new vs(n[0].shape,uo):new co(n[0].shape,uo);return t.runWebGLProgram(p,n,s)}const a=z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const p=[];for(let m=0;m<i.length;m+=a){const g=i.slice(m,m+a);p.push(Ma(g,e,t))}const f=Ma(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(r){const p=new mz(i.map(f=>f.shape),e);return t.runWebGLProgram(p,i,s)}const{tensors2D:l,outShape:u}=xz(i,e,t),c=new fz(l.map(p=>p.shape)),h=t.runWebGLProgram(c,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=ee({inputs:{x:h},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(h),d}function xz(n,e,t){const s=hs(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>ee({inputs:{x:i},attrs:{shape:[-1,G(i.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,i=$e(o,e[0].shape)[0],r=e.map(u=>u.shape);Nd(r,i);const a=hs(e.map(u=>u.shape),i);if(G(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>G(u.shape)>0);return l.length===1?bn({inputs:{x:l[0]},backend:t}):Ma(l,i,t)}const bz={kernelName:sl,backendName:"webgl",kernelFunc:uw};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cw{constructor(e,t=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const r=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1;let y="",v="";s&&(o?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${v}
        setOutput(result);
      }
    `}}class yz{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left,i=e.strideDepth,r=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${r}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hw{constructor(e,t=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qt(this.outputShape.length);const r=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<c&&(r%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){const b=r%2===0?xc(l):l;l%2===0&&r%2===1||l%2!==0&&r%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(r%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(o?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=qt(this.outputShape.length);const{dataFormat:s}=t,o=Yt(),i=s==="channelsLast",r=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${r}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function dw({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:r=0,activation:a=null}){const l=n.shape,u=s.texData.get(n.dataId),c=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(i!=null){const y=fc(i.shape,p);y!=null&&(i=ee({inputs:{x:i},backend:s,attrs:{shape:y}}),x.push(i))}if(o!=null){const y=fc(o.shape,p);y!=null&&(o=ee({inputs:{x:o},backend:s,attrs:{shape:y}}),x.push(o))}if(!((h===1||d===1)&&c>ew)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&Fe(u.shape.slice(-3),l.slice(-3))){const y=l[0]*l[1]*(l[2]+1),v={dataId:n.dataId,shape:[1,y,t.inChannels],dtype:n.dtype},k=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,C(oc(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);const I=ee({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(I);const $=cc({a:v,b:I,backend:s,transposeA:f,transposeB:m,bias:o,activation:a,preluActivationWeights:i,leakyreluAlpha:r}),E=s.texData.get($.dataId);C(E.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=k,E.shape=t.outShape,g=bn({inputs:{x:$},backend:s}),g.shape=t.outShape,x.push($)}else{const y=t.outHeight*t.outWidth,v=ee({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,y,t.inChannels]:[t.batchSize,t.inChannels,y]}}),k=ee({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),I=cc({a:p?v:k,b:p?k:v,transposeA:!p,transposeB:m,backend:s,bias:o,activation:a,preluActivationWeights:i,leakyreluAlpha:r});g=ee({inputs:{x:I},backend:s,attrs:{shape:t.outShape}}),x.push(v),x.push(k),x.push(I)}for(const y of x)s.disposeIntermediateTensorInfo(y);return g}function pw({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:r=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=l*u*c,g=d*h,x=[t.batchSize,m,g],b=!0,w=!1,y=[];if(i!=null){const W=fc(i.shape,f);W!=null&&(i=ee({inputs:{x:i},backend:s,attrs:{shape:W}}),y.push(i))}if(o!=null){const W=fc(o.shape,f);W!=null&&(o=ee({inputs:{x:o},backend:s,attrs:{shape:W}}),y.push(o))}const v=ee({inputs:{x:e},backend:s,attrs:{shape:[1,m,G(e.shape)/m]}});y.push(v);const k=new wz(x,t),I=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],$=s.runWebGLProgram(k,[n],"float32",I),E=ee({inputs:{x:$},backend:s,attrs:{shape:x}});y.push($),y.push(E);const S=o!=null,L=i!=null,_=a==="leakyrelu",P=a?Fa(a,!0):null,A=new Xy(f?E.shape:v.shape,f?v.shape:E.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],b,w,S,P,L,_),B=f?[E,v]:[v,E];if(o&&B.push(o),L&&B.push(i),_){const W=s.makeTensorInfo([],"float32",Us(r,"float32"));B.push(W),y.push(W)}const V=s.runWebGLProgram(A,B,"float32"),H=ee({inputs:{x:V},backend:s,attrs:{shape:t.outShape}});y.push(V);for(const W of y)s.disposeIntermediateTensorInfo(W);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i}=e,{strides:r,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Es(l),d=Ft(o.shape,i.shape,r,u,a,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=dw({x:o,filter:i,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){const m=new hw(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[o,i],"float32",g)}else if(z().getBool("WEBGL_CONV_IM2COL"))p=pw({x:o,filter:i,convInfo:d,backend:t});else{const m=new cw(d);p=t.runWebGLProgram(m,[o,i],"float32")}const f=ee({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const kz={kernelName:ol,backendName:"webgl",kernelFunc:vz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cz{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,i=e.padInfo.left,r=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${r?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Iz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,r=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,u=r?1:2,c=r?2:3,h=r?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${r}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class $z{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.padInfo.front,r=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${r};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Sz{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,i=e.strideDepth,r=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,u=s-1-e.padInfo.top,c=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:i}=e,{strides:r,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Es(l),d=Ft(o.shape,c,r,1,a,u,!1,h),p=new Cz(d);return t.runWebGLProgram(p,[o,i],"float32")}const Ez={kernelName:Oc,backendName:"webgl",kernelFunc:Nz};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tz{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=qt(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,o=t-1-e.padInfo.top,i=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:i}=e,{inputShape:r,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Es(u),d=Ft(r,i.shape,a,1,l,c,!1,h);if(z().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new Tz(d);return t.runWebGLProgram(f,[o,i],"float32",p)}else{const p=new Iz(d);return t.runWebGLProgram(p,[o,i],"float32")}}const Lz={kernelName:il,backendName:"webgl",kernelFunc:Rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i}=e,{strides:r,pad:a,dilations:l}=s,u=Ks(o.shape,i.shape,r,l,a),c=new yz(u);return t.runWebGLProgram(c,[o,i],"float32")}const Az={kernelName:rl,backendName:"webgl",kernelFunc:Dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:i}=e,{strides:r,pad:a,filterShape:l}=s,u=Ks(o.shape,l,r,1,a),c=new $z(u);return t.runWebGLProgram(c,[o,i],"float32")}const Oz={kernelName:_c,backendName:"webgl",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:i}=e,{pad:r,strides:a,inputShape:l}=s,u=Ks(l,i.shape,a,1,r),c=new Sz(u);return t.runWebGLProgram(c,[o,i],"float32")}const Mz={kernelName:Mc,backendName:"webgl",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pz=Bi+`
  return cos(x);
`,Bz=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Jo}
  return result;
`,zz=Re({opSnippet:Pz,packedOpSnippet:Bz}),Vz={kernelName:rr,backendName:"webgl",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wz=Re({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),Uz={kernelName:ar,backendName:"webgl",kernelFunc:Wz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gz{constructor(e,t,s,o,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,a,l,u]=e,[c]=t,[h,d]=s;this.outputShape=[c,h,d,u];const p=o==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,x,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,y,v]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${r}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hz={kernelName:Bc,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:i,boxInd:r}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new Gz(o.shape,i.shape,a,l,u);return t.runWebGLProgram(c,[o,i,r],"float32")}};var Pa;(function(n){n.Prod="*",n.Sum="+"})(Pa||(Pa={}));class fw{constructor(e,t,s,o){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,r=this.op===Pa.Prod?"1.0":"0.0",a=s?r:`getX(${mw(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=o?`end != ${l-1}`:"end != 0",c=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${l}`:"end >= pow2",c=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ge(i)} coords = getOutputCoords();
        int end = ${gw(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${gw(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${mw(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function mw(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function gw(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xw(n,e,t,s,o,i){const r=e.shape.length,a=at([s],r);let l=e;a!=null&&(l=Jt({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=dt(1,r)[0];if(u!==r-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=bn({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new fw(n,l.shape,!1,i),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(o){const d=new fw(n,l.shape,o,i),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=Xs(a),p=Jt({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,exclusive:r,reverse:a}=s;return xw(Pa.Prod,o,t,i,r,a)}const jz={kernelName:Pc,backendName:"webgl",kernelFunc:qz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,exclusive:r,reverse:a}=s;return xw(Pa.Sum,o,t,i,r,a)}const Xz={kernelName:al,backendName:"webgl",kernelFunc:Kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:i}=e,{size:r,binaryOutput:a}=s;if(o.shape.length===1){const l=t.readSync(o.dataId),u=t.readSync(i.dataId),c=_y(l,u,i.dtype,i.shape,r);return t.makeTensorInfo([r],i.dtype,c)}else if(o.shape.length===2){const l=t.bufferSync(o),u=t.bufferSync(i),c=iP(l,u,r,a);return t.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const Zz={kernelName:zc,backendName:"webgl",kernelFunc:Yz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jz{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:i,dataFormat:r}=s,a=o.shape[0],l=r==="NHWC"?o.shape[1]:o.shape[2],u=r==="NHWC"?o.shape[2]:o.shape[3],c=r==="NHWC"?o.shape[3]:o.shape[1],h=l*i,d=u*i,p=c/(i*i),f=r==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new Jz(f,i,r);return t.runWebGLProgram(m,[o],o.dtype)}const eV={kernelName:Vc,backendName:"webgl",kernelFunc:Qz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bw{constructor(e,t=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qt(this.outputShape.length);const r=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${r}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yw{constructor(e,t=!1,s=null,o=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qt(this.outputShape.length);const r=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const b=x*2;if(p+=`
          xC = xCCorner + ${b*u};
          `,l===1){if(b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const w=a%2===0?xc(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${r};
        int q = d2 - d1 * ${r};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i}=e,{strides:r,pad:a,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),C(Ut(r,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const h=Ft(o.shape,i.shape,r,c,a,u,!0);let d;z().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new yw(h):d=new bw(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[o,i],"float32",p)}const nV={kernelName:ll,backendName:"webgl",kernelFunc:tV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,i=e.padInfo.left,r=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${r} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class oV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,r=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:i}=e,{strides:r,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Ft(o.shape,c,r,a,l,u,!0),d=new sV(h);return t.runWebGLProgram(d,[o,i],"float32")}const rV={kernelName:Wc,backendName:"webgl",kernelFunc:iV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:i}=e,{strides:r,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Ft(c,i.shape,r,a,l,u,!0),d=new oV(h);return t.runWebGLProgram(d,[o,i],"float32")}const lV={kernelName:Uc,backendName:"webgl",kernelFunc:aV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uV{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:e,backend:t}=n,{x:s}=e,o=[...s.shape,...s.shape],i=G(s.shape),r=ee({inputs:{x:s},backend:t,attrs:{shape:[i]}}),a=new uV(i),l=t.runWebGLProgram(a,[r],r.dtype),u=ee({inputs:{x:l},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(l),u}const hV={kernelName:kf,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dV{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:o,strideHeight:i,strideWidth:r,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=o;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${r});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i}=e,{strides:r,pad:a,dilations:l}=s,u=Yr(o.shape,i.shape,r,a,"NHWC",l);let c;const h=new dV(u);c=t.runWebGLProgram(h,[o,i],"float32");const d=ee({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),d}const fV={kernelName:ul,backendName:"webgl",kernelFunc:pV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,i=e,{allDims:r,summedDims:a,idDims:l}=zd(o,i.length);Wd(r.length,l,i);const{path:u,steps:c}=Ud(a,l),h=c.length;let d=null,p=r.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:x,expandDims:b}=Vd(p,l[g]);let w;Gd(x)?w=i[g]:(w=Jt({inputs:{x:i[g]},backend:t,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);Fe(w.shape,y)||(w=ee({inputs:{x:w},backend:t,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=ef({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=uc({inputs:{x:d},backend:t,attrs:{axis:u[m]-(r.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const gV={kernelName:qc,backendName:"webgl",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV=Re({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),bV={kernelName:ur,backendName:"webgl",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV="return (b >= 0.0) ? a : a * (b + 1.0);",wV=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,vV={kernelName:jc,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t}=n,{dy:s,y:o}=e,i=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Pi(wV,s.shape,o.shape):new Zo(yV,s.shape,o.shape);return t.runWebGLProgram(i,[s,o],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV=Mt({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:cP}),CV={kernelName:cl,backendName:"webgl",kernelFunc:kV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Dd};
  float a1 = ${Ad};
  float a2 = ${Fd};
  float a3 = ${Od};
  float a4 = ${_d};
  float a5 = ${Md};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,$V=Re({opSnippet:IV}),SV={kernelName:cr,backendName:"webgl",kernelFunc:$V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV=Bi+`
  return exp(x);
`,ww=Re({opSnippet:NV,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:hP,dtype:"float32"}),EV={kernelName:hr,backendName:"webgl",kernelFunc:ww};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function of(n){const{inputs:e,attrs:t,backend:s}=n,{dim:o}=t,{input:i}=e,r=i.shape.length,a=i.shape.slice();let l=o;return o<0&&(C(-(r+1)<=o,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),l=r+o+1),a.splice(l,0,1),ee({inputs:{x:i},backend:s,attrs:{shape:a}})}const TV={kernelName:hl,backendName:"webgl",kernelFunc:of};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vw="return exp(x) - 1.0;",RV=Re({opSnippet:vw,packedOpSnippet:vw,cpuKernelImpl:dP}),LV={kernelName:dr,backendName:"webgl",kernelFunc:RV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kw{constructor(e,t,s){this.variableNames=["real","imag"];const o=t[1];this.outputShape=t;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,r=s?`${o}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${r};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw(n,e,t){const s=t.texData.get(n.dataId),o=G(n.shape),i=n.shape[n.shape.length-1],r=o/i,a=ee({inputs:{x:n},backend:t,attrs:{shape:[r,i]}}),l=a.shape,u=new kw("real",l,e),c=new kw("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=ho({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=ee({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:e,backend:t}=n,{input:s}=e;return Cw(s,!1,t)}const AV={kernelName:Kc,backendName:"webgl",kernelFunc:DV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FV{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(n){const{backend:e,attrs:t}=n,{shape:s,value:o}=t;let{dtype:i}=t;if(i=i||ii(o),i==="string"){const r=ct(i,G(s));return r.fill(o),e.makeTensorInfo(s,i,r)}else{const r=new FV(s,o),a=[[o]];return e.runWebGLProgram(r,[],i,a)}}const OV={kernelName:Xc,backendName:"webgl",kernelFunc:Ba};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _V{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV={kernelName:Yc,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,o=new _V(t.shape);return s.runWebGLProgram(o,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iw="return floor(x);",PV=Re({opSnippet:Iw,packedOpSnippet:Iw,cpuKernelImpl:pP}),BV={kernelName:pr,backendName:"webgl",kernelFunc:PV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV=Mt({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),VV={kernelName:fr,backendName:"webgl",kernelFunc:zV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WV{constructor(e){this.variableNames=["A"];const t=Yt(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Yt(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV={kernelName:iv,backendName:"webgl",kernelFunc:HV};let Vi,rf=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function HV(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:o}=e;const{numChannels:i}=s,r=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[l,u]=r?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[u,l],h=[u,l,i];if(a||r){const m=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Vi==null||m!==rf)&&(rf=m,Vi=document.createElement("canvas").getContext("2d",{willReadFrequently:rf})),Vi.canvas.width=l,Vi.canvas.height=u,Vi.drawImage(o,0,0,l,u),o=Vi.canvas}const d=t.makeTensorInfo(c,"int32");t.texData.get(d.dataId).usage=$n.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),o);const p=z().getBool("WEBGL_PACK")?new UV(h):new WV(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Es(c),g=Ft(o.shape,i.shape,l,h,u,d,!1,m);let x;const b=[],w=r!=null,y=a!=null,v=p==="leakyrelu",k=()=>{const $=[o,i],E=(S,L)=>{if(L==="NCHW"&&S.shape.length===1&&S.shape[0]!==1){const _=ee({inputs:{x:S},backend:t,attrs:{shape:[S.shape[0],1,1]}});return b.push(_),_}return S};if(w&&$.push(E(r,c)),y&&$.push(E(a,c)),v){const S=t.makeTensorInfo([],"float32",Us(f,"float32"));$.push(S),b.push(S)}return $};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=dw({x:o,filter:i,convInfo:g,backend:t,bias:r,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){const $=p?Fa(p,!0):null,E=new hw(g,w,$,y,v),S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],L=k();x=t.runWebGLProgram(E,L,"float32",S)}else if(z().getBool("WEBGL_CONV_IM2COL"))x=pw({x:o,filter:i,convInfo:g,backend:t,bias:r,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const $=p?Fa(p,!1):null,E=new cw(g,w,$,y,v),S=k();x=t.runWebGLProgram(E,S,"float32")}const I=ee({inputs:{x},backend:t,attrs:{shape:g.outShape}});return b.push(x),b.forEach($=>t.disposeIntermediateTensorInfo($)),I}const jV={kernelName:Yl,backendName:"webgl",kernelFunc:qV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:i,bias:r,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),C(Ut(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Ft(o.shape,i.shape,l,m,u,h,!0),x=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?Fa(d,x):null,w=[o,i],y=r!=null,v=a!=null,k=d==="leakyrelu";if(y&&w.push(r),v&&w.push(a),k){const S=t.makeTensorInfo([],"float32",Us(p,"float32"));w.push(S),f.push(S)}let I;x?I=new yw(g,y,b,v,k):I=new bw(g,y,b,v,k);const $=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=t.runWebGLProgram(I,w,"float32",$);return f.forEach(S=>t.disposeIntermediateTensorInfo(S)),E}const XV={kernelName:Vf,backendName:"webgl",kernelFunc:KV};class YV{constructor(e,t,s,o){this.sliceDim=e,this.strides=t,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=s;const i=Ge(s.length);let r=`
    int index;`;for(let a=0;a<this.sliceDim;a++)r+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${r}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,i=o.shape,r=i[i.length-1],a=G(s.shape),[l,u,c,h]=wd(s,o),d=ee({inputs:{x:o},backend:t,attrs:{shape:[u,r]}}),p=ee({inputs:{x:s},backend:t,attrs:{shape:[G(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const x=t.readSync(o.dataId),b=t.bufferSync(s),w=fP(x,b,s.dtype,u,r,c,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,w.values)}const f=new YV(r,h,[u,c],s.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=ee({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const JV={kernelName:Cf,backendName:"webgl",kernelFunc:ZV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QV{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Ge(this.rank),o=eW(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function eW(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let o=0;o<n.length;o++)o===2?s.push("index"):s.push(`${t[o]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $w(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:i}=e,{axis:r,batchDims:a}=s,l=$e(r,o.shape)[0];if(z().get("DEBUG")){const b=t.readSync(i.dataId),w=o.shape[l];for(let y=0;y<b.length;++y){const v=b[y];C(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}const u=jd(o,i,l,a),c=G(i.shape),h=[],d=ee({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=ee({inputs:{x:i},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,i])||o.dtype==="string"){const b=t.bufferSync(p),w=t.bufferSync(d),y=mP(w,b,f);return h.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.makeTensorInfo(u.outputShape,y.dtype,y.values)}const m=new QV(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=ee({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return h.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}const tW={kernelName:pl,backendName:"webgl",kernelFunc:$w};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=Mt({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:gP,dtype:"bool"}),sW={kernelName:fl,backendName:"webgl",kernelFunc:nW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW=Mt({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:xP}),iW={kernelName:mr,backendName:"webgl",kernelFunc:oW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n){const{inputs:e,backend:t}=n,{input:s}=e;return Cw(s,!0,t)}const aW={kernelName:Zc,backendName:"webgl",kernelFunc:rW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lW=Re({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),uW={kernelName:xr,backendName:"webgl",kernelFunc:lW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW=Re({opSnippet:"return float(isinf(x));",dtype:"bool"}),hW={kernelName:br,backendName:"webgl",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dW=Re({opSnippet:"return float(isnan(x));",dtype:"bool"}),pW={kernelName:yr,backendName:"webgl",kernelFunc:dW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW=Mt({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:bP,dtype:"bool"}),mW={kernelName:gl,backendName:"webgl",kernelFunc:fW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW=Mt({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:yP,dtype:"bool"}),xW={kernelName:xl,backendName:"webgl",kernelFunc:gW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:i}=t,r=wP(s,o,i);return e.makeTensorInfo([r.length],"float32",r)}const yW={kernelName:If,backendName:"webgl",kernelFunc:bW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW=Bi+`
  return x < 0.0 ? 0./0. : log(x);
`,vW=Re({opSnippet:wW,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:vP}),kW={kernelName:wr,backendName:"webgl",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW=Bi+`
  return log(1.0 + x);
`,IW=Re({opSnippet:CW}),$W={kernelName:vr,backendName:"webgl",kernelFunc:IW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW=Mt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),NW={kernelName:bl,backendName:"webgl",kernelFunc:SW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW=Re({opSnippet:"return float(!(x >= 1.0));"}),TW={kernelName:yl,backendName:"webgl",kernelFunc:EW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=Mt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),LW={kernelName:wl,backendName:"webgl",kernelFunc:RW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DW{constructor(e,t,s,o,i){this.variableNames=["x"],this.outputShape=[];const r=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${o}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${r}; j <= ${r}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AW{constructor(e,t,s,o,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${o}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${r};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${r}; j <= ${r}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW={kernelName:vl,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:i,bias:r,alpha:a,beta:l}=s,u=z().getBool("WEBGL_PACK_NORMALIZATION")?new AW(o.shape,i,r,a,l):new DW(o.shape,i,r,a,l);return t.runWebGLProgram(u,[o],o.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OW{constructor(e,t,s,o,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=o,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W={kernelName:Qc,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o,y:i,dy:r}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,h=new OW(o.shape,a,l,u,c);return t.runWebGLProgram(h,[o,i,r],o.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n,e,t,s){const o=G(e),r=G(n.shape)/o,a=ee({inputs:{x:n},attrs:{shape:[r,o]},backend:s}),l=Qo(a,n.dtype,"max",s),u=ee({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sw(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:i,keepDims:r}=s,a=o.shape.length,l=$e(i,o.shape);let u=l;const c=at(u,a),h=c!=null,d=t.shouldExecuteOnCPU([o]);let p=o;if(h){if(d){const w=t.texData.get(p.dataId).values,y=new Array(a);for(let I=0;I<y.length;I++)y[I]=o.shape[c[I]];const v=Jp(w,o.shape,o.dtype,c,y);p=t.makeTensorInfo(y,o.dtype);const k=t.texData.get(p.dataId);k.values=v}else p=lc(o,c,t);u=dt(u.length,a)}Ot("max",u,a);const[f,m]=Rt(p.shape,u);let g=f;r&&(g=xt(f,l));let x;if(d){const w=t.texData.get(p.dataId).values,y=kP(w,G(m),g,o.dtype);x=t.makeTensorInfo(g,o.dtype);const v=t.texData.get(x.dataId);v.values=y}else x=MW(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),x}const PW={kernelName:kl,backendName:"webgl",kernelFunc:Sw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW=Qp+`
  return max(a, b);
`,zW=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Jo+`
  return result;
`,VW=Mt({opSnippet:BW,packedOpSnippet:zW,cpuKernelImpl:CP}),WW={kernelName:kr,backendName:"webgl",kernelFunc:VW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;Da(o,"maxPool");const{filterSize:i,strides:r,pad:a,dimRoundingMode:l}=s,u=1;C(Ut(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=An(o.shape,i,r,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&Fe(c.inShape,c.outShape))return bn({inputs:{x:o},backend:t});const h=new Oa(c,"max",!1);return t.runWebGLProgram(h,[o],o.dtype)}const GW={kernelName:Cl,backendName:"webgl",kernelFunc:UW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:i,strides:r,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Ns(o.shape,i,r,c,a,u,l),d=new tf(h,"max",!1);return t.runWebGLProgram(d,[o],o.dtype)}const qW={kernelName:Il,backendName:"webgl",kernelFunc:HW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jW{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,o=e.dilationHeight,i=e.effectiveFilterHeight,r=e.effectiveFilterWidth,a=i-1-e.padInfo.top,l=r-1-e.padInfo.left,u=i*r-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${r} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class KW{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,r=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${r}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i}=e,r=i,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Ns(r.shape,a,l,h,u,c),p=new tf(d,"max",!0),f=t.runWebGLProgram(p,[r],r.dtype),m=new KW(d),g=t.runWebGLProgram(m,[o,f],r.dtype);return t.disposeIntermediateTensorInfo(f),g}const YW={kernelName:th,backendName:"webgl",kernelFunc:XW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:i,output:r}=e,a=i;Da([i,r],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=An(a.shape,l,u,1,c,h),p=!0,f=new Oa(d,"max",p),m=t.runWebGLProgram(f,[a],a.dtype),g=new jW(d),x=t.runWebGLProgram(g,[o,m],a.dtype);return t.disposeIntermediateTensorInfo(m),x}const JW={kernelName:eh,backendName:"webgl",kernelFunc:ZW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(n,e,t,s){let o=new Oa(t,"max",!1);const i=s.runWebGLProgram(o,[n],"float32");o=new Oa(t,"max",!0,!0,e);const r=s.runWebGLProgram(o,[n],"float32");return[i,r]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU={kernelName:$f,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:i,pad:r,includeBatchInIndex:a}=e,l=t;C(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];C(Ut(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=An(s.shape,o,i,u,r),[h,d]=QW(s,a,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n,e,t,s){const o=G(e),r=G(n.shape)/o,a=ee({inputs:{x:n},attrs:{shape:[r,o]},backend:s}),l=Qo(a,"float32","mean",s),u=ee({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nU={kernelName:$l,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:o,axis:i}=e,r=t,a=s.shape.length,l=$e(i,s.shape);let u=l;const c=at(u,a),h=c!=null,d=r.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const y=r.texData.get(f.dataId).values,v=new Array(a);for(let $=0;$<v.length;$++)v[$]=s.shape[c[$]];const k=Jp(y,s.shape,s.dtype,c,v);f=r.makeTensorInfo(v,s.dtype);const I=r.texData.get(f.dataId);I.values=k}else f=lc(s,c,r);p.push(f),u=dt(u.length,a)}Ot("sum",u,a);const[m,g]=Rt(f.shape,u);let x=m;o&&(x=xt(m,l));const b=tU(f,g,x,r);for(const w of p)r.disposeIntermediateTensorInfo(w);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s,a=o.shape.length,l=$e(i,o.shape);let u=l;const c=at(u,a);let h=o;c!=null&&(h=Jt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=dt(u.length,o.shape.length)),Ot("min",u,a);const[d,p]=Rt(h.shape,u),f=G(p),m=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Qo(m,m.dtype,"min",t);let x;if(r){const b=xt(d,l);x=ee({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ee({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),x}const oU={kernelName:Sl,backendName:"webgl",kernelFunc:sU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iU=Qp+`
  return min(a, b);
`,rU=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Jo+`
  return result;
`,aU=Mt({opSnippet:iU,packedOpSnippet:rU,cpuKernelImpl:IP}),lU={kernelName:Cr,backendName:"webgl",kernelFunc:aU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uU{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const o=e.length,i=Ge(o),r=t.map(c=>c[0]).join(","),a=t.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=s==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${r};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${r});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cU{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const o=e.length,i=Ge(o),r=t.map(f=>f[0]).join(","),a=t.map((f,m)=>f[0]+e[m]).join(","),l=Zt("rc",o),u=Zt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(o===1){const f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[o-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[o-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[o-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${r});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hU={kernelName:Nl,backendName:"webgl",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:o,mode:i}=t,r=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cU(s.shape,o,i):new uU(s.shape,o,i);return e.runWebGLProgram(r,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU=`if (b == 0.0) return NAN;
  return mod(a, b);`,pU=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Jo+`
  return result;
`,fU=Mt({opSnippet:dU,packedOpSnippet:pU}),mU={kernelName:Ir,backendName:"webgl",kernelFunc:fU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gU{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nw=Mt({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),xU={kernelName:lr,backendName:"webgl",kernelFunc:Nw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ew="return a - b;",Tw=Mt({opSnippet:Ew,packedOpSnippet:Ew,supportsComplex:!0,cpuKernelImpl:HP}),bU={kernelName:zr,backendName:"webgl",kernelFunc:Tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rw(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:i}=s,r=$e([i],o.shape),a=Sw({inputs:{x:o},backend:t,attrs:{reductionIndices:r,keepDims:!1}}),l=xt(a.shape,r),u=ee({inputs:{x:a},backend:t,attrs:{shape:l}}),c=Tw({inputs:{a:o,b:u},backend:t}),h=ww({inputs:{x:c},backend:t}),d=uc({inputs:{x:h},backend:t,attrs:{axis:r,keepDims:!1}}),p=ee({inputs:{x:d},backend:t,attrs:{shape:l}}),f=Nw({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const yU={kernelName:Hl,backendName:"webgl",kernelFunc:Rw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:i,seed:r,normalized:a}=s,l=a?o:Rw({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new gU(u,c,i),d=[[r]],p=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),p}const vU={kernelName:Sf,backendName:"webgl",kernelFunc:wU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU=Wn+`
  return -x;
`,CU=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function IU(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const i=t.texData.get(s.dataId),[r,a]=SP(i.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,r)}let o;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new co(s.shape,CU):o=new vs(s.shape,kU),t.runWebGLProgram(o,[s],s.dtype)}const $U={kernelName:El,backendName:"webgl",kernelFunc:IU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SU=fd;function NU(n){wn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:i}=e,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(o.dataId),c=t.readSync(i.dataId),{selectedIndices:h}=SU(u,c,r,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const EU={kernelName:nh,backendName:"webgl",kernelFunc:NU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU=md;function RU(n){wn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:i}=e,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s,c=t.readSync(o.dataId),h=t.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=TU(c,h,r,a,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const LU={kernelName:sh,backendName:"webgl",kernelFunc:RU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU=gd;function AU(n){wn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:i}=e,{maxOutputSize:r,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(o.dataId),h=t.readSync(i.dataId),d=r,p=a,f=l,m=u,{selectedIndices:g,selectedScores:x}=DU(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const FU={kernelName:oh,backendName:"webgl",kernelFunc:AU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OU{constructor(e,t,s,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U={kernelName:Ll,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:i,depth:r,onValue:a,offValue:l}=s,u=G(o.shape),c=new OU(u,r,a,l),h=ee({inputs:{x:o},backend:t,attrs:{shape:[u]}}),d=t.runWebGLProgram(c,[h],i);t.disposeIntermediateTensorInfo(h);const p=[...o.shape,r],f=ee({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mc(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const o=_a({inputs:{input:s},backend:t}),i=mc({inputs:{x:o},backend:t}),r=pc({inputs:{input:s},backend:t}),a=mc({inputs:{x:r},backend:t}),l=ho({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),l}else return Ba({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const MU={kernelName:Kl,backendName:"webgl",kernelFunc:mc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const o=_a({inputs:{input:s},backend:t}),i=Lw({inputs:{x:o},backend:t}),r=pc({inputs:{input:s},backend:t}),a=mc({inputs:{x:r},backend:t}),l=ho({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),l}else return Ba({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const PU={kernelName:Rl,backendName:"webgl",kernelFunc:Lw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return of({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const i=e[0].shape,r=e[0].dtype;e.forEach(c=>{bc(i,c.shape,"All tensors passed to stack must have matching shapes"),C(r===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=of({inputs:{input:c},backend:t,attrs:{dim:o}});return a.push(h),h}),u=uw({inputs:l,backend:t,attrs:{axis:o}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const zU={kernelName:Dl,backendName:"webgl",kernelFunc:BU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VU{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const o=e.length,i=Ge(o),r=t.map(u=>u[0]).join(","),a=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${r};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${r});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WU{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const o=e.length,i=Ge(o),r=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),l=Zt("rc",o),u=Zt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${c}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${c}) {`],p=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=o===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${r});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dw=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:i,constantValue:r}=s;if(G(o.shape)===0){const u=i.map((c,h)=>c[0]+o.shape[h]+c[1]);return Ba({backend:t,attrs:{shape:u,value:r,dtype:o.dtype}})}const a=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WU(o.shape,i,r):new VU(o.shape,i,r),l=[[r]];return t.runWebGLProgram(a,[o],o.dtype,l)},UU={kernelName:Al,backendName:"webgl",kernelFunc:Dw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,HU=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Jo+`
  return result;
`,qU=Mt({opSnippet:GU,packedOpSnippet:HU}),jU={kernelName:Sr,backendName:"webgl",kernelFunc:qU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:i,keepDims:r}=s,a=o.shape.length,l=[],u=$e(i,o.shape);let c=u;const h=at(c,a);let d=o;h!=null&&(d=Jt({inputs:{x:o},backend:t,attrs:{perm:h}}),c=dt(c.length,a),l.push(d)),Ot("prod",c,a);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=EP(d.shape,d.dtype,f,c);p=t.makeTensorInfo(g,x,m)}else{const[f,m]=Rt(d.shape,c),g=G(m),x=ee({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),b=$h(o.dtype),w=Qo(x,b,"prod",t);p=ee({inputs:{x:w},backend:t,attrs:{shape:f}}),l.push(x),l.push(w)}if(r){l.push(p);const f=xt(p.shape,u);p=ee({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const XU={kernelName:Ol,backendName:"webgl",kernelFunc:KU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:i,indices:r}=e,{outputRaggedRank:a}=s,l=o.map(x=>t.readSync(x.dataId)),u=o.map(x=>x.shape),c=t.readSync(i.dataId),h=t.readSync(r.dataId),[d,p,f]=TP(l,u,c,i.shape,i.dtype,h,r.shape,a),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,i.dtype,p);return m.concat([g])}const ZU={kernelName:Nf,backendName:"webgl",kernelFunc:YU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:i}=e,r=t.readSync(s.dataId),a=t.readSync(o.dataId),l=t.readSync(i.dataId),[u,c]=RP(r,s.shape,s.dtype,a,o.shape,l,i.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const QU={kernelName:Ef,backendName:"webgl",kernelFunc:JU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:i,defaultValue:r,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.readSync(o.dataId),c=t.readSync(i.dataId),h=t.readSync(r.dataId),d=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=LP(u,o.shape,c,i.shape,i.dtype,h,r.shape,d,p,l);return t.makeTensorInfo(f,i.dtype,m)}const tG={kernelName:Tf,backendName:"webgl",kernelFunc:eG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aw=n=>{const{backend:e,attrs:t}=n,{start:s,stop:o,step:i,dtype:r}=t,a=DP(s,o,i,r);return e.makeTensorInfo([a.length],r,a)},nG={kernelName:ih,backendName:"webgl",kernelFunc:Aw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG=Re({opSnippet:"return 1.0 / x;"}),oG={kernelName:Nr,backendName:"webgl",kernelFunc:sG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG=Wn+`
  return (x < 0.0) ? 0.0 : x;
`,rG=Re({opSnippet:iG,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),aG={kernelName:Er,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG=Wn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,uG=Re({opSnippet:lG,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),cG={kernelName:Tr,backendName:"webgl",kernelFunc:uG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hG{constructor(e,t,s,o,i){this.variableNames=["A"],this.outputShape=[];const[r,a,l,u]=e;this.outputShape=[r,t,s,u];const c=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s];let d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dG{constructor(e,t,s,o,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,a,l,u]=e;this.outputShape=[r,t,s,u];const c=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s];let d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:i,halfPixelCenters:r,size:a}=s,[l,u]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dG(o.shape,l,u,i,r):new hG(o.shape,l,u,i,r);return t.runWebGLProgram(c,[o],"float32")}const fG={kernelName:Pl,backendName:"webgl",kernelFunc:pG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mG{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,i]=t,[,r,a]=e,l=[s&&r>1?o-1:o,s&&a>1?i-1:i],u=[s&&r>1?r-1:r,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${r}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:i}=e,{alignCorners:r}=s,a=new mG(i.shape,o.shape,r);return t.runWebGLProgram(a,[i],i.dtype)}const xG={kernelName:lh,backendName:"webgl",kernelFunc:gG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bG{constructor(e,t,s,o,i){this.variableNames=["A"],this.outputShape=[];const[r,a,l,u]=e;this.outputShape=[r,t,s,u];const c=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s],d=o?"0.5":"0.0";let p;i?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yG{constructor(e,t,s,o,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,a,l,u]=e;this.outputShape=[r,t,s,u];const c=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s],d=o?"0.5":"0.0";let p;i?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:i,halfPixelCenters:r,size:a}=s,[l,u]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yG(o.shape,l,u,i,r):new bG(o.shape,l,u,i,r);return t.runWebGLProgram(c,[o],o.dtype)}const vG={kernelName:Ml,backendName:"webgl",kernelFunc:wG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kG{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,i]=t,[,r,a]=e,l=[s&&r>1?o-1:o,s&&a>1?i-1:i],u=[s&&r>1?r-1:r,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${r}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:i}=e,{alignCorners:r}=s,a=new kG(i.shape,o.shape,r);return t.runWebGLProgram(a,[i],i.dtype)}const IG={kernelName:ah,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $G{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const o=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,i=e.map((a,l)=>o(l)).join(","),r=Ge(s);this.userCode=`
      void main() {
        ${r} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SG{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const o=Zt("rc",s),i=`${o[s-1]} + 1 < ${this.outputShape[s-1]}`,r=`${o[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Ge(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${i}){
            result.g = ${u(o.slice())};
          }
          if(${r}) {
            result.b = ${c(o.slice())};
            if(${i}) {
              result.a = ${h(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((b,w)=>p(w,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:i}=s,r=o.shape.length,a=$e(i,o.shape);if(r===0)return bn({inputs:{x:o},backend:t});const l=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SG(o.shape,a):new $G(o.shape,a);return t.runWebGLProgram(l,[o],o.dtype)}const EG={kernelName:Bl,backendName:"webgl",kernelFunc:NG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TG{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],o=e[2];this.outputShape=e;let i="";typeof t=="number"?i=`float outputValue = ${t.toFixed(2)};`:i=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG={kernelName:mh,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:i,center:r}=e,a=t,l=new TG(s.shape,i),[u,c]=Td(r,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=Re({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),DG={kernelName:Rr,backendName:"webgl",kernelFunc:LG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG=Re({opSnippet:"return inversesqrt(x);",cpuKernelImpl:AP}),FG={kernelName:Lr,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class af{constructor(e,t,s,o,i,r,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const u=Ge(i.length),c=Ge(r.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OG{constructor(e,t,s,o,i,r,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const u=Ge(i.length),c=Ge(r.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:i}=e,{shape:r}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=_o(i,o,r),d=[h/u,u];if(h===0)return t.makeTensorInfo(r,o.dtype);const p=ee({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=ee({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;z().getBool("WEBGL_PACK")?g=new OG(l,a,p.shape.length,f.shape.length,c,d):g=new af(l,a,p.shape.length,f.shape.length,c,d);const x=t.runWebGLProgram(g,[f,p,m],f.dtype),b=ee({inputs:{x},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),b}const MG={kernelName:Rf,backendName:"webgl",kernelFunc:_G};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PG{constructor(e,t,s,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const i="while (left < right) {",r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=z().getNumber("WEBGL_VERSION")===2?i:r,l=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:i}=e,{side:r}=s,a=new PG(o.shape[0],o.shape[1],i.shape[1],r),l=[[o.shape[1]]];return t.runWebGLProgram(a,[o,i],"int32",l)}const zG={kernelName:Df,backendName:"webgl",kernelFunc:BG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VG{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let o,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",o="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${a[c]}`),c<e&&l.push(`${a[c]}`);o=l.join(),i=u.join()}const r=Ge(s);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:i}=e,r=new VG(s.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(r,[s,o,i],fn(o.dtype,i.dtype))}const UG={kernelName:zl,backendName:"webgl",kernelFunc:WG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${yu};
  float scale = ${wu};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,HG=Re({opSnippet:GG}),qG={kernelName:Dr,backendName:"webgl",kernelFunc:HG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=Bi+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,KG=Re({opSnippet:jG,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:OP}),XG={kernelName:_r,backendName:"webgl",kernelFunc:KG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG=Re({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),ZG={kernelName:Or,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG=Bi+`
  return sin(x);
`,QG=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Jo}
  return result;
`,e5=Re({opSnippet:JG,packedOpSnippet:QG}),t5={kernelName:Ar,backendName:"webgl",kernelFunc:e5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5=Re({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),s5={kernelName:Fr,backendName:"webgl",kernelFunc:n5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5=Re({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),i5={kernelName:Mr,backendName:"webgl",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5={kernelName:Ul,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:i,paddings:r}=s;C(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((x,b)=>x*b),l=[[0,0]];l.push(...r);for(let x=1+i.length;x<o.shape.length;++x)l.push([0,0]);const u=[],c=Dw({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),h=la(c.shape,i,a,!1),d=ua(h.length,i.length,!1),p=ca(c.shape,i,a,!1),f=ee({inputs:{x:c},backend:t,attrs:{shape:h}}),m=Jt({inputs:{x:f},backend:t,attrs:{perm:d}}),g=ee({inputs:{x:m},backend:t,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:i,defaultValue:r}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${r.shape}`);const a=t.readSync(s.dataId),l=t.readSync(o.dataId),u=t.readSync(i.dataId),c=t.readSync(r.dataId)[0],[h,d,p,f,m]=MP(a,s.shape,s.dtype,l,o.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const l5={kernelName:Af,backendName:"webgl",kernelFunc:a5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const r=Array.from(t.readSync(o.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(i.dataId)),[u,c,h]=PP(a,s.shape,s.dtype,r,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const c5={kernelName:Ff,backendName:"webgl",kernelFunc:u5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const r=t.readSync(s.dataId),a=t.readSync(o.dataId),l=t.readSync(i.dataId),[u,c]=Py(r,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const d5={kernelName:Of,backendName:"webgl",kernelFunc:h5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const r=t.readSync(s.dataId),a=t.readSync(o.dataId),l=t.readSync(i.dataId),[u,c]=Py(r,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const f5={kernelName:_f,backendName:"webgl",kernelFunc:p5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:i,defaultValue:r}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=_o(i,o,a),p=!1;if(i.dtype==="string"){const x=t.bufferSync(o),b=t.bufferSync(i),w=Hs(t.readSync(r.dataId)[0]),y=FP(x,b,a,d,c,u,l,h,w,p);return t.makeTensorInfo(a,y.dtype,y.values)}const f=new af(u,l,o.shape.length,i.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[i,o,r],i.dtype),g=ee({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),g}const g5={kernelName:Mf,backendName:"webgl",kernelFunc:m5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:i,axis:r}=s,a=$e(r,o.shape)[0],l=Hd(o,i,a),u=o.shape.length,c=new Array(u).fill(0),h=o.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=zi({inputs:{x:o},backend:t,attrs:{begin:c,size:p}});return c[a]+=d,f})}const b5={kernelName:Gl,backendName:"webgl",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fw="return sqrt(x);",y5=Re({opSnippet:Fw,packedOpSnippet:Fw,cpuKernelImpl:BP}),w5={kernelName:Pr,backendName:"webgl",kernelFunc:y5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5=Re({opSnippet:"return x * x;"}),k5={kernelName:uh,backendName:"webgl",kernelFunc:v5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ow="return (a - b) * (a - b);",C5=Mt({opSnippet:Ow,packedOpSnippet:Ow}),I5={kernelName:Br,backendName:"webgl",kernelFunc:C5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");const i=t.readSync(o.dataId),r=As(i),a=zP(r,"string",s);return t.makeTensorInfo(o.shape,"string",a)}const S5={kernelName:ch,backendName:"webgl",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5({inputs:n,attrs:e,backend:t}){const{x:s}=n,o=Wn+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new vs(s.shape,o);return t.runWebGLProgram(i,[s],s.dtype)}const E5={kernelName:Gr,backendName:"webgl",kernelFunc:N5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T5{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const o=s.length,i=Ge(s.length),r=Ge(s.length);let a="";if(o===1)a="coords * strides + begin";else{let l=0;a=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${r} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:i,end:r,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=Sd(o.shape,i,r,a,l,u,c,h,d);let v;if(m)v=ee({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||x){C(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const I=Cd(b,w,y),$=zi({inputs:{x:o},backend:t,attrs:{begin:b,size:I}});v=ee({inputs:{x:$},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo($)}else if(t.shouldExecuteOnCPU([o])){const $=t.readSync(o.dataId),E=Se(o.shape,o.dtype,$),S=VP(p,E,y,b);v=t.makeTensorInfo(f,o.dtype,S.values)}else{const $=new T5(b,y,p);v=t.runWebGLProgram($,[o],o.dtype)}const k=ee({inputs:{x:v},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(v),k}const L5={kernelName:hh,backendName:"webgl",kernelFunc:R5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:i,leftPad:r,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[f,m]=WP(d,p,o,i,r,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const A5={kernelName:Pf,backendName:"webgl",kernelFunc:D5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:i,delimiter:r}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(r.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const a=t.readSync(i.dataId),l=t.readSync(r.dataId)[0],[u,c,h]=UP(a,l,o),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const O5={kernelName:Bf,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const r=t.readSync(i.dataId),a=GP(r,o);return t.makeTensorInfo(i.shape,"int32",a)}const M5={kernelName:zf,backendName:"webgl",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=Re({opSnippet:"return tan(x);"}),B5={kernelName:Vr,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=Re({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),V5={kernelName:Wr,backendName:"webgl",kernelFunc:z5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:o,indices:i,updates:r}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=_o(r,i,o.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(o.shape,i.dtype);const p=ee({inputs:{x:i},backend:t,attrs:{shape:[l,a]}}),f=ee({inputs:{x:r},backend:t,attrs:{shape:[l,u]}}),m=ee({inputs:{x:o},backend:t,attrs:{shape:d}}),g=new af(l,a,p.shape.length,f.shape.length,c,d,!1,!0),x=t.runWebGLProgram(g,[f,p,m],m.dtype),b=ee({inputs:{x},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),b}const U5={kernelName:Lf,backendName:"webgl",kernelFunc:W5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G5{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.rank=s.length;const o=Ge(this.rank),i=H5(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function H5(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let o=0;o<n.length;o++)s.push(`imod(${t[o]}, ${n[o]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:i}=s;if(o.dtype==="string"||o.shape.length>5){const l=t.readSync(o.dataId),u=o.dtype==="string"?l.map(d=>Hs(d)):l,c=Se(o.shape,o.dtype,u),h=qP(c,i);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const r=new G5(o.shape,i);return t.runWebGLProgram(r,[o],o.dtype)}const q5={kernelName:Ur,backendName:"webgl",kernelFunc:_w};class j5{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class K5{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ei(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function Mw(n){let e=1;for(;e<n;)e*=2;return e}function X5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:i,sorted:r}=s,a=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([o])||c<a||i>l){const S=t.readSync(o.dataId),[L,_]=jP(S,u,o.dtype,i,r);return[t.makeTensorInfo(L.shape,L.dtype,L.values),t.makeTensorInfo(_.shape,_.dtype,_.values)]}if(i===0)return u[u.length-1]=0,[t.makeTensorInfo(u,o.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[o,Ba({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const h=t.texData.get(o.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(o):o,m=G(u)/c,g=ee({inputs:{x:p},attrs:{shape:[m,c]},backend:t});d&&ei(t,p);const x=Mw(i),b=Mw(c);let w=null;const y=()=>w===null?[g,g]:[g,w],v=(S,L,_)=>{const P=y(),A=new j5(_),V=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[S],[L]],H=w;w=t.runWebGLProgram(A,P,"int32",V),ei(t,H)};for(let S=1;S<x;S*=2){const L=S*2;for(let _=S;_>=1;_/=2)v(L,_,[m,b])}for(let S=b;S>x;S/=2){const L=y(),_=new K5([m,S/2]),A=[[c],[w===null?1:0],[x]],B=w;w=t.runWebGLProgram(_,L,"int32",A),ei(t,B);const V=x/2,H=V*2;for(let W=V;W>=1;W/=2)v(H,W,w.shape)}let k=w;w=zi({inputs:{x:w},backend:t,attrs:{begin:0,size:[m,i]}}),ei(t,k);let I=$w({inputs:{x:g,indices:w},backend:t,attrs:{axis:1,batchDims:1}});ei(t,g);const $=u.slice(0,-1);$.push(i),k=w,w=ee({inputs:{x:w},attrs:{shape:$},backend:t}),ei(t,k);const E=I;return I=ee({inputs:{x:I},attrs:{shape:$},backend:t}),ei(t,E),[I,w]}const Y5={kernelName:dh,backendName:"webgl",kernelFunc:X5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z5{constructor(e,t,s,o,i,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const a=s==="nearest"?1:2;let l;switch(o){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,transforms:i}=e,{interpolation:r,fillMode:a,fillValue:l,outputShape:u}=s,[c,h,d,p]=o.shape,[f,m]=u??[h,d],g=[c,f,m,p],x=new Z5(h,d,r,a,l,g);return t.runWebGLProgram(x,[o,i],"float32")}const Q5={kernelName:ph,backendName:"webgl",kernelFunc:J5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:i}=e;Da(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const r=s.readSync(i.dataId),{outputValues:a,outputShape:l,indices:u}=KP(r,o,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const tH={kernelName:fh,backendName:"webgl",kernelFunc:eH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:i}=s;i<0&&(i+=o.shape.length);const r=o,a=r.shape.length,l=o.shape[i],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==i&&(u[c++]=r.shape[m]);const h=[],d=new Array(a).fill(0),p=r.shape.slice();p[i]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[i]=m;const g=zi({inputs:{x:r},backend:t,attrs:{begin:d,size:p}}),x=ee({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=x,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const sH={kernelName:ql,backendName:"webgl",kernelFunc:nH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oH{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,o=e.batchSize,i=e.inSize,r=e.numSegments,a=r*Math.ceil(i/s);this.outputShape=[o,a];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${r})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${r})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:i}=e,{numSegments:r}=s,a=o.shape.length,l=[];let u=0;const c=at([u],a);let h=o;c!=null&&(h=Jt({inputs:{x:o},backend:t,attrs:{perm:c}}),l.push(h),u=dt(1,a)[0]);const d=a0(h.shape,u,r),p=G([h.shape[u]]),f=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=$h(o.dtype),g=(y,v,k,I,$)=>{const E=y.shape[0],S=y.shape[1],L=r0(S,$),_={windowSize:L,inSize:S,batchSize:E,numSegments:$},P=new oH(_,v),A=t.compileAndRun(P,[y,k],I);if(l.push(A),A.shape[1]===$)return A;const B=Aw({backend:t,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),V=_w({inputs:{x:B},backend:t,attrs:{reps:[S/L]}});return l.push(B),l.push(V),g(A,v,V,I,$)},x=g(f,"unsortedSegmentSum",i,m,r),b=ee({inputs:{x},backend:t,attrs:{shape:d}});let w=b;if(c!=null){l.push(b);const y=Xs(c);w=Jt({inputs:{x:w},backend:t,attrs:{perm:y}})}return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),w}const rH={kernelName:jl,backendName:"webgl",kernelFunc:iH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH=[B4,V4,G4,j4,X4,J4,eB,nB,rB,lB,hB,fB,xB,vB,IB,SB,EB,DB,FB,_B,BB,HB,jB,ZB,QB,oz,rz,cz,k4,pz,bz,kz,Ez,Lz,Az,Oz,Mz,Vz,Uz,Hz,jz,Xz,Zz,eV,nV,rV,lV,hV,fV,gV,bV,vV,CV,SV,EV,TV,LV,AV,OV,MV,BV,VV,GV,jV,XV,JV,tW,sW,iW,v4,aW,gz,uW,hW,pW,I4,mW,xW,yW,kW,$W,NW,TW,LW,FW,_W,PW,WW,GW,qW,YW,JW,eU,nU,oU,lU,hU,mU,vU,N4,$U,EU,LU,FU,ez,_U,PU,zU,UU,jU,S4,XU,ZU,QU,tG,nG,tz,xU,oG,aG,cG,T4,fG,xG,vG,IG,EG,RG,DG,FG,MG,zG,UG,qG,XG,ZG,t5,s5,GB,yU,i5,r5,l5,c5,d5,f5,g5,b5,w5,k5,I5,S5,E5,L5,A5,O5,M5,bU,_4,B5,V5,U5,q5,Y5,Q5,M4,tH,sH,rH,MU];for(const n of aH)Hf(n);Ov("cpu");class Un{constructor(){pe(this,"healEffectParameter",[])}static async init(){this.isReady=(async()=>{[this.x2yModel,this.y2zModel]=await Promise.all([xx(`${location.protocol}//${location.host}/pokesle-simulator/tf/x2y/model.json`),xx(`${location.protocol}//${location.host}/pokesle-simulator/tf/y2z/model.json`)])})()}static getHealEffect(e,t,s){let[o,i]=this.x2yModel.predict(aa([[s.sleepTime/8.5,Math.min(s.sleepTime,8.5)/8.5,s.checkFreq/10,e.morningHealGenki/100,e.skillRate,e.speed/3e3,t/30,e.bagFullHelpNum/20,e.skillCeil/88,e.base.specialty=="スキル"?1:.5]])).dataSync();return o=o*o*50,i=i*i*50,[o,i]}static getHelpRate(e,t,s,o){let[i,r]=this.y2zModel.predict(aa([[o.sleepTime/8.5,Math.min(o.sleepTime,8.5)/8.5,o.checkFreq/10,e/100,t/50,s/50]])).dataSync();return i<1&&(i=1),r<1&&(r=1),i>1/.45&&(i=1/.45),r>1/.45&&(r=1/.45),{day:i,night:r}}}pe(Un,"VERSION",20240709),pe(Un,"_x2yModel",null),pe(Un,"_y2zModel",null),pe(Un,"isReady"),pe(Un,"x2yModel"),pe(Un,"y2zModel"),Un.init();var lH="/pokesle-simulator/assets/belueberry-bjVuvnFf.png",uH="/pokesle-simulator/assets/blukberry-Q0XoMNAA.png",cH="/pokesle-simulator/assets/cheriberry-of1qkg09.png",hH="/pokesle-simulator/assets/chestoberry-C9IiraLv.png",dH="/pokesle-simulator/assets/durinberry-CrtMmdWo.png",pH="/pokesle-simulator/assets/figyberry-DuVaVy64.png",fH="/pokesle-simulator/assets/grepaberry-yWAzPlLM.png",mH="/pokesle-simulator/assets/leppaberry-CFL6Kc4u.png",gH="/pokesle-simulator/assets/lumberry-Or9sD8_h.png",xH="/pokesle-simulator/assets/magoberry-Ckie7Luk.png",bH="/pokesle-simulator/assets/oranberry-BqqUf8kl.png",yH="/pokesle-simulator/assets/pamtreberry-CuePLV3x.png",wH="/pokesle-simulator/assets/pechaberry-Dr8EzZ5x.png",vH="/pokesle-simulator/assets/persimberry-C5as00Cd.png",kH="/pokesle-simulator/assets/rawstberry-ZjllxWpk.png",CH="/pokesle-simulator/assets/sitrusberry-CIcKgb6D.png",IH="/pokesle-simulator/assets/wikiberry-Dy6-kB74.png",$H="/pokesle-simulator/assets/yacheberry-D7ae3JbC.png";const Wa=class Wa{};pe(Wa,"list",[{name:"シーヤ",energy:24,type:"ひこう",img:yH},{name:"ラム",energy:24,type:"むし",img:gH},{name:"ウブ",energy:25,type:"でんき",img:fH},{name:"ブリー",energy:26,type:"ゴースト",img:uH},{name:"マゴ",energy:26,type:"エスパー",img:xH},{name:"モモン",energy:26,type:"フェアリー",img:wH},{name:"クラボ",energy:27,type:"かくとう",img:cH},{name:"ヒメリ",energy:27,type:"ほのお",img:mH},{name:"キー",energy:28,type:"ノーマル",img:vH},{name:"フィラ",energy:29,type:"じめん",img:pH},{name:"オボン",energy:30,type:"いわ",img:CH},{name:"ドリ",energy:30,type:"くさ",img:dH},{name:"ウイ",energy:31,type:"あく",img:IH},{name:"オレン",energy:31,type:"みず",img:bH},{name:"カゴ",energy:32,type:"どく",img:hH},{name:"チーゴ",energy:32,type:"こおり",img:kH},{name:"ベリブ",energy:33,type:"はがね",img:lH},{name:"ヤチェ",energy:35,type:"ドラゴン",img:$H}]),pe(Wa,"map",Wa.list.reduce((e,t)=>(e[t.name]=t,e),{}));let ks=Wa;const Qt=class Qt{};pe(Qt,"list",[{name:"エナジーチャージS",effect:[400,569,785,1083,1496,2066,3002],energyOnly:!0},{name:"エナジーチャージS(ランダム)",effect:[500,711.5,981.5,1354,1870,2582.5,3752.5],energyOnly:!0},{name:"たくわえる(エナジーチャージS)",effect:[579,823,1135,1567,2163,2988,4341],metronome:!1,energyOnly:!0},{name:"エナジーチャージM",effect:[800,1251,1726,2383,3290,4546,6409],energyOnly:!0},{name:"ばけのかわ(きのみバースト)",effect:[{self:8,other:1},{self:10,other:2},{self:15,other:2},{self:17,other:3},{self:19,other:4},{self:21,other:5}],team:!0,success:.2,energyOnly:!0},{name:"きのみバースト",effect:[{self:11,other:1},{self:14,other:2},{self:21,other:2},{self:24,other:3},{self:27,other:4},{self:30,other:5}],team:!0,energyOnly:!0},{name:"げんきチャージS",effect:[12,16.2,21.2,26.6,33.6,43.4].map(e=>({self:e})),genki:!0},{name:"つきのひかり(げんきチャージS)",effect:[{self:12,other:6.3},{self:16.2,other:7.7},{self:21.2,other:10.1},{self:26.6,other:13},{self:33.6,other:17.2},{self:43.4,other:22.8}].map(e=>({self:e.self,other:e.other*.5/5})),genki:!0,team:!0},{name:"げんきエールS",effect:[14,17.1,22.5,28.8,38.2,50.6].map(e=>({other:e/5})),team:!0,genki:!0},{name:"げんきオールS",effect:[5,7,9,11.4,15,18.1].map(e=>({other:e})),team:!0,genki:!0},{name:"みかづきのいのり(げんきオールS)",effect:[{team:[{self:5,other:1},{self:7,other:1},{self:9,other:1},{self:12,other:1},{self:14,other:2}],other:3},{team:[{self:9,other:1},{self:12,other:1},{self:15,other:1},{self:16,other:2},{self:19,other:3}],other:4},{team:[{self:13,other:1},{self:17,other:1},{self:18,other:2},{self:20,other:3},{self:24,other:4}],other:5},{team:[{self:17,other:1},{self:19,other:2},{self:25,other:2},{self:28,other:3},{self:29,other:5}],other:7},{team:[{self:21,other:1},{self:24,other:2},{self:27,other:3},{self:28,other:5},{self:30,other:7}],other:9},{team:[{self:25,other:1},{self:29,other:2},{self:30,other:4},{self:31,other:6},{self:32,other:9}],other:11}],team:!0,genki:!0},{name:"食材ゲットS",effect:[6,8,11,14,17,21,24]},{name:"おてつだいサポートS",effect:[5,6,7,8,9,10,11],team:!0},{name:"おてつだいブースト",effect:[{fix:2,team:[0,0,1,2,4],max:6},{fix:3,team:[0,0,1,2,4],max:7},{fix:3,team:[0,0,2,3,5],max:8},{fix:4,team:[0,0,2,3,5],max:9},{fix:4,team:[0,1,3,4,6],max:10},{fix:5,team:[0,1,3,4,6],max:11}],team:!0},{name:"料理パワーアップS",effect:[7,10,12,17,22,27,31]},{name:"料理チャンスS",effect:[4,5,6,7,8,10]},{name:"ゆめのかけらゲットS",effect:[240,340,480,670,920,1260,1800],shard:!0},{name:"ゆめのかけらゲットS(ランダム)",effect:[300,425,600,837.5,1150,1575,2250],shard:!0},{name:"へんしん(スキルコピー)",effect:[null,null,null,null,null,null,null],metronome:!1},{name:"ものまね(スキルコピー)",effect:[null,null,null,null,null,null,null],metronome:!1},{name:"ゆびをふる",effect:[null,null,null,null,null,null],team:!0}]),pe(Qt,"map",Qt.list.reduce((e,t)=>(e[t.name]=t,e),{})),pe(Qt,"metronomeTarget",Qt.list.filter(e=>e.name!="ゆびをふる"&&e.metronome!==!1)),pe(Qt,"metronomeWeightList",Qt.metronomeTarget.map(e=>({skill:e,weight:1/Qt.metronomeTarget.length}))),pe(Qt,"metronomeNonTeamTarget",Qt.metronomeTarget.filter(e=>!e.team)),pe(Qt,"metronomeTeamTarget",Qt.metronomeTarget.filter(e=>e.team)),pe(Qt,"genkiSkillList",Qt.list.filter(e=>e.genki));let _s=Qt;const Hi=class Hi{};pe(Hi,"list",[{name:"フシギダネ",specialty:"食材",berry:"ドリ",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"あんみんトマト",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,6]}],skill:"食材ゲットS",help:4400,bag:11,foodRate:.257,skillRate:.019,legend:!1,exp:1,candyName:"フシギダネ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"フシギソウ",specialty:"食材",berry:"ドリ",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"あんみんトマト",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,6]}],skill:"食材ゲットS",help:3300,bag:14,foodRate:.255,skillRate:.019,legend:!1,exp:1,candyName:"フシギダネ",evolve:{before:"フシギダネ",lv:12,candy:40,itemList:"",sleep:null}},{name:"フシギバナ",specialty:"食材",berry:"ドリ",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"あんみんトマト",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,6]}],skill:"食材ゲットS",help:2800,bag:17,foodRate:.266,skillRate:.021,legend:!1,exp:1,candyName:"フシギダネ",evolve:{before:"フシギソウ",lv:24,candy:80,itemList:"",sleep:null}},{name:"ヒトカゲ",specialty:"食材",berry:"ヒメリ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,4,7]},{name:"げきからハーブ",numList:[null,null,6]}],skill:"食材ゲットS",help:3500,bag:12,foodRate:.201,skillRate:.011,legend:!1,exp:1,candyName:"ヒトカゲ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"リザード",specialty:"食材",berry:"ヒメリ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,4,7]},{name:"げきからハーブ",numList:[null,null,6]}],skill:"食材ゲットS",help:3e3,bag:15,foodRate:.227,skillRate:.016,legend:!1,exp:1,candyName:"ヒトカゲ",evolve:{before:"ヒトカゲ",lv:12,candy:40,itemList:"",sleep:null}},{name:"リザードン",specialty:"食材",berry:"ヒメリ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,4,7]},{name:"げきからハーブ",numList:[null,null,6]}],skill:"食材ゲットS",help:2400,bag:19,foodRate:.224,skillRate:.016,legend:!1,exp:1,candyName:"ヒトカゲ",evolve:{before:"リザード",lv:27,candy:80,itemList:"",sleep:null}},{name:"ゼニガメ",specialty:"食材",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[2,5,7]},{name:"リラックスカカオ",numList:[null,3,5]},{name:"マメミート",numList:[null,null,7]}],skill:"食材ゲットS",help:4500,bag:10,foodRate:.271,skillRate:.02,legend:!1,exp:1,candyName:"ゼニガメ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"カメール",specialty:"食材",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[2,5,7]},{name:"リラックスカカオ",numList:[null,3,5]},{name:"マメミート",numList:[null,null,7]}],skill:"食材ゲットS",help:3400,bag:14,foodRate:.271,skillRate:.02,legend:!1,exp:1,candyName:"ゼニガメ",evolve:{before:"ゼニガメ",lv:12,candy:40,itemList:"",sleep:null}},{name:"カメックス",specialty:"食材",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[2,5,7]},{name:"リラックスカカオ",numList:[null,3,5]},{name:"マメミート",numList:[null,null,7]}],skill:"食材ゲットS",help:2800,bag:17,foodRate:.275,skillRate:.021,legend:!1,exp:1,candyName:"ゼニガメ",evolve:{before:"カメール",lv:27,candy:80,itemList:"",sleep:null}},{name:"キャタピー",specialty:"きのみ",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"食材ゲットS",help:4400,bag:11,foodRate:.179,skillRate:.008,legend:!1,exp:1,candyName:"キャタピー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"トランセル",specialty:"きのみ",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"食材ゲットS",help:4200,bag:13,foodRate:.208,skillRate:.018,legend:!1,exp:1,candyName:"キャタピー",evolve:{before:"キャタピー",lv:5,candy:40,itemList:"",sleep:null}},{name:"バタフリー",specialty:"きのみ",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"食材ゲットS",help:2600,bag:21,foodRate:.197,skillRate:.014,legend:!1,exp:1,candyName:"キャタピー",evolve:{before:"トランセル",lv:8,candy:80,itemList:"",sleep:null}},{name:"コラッタ",specialty:"きのみ",berry:"キー",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,3]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:4900,bag:10,foodRate:.237,skillRate:.03,legend:!1,exp:1,candyName:"コラッタ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ラッタ",specialty:"きのみ",berry:"キー",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,3]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:2950,bag:16,foodRate:.237,skillRate:.03,legend:!1,exp:1,candyName:"コラッタ",evolve:{before:"コラッタ",lv:15,candy:40,itemList:"",sleep:null}},{name:"アーボ",specialty:"きのみ",berry:"カゴ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,2,3]},{name:"げきからハーブ",numList:[null,null,3]}],skill:"げんきチャージS",help:5e3,bag:10,foodRate:.235,skillRate:.033,legend:!1,exp:1,candyName:"アーボ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"アーボック",specialty:"きのみ",berry:"カゴ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,2,3]},{name:"げきからハーブ",numList:[null,null,3]}],skill:"げんきチャージS",help:3400,bag:14,foodRate:.264,skillRate:.057,legend:!1,exp:1,candyName:"アーボ",evolve:{before:"アーボ",lv:17,candy:40,itemList:"",sleep:null}},{name:"ピカチュウ",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS",help:2700,bag:17,foodRate:.207,skillRate:.021,legend:!1,exp:1,candyName:"ピカチュウ",evolve:{before:"ピチュー",lv:null,candy:20,itemList:"",sleep:50}},{name:"ピカチュウ(ハロウィン)",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2500,bag:18,foodRate:.218,skillRate:.028,legend:!1,exp:1,candyName:"ピカチュウ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ピカチュウ(ホリデー)",specialty:"スキル",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"ゆめのかけらゲットS",help:2500,bag:20,foodRate:.131,skillRate:.042,legend:!1,exp:1,candyName:"ピカチュウ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ライチュウ",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS",help:2200,bag:21,foodRate:.224,skillRate:.032,legend:!1,exp:1,candyName:"ピカチュウ",evolve:{before:"ピカチュウ",lv:null,candy:80,itemList:"かみなりのいし",sleep:null}},{name:"ピッピ",specialty:"きのみ",berry:"モモン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,3]}],skill:"ゆびをふる",help:4e3,bag:16,foodRate:.168,skillRate:.036,legend:!1,exp:1,candyName:"ピッピ",evolve:{before:"ピィ",lv:null,candy:20,itemList:"",sleep:50}},{name:"ピクシー",specialty:"きのみ",berry:"モモン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,3]}],skill:"ゆびをふる",help:2800,bag:20,foodRate:.168,skillRate:.036,legend:!1,exp:1,candyName:"ピッピ",evolve:{before:"ピッピ",lv:null,candy:80,itemList:"つきのいし",sleep:null}},{name:"ロコン",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"げんきエールS",help:4700,bag:13,foodRate:.168,skillRate:.027,legend:!1,exp:1,candyName:"ロコン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ロコン(アローラのすがた)",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"おてつだいサポートS",help:5600,bag:10,foodRate:.23,skillRate:.028,legend:!1,exp:1,candyName:"ロコン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"キュウコン",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"げんきエールS",help:2600,bag:23,foodRate:.164,skillRate:.025,legend:!1,exp:1,candyName:"ロコン",evolve:{before:"ロコン",lv:null,candy:80,itemList:"ほのおのいし",sleep:null}},{name:"キュウコン(アローラのすがた)",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"おてつだいサポートS",help:2900,bag:20,foodRate:.232,skillRate:.028,legend:!1,exp:1,candyName:"ロコン",evolve:{before:"ロコン(アローラのすがた)",lv:null,candy:80,itemList:"こおりのいし",sleep:null}},{name:"プリン",specialty:"スキル",berry:"モモン",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,2]}],skill:"げんきオールS",help:3900,bag:9,foodRate:.182,skillRate:.043,legend:!1,exp:1,candyName:"プリン",evolve:{before:"ププリン",lv:null,candy:20,itemList:"",sleep:50}},{name:"プクリン",specialty:"スキル",berry:"モモン",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,2]}],skill:"げんきオールS",help:2900,bag:13,foodRate:.174,skillRate:.04,legend:!1,exp:1,candyName:"プリン",evolve:{before:"プリン",lv:null,candy:80,itemList:"つきのいし",sleep:null}},{name:"ディグダ",specialty:"食材",berry:"フィラ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,3,4]},{name:"ワカクサ大豆",numList:[null,null,8]}],skill:"エナジーチャージS",help:4300,bag:10,foodRate:.192,skillRate:.021,legend:!1,exp:1,candyName:"ディグダ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ダグトリオ",specialty:"食材",berry:"フィラ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,3,4]},{name:"ワカクサ大豆",numList:[null,null,8]}],skill:"エナジーチャージS",help:2800,bag:16,foodRate:.19,skillRate:.02,legend:!1,exp:1,candyName:"ディグダ",evolve:{before:"ディグダ",lv:20,candy:40,itemList:"",sleep:null}},{name:"ニャース",specialty:"スキル",berry:"キー",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"マメミート",numList:[null,2,3]},null],skill:"ゆめのかけらゲットS",help:4400,bag:9,foodRate:.163,skillRate:.042,legend:!1,exp:1,candyName:"ニャース",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ペルシアン",specialty:"スキル",berry:"キー",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"マメミート",numList:[null,2,3]},null],skill:"ゆめのかけらゲットS",help:2800,bag:12,foodRate:.169,skillRate:.044,legend:!1,exp:1,candyName:"ニャース",evolve:{before:"ニャース",lv:21,candy:40,itemList:"",sleep:null}},{name:"コダック",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"とくせんリンゴ",numList:[null,4,6]},{name:"マメミート",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:5400,bag:8,foodRate:.136,skillRate:.126,legend:!1,exp:1,candyName:"コダック",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ゴルダック",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"とくせんリンゴ",numList:[null,4,6]},{name:"マメミート",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:3400,bag:14,foodRate:.162,skillRate:.125,legend:!1,exp:1,candyName:"コダック",evolve:{before:"コダック",lv:25,candy:40,itemList:"",sleep:null}},{name:"マンキー",specialty:"きのみ",berry:"クラボ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:4200,bag:12,foodRate:.197,skillRate:.022,legend:!1,exp:1,candyName:"マンキー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"オコリザル",specialty:"きのみ",berry:"クラボ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:2800,bag:17,foodRate:.2,skillRate:.024,legend:!1,exp:1,candyName:"マンキー",evolve:{before:"マンキー",lv:21,candy:40,itemList:"",sleep:null}},{name:"ガーディ",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"マメミート",numList:[null,3,5]},{name:"モーモーミルク",numList:[null,null,5]}],skill:"おてつだいサポートS",help:4300,bag:8,foodRate:.138,skillRate:.05,legend:!1,exp:1,candyName:"ガーディ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ウインディ",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"マメミート",numList:[null,3,5]},{name:"モーモーミルク",numList:[null,null,5]}],skill:"おてつだいサポートS",help:2500,bag:16,foodRate:.136,skillRate:.049,legend:!1,exp:1,candyName:"ガーディ",evolve:{before:"ガーディ",lv:null,candy:80,itemList:"ほのおのいし",sleep:null}},{name:"マダツボミ",specialty:"食材",berry:"ドリ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"げんきチャージS",help:5200,bag:8,foodRate:.233,skillRate:.039,legend:!1,exp:1,candyName:"マダツボミ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ウツドン",specialty:"食材",berry:"ドリ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"げんきチャージS",help:3800,bag:12,foodRate:.235,skillRate:.04,legend:!1,exp:1,candyName:"マダツボミ",evolve:{before:"マダツボミ",lv:16,candy:40,itemList:"",sleep:null}},{name:"ウツボット",specialty:"食材",berry:"ドリ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"げんきチャージS",help:2800,bag:17,foodRate:.233,skillRate:.039,legend:!1,exp:1,candyName:"マダツボミ",evolve:{before:"ウツドン",lv:null,candy:80,itemList:"リーフのいし",sleep:null}},{name:"イシツブテ",specialty:"食材",berry:"オボン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"あじわいキノコ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:5700,bag:9,foodRate:.281,skillRate:.052,legend:!1,exp:1,candyName:"イシツブテ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ゴローン",specialty:"食材",berry:"オボン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"あじわいキノコ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:4e3,bag:12,foodRate:.272,skillRate:.048,legend:!1,exp:1,candyName:"イシツブテ",evolve:{before:"イシツブテ",lv:19,candy:40,itemList:"",sleep:null}},{name:"ゴローニャ",specialty:"食材",berry:"オボン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"あじわいキノコ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:3100,bag:16,foodRate:.28,skillRate:.052,legend:!1,exp:1,candyName:"イシツブテ",evolve:{before:"ゴローン",lv:null,candy:80,itemList:"つながりのヒモ",sleep:null}},{name:"ヤドン",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"おいしいシッポ",numList:[null,1,2]},{name:"あんみんトマト",numList:[null,null,5]}],skill:"げんきエールS",help:5700,bag:9,foodRate:.151,skillRate:.067,legend:!1,exp:1,candyName:"ヤドン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ヤドラン",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"おいしいシッポ",numList:[null,1,2]},{name:"あんみんトマト",numList:[null,null,5]}],skill:"げんきエールS",help:3800,bag:16,foodRate:.197,skillRate:.068,legend:!1,exp:1,candyName:"ヤドン",evolve:{before:"ヤドン",lv:28,candy:40,itemList:"",sleep:null}},{name:"コイル",specialty:"スキル",berry:"ベリブ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},null],skill:"料理パワーアップS",help:5800,bag:8,foodRate:.182,skillRate:.064,legend:!1,exp:1,candyName:"コイル",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"レアコイル",specialty:"スキル",berry:"ベリブ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},null],skill:"料理パワーアップS",help:4e3,bag:11,foodRate:.182,skillRate:.063,legend:!1,exp:1,candyName:"コイル",evolve:{before:"コイル",lv:23,candy:40,itemList:"",sleep:null}},{name:"ドードー",specialty:"きのみ",berry:"シーヤ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:3800,bag:13,foodRate:.184,skillRate:.02,legend:!1,exp:1,candyName:"ドードー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ドードリオ",specialty:"きのみ",berry:"シーヤ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:2400,bag:21,foodRate:.184,skillRate:.02,legend:!1,exp:1,candyName:"ドードー",evolve:{before:"ドードー",lv:23,candy:40,itemList:"",sleep:null}},{name:"ゴース",specialty:"食材",berry:"ブリー",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,6]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"エナジーチャージS(ランダム)",help:3800,bag:10,foodRate:.144,skillRate:.015,legend:!1,exp:1,candyName:"ゴース",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ゴースト",specialty:"食材",berry:"ブリー",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,6]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"エナジーチャージS(ランダム)",help:3e3,bag:14,foodRate:.157,skillRate:.022,legend:!1,exp:1,candyName:"ゴース",evolve:{before:"ゴース",lv:19,candy:40,itemList:"",sleep:null}},{name:"ゲンガー",specialty:"食材",berry:"ブリー",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,6]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"エナジーチャージS(ランダム)",help:2200,bag:18,foodRate:.161,skillRate:.024,legend:!1,exp:1,candyName:"ゴース",evolve:{before:"ゴースト",lv:null,candy:80,itemList:"つながりのヒモ",sleep:null}},{name:"イワーク",specialty:"きのみ",berry:"オボン",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"マメミート",numList:[null,2,4]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"食材ゲットS",help:3100,bag:22,foodRate:.132,skillRate:.023,legend:!1,exp:1,candyName:"イワーク",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"カラカラ",specialty:"きのみ",berry:"フィラ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,2,3]},null],skill:"げんきチャージS",help:4800,bag:10,foodRate:.223,skillRate:.044,legend:!1,exp:1,candyName:"カラカラ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ガラガラ",specialty:"きのみ",berry:"フィラ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,2,3]},null],skill:"げんきチャージS",help:3500,bag:15,foodRate:.225,skillRate:.045,legend:!1,exp:1,candyName:"カラカラ",evolve:{before:"カラカラ",lv:21,candy:40,itemList:"",sleep:null}},{name:"ガルーラ",specialty:"食材",berry:"キー",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ワカクサ大豆",numList:[null,null,8]}],skill:"食材ゲットS",help:2650,bag:21,foodRate:.222,skillRate:.017,legend:!1,exp:1,candyName:"ガルーラ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"バリヤード",specialty:"食材",berry:"マゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"ものまね(スキルコピー)",help:2800,bag:17,foodRate:.216,skillRate:.039,legend:!1,exp:1,candyName:"バリヤード",evolve:{before:"マネネ",lv:12,candy:40,itemList:"",sleep:null}},{name:"カイロス",specialty:"食材",berry:"ラム",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"とくせんリンゴ",numList:[null,5,8]},{name:"マメミート",numList:[null,null,7]}],skill:"エナジーチャージS",help:2400,bag:24,foodRate:.216,skillRate:.031,legend:!1,exp:1,candyName:"カイロス",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"メタモン",specialty:"食材",berry:"キー",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,3,5]},{name:"おいしいシッポ",numList:[null,null,3]}],skill:"へんしん(スキルコピー)",help:3500,bag:17,foodRate:.201,skillRate:.036,legend:!1,exp:1,candyName:"メタモン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"イーブイ",specialty:"スキル",berry:"キー",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"食材ゲットS",help:3700,bag:12,foodRate:.192,skillRate:.055,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"イーブイ(ホリデー)",specialty:"きのみ",berry:"キー",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"ゆめのかけらゲットS",help:3100,bag:20,foodRate:.156,skillRate:.032,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"シャワーズ",specialty:"スキル",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"食材ゲットS",help:3100,bag:13,foodRate:.212,skillRate:.061,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"みずのいし",sleep:null}},{name:"サンダース",specialty:"スキル",berry:"ウブ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"おてつだいサポートS",help:2200,bag:17,foodRate:.151,skillRate:.039,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"かみなりのいし",sleep:null}},{name:"ブースター",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"料理パワーアップS",help:2700,bag:14,foodRate:.185,skillRate:.052,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"ほのおのいし",sleep:null}},{name:"ミニリュウ",specialty:"食材",berry:"ヤチェ",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"ワカクサコーン",numList:[null,4,7]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"げんきチャージS",help:5e3,bag:9,foodRate:.25,skillRate:.02,legend:!1,exp:1.5,candyName:"ミニリュウ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ハクリュー",specialty:"食材",berry:"ヤチェ",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"ワカクサコーン",numList:[null,4,7]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"げんきチャージS",help:3800,bag:12,foodRate:.262,skillRate:.025,legend:!1,exp:1.5,candyName:"ミニリュウ",evolve:{before:"ミニリュウ",lv:23,candy:40,itemList:"",sleep:null}},{name:"カイリュー",specialty:"食材",berry:"ヤチェ",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"ワカクサコーン",numList:[null,4,7]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"げんきチャージS",help:2600,bag:20,foodRate:.264,skillRate:.026,legend:!1,exp:1.5,candyName:"ミニリュウ",evolve:{before:"ハクリュー",lv:41,candy:100,itemList:"",sleep:null}},{name:"チコリータ",specialty:"きのみ",berry:"ドリ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,3,5]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:4400,bag:12,foodRate:.169,skillRate:.039,legend:!1,exp:1,candyName:"チコリータ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ベイリーフ",specialty:"きのみ",berry:"ドリ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,3,5]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3300,bag:17,foodRate:.168,skillRate:.038,legend:!1,exp:1,candyName:"チコリータ",evolve:{before:"チコリータ",lv:12,candy:40,itemList:"",sleep:null}},{name:"メガニウム",specialty:"きのみ",berry:"ドリ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,3,5]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2800,bag:20,foodRate:.175,skillRate:.046,legend:!1,exp:1,candyName:"チコリータ",evolve:{before:"ベイリーフ",lv:24,candy:80,itemList:"",sleep:null}},{name:"ヒノアラシ",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3500,bag:14,foodRate:.186,skillRate:.021,legend:!1,exp:1,candyName:"ヒノアラシ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"マグマラシ",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3e3,bag:18,foodRate:.211,skillRate:.041,legend:!1,exp:1,candyName:"ヒノアラシ",evolve:{before:"ヒノアラシ",lv:11,candy:40,itemList:"",sleep:null}},{name:"バクフーン",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2400,bag:23,foodRate:.208,skillRate:.039,legend:!1,exp:1,candyName:"ヒノアラシ",evolve:{before:"マグマラシ",lv:27,candy:80,itemList:"",sleep:null}},{name:"ワニノコ",specialty:"きのみ",berry:"オレン",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},null],skill:"エナジーチャージS(ランダム)",help:4500,bag:11,foodRate:.253,skillRate:.052,legend:!1,exp:1,candyName:"ワニノコ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"アリゲイツ",specialty:"きのみ",berry:"オレン",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},null],skill:"エナジーチャージS(ランダム)",help:3400,bag:15,foodRate:.253,skillRate:.052,legend:!1,exp:1,candyName:"ワニノコ",evolve:{before:"ワニノコ",lv:14,candy:40,itemList:"",sleep:null}},{name:"オーダイル",specialty:"きのみ",berry:"オレン",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},null],skill:"エナジーチャージS(ランダム)",help:2800,bag:19,foodRate:.257,skillRate:.055,legend:!1,exp:1,candyName:"ワニノコ",evolve:{before:"アリゲイツ",lv:23,candy:80,itemList:"",sleep:null}},{name:"ピチュー",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS",help:4300,bag:10,foodRate:.21,skillRate:.023,legend:!1,exp:1,candyName:"ピカチュウ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ピィ",specialty:"きのみ",berry:"モモン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,3]}],skill:"ゆびをふる",help:5600,bag:10,foodRate:.164,skillRate:.034,legend:!1,exp:1,candyName:"ピッピ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ププリン",specialty:"スキル",berry:"モモン",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,2]}],skill:"げんきオールS",help:5200,bag:8,foodRate:.17,skillRate:.038,legend:!1,exp:1,candyName:"プリン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"トゲピー",specialty:"スキル",berry:"モモン",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆびをふる",help:4800,bag:8,foodRate:.151,skillRate:.049,legend:!1,exp:1,candyName:"トゲピー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"トゲチック",specialty:"スキル",berry:"モモン",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆびをふる",help:3800,bag:10,foodRate:.163,skillRate:.056,legend:!1,exp:1,candyName:"トゲピー",evolve:{before:"トゲピー",lv:null,candy:20,itemList:"",sleep:50}},{name:"メリープ",specialty:"スキル",berry:"ウブ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,3,4]},null],skill:"エナジーチャージM",help:4600,bag:9,foodRate:.128,skillRate:.047,legend:!1,exp:1,candyName:"メリープ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"モココ",specialty:"スキル",berry:"ウブ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,3,4]},null],skill:"エナジーチャージM",help:3300,bag:11,foodRate:.127,skillRate:.046,legend:!1,exp:1,candyName:"メリープ",evolve:{before:"メリープ",lv:11,candy:40,itemList:"",sleep:null}},{name:"デンリュウ",specialty:"スキル",berry:"ウブ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,3,4]},null],skill:"エナジーチャージM",help:2500,bag:15,foodRate:.13,skillRate:.047,legend:!1,exp:1,candyName:"メリープ",evolve:{before:"モココ",lv:23,candy:80,itemList:"",sleep:null}},{name:"ウソッキー",specialty:"スキル",berry:"オボン",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,2]}],skill:"エナジーチャージM",help:4e3,bag:16,foodRate:.217,skillRate:.072,legend:!1,exp:1,candyName:"ウソッキー",evolve:{before:"ウソハチ",lv:12,candy:20,itemList:"",sleep:null}},{name:"ウパー",specialty:"食材",berry:"オレン",foodList:[{name:"あじわいキノコ",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,6,10]},{name:"マメミート",numList:[null,null,12]}],skill:"げんきチャージS",help:5900,bag:10,foodRate:.201,skillRate:.038,legend:!1,exp:1,candyName:"ウパー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ウパー(パルデアのすがた)",specialty:"食材",berry:"カゴ",foodList:[{name:"リラックスカカオ",numList:[2,5,7]},{name:"めざましコーヒー",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,9]}],skill:"げんきチャージS",help:6400,bag:9,foodRate:.209,skillRate:.056,legend:!1,exp:1,candyName:"ウパー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ヌオー",specialty:"食材",berry:"オレン",foodList:[{name:"あじわいキノコ",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,6,10]},{name:"マメミート",numList:[null,null,12]}],skill:"げんきチャージS",help:3400,bag:16,foodRate:.19,skillRate:.032,legend:!1,exp:1,candyName:"ウパー",evolve:{before:"ウパー",lv:15,candy:40,itemList:"",sleep:null}},{name:"エーフィ",specialty:"スキル",berry:"マゴ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"エナジーチャージM",help:2400,bag:16,foodRate:.164,skillRate:.044,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"",sleep:150}},{name:"ブラッキー",specialty:"スキル",berry:"ウイ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"つきのひかり(げんきチャージS)",help:3200,bag:14,foodRate:.219,skillRate:.101,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"",sleep:150}},{name:"ヤドキング",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"おいしいシッポ",numList:[null,1,2]},{name:"あんみんトマト",numList:[null,null,5]}],skill:"げんきエールS",help:3400,bag:17,foodRate:.166,skillRate:.074,legend:!1,exp:1,candyName:"ヤドン",evolve:{before:"ヤドン",lv:null,candy:80,itemList:"つながりのヒモ,おうじゃのしるし",sleep:null}},{name:"ソーナンス",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"げんきエールS",help:3500,bag:16,foodRate:.211,skillRate:.07,legend:!1,exp:1,candyName:"ソーナノ",evolve:{before:"ソーナノ",lv:11,candy:20,itemList:"",sleep:null}},{name:"ハガネール",specialty:"きのみ",berry:"ベリブ",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"マメミート",numList:[null,2,4]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"食材ゲットS",help:3e3,bag:15,foodRate:.154,skillRate:.032,legend:!1,exp:1,candyName:"イワーク",evolve:{before:"イワーク",lv:null,candy:80,itemList:"メタルコート,つながりのヒモ",sleep:null}},{name:"ヘラクロス",specialty:"スキル",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,4]}],skill:"食材ゲットS",help:2300,bag:20,foodRate:.158,skillRate:.047,legend:!1,exp:1,candyName:"ヘラクロス",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ニューラ",specialty:"きのみ",berry:"ウイ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"料理チャンスS",help:3200,bag:17,foodRate:.255,skillRate:.019,legend:!1,exp:1,candyName:"ニューラ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"マニューラ",specialty:"きのみ",berry:"ウイ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"料理チャンスS",help:2700,bag:21,foodRate:.251,skillRate:.018,legend:!1,exp:1,candyName:"ニューラ",evolve:{before:"ニューラ",lv:null,candy:80,itemList:"するどいツメ",sleep:null}},{name:"デリバード",specialty:"食材",berry:"シーヤ",foodList:[{name:"とくせんエッグ",numList:[2,5,7]},{name:"とくせんリンゴ",numList:[null,6,9]},{name:"リラックスカカオ",numList:[null,null,5]}],skill:"食材ゲットS",help:2500,bag:20,foodRate:.188,skillRate:.015,legend:!1,exp:1,candyName:"デリバード",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"デルビル",specialty:"きのみ",berry:"ウイ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,3,4]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージM",help:4900,bag:10,foodRate:.201,skillRate:.037,legend:!1,exp:1,candyName:"デルビル",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ヘルガー",specialty:"きのみ",berry:"ウイ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,3,4]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージM",help:3300,bag:16,foodRate:.203,skillRate:.04,legend:!1,exp:1,candyName:"デルビル",evolve:{before:"デルビル",lv:18,candy:40,itemList:"",sleep:null}},{name:"ライコウ",specialty:"スキル",berry:"ウブ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"おてつだいブースト",help:2100,bag:22,foodRate:.192,skillRate:.019,legend:!0,exp:1.8,candyName:"ライコウ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"エンテイ",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,3]}],skill:"おてつだいブースト",help:2400,bag:19,foodRate:.187,skillRate:.023,legend:!0,exp:1.8,candyName:"エンテイ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"スイクン",specialty:"スキル",berry:"オレン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"ワカクサコーン",numList:[null,null,2]}],skill:"おてつだいブースト",help:2700,bag:17,foodRate:.277,skillRate:.026,legend:!0,exp:1.8,candyName:"スイクン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ヨーギラス",specialty:"食材",berry:"オボン",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ワカクサ大豆",numList:[null,5,8]},{name:"マメミート",numList:[null,null,8]}],skill:"げんきチャージS",help:4800,bag:9,foodRate:.238,skillRate:.041,legend:!1,exp:1.5,candyName:"ヨーギラス",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"サナギラス",specialty:"食材",berry:"オボン",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ワカクサ大豆",numList:[null,5,8]},{name:"マメミート",numList:[null,null,8]}],skill:"げんきチャージS",help:3600,bag:13,foodRate:.247,skillRate:.045,legend:!1,exp:1.5,candyName:"ヨーギラス",evolve:{before:"ヨーギラス",lv:23,candy:40,itemList:"",sleep:null}},{name:"バンギラス",specialty:"食材",berry:"ウイ",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ワカクサ大豆",numList:[null,5,8]},{name:"マメミート",numList:[null,null,8]}],skill:"げんきチャージS",help:2700,bag:19,foodRate:.266,skillRate:.052,legend:!1,exp:1.5,candyName:"ヨーギラス",evolve:{before:"サナギラス",lv:41,candy:100,itemList:"",sleep:null}},{name:"ラルトス",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"げんきオールS",help:4800,bag:9,foodRate:.145,skillRate:.043,legend:!1,exp:1,candyName:"ラルトス",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"キルリア",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"げんきオールS",help:3500,bag:13,foodRate:.146,skillRate:.043,legend:!1,exp:1,candyName:"ラルトス",evolve:{before:"ラルトス",lv:15,candy:40,itemList:"",sleep:null}},{name:"サーナイト",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"げんきオールS",help:2400,bag:18,foodRate:.144,skillRate:.042,legend:!1,exp:1,candyName:"ラルトス",evolve:{before:"キルリア",lv:23,candy:80,itemList:"",sleep:null}},{name:"エルレイド",specialty:"スキル",berry:"クラボ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"おてつだいサポートS",help:2400,bag:19,foodRate:.147,skillRate:.054,legend:!1,exp:1,candyName:"ラルトス",evolve:{before:"キルリア",lv:null,candy:80,itemList:"めざめいし",sleep:null}},{name:"ナマケロ",specialty:"きのみ",berry:"キー",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,4]},{name:"とくせんリンゴ",numList:[null,null,4]}],skill:"食材ゲットS",help:4900,bag:7,foodRate:.216,skillRate:.019,legend:!1,exp:1,candyName:"ナマケロ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ヤルキモノ",specialty:"きのみ",berry:"キー",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,4]},{name:"とくせんリンゴ",numList:[null,null,4]}],skill:"食材ゲットS",help:3200,bag:9,foodRate:.204,skillRate:.015,legend:!1,exp:1,candyName:"ナマケロ",evolve:{before:"ナマケロ",lv:14,candy:40,itemList:"",sleep:null}},{name:"ケッキング",specialty:"きのみ",berry:"キー",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,4]},{name:"とくせんリンゴ",numList:[null,null,4]}],skill:"食材ゲットS",help:3600,bag:16,foodRate:.339,skillRate:.067,legend:!1,exp:1,candyName:"ナマケロ",evolve:{before:"ヤルキモノ",lv:27,candy:80,itemList:"",sleep:null}},{name:"ヤミラミ",specialty:"スキル",berry:"ウイ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆめのかけらゲットS(ランダム)",help:3600,bag:16,foodRate:.188,skillRate:.068,legend:!1,exp:1,candyName:"ヤミラミ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ココドラ",specialty:"食材",berry:"ベリブ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"めざましコーヒー",numList:[null,3,5]},{name:"ワカクサ大豆",numList:[null,null,7]}],skill:"げんきチャージS",help:5700,bag:10,foodRate:.273,skillRate:.046,legend:!1,exp:1,candyName:"ココドラ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"コドラ",specialty:"食材",berry:"ベリブ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"めざましコーヒー",numList:[null,3,5]},{name:"ワカクサ大豆",numList:[null,null,7]}],skill:"げんきチャージS",help:4200,bag:13,foodRate:.277,skillRate:.048,legend:!1,exp:1,candyName:"ココドラ",evolve:{before:"ココドラ",lv:24,candy:40,itemList:"",sleep:null}},{name:"ボスゴドラ",specialty:"食材",berry:"ベリブ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"めざましコーヒー",numList:[null,3,5]},{name:"ワカクサ大豆",numList:[null,null,7]}],skill:"げんきチャージS",help:3e3,bag:18,foodRate:.285,skillRate:.052,legend:!1,exp:1,candyName:"ココドラ",evolve:{before:"コドラ",lv:32,candy:80,itemList:"",sleep:null}},{name:"ゴクリン",specialty:"スキル",berry:"カゴ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS(ランダム)",help:5900,bag:8,foodRate:.214,skillRate:.063,legend:!1,exp:1,candyName:"ゴクリン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"マルノーム",specialty:"スキル",berry:"カゴ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS(ランダム)",help:3500,bag:19,foodRate:.21,skillRate:.07,legend:!1,exp:1,candyName:"ゴクリン",evolve:{before:"ゴクリン",lv:20,candy:40,itemList:"",sleep:null}},{name:"チルット",specialty:"きのみ",berry:"シーヤ",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,3,4]},{name:"とくせんリンゴ",numList:[null,null,5]}],skill:"げんきチャージS",help:4200,bag:12,foodRate:.177,skillRate:.032,legend:!1,exp:1,candyName:"チルット",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"チルタリス",specialty:"きのみ",berry:"ヤチェ",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,3,4]},{name:"とくせんリンゴ",numList:[null,null,5]}],skill:"げんきチャージS",help:3700,bag:14,foodRate:.258,skillRate:.061,legend:!1,exp:1,candyName:"チルット",evolve:{before:"チルット",lv:26,candy:40,itemList:"",sleep:null}},{name:"カゲボウズ",specialty:"きのみ",berry:"ブリー",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3900,bag:11,foodRate:.171,skillRate:.026,legend:!1,exp:1,candyName:"カゲボウズ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ジュペッタ",specialty:"きのみ",berry:"ブリー",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2600,bag:19,foodRate:.179,skillRate:.033,legend:!1,exp:1,candyName:"カゲボウズ",evolve:{before:"カゲボウズ",lv:28,candy:40,itemList:"",sleep:null}},{name:"アブソル",specialty:"食材",berry:"ウイ",foodList:[{name:"リラックスカカオ",numList:[2,5,7]},{name:"とくせんリンゴ",numList:[null,8,12]},{name:"あじわいキノコ",numList:[null,null,7]}],skill:"エナジーチャージS",help:2950,bag:21,foodRate:.178,skillRate:.038,legend:!1,exp:1,candyName:"アブソル",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ソーナノ",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"げんきエールS",help:5800,bag:7,foodRate:.213,skillRate:.059,legend:!1,exp:1,candyName:"ソーナノ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"タマザラシ",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"マメミート",numList:[null,3,4]},{name:"あったかジンジャー",numList:[null,null,4]}],skill:"食材ゲットS",help:5600,bag:9,foodRate:.224,skillRate:.023,legend:!1,exp:1,candyName:"タマザラシ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"トドグラー",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"マメミート",numList:[null,3,4]},{name:"あったかジンジャー",numList:[null,null,4]}],skill:"食材ゲットS",help:4e3,bag:13,foodRate:.221,skillRate:.021,legend:!1,exp:1,candyName:"タマザラシ",evolve:{before:"タマザラシ",lv:24,candy:40,itemList:"",sleep:null}},{name:"トドゼルガ",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"マメミート",numList:[null,3,4]},{name:"あったかジンジャー",numList:[null,null,4]}],skill:"食材ゲットS",help:3e3,bag:18,foodRate:.223,skillRate:.022,legend:!1,exp:1,candyName:"タマザラシ",evolve:{before:"トドグラー",lv:33,candy:80,itemList:"",sleep:null}},{name:"コリンク",specialty:"食材",berry:"ウブ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ピュアなオイル",numList:[null,4,7]},{name:"めざましコーヒー",numList:[null,null,5]}],skill:"料理パワーアップS",help:4400,bag:11,foodRate:.181,skillRate:.018,legend:!1,exp:1,candyName:"コリンク",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ルクシオ",specialty:"食材",berry:"ウブ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ピュアなオイル",numList:[null,4,7]},{name:"めざましコーヒー",numList:[null,null,5]}],skill:"料理パワーアップS",help:3200,bag:16,foodRate:.182,skillRate:.018,legend:!1,exp:1,candyName:"コリンク",evolve:{before:"コリンク",lv:11,candy:40,itemList:"",sleep:null}},{name:"レントラー",specialty:"食材",berry:"ウブ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ピュアなオイル",numList:[null,4,7]},{name:"めざましコーヒー",numList:[null,null,5]}],skill:"料理パワーアップS",help:2400,bag:21,foodRate:.2,skillRate:.023,legend:!1,exp:1,candyName:"コリンク",evolve:{before:"ルクシオ",lv:23,candy:80,itemList:"",sleep:null}},{name:"フワンテ",specialty:"スキル",berry:"ブリー",foodList:[{name:"ワカクサコーン",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,3,4]},{name:"ほっこりポテト",numList:[null,null,4]}],skill:"たくわえる(エナジーチャージS)",help:4800,bag:9,foodRate:.137,skillRate:.069,legend:!1,exp:1,candyName:"フワンテ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"フワライド",specialty:"スキル",berry:"ブリー",foodList:[{name:"ワカクサコーン",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,3,4]},{name:"ほっこりポテト",numList:[null,null,4]}],skill:"たくわえる(エナジーチャージS)",help:2500,bag:17,foodRate:.128,skillRate:.061,legend:!1,exp:1,candyName:"フワンテ",evolve:{before:"フワンテ",lv:21,candy:40,itemList:"",sleep:null}},{name:"ウソハチ",specialty:"スキル",berry:"オボン",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,2]}],skill:"エナジーチャージM",help:6300,bag:8,foodRate:.189,skillRate:.061,legend:!1,exp:1,candyName:"ウソッキー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"マネネ",specialty:"食材",berry:"マゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"ものまね(スキルコピー)",help:4300,bag:10,foodRate:.201,skillRate:.032,legend:!1,exp:1,candyName:"バリヤード",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"リオル",specialty:"スキル",berry:"クラボ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"ほっこりポテト",numList:[null,2,4]},{name:"とくせんエッグ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS",help:4200,bag:9,foodRate:.126,skillRate:.038,legend:!1,exp:1,candyName:"ルカリオ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ルカリオ",specialty:"スキル",berry:"クラボ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"ほっこりポテト",numList:[null,2,4]},{name:"とくせんエッグ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS",help:2600,bag:14,foodRate:.15,skillRate:.051,legend:!1,exp:1,candyName:"ルカリオ",evolve:{before:"リオル",lv:null,candy:80,itemList:"",sleep:150}},{name:"グレッグル",specialty:"食材",berry:"カゴ",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"マメミート",numList:[null,5,8]},null],skill:"エナジーチャージS",help:5600,bag:10,foodRate:.228,skillRate:.042,legend:!1,exp:1,candyName:"グレッグル",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ドクロッグ",specialty:"食材",berry:"カゴ",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"マメミート",numList:[null,5,8]},null],skill:"エナジーチャージS",help:3400,bag:14,foodRate:.229,skillRate:.043,legend:!1,exp:1,candyName:"グレッグル",evolve:{before:"グレッグル",lv:28,candy:40,itemList:"",sleep:null}},{name:"ユキカブリ",specialty:"食材",berry:"チーゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"とくせんエッグ",numList:[null,4,7]},{name:"あじわいキノコ",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:5600,bag:10,foodRate:.251,skillRate:.044,legend:!1,exp:1,candyName:"ユキカブリ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ユキノオー",specialty:"食材",berry:"チーゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"とくせんエッグ",numList:[null,4,7]},{name:"あじわいキノコ",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:3e3,bag:21,foodRate:.25,skillRate:.044,legend:!1,exp:1,candyName:"ユキカブリ",evolve:{before:"ユキカブリ",lv:30,candy:40,itemList:"",sleep:null}},{name:"ジバコイル",specialty:"スキル",berry:"ベリブ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},null],skill:"料理パワーアップS",help:3100,bag:13,foodRate:.179,skillRate:.062,legend:!1,exp:1,candyName:"コイル",evolve:{before:"レアコイル",lv:null,candy:80,itemList:"かみなりのいし",sleep:null}},{name:"トゲキッス",specialty:"スキル",berry:"モモン",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆびをふる",help:2600,bag:16,foodRate:.158,skillRate:.053,legend:!1,exp:1,candyName:"トゲピー",evolve:{before:"トゲチック",lv:null,candy:80,itemList:"ひかりのいし",sleep:null}},{name:"リーフィア",specialty:"スキル",berry:"ドリ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきエールS",help:3e3,bag:13,foodRate:.205,skillRate:.059,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"リーフのいし",sleep:null}},{name:"グレイシア",specialty:"スキル",berry:"チーゴ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"料理パワーアップS",help:3200,bag:12,foodRate:.219,skillRate:.063,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"こおりのいし",sleep:null}},{name:"クレセリア",specialty:"スキル",berry:"マゴ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,2,3]},{name:"あんみんトマト",numList:[null,null,4]}],skill:"みかづきのいのり(げんきオールS)",help:2300,bag:22,foodRate:.239,skillRate:.041,legend:!0,exp:1.8,candyName:"クレセリア",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ダークライ",specialty:"きのみ",berry:"ウイ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"",numList:[null,,]},null],skill:"エナジーチャージS",help:2900,bag:28,foodRate:.192,skillRate:.023,legend:!0,exp:2.2,candyName:"ダークライ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ムンナ",specialty:"きのみ",berry:"マゴ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"めざましコーヒー",numList:[null,null,2]}],skill:"ゆめのかけらゲットS(ランダム)",help:5700,bag:12,foodRate:.197,skillRate:.043,legend:!1,exp:1,candyName:"ムンナ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ムシャーナ",specialty:"きのみ",berry:"マゴ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"めざましコーヒー",numList:[null,null,2]}],skill:"ゆめのかけらゲットS(ランダム)",help:2800,bag:23,foodRate:.188,skillRate:.041,legend:!1,exp:1,candyName:"ムンナ",evolve:{before:"ムンナ",lv:null,candy:80,itemList:"",sleep:null}},{name:"ワシボン",specialty:"スキル",berry:"シーヤ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"めざましコーヒー",numList:[null,null,2]}],skill:"きのみバースト",help:3800,bag:10,foodRate:.125,skillRate:.031,legend:!1,exp:1,candyName:"ワシボン",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ウォーグル",specialty:"スキル",berry:"シーヤ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"めざましコーヒー",numList:[null,null,2]}],skill:"きのみバースト",help:2400,bag:18,foodRate:.121,skillRate:.032,legend:!1,exp:1,candyName:"ワシボン",evolve:{before:"ワシボン",lv:41,candy:40,itemList:"",sleep:null}},{name:"ニンフィア",specialty:"スキル",berry:"モモン",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきオールS",help:2600,bag:15,foodRate:.178,skillRate:.04,legend:!1,exp:1,candyName:"イーブイ",evolve:{before:"イーブイ",lv:null,candy:80,itemList:"",sleep:150}},{name:"デデンネ",specialty:"スキル",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"ワカクサコーン",numList:[null,null,2]}],skill:"料理チャンスS",help:2500,bag:19,foodRate:.177,skillRate:.045,legend:!1,exp:1,candyName:"デデンネ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"アゴジムシ",specialty:"食材",berry:"ラム",foodList:[{name:"めざましコーヒー",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,7]},{name:"あまいミツ",numList:[null,null,11]}],skill:"エナジーチャージS",help:4600,bag:11,foodRate:.155,skillRate:.029,legend:!1,exp:1,candyName:"アゴジムシ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"デンヂムシ",specialty:"食材",berry:"ラム",foodList:[{name:"めざましコーヒー",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,7]},{name:"あまいミツ",numList:[null,null,11]}],skill:"エナジーチャージS",help:3300,bag:15,foodRate:.154,skillRate:.028,legend:!1,exp:1,candyName:"アゴジムシ",evolve:{before:"アゴジムシ",lv:15,candy:40,itemList:"",sleep:null}},{name:"クワガノン",specialty:"食材",berry:"ラム",foodList:[{name:"めざましコーヒー",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,7]},{name:"あまいミツ",numList:[null,null,11]}],skill:"エナジーチャージS",help:2800,bag:19,foodRate:.194,skillRate:.051,legend:!1,exp:1,candyName:"アゴジムシ",evolve:{before:"デンヂムシ",lv:null,candy:80,itemList:"かみなりのいし",sleep:null}},{name:"ヌイコグマ",specialty:"食材",berry:"クラボ",foodList:[{name:"ワカクサコーン",numList:[2,5,7]},{name:"マメミート",numList:[null,6,10]},{name:"とくせんエッグ",numList:[null,null,9]}],skill:"エナジーチャージS(ランダム)",help:4100,bag:13,foodRate:.225,skillRate:.011,legend:!1,exp:1,candyName:"ヌイコグマ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"キテルグマ",specialty:"食材",berry:"クラボ",foodList:[{name:"ワカクサコーン",numList:[2,5,7]},{name:"マメミート",numList:[null,6,10]},{name:"とくせんエッグ",numList:[null,null,9]}],skill:"エナジーチャージS(ランダム)",help:2800,bag:20,foodRate:.229,skillRate:.013,legend:!1,exp:1,candyName:"ヌイコグマ",evolve:{before:"ヌイコグマ",lv:20,candy:40,itemList:"",sleep:null}},{name:"キュワワー",specialty:"食材",berry:"モモン",foodList:[{name:"ワカクサコーン",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,6,9]},{name:"リラックスカカオ",numList:[null,null,7]}],skill:"げんきエールS",help:2500,bag:20,foodRate:.167,skillRate:.03,legend:!1,exp:1,candyName:"キュワワー",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ミミッキュ",specialty:"スキル",berry:"ブリー",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"めざましコーヒー",numList:[null,1,2]},{name:"あじわいキノコ",numList:[null,null,2]}],skill:"ばけのかわ(きのみバースト)",help:2500,bag:19,foodRate:.153,skillRate:.033,legend:!1,exp:1,candyName:"ミミッキュ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ウッウ",specialty:"食材",berry:"シーヤ",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,7]},{name:"とくせんエッグ",numList:[null,null,8]}],skill:"料理チャンスS",help:2700,bag:19,foodRate:.165,skillRate:.039,legend:!1,exp:1,candyName:"ウッウ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ニャオハ",specialty:"食材",berry:"ドリ",foodList:[{name:"ほっこりポテト",numList:[2,5,7]},{name:"モーモーミルク",numList:[null,6,9]},{name:"あったかジンジャー",numList:[null,null,8]}],skill:"料理パワーアップS",help:4600,bag:10,foodRate:.208,skillRate:.023,legend:!1,exp:1,candyName:"ニャオハ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ニャローテ",specialty:"食材",berry:"ドリ",foodList:[{name:"ほっこりポテト",numList:[2,5,7]},{name:"モーモーミルク",numList:[null,6,9]},{name:"あったかジンジャー",numList:[null,null,8]}],skill:"料理パワーアップS",help:3500,bag:14,foodRate:.209,skillRate:.023,legend:!1,exp:1,candyName:"ニャオハ",evolve:{before:"ニャオハ",lv:12,candy:40,itemList:"",sleep:null}},{name:"マスカーニャ",specialty:"食材",berry:"ウイ",foodList:[{name:"ほっこりポテト",numList:[2,5,7]},{name:"モーモーミルク",numList:[null,6,9]},{name:"あったかジンジャー",numList:[null,null,8]}],skill:"料理パワーアップS",help:2600,bag:18,foodRate:.19,skillRate:.022,legend:!1,exp:1,candyName:"ニャオハ",evolve:{before:"ニャローテ",lv:27,candy:80,itemList:"",sleep:null}},{name:"ホゲータ",specialty:"食材",berry:"ヒメリ",foodList:[{name:"とくせんリンゴ",numList:[2,5,7]},{name:"マメミート",numList:[null,4,6]},{name:"げきからハーブ",numList:[null,null,5]}],skill:"げんきチャージS",help:4200,bag:11,foodRate:.254,skillRate:.053,legend:!1,exp:1,candyName:"ホゲータ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"アチゲータ",specialty:"食材",berry:"ヒメリ",foodList:[{name:"とくせんリンゴ",numList:[2,5,7]},{name:"マメミート",numList:[null,4,6]},{name:"げきからハーブ",numList:[null,null,5]}],skill:"げんきチャージS",help:3100,bag:16,foodRate:.247,skillRate:.05,legend:!1,exp:1,candyName:"ホゲータ",evolve:{before:"ホゲータ",lv:12,candy:40,itemList:"",sleep:null}},{name:"ラウドボーン",specialty:"食材",berry:"ブリー",foodList:[{name:"とくせんリンゴ",numList:[2,5,7]},{name:"マメミート",numList:[null,4,6]},{name:"げきからハーブ",numList:[null,null,5]}],skill:"げんきチャージS",help:2700,bag:19,foodRate:.268,skillRate:.062,legend:!1,exp:1,candyName:"ホゲータ",evolve:{before:"アチゲータ",lv:27,candy:80,itemList:"",sleep:null}},{name:"クワッス",specialty:"食材",berry:"オレン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,2,4]},{name:"ピュアなオイル",numList:[null,null,6]}],skill:"エナジーチャージM",help:4800,bag:10,foodRate:.261,skillRate:.028,legend:!1,exp:1,candyName:"クワッス",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"ウェルカモ",specialty:"食材",berry:"オレン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,2,4]},{name:"ピュアなオイル",numList:[null,null,6]}],skill:"エナジーチャージM",help:3600,bag:14,foodRate:.259,skillRate:.027,legend:!1,exp:1,candyName:"クワッス",evolve:{before:"クワッス",lv:12,candy:40,itemList:"",sleep:null}},{name:"ウェーニバル",specialty:"食材",berry:"クラボ",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,2,4]},{name:"ピュアなオイル",numList:[null,null,6]}],skill:"エナジーチャージM",help:2600,bag:19,foodRate:.232,skillRate:.024,legend:!1,exp:1,candyName:"クワッス",evolve:{before:"ウェルカモ",lv:27,candy:80,itemList:"",sleep:null}},{name:"パモ",specialty:"スキル",berry:"ウブ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"モーモーミルク",numList:[null,3,6]},{name:"とくせんエッグ",numList:[null,null,5]}],skill:"げんきオールS",help:4600,bag:9,foodRate:.111,skillRate:.036,legend:!1,exp:1,candyName:"パモ",evolve:{before:null,lv:null,candy:null,itemList:"",sleep:null}},{name:"パモット",specialty:"スキル",berry:"ウブ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"モーモーミルク",numList:[null,3,6]},{name:"とくせんエッグ",numList:[null,null,5]}],skill:"げんきオールS",help:3300,bag:12,foodRate:.109,skillRate:.036,legend:!1,exp:1,candyName:"パモ",evolve:{before:"パモ",lv:14,candy:40,itemList:"",sleep:null}},{name:"パーモット",specialty:"スキル",berry:"ウブ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"モーモーミルク",numList:[null,3,6]},{name:"とくせんエッグ",numList:[null,null,5]}],skill:"げんきオールS",help:2400,bag:18,foodRate:.141,skillRate:.039,legend:!1,exp:1,candyName:"パモ",evolve:{before:"パモット",lv:null,candy:80,itemList:"",sleep:150}},{name:"ドオー",specialty:"食材",berry:"カゴ",foodList:[{name:"リラックスカカオ",numList:[2,5,7]},{name:"めざましコーヒー",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,9]}],skill:"げんきチャージS",help:3500,bag:20,foodRate:.208,skillRate:.055,legend:!1,exp:1,candyName:"ウパー",evolve:{before:"ウパー(パルデアのすがた)",lv:15,candy:40,itemList:"",sleep:null}}].map(e=>{const t={...e,skill:_s.map[e.skill],berry:ks.map[e.berry],type:ks.map[e.berry].type,foodNameList:e.foodList.map(s=>s==null?void 0:s.name).filter(s=>s),foodNumListMap:e.foodList.filter(s=>s!=null).reduce((s,o)=>(s[o.name]=o.numList??[],s),{}),evolve:{...e.evolve,itemList:e.evolve.itemList.split(",")},afterList:[]};if(t.skill==null)throw`${t.name}のスキルが誤っています(${e.skill})`;return t})),pe(Hi,"nameSortList"),pe(Hi,"map",Hi.list.reduce((e,t)=>(e[t.name]=t,e),{}));let ln=Hi;ln.list.filter(n=>n.evolve.before==null).forEach(n=>{n.evolveLv=1,n.remainEvolveLv=0,n.evolveCandyMap={[n.name]:0},n.requireSleep={[n.name]:!1}}),ln.list.filter(n=>n.evolve.before!=null&&ln.map[n.evolve.before].evolveLv&&!n.evolveLv).forEach(n=>{n.evolveLv=ln.map[n.evolve.before].evolveLv+1,n.evolveCandyMap={[n.name]:0,[n.evolve.before]:n.evolve.candy},n.requireSleep={[n.name]:!1,[n.evolve.before]:!!n.evolve.sleep}}),ln.list.filter(n=>n.evolve.before!=null&&ln.map[n.evolve.before].evolveLv&&!n.evolveLv).forEach(n=>{const e=ln.map[n.evolve.before];n.evolveLv=e.evolveLv+1,n.evolveCandyMap={[n.name]:0,[e.name]:n.evolve.candy,[e.evolve.before]:n.evolve.candy+e.evolve.candy},n.requireSleep={[n.name]:!1,[e.name]:!!n.evolve.sleep,[e.evolve.before]:!!n.evolve.sleep||!!e.evolve.sleep}});for(let n of ln.list){let e=[n];n.evolve.before==null&&(n.seed=n.name);let t=0;for(;e.length;){let s=[];for(let o of e){let i=ln.list.filter(r=>r.evolve.before==o.name);if(i.length){if(n.evolve.before==null)for(const r of i)r.seed=n.name;s.push(...i)}else n.afterList.push(o.name),n.remainEvolveLv=t}e=s,t++}n.isLast=n.afterList[0]==n.name}ln.nameSortList=[...ln.list].sort((n,e)=>n.name<e.name?-1:1);class Wi{static calcRequireInfo(e,t,s){var i;const o={normalCandyNum:null,normalCandyShard:null,boostCandyNum:null,boostCandyShard:null,bestBoostCandyNum:null,bestBoostCandyShard:null,bestNormalCandyNum:null,bestNormalCandyShard:null};if(e.training!=null&&e.lv<e.training&&1<e.training&&e.training<=this.list.length+1){const r=ln.map[e.name];let a=e.lv,l=Math.round(this.list[e.training-1].total*r.exp),u=Math.round(this.list[a].total*r.exp),c=e.nextExp?u-e.nextExp:Math.round(this.list[a-1].total*r.exp),h=c,d=c,p=t.good=="EXP獲得量"?30:t.weak=="EXP獲得量"?21:25,f=p*s.candy.boostMultiply;const m=l-c;let g=Math.max(Math.ceil((m/p-s.candy.bag[r.seed])/(s.candy.boostMultiply-1)),0);const x=s.candy.bag[r.seed]-g>=1;for(x&&(o.bestBoostCandyNum=g,o.bestBoostCandyShard=0,o.bestNormalCandyNum=Math.min(s.candy.bag[r.seed],Math.ceil(m/p))-g,o.bestNormalCandyShard=0),o.normalCandyNum=0,o.normalCandyShard=0;a<e.training&&u;){const b=Math.ceil((u-c)/p);o.normalCandyNum+=b,o.normalCandyShard+=this.list[a-1].shard*b,c+=b*p;const w=Math.ceil((u-h)/f);if(o.boostCandyNum+=w,o.boostCandyShard+=this.list[a-1].shard*w*s.candy.boostShard,h+=w*f,x){if(g>0){const y=Math.min(Math.ceil((u-d)/f),g);g-=y,o.bestBoostCandyShard+=this.list[a-1].shard*y*s.candy.boostShard,d+=y*f}if(u>d){const y=Math.ceil((u-d)/p);o.bestNormalCandyShard+=this.list[a-1].shard*y,d+=y*p}}a++,u=Math.round(((i=this.list[a])==null?void 0:i.total)*r.exp)}}return o}}pe(Wi,"list",[{total:0,shard:14},{total:54,shard:18},{total:125,shard:22},{total:233,shard:27},{total:361,shard:30},{total:525,shard:34},{total:727,shard:39},{total:971,shard:44},{total:1245,shard:48},{total:1560,shard:50},{total:1905,shard:52},{total:2281,shard:53},{total:2688,shard:56},{total:3107,shard:59},{total:3536,shard:62},{total:3976,shard:66},{total:4430,shard:68},{total:4899,shard:71},{total:5382,shard:74},{total:5879,shard:78},{total:6394,shard:81},{total:6931,shard:85},{total:7489,shard:88},{total:8068,shard:92},{total:8668,shard:95},{total:9290,shard:100},{total:9933,shard:105},{total:10598,shard:111},{total:11284,shard:117},{total:11992,shard:122},{total:12721,shard:126},{total:13469,shard:130},{total:14235,shard:136},{total:15020,shard:143},{total:15823,shard:151},{total:16644,shard:160},{total:17483,shard:167},{total:18340,shard:174},{total:19215,shard:184},{total:20108,shard:192},{total:21018,shard:201},{total:21946,shard:211},{total:22891,shard:221},{total:23854,shard:227},{total:24834,shard:236},{total:25831,shard:250},{total:26846,shard:264},{total:27878,shard:279},{total:28927,shard:295},{total:29993,shard:309},{total:31355,shard:323},{total:32917,shard:338},{total:34664,shard:356},{total:36610,shard:372},{total:38805,shard:391},{total:41084,shard:437},{total:43488,shard:486},{total:46021,shard:538},{total:48687,shard:593},{total:51493,shard:null}]);var SH="/pokesle-simulator/assets/largeleek-ClGbD41S.png",NH="/pokesle-simulator/assets/tastymushroom-BHOWGoG2.png",EH="/pokesle-simulator/assets/fancyegg-CQimVkp3.png",TH="/pokesle-simulator/assets/softpotato-CU5LKwfH.png",RH="/pokesle-simulator/assets/fancyapple-BsG4qAbs.png",LH="/pokesle-simulator/assets/fieryherb-W5pthftA.png",DH="/pokesle-simulator/assets/beansausage-Dtzqp425.png",AH="/pokesle-simulator/assets/moomoomilk-CZjiQjCc.png",FH="/pokesle-simulator/assets/honey-jxAhZNpE.png",OH="/pokesle-simulator/assets/pureoil-Buma1rb_.png",_H="/pokesle-simulator/assets/warmingginger-DMavfAi5.png",MH="/pokesle-simulator/assets/snoozytomato-DCzjcZT_.png",PH="/pokesle-simulator/assets/soothingcacao-gJJb5DMo.png",BH="/pokesle-simulator/assets/slowpoketail-AyaTRc1N.png",zH="/pokesle-simulator/assets/greengrasssoybeans-II6p4jsu.png",VH="/pokesle-simulator/assets/greengrasscorn-DwiZQEiG.png",WH="/pokesle-simulator/assets/coffee-oao_YMxO.png";const po=class po{};pe(po,"list",[{name:"ふといながねぎ",energy:185,img:SH},{name:"あじわいキノコ",energy:167,img:NH},{name:"とくせんエッグ",energy:115,img:EH},{name:"ほっこりポテト",energy:124,img:TH},{name:"とくせんリンゴ",energy:90,img:RH},{name:"げきからハーブ",energy:130,img:LH},{name:"マメミート",energy:103,img:DH},{name:"モーモーミルク",energy:98,img:AH},{name:"あまいミツ",energy:101,img:FH},{name:"ピュアなオイル",energy:121,img:OH},{name:"あったかジンジャー",energy:109,img:_H},{name:"あんみんトマト",energy:110,img:MH},{name:"リラックスカカオ",energy:151,img:PH},{name:"おいしいシッポ",energy:342,img:BH},{name:"ワカクサ大豆",energy:100,img:zH},{name:"ワカクサコーン",energy:140,img:VH},{name:"めざましコーヒー",energy:153,img:WH}]),pe(po,"map",po.list.reduce((e,t)=>(e[t.name]=t,e),{})),pe(po,"maxEnergy"),pe(po,"averageEnergy"),pe(po,"averageMaxCookedEnergy");let be=po;const Nt=class Nt{constructor(e){for(let t in e)this[t]=e[t]}static getChanceWeekEffect(e,t=null){if(e==0)return t==null?{total:24.6,successProbabilityList:[.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.3,.3,.3]}:t==6?{total:3.9,successProbabilityList:[.3,.3,.3]}:{total:3.3,successProbabilityList:[.1,.1,.1]};if(t==null){let s=Math.min(e/21,.7),o=0,i=[1];for(let r=1;r<=21;r++){let a=0;for(let l=1;l<=r;l++){let u=((r<=18?.1:.3)+s*l)*i[r-l];for(let c=r-l+1;c<r;c++)u*=1-i[c];a+=u}o+=a*(r<=18?1:2)+1,i.push(a)}return{total:o,successProbabilityList:i.slice(1)}}else{let s=Math.min(e/3,.7),o=0,i=[1];for(let r=1;r<=3;r++){let a=0;for(let l=1;l<=r;l++){let u=((t==6?.3:.1)+s*l)*i[r-l];for(let c=r-l+1;c<r;c++)u*=1-i[c];a+=u}o+=a*(t==6?2:1)+1,i.push(a)}return{total:o,successProbabilityList:i.slice(1)}}}static evaluateLvList(e){return structuredClone(this.list).map(t=>{var s,o,i,r,a,l;if(t.lv=1,t.rate>1&&(e.simulation.cookingRecipeLvType1&&(t.lv1=e.simulation.cookingSettings[t.name].lv,t.lv=Math.max(t.lv,t.lv1)),e.simulation.cookingRecipeLvType2&&(t.lv2=e.simulation.cookingRecipeFixLv,t.lv=Math.max(t.lv,t.lv2)),e.simulation.cookingRecipeLvType3)){let u=0,c=1;for(let h=0;h<e.simulation.cookingRecipeRepeatLv;h++)for(u+=Nt.recipeLvs[c].bonus*t.energy;Nt.recipeLvs[c].totalExp<=u&&c<Nt.maxRecipeLv;)c++;t.lv3=c,t.lv=Math.max(t.lv,t.lv3)}return t.recipeLvBonus=((s=Nt.recipeLvs[t.lv])==null?void 0:s.bonus)??0,t.fixEnergy=t.energy*t.recipeLvBonus,t.fixAddEnergy=t.fixEnergy-t.rawEnergy,t.enable=!0,((i=(o=e.simulation)==null?void 0:o.enableCooking)==null?void 0:i[t.name])===!1&&(t.enable=!1),(((r=e.simulation)==null?void 0:r.mode)==1||((a=e.simulation)==null?void 0:a.mode)==2)&&((l=e.simulation)==null?void 0:l.cookingSettings[t.name].lv)>=Nt.maxRecipeLv&&(t.enable=!1),t})}static getEnableCookingList(e){return Nt.evaluateLvList(e).filter(t=>t.enable)}static getDisabledCookingNum(e){return Nt.list.length-Nt.getEnableCookingList(e).length}};pe(Nt,"list",[{type:"カレー",name:"ごちゃまぜカレー",energy:0,foodList:[]},{type:"カレー",name:"とくせんリンゴカレー",energy:748,foodList:[{name:"とくせんリンゴ",num:7}]},{type:"カレー",name:"あぶりテールカレー",energy:7483,foodList:[{name:"おいしいシッポ",num:8},{name:"げきからハーブ",num:25}]},{type:"カレー",name:"サンパワートマトカレー",energy:2078,foodList:[{name:"あんみんトマト",num:10},{name:"げきからハーブ",num:5}]},{type:"カレー",name:"ぜったいねむりバターカレー",energy:9010,foodList:[{name:"ほっこりポテト",num:18},{name:"リラックスカカオ",num:12},{name:"あんみんトマト",num:15},{name:"モーモーミルク",num:10}]},{type:"カレー",name:"からくちネギもりカレー",energy:5900,foodList:[{name:"ふといながねぎ",num:14},{name:"あったかジンジャー",num:10},{name:"げきからハーブ",num:8}]},{type:"カレー",name:"キノコのほうしカレー",energy:4162,foodList:[{name:"あじわいキノコ",num:14},{name:"ほっこりポテト",num:9}]},{type:"カレー",name:"おやこあいカレー",energy:4523,foodList:[{name:"あまいミツ",num:12},{name:"とくせんエッグ",num:8},{name:"とくせんリンゴ",num:11},{name:"ほっこりポテト",num:4}]},{type:"カレー",name:"満腹チーズバーグカレー",energy:1910,foodList:[{name:"モーモーミルク",num:8},{name:"マメミート",num:8}]},{type:"カレー",name:"ほっこりホワイトシチュー",energy:3181,foodList:[{name:"モーモーミルク",num:10},{name:"ほっこりポテト",num:8},{name:"あじわいキノコ",num:4}]},{type:"カレー",name:"たんじゅんホワイトシチュー",energy:814,foodList:[{name:"モーモーミルク",num:7}]},{type:"カレー",name:"マメバーグカレー",energy:856,foodList:[{name:"マメミート",num:7}]},{type:"カレー",name:"ベイビィハニーカレー",energy:839,foodList:[{name:"あまいミツ",num:7}]},{type:"カレー",name:"ニンジャカレー",energy:9445,foodList:[{name:"ワカクサ大豆",num:24},{name:"ふといながねぎ",num:12},{name:"マメミート",num:9},{name:"あじわいキノコ",num:5}]},{type:"カレー",name:"ひでりカツレツカレー",energy:1942,foodList:[{name:"マメミート",num:10},{name:"ピュアなオイル",num:5}]},{type:"カレー",name:"とけるオムカレー",energy:2150,foodList:[{name:"とくせんエッグ",num:10},{name:"あんみんトマト",num:6}]},{type:"カレー",name:"ビルドアップマメカレー",energy:3372,foodList:[{name:"ワカクサ大豆",num:12},{name:"マメミート",num:6},{name:"とくせんエッグ",num:4},{name:"げきからハーブ",num:4}]},{type:"カレー",name:"じゅうなんコーンシチュー",energy:4670,foodList:[{name:"ワカクサコーン",num:14},{name:"モーモーミルク",num:8},{name:"ほっこりポテト",num:8}]},{type:"カレー",name:"れんごくコーンキーマカレー",energy:13690,foodList:[{name:"げきからハーブ",num:27},{name:"マメミート",num:24},{name:"ワカクサコーン",num:14},{name:"あったかジンジャー",num:12}]},{type:"カレー",name:"めざめるパワーシチュー",energy:19061,foodList:[{name:"ワカクサ大豆",num:28},{name:"あんみんトマト",num:25},{name:"あじわいキノコ",num:23},{name:"めざましコーヒー",num:16}]},{type:"カレー",name:"ピヨピヨパンチ辛口カレー",energy:5702,foodList:[{name:"めざましコーヒー",num:11},{name:"げきからハーブ",num:11},{name:"あまいミツ",num:11}]},{type:"サラダ",name:"ごちゃまぜサラダ",energy:0,foodList:[]},{type:"サラダ",name:"ヤドンテールのペッパーサラダ",energy:8169,foodList:[{name:"げきからハーブ",num:10},{name:"ピュアなオイル",num:15},{name:"おいしいシッポ",num:10}]},{type:"サラダ",name:"キノコのほうしサラダ",energy:5859,foodList:[{name:"あじわいキノコ",num:17},{name:"ピュアなオイル",num:8},{name:"あんみんトマト",num:8}]},{type:"サラダ",name:"ゆきかきシーザーサラダ",energy:1898,foodList:[{name:"モーモーミルク",num:10},{name:"マメミート",num:6}]},{type:"サラダ",name:"くいしんぼうポテトサラダ",energy:5040,foodList:[{name:"ほっこりポテト",num:14},{name:"とくせんエッグ",num:9},{name:"マメミート",num:7},{name:"とくせんリンゴ",num:6}]},{type:"サラダ",name:"うるおいとうふサラダ",energy:3113,foodList:[{name:"ワカクサ大豆",num:15},{name:"あんみんトマト",num:9}]},{type:"サラダ",name:"ばかぢからワイルドサラダ",energy:3046,foodList:[{name:"マメミート",num:9},{name:"あったかジンジャー",num:6},{name:"とくせんエッグ",num:5},{name:"ほっこりポテト",num:3}]},{type:"サラダ",name:"マメハムサラダ",energy:978,foodList:[{name:"マメミート",num:8}]},{type:"サラダ",name:"あんみんトマトサラダ",energy:1045,foodList:[{name:"あんみんトマト",num:8}]},{type:"サラダ",name:"モーモーカプレーゼ",energy:2942,foodList:[{name:"モーモーミルク",num:12},{name:"あんみんトマト",num:6},{name:"ピュアなオイル",num:5}]},{type:"サラダ",name:"ムラっけチョコミートサラダ",energy:3665,foodList:[{name:"リラックスカカオ",num:14},{name:"マメミート",num:9}]},{type:"サラダ",name:"オーバーヒートサラダ",energy:5225,foodList:[{name:"げきからハーブ",num:17},{name:"あったかジンジャー",num:10},{name:"あんみんトマト",num:8}]},{type:"サラダ",name:"とくせんリンゴサラダ",energy:855,foodList:[{name:"とくせんリンゴ",num:8}]},{type:"サラダ",name:"めんえきねぎサラダ",energy:2845,foodList:[{name:"あったかジンジャー",num:5},{name:"ふといながねぎ",num:10}]},{type:"サラダ",name:"メロメロりんごのチーズサラダ",energy:2655,foodList:[{name:"とくせんリンゴ",num:15},{name:"モーモーミルク",num:5},{name:"ピュアなオイル",num:3}]},{type:"サラダ",name:"ニンジャサラダ",energy:11659,foodList:[{name:"あったかジンジャー",num:11},{name:"ワカクサ大豆",num:19},{name:"あじわいキノコ",num:12},{name:"ふといながねぎ",num:15}]},{type:"サラダ",name:"ねっぷうとうふサラダ",energy:2114,foodList:[{name:"げきからハーブ",num:6},{name:"ワカクサ大豆",num:10}]},{type:"サラダ",name:"ワカクササラダ",energy:11393,foodList:[{name:"ピュアなオイル",num:22},{name:"ワカクサコーン",num:17},{name:"あんみんトマト",num:14},{name:"ほっこりポテト",num:9}]},{type:"サラダ",name:"めいそうスイートサラダ",energy:7675,foodList:[{name:"とくせんリンゴ",num:21},{name:"あまいミツ",num:16},{name:"ワカクサコーン",num:12}]},{type:"サラダ",name:"みだれづきコーンサラダ",energy:2785,foodList:[{name:"ワカクサコーン",num:9},{name:"ピュアなオイル",num:8}]},{type:"サラダ",name:"まけんきコーヒーサラダ",energy:20218,foodList:[{name:"めざましコーヒー",num:28},{name:"マメミート",num:28},{name:"ピュアなオイル",num:22},{name:"ほっこりポテト",num:22}]},{type:"サラダ",name:"クロスチョップドサラダ",energy:8755,foodList:[{name:"とくせんエッグ",num:20},{name:"マメミート",num:15},{name:"ワカクサコーン",num:11},{name:"あんみんトマト",num:10}]},{type:"デザート",name:"ごちゃまぜジュース",energy:0,foodList:[]},{type:"デザート",name:"じゅくせいスイートポテト",energy:1907,foodList:[{name:"ほっこりポテト",num:9},{name:"モーモーミルク",num:5}]},{type:"デザート",name:"ふくつのジンジャークッキー",energy:4921,foodList:[{name:"あまいミツ",num:14},{name:"あったかジンジャー",num:12},{name:"リラックスカカオ",num:5},{name:"とくせんエッグ",num:4}]},{type:"デザート",name:"とくせんリンゴジュース",energy:855,foodList:[{name:"とくせんリンゴ",num:8}]},{type:"デザート",name:"クラフトサイコソーダ",energy:1079,foodList:[{name:"あまいミツ",num:9}]},{type:"デザート",name:"ひのこのジンジャーティー",energy:1913,foodList:[{name:"とくせんリンゴ",num:7},{name:"あったかジンジャー",num:9}]},{type:"デザート",name:"プリンのプリンアラモード",energy:7594,foodList:[{name:"あまいミツ",num:20},{name:"とくせんエッグ",num:15},{name:"とくせんリンゴ",num:10},{name:"モーモーミルク",num:10}]},{type:"デザート",name:"あくまのキッスフルーツオレ",energy:4734,foodList:[{name:"とくせんリンゴ",num:11},{name:"モーモーミルク",num:9},{name:"あまいミツ",num:7},{name:"リラックスカカオ",num:8}]},{type:"デザート",name:"ねがいごとアップルパイ",energy:1748,foodList:[{name:"とくせんリンゴ",num:12},{name:"モーモーミルク",num:4}]},{type:"デザート",name:"ネロリのデトックスティー",energy:5065,foodList:[{name:"あったかジンジャー",num:11},{name:"とくせんリンゴ",num:15},{name:"あじわいキノコ",num:9}]},{type:"デザート",name:"あまいかおりチョコケーキ",energy:3378,foodList:[{name:"あまいミツ",num:9},{name:"リラックスカカオ",num:8},{name:"モーモーミルク",num:7}]},{type:"デザート",name:"モーモーホットミルク",energy:814,foodList:[{name:"モーモーミルク",num:7}]},{type:"デザート",name:"かるわざソイケーキ",energy:1924,foodList:[{name:"とくせんエッグ",num:8},{name:"ワカクサ大豆",num:7}]},{type:"デザート",name:"はりきりプロテインスムージー",energy:3263,foodList:[{name:"ワカクサ大豆",num:15},{name:"リラックスカカオ",num:8}]},{type:"デザート",name:"マイペースやさいジュース",energy:1924,foodList:[{name:"とくせんリンゴ",num:7},{name:"あんみんトマト",num:9}]},{type:"デザート",name:"おおきいマラサダ",energy:3015,foodList:[{name:"ピュアなオイル",num:10},{name:"モーモーミルク",num:7},{name:"あまいミツ",num:6}]},{type:"デザート",name:"ちからもちソイドーナッツ",energy:5547,foodList:[{name:"ピュアなオイル",num:12},{name:"リラックスカカオ",num:7},{name:"ワカクサ大豆",num:16}]},{type:"デザート",name:"だいばくはつポップコーン",energy:6048,foodList:[{name:"ワカクサコーン",num:15},{name:"ピュアなオイル",num:14},{name:"モーモーミルク",num:7}]},{type:"デザート",name:"おちゃかいコーンスコーン",energy:10925,foodList:[{name:"とくせんリンゴ",num:20},{name:"あったかジンジャー",num:20},{name:"ワカクサコーン",num:18},{name:"モーモーミルク",num:9}]},{type:"デザート",name:"はなびらのまいチョコタルト",energy:3314,foodList:[{name:"リラックスカカオ",num:11},{name:"とくせんリンゴ",num:11}]},{type:"デザート",name:"フラワーギフトマカロン",energy:13834,foodList:[{name:"リラックスカカオ",num:25},{name:"とくせんエッグ",num:25},{name:"あまいミツ",num:17},{name:"モーモーミルク",num:10}]},{type:"デザート",name:"スパークスパイスコーラ",energy:17494,foodList:[{name:"とくせんリンゴ",num:35},{name:"あったかジンジャー",num:20},{name:"ふといながねぎ",num:20},{name:"めざましコーヒー",num:12}]},{type:"デザート",name:"はやおきコーヒーゼリー",energy:6793,foodList:[{name:"めざましコーヒー",num:16},{name:"モーモーミルク",num:14},{name:"あまいミツ",num:12}]},{type:"デザート",name:"ドオーのエクレア",energy:20885,foodList:[{name:"リラックスカカオ",num:30},{name:"モーモーミルク",num:26},{name:"あまいミツ",num:22},{name:"めざましコーヒー",num:24}]},{type:"デザート",name:"かたやぶりコーンティラミス",energy:7125,foodList:[{name:"モーモーミルク",num:12},{name:"ワカクサコーン",num:14},{name:"めざましコーヒー",num:14}]}]),pe(Nt,"map",Nt.list.reduce((e,t)=>(e[t.name]=t,e),{})),pe(Nt,"maxFoodNum"),pe(Nt,"maxEnergy"),pe(Nt,"cookingPowerUpEnergy"),pe(Nt,"recipeLvs",{1:{bonus:1,totalExp:0},2:{bonus:1.02,totalExp:1080},3:{bonus:1.04,totalExp:2324},4:{bonus:1.06,totalExp:3936},5:{bonus:1.08,totalExp:5545},6:{bonus:1.09,totalExp:7341},7:{bonus:1.11,totalExp:9712},8:{bonus:1.13,totalExp:12760},9:{bonus:1.16,totalExp:16426},10:{bonus:1.18,totalExp:20791},11:{bonus:1.19,totalExp:25639},12:{bonus:1.21,totalExp:30911},13:{bonus:1.23,totalExp:36621},14:{bonus:1.24,totalExp:42922},15:{bonus:1.26,totalExp:49882},16:{bonus:1.28,totalExp:57551},17:{bonus:1.3,totalExp:66001},18:{bonus:1.31,totalExp:75131},19:{bonus:1.33,totalExp:84981},20:{bonus:1.35,totalExp:95642},21:{bonus:1.37,totalExp:107159},22:{bonus:1.4,totalExp:119576},23:{bonus:1.42,totalExp:132938},24:{bonus:1.45,totalExp:147309},25:{bonus:1.47,totalExp:162621},26:{bonus:1.5,totalExp:178929},27:{bonus:1.52,totalExp:196563},28:{bonus:1.55,totalExp:215605},29:{bonus:1.58,totalExp:236149},30:{bonus:1.61,totalExp:258299},31:{bonus:1.64,totalExp:281955},32:{bonus:1.67,totalExp:306759},33:{bonus:1.7,totalExp:332769},34:{bonus:1.74,totalExp:360469},35:{bonus:1.77,totalExp:389943},36:{bonus:1.81,totalExp:421521},37:{bonus:1.84,totalExp:455380},38:{bonus:1.88,totalExp:491055},39:{bonus:1.92,totalExp:528663},40:{bonus:1.96,totalExp:568918},41:{bonus:2,totalExp:611541},42:{bonus:2.04,totalExp:656646},43:{bonus:2.08,totalExp:704344},44:{bonus:2.13,totalExp:754748},45:{bonus:2.17,totalExp:807184},46:{bonus:2.22,totalExp:862205},47:{bonus:2.27,totalExp:920936},48:{bonus:2.32,totalExp:983590},49:{bonus:2.37,totalExp:1050391},50:{bonus:2.42,totalExp:1121582},51:{bonus:2.48,totalExp:1196687},52:{bonus:2.53,totalExp:1319485},53:{bonus:2.59,totalExp:1471363},54:{bonus:2.65,totalExp:1672589},55:{bonus:2.71,totalExp:1930878},56:{bonus:2.77,totalExp:2231322},57:{bonus:2.83,totalExp:2579312},58:{bonus:2.9,totalExp:2977994},59:{bonus:2.97,totalExp:3413120},60:{bonus:3.03,totalExp:3891145}}),pe(Nt,"maxRecipeLv"),pe(Nt,"potMax",69),pe(Nt,"maxRecipeBonus");let Me=Nt;Me.maxRecipeLv=Object.values(Me.recipeLvs).length,Me.maxRecipeBonus=Math.max(...Object.values(Me.recipeLvs).map(n=>n.bonus));for(let n of be.list)n.bestTypeRate={カレー:1,サラダ:1,デザート:1},n.bestRate=0,n.maxAddEnergy_カレー=0,n.maxAddEnergy_サラダ=0,n.maxAddEnergy_デザート=0;be.maxEnergy=Math.max(...be.list.map(n=>n.energy)),be.averageEnergy=be.list.reduce((n,e)=>n+e.energy,0)/be.list.length;for(let n of Me.list){n.foodNum=n.foodList.reduce((e,t)=>e+t.num,0),n.rawEnergy=n.foodList.reduce((e,t)=>e+be.map[t.name].energy*t.num,0),n.rate=n.rawEnergy?n.energy/n.rawEnergy:1,n.maxEnergy=n.energy*Me.maxRecipeBonus,n.addEnergy=n.energy-n.rawEnergy,n.maxAddEnergy=n.maxEnergy-n.rawEnergy;for(let{name:e,num:t}of n.foodList)be.map[e].bestRate<n.rate&&(be.map[e].bestRate=n.rate),(be.map[e].bestTypeRate[n.type]==null||be.map[e].bestTypeRate[n.type]<n.rate)&&(be.map[e].bestTypeRate[n.type]=n.rate),be.map[e][`maxAddEnergy_${n.type}`]=Math.max(be.map[e][`maxAddEnergy_${n.type}`],n.maxAddEnergy)}Me.maxFoodNum=Math.max(...Me.list.map(n=>n.foodNum)),Me.maxEnergy=Math.max(...Me.list.map(n=>n.maxEnergy)),be.averageMaxCookedEnergy=be.list.reduce((n,e)=>n+e.energy*e.bestRate*Me.maxRecipeBonus,0)/be.list.length,Me.cookingPowerUpEnergy=0;for(let n of["カレー","サラダ","デザート"]){let e=Me.list.filter(i=>i.type==n),s=e.filter(i=>i.foodNum<=Me.potMax).sort((i,r)=>r.maxEnergy-i.maxEnergy)[0],o=e.sort((i,r)=>r.maxEnergy-i.maxEnergy)[0];if(o.name!=s.name){let i=(o.maxEnergy-s.maxEnergy)/(o.foodNum-s.foodNum);Me.cookingPowerUpEnergy=Math.max(Me.cookingPowerUpEnergy,i)}for(let i of be.list)i[`bestTypeRate_${n}`]=i.bestTypeRate[n],i[`maxEnergy_${n}`]=i.energy*i.bestTypeRate[n]*Me.maxRecipeBonus}const Ua=class Ua{};pe(Ua,"list",[{name:"さみしがり",good:"手伝いスピード",weak:"げんき回復量",goodShort:"手",weakShort:"元"},{name:"いじっぱり",good:"手伝いスピード",weak:"食材お手伝い確率",goodShort:"手",weakShort:"食"},{name:"やんちゃ",good:"手伝いスピード",weak:"メインスキル発生確率",goodShort:"手",weakShort:"ス"},{name:"ゆうかん",good:"手伝いスピード",weak:"EXP獲得量",goodShort:"手",weakShort:"EX"},{name:"ずぶとい",good:"げんき回復量",weak:"手伝いスピード",goodShort:"元",weakShort:"手"},{name:"わんぱく",good:"げんき回復量",weak:"食材お手伝い確率",goodShort:"元",weakShort:"食"},{name:"のうてんき",good:"げんき回復量",weak:"メインスキル発生確率",goodShort:"元",weakShort:"ス"},{name:"のんき",good:"げんき回復量",weak:"EXP獲得量",goodShort:"元",weakShort:"EX"},{name:"ひかえめ",good:"食材お手伝い確率",weak:"手伝いスピード",goodShort:"食",weakShort:"手"},{name:"おっとり",good:"食材お手伝い確率",weak:"げんき回復量",goodShort:"食",weakShort:"元"},{name:"うっかりや",good:"食材お手伝い確率",weak:"メインスキル発生確率",goodShort:"食",weakShort:"ス"},{name:"れいせい",good:"食材お手伝い確率",weak:"EXP獲得量",goodShort:"食",weakShort:"EX"},{name:"おだやか",good:"メインスキル発生確率",weak:"手伝いスピード",goodShort:"ス",weakShort:"手"},{name:"おとなしい",good:"メインスキル発生確率",weak:"げんき回復量",goodShort:"ス",weakShort:"元"},{name:"しんちょう",good:"メインスキル発生確率",weak:"食材お手伝い確率",goodShort:"ス",weakShort:"食"},{name:"なまいき",good:"メインスキル発生確率",weak:"EXP獲得量",goodShort:"ス",weakShort:"EX"},{name:"おくびょう",good:"EXP獲得量",weak:"手伝いスピード",goodShort:"EX",weakShort:"手"},{name:"せっかち",good:"EXP獲得量",weak:"げんき回復量",goodShort:"EX",weakShort:"元"},{name:"ようき",good:"EXP獲得量",weak:"食材お手伝い確率",goodShort:"EX",weakShort:"食"},{name:"むじゃき",good:"EXP獲得量",weak:"メインスキル発生確率",goodShort:"EX",weakShort:"ス"},{name:"てれや"},{name:"がんばりや"},{name:"すなお"},{name:"きまぐれ"},{name:"まじめ"}]),pe(Ua,"map",Ua.list.reduce((e,t)=>(e[t.name]=t,e),{}));let lf=Ua;const Pw=[{name:"ワカクサ本島",berryList:[null]},{name:"シアンの砂浜",berryList:["オレン","モモン","シーヤ"]},{name:"トープ洞窟",berryList:["フィラ","ヒメリ","オボン"]},{name:"ウノハナ雪原",berryList:["チーゴ","キー","ウイ"]},{name:"ラピスラズリ湖畔",berryList:["ドリ","マゴ","クラボ"]},{name:"ゴールド旧発電所",berryList:["ウブ","ベリブ","ブリー"]}];class Ui{}pe(Ui,"list",[]),pe(Ui,"map",{}),Ui.list=Pw,Ui.map=Pw.reduce((n,e)=>(n[e.name]=e,n),{});const uf=[{id:1,name:"きのみの数S",rarity:3,short:"きのみS",katakana:"キノミノカズS",inputSort:0,next:null},{id:2,name:"げんき回復ボーナス",rarity:3,short:"げんボ",katakana:"ゲンキカイフクボーナス",inputSort:0,next:null},{id:3,name:"ゆめのかけらボーナス",rarity:3,short:"ゆめボ",katakana:"ユメノカケラボーナス",inputSort:0,next:null},{id:4,name:"リサーチEXPボーナス",rarity:3,short:"リサボ",katakana:"リサーチEXPボーナス",inputSort:0,next:null},{id:5,name:"睡眠EXPボーナス",rarity:3,short:"睡眠ボ",katakana:"スイミンEXPボーナス",inputSort:0,next:null},{id:6,name:"おてつだいボーナス",rarity:3,short:"おてボ",katakana:"オテツダイボーナス",inputSort:0,next:null},{id:7,name:"スキルレベルアップM",rarity:3,short:"スキLvM",katakana:"スキルレベルアップM",inputSort:2,next:null},{id:8,name:"スキル確率アップM",rarity:2,short:"スキ確M",katakana:"スキルカクリツアップM",inputSort:1,next:null},{id:9,name:"食材確率アップM",rarity:2,short:"食確M",katakana:"ショクザイカクリツアップM",inputSort:0,next:null},{id:10,name:"スキルレベルアップS",rarity:2,short:"スキLvS",katakana:"スキルレベルアップS",inputSort:2,next:"スキルレベルアップM"},{id:11,name:"おてつだいスピードM",rarity:2,short:"おてｽﾋﾟM",katakana:"オテツダイスピードM",inputSort:0,next:null},{id:12,name:"最大所持数アップL",rarity:2,short:"所持L",katakana:"サイダイショジスウアップL",inputSort:0,next:null},{id:13,name:"最大所持数アップM",rarity:2,short:"所持M",katakana:"サイダイショジスウアップM",inputSort:0,next:"最大所持数アップL"},{id:14,name:"スキル確率アップS",rarity:1,short:"スキ確S",katakana:"スキルカクリツアップS",inputSort:1,next:"スキル確率アップM"},{id:15,name:"食材確率アップS",rarity:1,short:"食確S",katakana:"ショクザイカクリツアップS",inputSort:0,next:"食材確率アップM"},{id:16,name:"おてつだいスピードS",rarity:1,short:"おてｽﾋﾟS",katakana:"オテツダイスピードS",inputSort:0,next:"おてつだいスピードM"},{id:17,name:"最大所持数アップS",rarity:1,short:"所持S",katakana:"サイダイショジスウアップS",inputSort:0,next:"最大所持数アップM"}],ti=class ti{static useSilverSeed(e){let t=e.join("/");return t.includes("最大所持数アップM")&&!t.includes("最大所持数アップL")&&(t=t.replace("最大所持数アップM","最大所持数アップL")),t.includes("最大所持数アップS")&&!t.includes("最大所持数アップL")&&(t=t.replace("最大所持数アップS","最大所持数アップL")),t.includes("最大所持数アップS")&&!t.includes("最大所持数アップM")&&(t=t.replace("最大所持数アップS","最大所持数アップM")),t.includes("スキルレベルアップS")&&!t.includes("スキルレベルアップM")&&(t=t.replace("スキルレベルアップS","スキルレベルアップM")),t.includes("スキル確率アップS")&&!t.includes("スキル確率アップM")&&(t=t.replace("スキル確率アップS","スキル確率アップM")),t.includes("食材確率アップS")&&!t.includes("食材確率アップM")&&(t=t.replace("食材確率アップS","食材確率アップM")),t.includes("おてつだいスピードS")&&!t.includes("おてつだいスピードM")&&(t=t.replace("おてつだいスピードS","おてつだいスピードM")),t.split("/")}};pe(ti,"list",uf),pe(ti,"map",uf.reduce((e,t)=>(e[t.name]=t,e),{})),pe(ti,"idMap",uf.reduce((e,t)=>(e[t.id]=t,e),{})),pe(ti,"listForInput",ti.list.toSorted((e,t)=>e.inputSort-t.inputSort));let za=ti;class UH{constructor(e){Bs(this,gc,void 0);Bs(this,Ms,void 0);Bs(this,Ps,void 0);Bs(this,Ga,0);zs(this,gc,e),zs(this,Ms,1-e),zs(this,Ps,{})}printStatistics(){console.log("cacheHit",zt(this,Ga)),console.log("cacheNum",Object.entries(zt(this,Ps)).length)}get(e,t){if(zt(this,Ms)<=0)return 0;if(zt(this,Ms)>=1)return t;t=Math.floor(t);const s=`${e.toFixed(4)}_${t}`;if(zt(this,Ps)[s]!==void 0)return Ww(this,Ga)._++,zt(this,Ps)[s];let o=0;const i=1-e;for(let r=0;r<t;r++){let a=e**r*i**(t-r);for(let l=0;l<r;l++)a*=(t-l)/(r-l);if(o+a>=zt(this,Ms))return zt(this,Ps)[s]=r+(zt(this,Ms)-o)/a;o+=a}return zt(this,Ps)[s]=t-1+(zt(this,Ms)-o)/(1-o)}}gc=new WeakMap,Ms=new WeakMap,Ps=new WeakMap,Ga=new WeakMap;const cf=[0,.45,.52,.62,.71,1],Ie=class Ie{constructor(e,t){pe(this,"config");pe(this,"mode");pe(this,"helpEffectCache",new Map);pe(this,"helpRateCache",new Map);pe(this,"fixedPotSize");pe(this,"cookingList");pe(this,"defaultBestCooking");pe(this,"foodEnergyMap");pe(this,"defaultHelpRate");Bs(this,qi,void 0);Bs(this,Ha,void 0);Bs(this,qa,1);Bs(this,ja,0);if(!t)throw"モードが指定されていません";this.config=e,this.mode=t,this.fixedPotSize=t==Ie.MODE_SELECT?Me.potMax:Math.round(this.config.simulation.potSize*(this.config.simulation.campTicket?1.5:1)),t==Ie.MODE_SELECT?this.cookingList=Me.evaluateLvList({simulation:{cookingRecipeLvType2:!0,cookingRecipeFixLv:Me.maxRecipeLv}}):(this.cookingList=Me.evaluateLvList(e),this.cookingList=this.cookingList.filter(s=>s.type==this.config.simulation.cookingType&&(s.enable||s.foodNum==0))),this.foodEnergyMap={};for(const s of be.list)this.foodEnergyMap[s.name]=s.energy;for(const s of this.cookingList)for(const o of s.foodList)this.foodEnergyMap[o.name]=Math.max(this.foodEnergyMap[o.name],be.map[o.name].energy*s.rate*s.recipeLvBonus);this.defaultBestCooking=this.cookingList.filter(s=>s.foodNum<=this.fixedPotSize).map(s=>({...s,lastEnergy:s.fixEnergy+(this.fixedPotSize-s.foodNum)*be.maxEnergy})).sort((s,o)=>o.lastEnergy-s.lastEnergy)[0],this.defaultHelpRate=Un.getHelpRate(Math.min(e.sleepTime/8.5,1)*100,0,0,this.config),e.simulation.berryEnergyWeight!=null&&zs(this,qa,e.simulation.berryEnergyWeight),e.simulation.skillEnergyIgnore!=null&&zs(this,ja,e.simulation.skillEnergyIgnore),zs(this,qi,t==Ie.MODE_SELECT?e.selectEvaluate.expectType:e.simulation.expectType),zs(this,Ha,new UH(zt(this,qi).border/100))}static get isReady(){return Un.isReady}fromBox(e,t,s=0,o=0){var p;const i=ln.map[e.name];let r=e.lv,a=0;const l=lf.map[e.nature];if(t&&(this.config.simulation.fixResourceMode==0&&(this.config.simulation.fixLv||o)&&(r=Math.max(this.config.simulation.fixLv,e.lv,o)),this.config.simulation.fixResourceMode==1||this.config.simulation.fixResourceMode==2)){const f=this.config.simulation.fixResourceMode==1?Wi.list.length:Math.max(this.config.simulation.fixLv,o);let m=e.nextExp?Math.round(Wi.list[e.lv].total*i.exp)-e.nextExp:Math.round(Wi.list[e.lv-1].total*i.exp),g=l.good=="EXP獲得量"?30:l.weak=="EXP獲得量"?21:25;for(;r<f;){let x=Math.round(Wi.list[r].total*i.exp);const b=Math.ceil((x-m)/g),w=Wi.list[r-1].shard*b;if(m+=g*b,s+b<=this.config.candy.bag[i.candyName]&&(!this.config.candy.shard||w+a<=this.config.candy.shard))s+=b,a+=w,r++;else break}}let u=0;r>=10&&u++,r>=25&&u++,r>=50&&u++,r>=75&&u++,r>=100&&u++;let c=[...e.subSkillList];if(t&&this.config.simulation.fixSubSkillSeed){let f;do f=!1,c.slice(0,u).forEach((m,g)=>{const x=za.map[m];x!=null&&x.next&&!c.includes(x.next)&&(f=!0,c[g]=x==null?void 0:x.next)});while(f)}let h=c.slice(0,u);const d=this.initSimulatedPokemon(i,r,e.foodList,t&&this.config.simulation.fixSkillSeed?i.skill.effect.length:e.skillLv,this.config.simulation.eventBonusType=="all"||this.config.simulation.eventBonusType==i.type||this.config.simulation.eventBonusType==i.specialty,e.sleepTime,s,a);return d.box=e,d.fixable=t,d.nextSubSkillList=e.subSkillList.map(f=>{const m=za.map[f];return(m==null?void 0:m.next)&&!e.subSkillList.includes(m.next)}),this.calcParameter(d,h.map(f=>za.map[f]),l,(p=this.config.simulation.field=="ワカクサ本島"?this.config.simulation.berryList:Ui.map[this.config.simulation.field].berryList)!=null&&p.includes(d.base.berry.name)?200:100),d}fromEvaluate(e,t,s){let o=this.config.selectEvaluate.specialty[e.specialty].skillLv[e.skill.name],i=null;return o.type==1&&(i=e.evolveLv),o.type==2&&(i=e.skill.effect.length),o.type==3&&(i=o.lv),this.initSimulatedPokemon(e,t,s,i,!1,this.config.selectEvaluate.pokemonSleepTime)}initSimulatedPokemon(e,t,s,o,i=!1,r,a=0,l=0){const u=be.map[s[0]].energy*(e.specialty=="食材"?2:1),c={base:e,skillLv:o,lv:t,foodList:[],foodProbList:[],eventBonus:i,sleepTime:r,useCandy:a,useShard:l};let h=t>=60?3:t>=30?2:1;for(let[d,p]of s.slice(0,h).entries()){const f=be.map[p];if(f==null)throw`${c.base.name}:不正な食べ物(${p})`;let m=Math.round(u*[1,2.25,3.6][d]/f.energy);i&&(m+=this.config.simulation.eventBonusTypeFood),c.foodList.push({name:f.name,num:m,energy:this.foodEnergyMap[f.name]*m})}for(let{name:d,num:p}of c.foodList){for(let f of c.foodProbList)f.name==d&&(p-=f.num,f.weight+=1/c.foodList.length);c.foodProbList.push({name:d,num:p,weight:1/c.foodList.length})}return c.base.skill.name=="ゆびをふる"?c.skillWeightList=_s.metronomeWeightList:c.skillWeightList=[{skill:c.base.skill,weight:1}],c}calcParameter(e,t,s,o){var i,r,a;return e.cookingPowerUpEffect=0,e.cookingChanceEffect=0,e.supportScorePerDay=0,e.shard=0,e.subSkillList=t,e.subSkillNameList=t.map(l=>l.name),e.nature=s,e.berryNum=(e.base.specialty=="きのみ"?2:1)+(e.subSkillNameList.includes("きのみの数S")?1:0),e.berryEnergy=Math.max(e.base.berry.energy+e.lv-1,e.base.berry.energy*1.025**(e.lv-1))*o/100*zt(this,qa),e.berryEnergyPerHelp=e.berryEnergy*e.berryNum,e.foodRate=e.base.foodRate*(1+(e.subSkillNameList.includes("食材確率アップS")?.18:0)+(e.subSkillNameList.includes("食材確率アップM")?.36:0))*((s==null?void 0:s.good)=="食材お手伝い確率"?1.2:(s==null?void 0:s.weak)=="食材お手伝い確率"?.8:1),e.foodNum=e.foodList.reduce((l,u)=>l+u.num,0)/e.foodList.length,e.foodEnergyPerHelp=e.foodList.reduce((l,u)=>l+u.energy,0)/e.foodList.length,this.mode!=Ie.MODE_SELECT&&(e.foodEnergyPerHelp*=this.config.simulation.cookingWeight),e.pickupEnergyPerHelp=e.berryEnergyPerHelp*(1-e.foodRate)+e.foodEnergyPerHelp*e.foodRate,e.bag=((i=e.box)==null?void 0:i.bag)??e.base.bag+(e.base.evolveLv-1)*5+(e.subSkillNameList.includes("最大所持数アップS")?6:0)+(e.subSkillNameList.includes("最大所持数アップM")?12:0)+(e.subSkillNameList.includes("最大所持数アップL")?18:0),e.sleepTime>=200&&(e.bag+=1),e.sleepTime>=500&&(e.bag+=2),e.sleepTime>=1e3&&(e.bag+=3),e.sleepTime>=2e3&&(e.bag+=2),this.mode!=Ie.MODE_SELECT&&this.config.simulation.campTicket&&(e.bag*=1.2),e.bagFullHelpNum=Math.max(e.bag/(e.berryNum*(1-e.foodRate)+e.foodNum*e.foodRate)+4,0),this.mode==Ie.MODE_SELECT?e.fixedSkillLv=e.skillLv+(e.subSkillNameList.includes("スキルレベルアップS")?1:0)+(e.subSkillNameList.includes("スキルレベルアップM")?2:0):e.fixedSkillLv=e.skillLv??e.base.evolveLv+(e.subSkillNameList.includes("スキルレベルアップS")?1:0)+(e.subSkillNameList.includes("スキルレベルアップM")?2:0),this.mode!=Ie.MODE_SELECT&&e.eventBonus&&(e.fixedSkillLv+=this.config.simulation.eventBonusTypeSkillLv),e.fixedSkillLv<1&&(e.fixedSkillLv=1),e.fixedSkillLv>e.base.skill.effect.length&&(e.fixedSkillLv=e.base.skill.effect.length),e.skillRate=e.base.skillRate*(1+(e.subSkillNameList.includes("スキル確率アップS")?.18:0)+(e.subSkillNameList.includes("スキル確率アップM")?.36:0))*((s==null?void 0:s.good)=="メインスキル発生確率"?1.2:(s==null?void 0:s.weak)=="メインスキル発生確率"?.8:1),this.mode!=Ie.MODE_SELECT&&e.eventBonus&&(e.skillRate*=this.config.simulation.eventBonusTypeSkillRate),zt(this,ja)&&e.base.skill.energyOnly&&(e.skillRate=0),e.skillCeil=e.base.specialty=="スキル"?40*3600/e.base.help:78,e.ceilSkillRate=e.skillRate>0?e.skillRate/(1-Math.pow(1-e.skillRate,e.skillCeil)):1/e.skillCeil,e.natureGenkiMultiplier=((r=e.nature)==null?void 0:r.good)=="げんき回復量"?1.2:((a=e.nature)==null?void 0:a.weak)=="げんき回復量"?.88:1,e}calcStatus(e,t,s=0,o=null){var h,d;e.speedBonus=0,e.subSkillNameList.includes("おてつだいスピードS")&&(e.speedBonus+=.07),e.subSkillNameList.includes("おてつだいスピードM")&&(e.speedBonus+=.14),e.speedBonus+=t*.05,e.speedBonus=Math.min(e.speedBonus,.35),e.speed=Math.floor(e.base.help*(1-(e.lv-1)*.002)*(1-e.speedBonus)*(((h=e.nature)==null?void 0:h.good)=="手伝いスピード"?.9:((d=e.nature)==null?void 0:d.weak)=="手伝いスピード"?1.075:1)/(this.mode!=Ie.MODE_SELECT&&this.config.simulation.campTicket?1.2:1)),e.base.remainEvolveLv==1&&e.sleepTime>=500&&(e.speed*=.95),e.base.remainEvolveLv==1&&e.sleepTime>=2e3&&(e.speed*=.88),e.base.remainEvolveLv==2&&e.sleepTime>=500&&(e.speed*=.89),e.base.remainEvolveLv==2&&e.sleepTime>=2e3&&(e.speed*=.75);let i=0,r=(24-this.config.sleepTime)*3600;for(let p=0;p<4&&r>0;p++){let f=12e3-e.speed*cf[p]/2+e.speed*cf[p+1]/2;i+=Math.min(r,f)/cf[p+1]/e.speed,r-=f}if(r>0&&(i+=r/e.speed),e.baseDayHelpNum=i,o&&(e.base.skill.name=="へんしん(スキルコピー)"||e.base.skill.name=="ものまね(スキルコピー)")){e.skillWeightList=[];for(let p of o)if(e!=p){let f;p.base.skill.name=="へんしん(スキルコピー)"||p.base.skill.name=="ものまね(スキルコピー)"?f=[{skill:_s.map.エナジーチャージS,weight:1}]:f=e.skillWeightList;for(let{skill:m,weight:g}of f){const x=e.skillWeightList.find(b=>b.skill==m);x===void 0?e.skillWeightList.push({skill:m,weight:g/4}):x.weight+=g/4}}}e.morningHealGenki=Math.min(Math.min(this.config.sleepTime/8.5,1)*100*e.natureGenkiMultiplier*(1+s*.14),100);let a=0,l=0,u=0,c=0;if(e.bag>0){let p=e.skillWeightList.filter(f=>f.skill.genki);if(p.length){let f=0,m=0;for(let{skill:k,weight:I}of p){const $=k.effect[(k.effect.length>=e.fixedSkillLv?e.fixedSkillLv:k.effect.length)-1];f+=($.self??0)*I,m+=($.other??0)*I}const g=f+m;let x=g*e.natureGenkiMultiplier,b=x?`${e.morningHealGenki.toFixed(3)}_${e.skillRate.toFixed(3)}_${e.speed.toFixed(3)}_${e.bagFullHelpNum.toFixed(3)}_${e.skillCeil.toFixed(3)}_${x.toFixed(3)}`:"",w=this.helpEffectCache.get(b);w==null&&(w=x?Un.getHealEffect(e,x,this.config):[0,0],this.helpEffectCache.set(b,w));let[y,v]=w;a+=y*f/g,l+=v*f/g,u+=y*m/g,c+=v*m/g}}return e.selfMorningHealEffect=a/e.natureGenkiMultiplier,e.selfDayHealEffect=l/e.natureGenkiMultiplier,e.otherMorningHealEffect=u/e.natureGenkiMultiplier,e.otherDayHealEffect=c/e.natureGenkiMultiplier,e}async calcHelp(e,t,s,o={},i=null){let{pokemonList:r,helpBoostCount:a,scoreForHealerEvaluate:l,scoreForSupportEvaluate:u}=o,c=(e.selfMorningHealEffect+t)*e.natureGenkiMultiplier,h=(e.selfDayHealEffect+s)*e.natureGenkiMultiplier,d=`${e.morningHealGenki.toFixed(3)}_${c.toFixed(3)}_${h.toFixed(3)}`,p=this.helpRateCache.get(d);p==null&&(p=Un.getHelpRate(e.morningHealGenki,c,h,this.config),this.helpRateCache.set(d,p)),e.morningHealEffect=c,e.dayHealEffect=h,e.healEffect=c,e.dayHelpNum=(24-this.config.sleepTime)*3600/e.speed*p.day,e.nightHelpNum=this.config.sleepTime*3600/e.speed*p.night,e.dayHelpRate=p.day,e.nightHelpRate=p.night,e.averageHelpRate=(e.dayHelpNum+e.nightHelpNum)/(24*3600/e.speed),e.normalDayHelpNum=Math.min(e.dayHelpNum/(this.config.checkFreq-1),e.bagFullHelpNum)*(this.config.checkFreq-1),e.normalNightHelpNum=Math.min(e.nightHelpNum,e.bagFullHelpNum),e.normalHelpNum=e.normalDayHelpNum+e.normalNightHelpNum,e.berryHelpNum=Math.max(e.dayHelpNum+e.nightHelpNum-e.normalHelpNum,0);let f=e.normalHelpNum*(1-e.foodRate)+e.berryHelpNum;if(e.berryEnergyPerDay=e.berryEnergyPerHelp*f,e.berryNumPerDay=e.berryNum*f,zt(this,qi).food==0){let m=e.normalHelpNum*e.foodRate;if(e.foodEnergyPerDay=e.foodEnergyPerHelp*m,e.foodNumPerDay=e.foodNum*m,this.mode!=Ie.MODE_SELECT){for(let g of be.list)e[g.name]=0;for(let g of e.foodList)e[g.name]+=Number(g.num)/e.foodList.length*m}}else{e.foodEnergyPerDay=0,e.foodNumPerDay=0,this.mode!=Ie.MODE_SELECT&&Object.assign(e,Ie.FOOD_NUM_RESET);for(const m of e.foodProbList){const g=zt(this,Ha).get(e.foodRate*m.weight,e.normalHelpNum)*m.num;e.foodEnergyPerDay+=g*this.foodEnergyMap[m.name],e.foodNumPerDay+=g,this.mode!=Ie.MODE_SELECT&&(e[m.name]+=g)}}if(e.pickupEnergyPerDay=e.berryEnergyPerDay+e.foodEnergyPerDay,e.bag>0){let m=Math.min(e.dayHelpNum/(this.config.checkFreq-1),e.bagFullHelpNum),g=Math.min(e.nightHelpNum,e.bagFullHelpNum);if(e.base.specialty=="スキル"){let x=(1-e.ceilSkillRate)**m,b=m>=1?(1-e.ceilSkillRate)**(m-1)*e.ceilSkillRate*m:0,w=m>=2?1-x-b:0,y=(1-e.ceilSkillRate)**g,v=g>=1?(1-e.ceilSkillRate)**(g-1)*e.ceilSkillRate*g:0,k=g>=2?1-y-v:0;e.skillPerDay=(b+w*2)*(this.config.checkFreq-1)+v+k*2}else e.skillPerDay=(1-(1-e.ceilSkillRate)**m)*(this.config.checkFreq-1)+(1-(1-e.ceilSkillRate)**Math.min(e.nightHelpNum,e.bagFullHelpNum))}else e.skillPerDay=0;e.skillEnergy=0,e.shard=0,e.skillEnergyMap={};for(let{skill:m,weight:g}of e.skillWeightList){const x=(m.effect.length>=e.fixedSkillLv?e.fixedSkillLv:m.effect.length)-1,b=m.effect[x];let w;switch(m.name){case"エナジーチャージS":case"エナジーチャージS(ランダム)":case"エナジーチャージM":case"たくわえる(エナジーチャージS)":w=b;break;case"ばけのかわ(きのみバースト)":case"きのみバースト":{if(this.mode==Ie.MODE_ABOUT)w=e.berryEnergy*b.self,e.burstBonus=b.other;else if(this.mode==Ie.MODE_TEAM){w=0;for(let y of r)w+=e.berryEnergy*(e==y?b.self:b.other)}else this.mode==Ie.MODE_SELECT&&(w=e.berryEnergy*b.self+Math.max(ks.map.ヤチェ.energy+e.lv-1,ks.map.ヤチェ.energy*1.025**(e.lv-1))*b.other*4);if(m.name=="ばけのかわ(きのみバースト)"){let y=1-(1-m.success)**e.skillPerDay;w*=(y*(e.skillPerDay+2)+(1-y)*e.skillPerDay)/e.skillPerDay}break}case"みかづきのいのり(げんきオールS)":{if(this.mode==Ie.MODE_ABOUT){const{self:y,other:v}=b.team.at(-1);w=e.berryEnergy*y,e.burstBonus=v}else if(this.mode==Ie.MODE_TEAM){const{self:y,other:v}=b.team[a-1];w=0;for(let k of r)w+=e.berryEnergy*(e==k?y:v)}else if(this.mode==Ie.MODE_SELECT){const{self:y,other:v}=b.team[a-1];w=e.berryEnergy*y+Math.max(ks.map.マゴ.energy+e.lv-1,ks.map.マゴ.energy*1.025**(e.lv-1))*v*4}break}case"おてつだいサポートS":case"おてつだいブースト":if(this.mode==Ie.MODE_SELECT)w=u*(m.name=="おてつだいブースト"?b.max*5:b);else if(this.mode!=Ie.MODE_ABOUT){if(this.mode==Ie.MODE_TEAM){let y;m.name=="おてつだいサポートS"&&(y=b/5),m.name=="おてつだいブースト"&&(y=b.fix,y+=b.team[a-1]),w=0;for(let v of r){w+=v.berryEnergyPerHelp*y*(1-v.foodRate);for(let k of v.foodList)e[k.name]=(e[k.name]??0)+k.num/v.foodList.length*y*v.foodRate*e.skillPerDay*g}}}break;case"食材ゲットS":if(this.mode==Ie.MODE_SELECT)w=be.list.reduce((y,v)=>y+v.energy*((v.bestRate*Me.maxRecipeBonus-1)*this.config.selectEvaluate.specialty[e.base.specialty].foodGetRate/100+1),0)/be.list.length*b;else if(this.mode==Ie.MODE_ABOUT){if(!this.config.simulation.sundayPrepare){let y=b/be.list.length*e.skillPerDay*g,v=0;for(let k of be.list)e[k.name]=Number(e[k.name]??0)+y*this.config.simulation.foodGetRate/100,v+=(this.foodEnergyMap[k.name]*this.config.simulation.foodGetRate/100+k.energy*(100-this.config.simulation.foodGetRate)/100)*this.config.simulation.cookingWeight;w=v/be.list.length*b}}else if(this.mode==Ie.MODE_TEAM&&!this.config.simulation.sundayPrepare){let y=b/be.list.length*e.skillPerDay*g;for(let v of be.list)e[v.name]=Number(e[v.name]??0)+y*this.config.simulation.foodGetRate/100}break;case"ゆめのかけらゲットS":case"ゆめのかけらゲットS(ランダム)":e.shard+=b*e.skillPerDay*g;break;case"料理パワーアップS":if(this.mode==Ie.MODE_SELECT){let y=Math.ceil((Me.maxFoodNum-Me.potMax)/b)*3,v=e.skillPerDay*g;w=(b*Me.cookingPowerUpEnergy*Math.min(v,y)+b*be.averageEnergy*Math.max(v-y,0))/v}else if(this.mode==Ie.MODE_ABOUT)if(this.config.simulation.sundayPrepare)w=be.averageEnergy*b;else{let y=Math.round((this.config.simulation.potSize+b)*(this.config.simulation.campTicket?1.5:1));w=(this.cookingList.filter(k=>k.foodNum<=y).map(k=>({...k,lastEnergy:k.fixEnergy+(y-k.foodNum)*be.maxEnergy})).sort((k,I)=>I.lastEnergy-k.lastEnergy)[0].lastEnergy-this.defaultBestCooking.lastEnergy)*this.config.simulation.cookingWeight}else this.mode==Ie.MODE_TEAM&&(e.cookingPowerUpEffect=b*g);break;case"料理チャンスS":if(this.mode==Ie.MODE_SELECT){let y=b/100*e.skillPerDay*g*7;w=(Me.getChanceWeekEffect(y).total-24.6)/7*Me.maxEnergy/e.skillPerDay/g}else if(this.mode==Ie.MODE_ABOUT){if(!this.config.simulation.sundayPrepare&&e.skillPerDay){let y=b/100*e.skillPerDay*g*7;w=(Me.getChanceWeekEffect(y).total-24.6)/7*this.defaultBestCooking.lastEnergy/e.skillPerDay*this.config.simulation.cookingWeight/g}}else this.mode==Ie.MODE_TEAM&&(this.config.simulation.sundayPrepare||(e.cookingChanceEffect=b/100*e.skillPerDay*g));break;case"へんしん(スキルコピー)":case"ものまね(スキルコピー)":this.mode==Ie.MODE_SELECT||this.mode==Ie.MODE_ABOUT?w=_s.map.エナジーチャージM.effect[x]:this.mode==Ie.MODE_TEAM&&(w=_s.map.エナジーチャージS.effect[x]);break;case"げんきオールS":case"げんきエールS":case"げんきチャージS":case"つきのひかり(げんきチャージS)":break;default:throw`未実装のスキル: ${m.name}`}w&&(w*=g,e.skillEnergyMap[m.name]=w,e.skillEnergy+=w)}if(e.otherMorningHealEffect>0&&this.mode==Ie.MODE_SELECT){let m=`${e.morningHealGenki.toFixed(3)}_${t.toFixed(3)}_${s.toFixed(3)}`,g=this.helpRateCache.get(m);g==null&&(g=Un.getHelpRate(Math.min(this.config.sleepTime/8.5,1)*100,t,s,this.config),this.helpRateCache.set(m,g));const x=l*((g.day*(24-this.config.sleepTime)+g.night*this.config.sleepTime)/(this.defaultHelpRate.day*(24-this.config.sleepTime)+this.defaultHelpRate.night*this.config.sleepTime)-1)*4/e.skillPerDay;e.skillEnergyMap[e.base.skill.name]=(e.skillEnergyMap[e.base.skill.name]??0)+x,e.skillEnergy+=x}return e.skillEnergyPerDay=e.skillEnergy*e.skillPerDay,e.energyPerDay=e.pickupEnergyPerDay+e.skillEnergyPerDay,e}calcFoodProbList(e){let t=[];for(let{name:s,num:o}of e){for(let i of t)i.name==s&&(o-=i.num,i.weight+=1/e.length);t.push({name:s,num:o,weight:1/e.length})}return t}selectEvaluate(e,t,s,o,i,r=null){return this.calcParameter(e,t,s,this.config.selectEvaluate.specialty[e.base.specialty].berryEnergyRate),this.calcStatus(e,e.subSkillNameList.includes("おてつだいボーナス")?this.config.selectEvaluate.helpBonus/5:0,e.subSkillNameList.includes("げんき回復ボーナス")?1:0),this.calcHelp(e,e.otherMorningHealEffect,e.otherDayHealEffect||(e.selfDayHealEffect?0:this.config.selectEvaluate.healer/100),{scoreForHealerEvaluate:o,scoreForSupportEvaluate:i,helpBoostCount:5},r),e.subSkillNameList.includes("おてつだいボーナス")&&(e.energyPerDay/=1-(25-this.config.selectEvaluate.helpBonus)*.01),e}selectEvaluateToScore(e,t,s){let o=e.energyPerDay;return t&&(o*=1+.06*this.config.selectEvaluate.shardBonus/100),s&&(o*=1+.06*this.config.selectEvaluate.shardBonus/100/2),o+=e.shard*this.config.selectEvaluate.shardEnergy*this.config.selectEvaluate.shardBonus/100,o}};qi=new WeakMap,Ha=new WeakMap,qa=new WeakMap,ja=new WeakMap,pe(Ie,"MODE_ABOUT",1),pe(Ie,"MODE_TEAM",2),pe(Ie,"MODE_SELECT",3),pe(Ie,"FOOD_NUM_RESET",Object.fromEntries(be.list.map(e=>[e.name,0])));let Va=Ie;class Bw{static get(e){let t=this.list[Math.min(Math.max(1,e),this.list.length)-1];return t.base={name:"ナイトキャップピカチュウ"},t.lv=e,t.subSkillList=[],t.subSkillNameList=[],t.foodList=[{name:"とくせんリンゴ",num:t.foodNumList[0]},{name:"リラックスカカオ",num:t.foodNumList[1]},{name:"あまいミツ",num:t.foodNumList[2]}].slice(0,t.foodNumList.length),t.skillEnergyPerDay=0,t.shard=0,t.helpNum=86400/t.time,t.berryEnergyPerDay=t.helpNum*Math.max(ks.map.ウブ.energy+e-1,ks.map.ウブ.energy*1.025**(e-1))*(1-.16*t.foodNumList.length),t.とくせんリンゴ=t.foodNumList.length>0?t.helpNum*.16*t.foodNumList[0]:0,t.リラックスカカオ=t.foodNumList.length>1?t.helpNum*.16*t.foodNumList[1]:0,t.あまいミツ=t.foodNumList.length>2?t.helpNum*.16*t.foodNumList[2]:0,t}}pe(Bw,"list",[{time:4800,berry:1,foodNumList:[]},{time:4680,berry:1,foodNumList:[]},{time:4560,berry:1,foodNumList:[1]},{time:4440,berry:1,foodNumList:[1]},{time:4380,berry:1,foodNumList:[1]},{time:4320,berry:1,foodNumList:[1]},{time:4260,berry:1,foodNumList:[1]},{time:4200,berry:1,foodNumList:[1]},{time:4140,berry:1,foodNumList:[1,1]},{time:4080,berry:1,foodNumList:[1,1]},{time:4020,berry:2,foodNumList:[1,1]},{time:3960,berry:2,foodNumList:[1,1]},{time:3900,berry:2,foodNumList:[2,1]},{time:3840,berry:2,foodNumList:[2,1]},{time:3780,berry:2,foodNumList:[2,1]},{time:3720,berry:2,foodNumList:[2,1]},{time:3660,berry:2,foodNumList:[2,2]},{time:3600,berry:2,foodNumList:[2,2]},{time:3570,berry:2,foodNumList:[2,2,2]},{time:3540,berry:2,foodNumList:[2,2,2]}]);let Gi=0;self.addEventListener("message",async n=>{var s,o,i;const{type:e,...t}=n.data;try{if(e=="combination"){const{rankMax:r,pickup:a,topList:l,targetPokemonList:u,pattern:c}=n.data;let h=[],d=0;for(let p of l){let f=[p,...new Array(a-1).fill(0).map((g,x)=>x+p+1)],m=new Array(a).fill(0).map((g,x)=>x>0?r-a+x:p);e:for(;;){let g=0;if(u)for(let x of f)g+=u[x].score;h.push({combination:[...f],aboutScore:g}),++d%1e4==0&&postMessage({status:"progress",body:d/c});for(let x=a-1;x>=0;x--)if(f[x]++,f[x]>m[x]){if(x==0)break e}else{for(let b=x+1;b<a;b++)f[b]=f[b-1]+1;break}}}postMessage({status:"success",body:h});return}if(e=="border"){Gi=Math.max(Gi,t.border);return}if(e=="simulate"){let r=[];Gi=-1;let{rankMax:a,pickup:l,topList:u,pattern:c,fixedPokemonList:h,targetPokemonList:d,config:p}=t,f=[];if(l>0)for(let S of u){let L=[S,...new Array(l-1).fill(0).map((P,A)=>A+S+1)],_=new Array(l).fill(0).map((P,A)=>A>0?a-l+A:S);e:for(;;){let P=0;if(d)for(let A of L)P+=d[A].score;f.push({combination:[...L],aboutScore:P}),f.length%1e4==0&&postMessage({status:"progress",body:f.length/c*.1});for(let A=l-1;A>=0;A--)if(L[A]++,L[A]>_[A]){if(A==0)break e}else{for(let B=A+1;B<l;B++)L[B]=L[B-1]+1;break}}}else f.push({combination:[],aboutScore:0});let m=null;p.teamSimulation.nightCapPikachu>0&&(m=Bw.get(p.teamSimulation.nightCapPikachu),(s=p.simulation.field=="ワカクサ本島"?p.simulation.berryList:Ui.map[p.simulation.field].berryList)!=null&&s.includes("ウブ")&&(m.berryEnergyPerDay*=2));let g=new Map,x=Me.evaluateLvList(p),b={カレー:x.filter(S=>S.type=="カレー"&&(S.enable||S.foodNum==0)).sort((S,L)=>L.fixAddEnergy-S.fixAddEnergy),サラダ:x.filter(S=>S.type=="サラダ"&&(S.enable||S.foodNum==0)).sort((S,L)=>L.fixAddEnergy-S.fixAddEnergy),デザート:x.filter(S=>S.type=="デザート"&&(S.enable||S.foodNum==0)).sort((S,L)=>L.fixAddEnergy-S.fixAddEnergy)},w=p.simulation.cookingType?b[p.simulation.cookingType]:x.filter(S=>p.simulation.enableCooking[S.name]||S.foodNum==0).sort((S,L)=>L.fixAddEnergy-S.fixAddEnergy);await Va.isReady;let y=new Va(p,Va.MODE_TEAM),v=0,k=p.teamSimulation.day!=null?1:7,I=p.teamSimulation.day!=null?p.teamSimulation.cookingNum??3:21,$={...Object.fromEntries(be.list.map(S=>[S.name,0]))},E={...$,...p.foodDefaultNum};e:for(let{aboutScore:S,combination:L}of f){S*=k,S<Gi;const _=[...h];for(let oe of L)_.push(d[oe]);let P=0,A=0,B=0,V=0,H=0,W=0,q=0,K=new Array(21).fill(0),X=0,J=0,Y={...E},ne={...$},Q={...$},se=0,ue=0,he=0,de=0,ye={},ve=new Set,De={},Ue=0,qe=0,Pe=0,Be=0,je={};for(let oe of _){if(B+=oe.subSkillNameList.includes("おてつだいボーナス")?1:0,V+=oe.subSkillNameList.includes("げんき回復ボーナス")?1:0,H+=oe.subSkillNameList.includes("ゆめのかけらボーナス")?1:0,W+=oe.subSkillNameList.includes("睡眠EXPボーナス")?1:0,Ue+=oe.base.legend,Be+=oe.useShard,je[oe.base.candyName]=(je[oe.base.candyName]??0)+oe.useCandy,je[oe.base.candyName]>(p.candy.bag[oe.base.candyName]??0))continue e;if(q+=p.simulation.researchRankMax&&oe.subSkillNameList.includes("リサーチEXPボーナス")?1:0,ye[oe.type]===void 0&&(ye[oe.type]=new Set),ye[oe.type].add(oe.name),!ve.has(oe.box.index))ve.add(oe.box.index);else continue e}if(W<p.teamSimulation.require.suiminExp||Ue>=2||p.simulation.fix&&p.simulation.fixResourceMode!=0&&p.candy.shard&&Be>p.candy.shard)continue;let Ke=0,Gn=0;for(let oe of _)y.calcStatus(oe,B,V,_),Ke+=oe.otherMorningHealEffect,Gn+=oe.otherDayHealEffect;if(!(W<p.teamSimulation.require.suiminExp)){for(let oe of _){if(y.calcHelp(oe,Ke,Gn,{pokemonList:_,helpBoostCount:ye[oe.type].size}),oe.dayHelpRate*100<p.teamSimulation.require.dayHelpRate||oe.nightHelpRate*100<p.teamSimulation.require.nightHelpRate)continue e;A+=oe.berryEnergyPerDay,A+=oe.skillEnergyPerDay,he+=oe.shard;for(let Ae of be.list)Q[Ae.name]+=oe[Ae.name]??0;oe.shard*=k,oe.skillPerDay*=k;let Je=Math.floor(oe.skillPerDay/(oe.skillName=="ゆびをふる"?_s.metronomeTarget.length:1));for(let Ae=0;Ae<Je;Ae++)K[Math.floor(Ae/Je*3*k)]+=oe.cookingPowerUpEffect;X+=oe.cookingPowerUpEffect*Je,J+=oe.cookingChanceEffect}if(m){_.push(m);for(let oe of be.list)Q[oe.name]+=m[oe.name]??0}if(p.teamSimulation.sundayPrepare){for(let Ae of be.list)Y[Ae.name]+=Q[Ae.name];let oe=p.simulation.cookingType?[p.simulation.cookingType]:["カレー","サラダ","デザート"];A=1;let Je={};for(let Ae of oe){let Sn=[],ut={...Y},Nn=b[Ae],un=0,nt=!0;t:for(let gt=0;gt<7;gt++){let yn=Math.round((gt==6?p.simulation.potSize*2:p.simulation.potSize)*(p.teamSimulation.campTicket??p.simulation.campTicket?1.5:1));for(let ze=0;ze<3;ze++){let Pt=Nn.find(Bt=>Bt.foodNum<=yn&&Bt.foodList.every(({name:cn,num:En})=>ut[cn]>=En));if(Pt.energy==0)break t;let Cs={},Is={...ut};for(const{name:Bt,num:cn}of Pt.foodList)ut[Bt]-=cn,Cs[Bt]=cn;Sn.push({...Pt,beforeFoodNum:Is,useFoodNum:Cs,remainFoodNum:ut}),un+=(Pt.fixEnergy+(nt?be.averageEnergy*X:0))*(100+p.simulation.fieldBonus)/100*(7-gt),nt=!1;for(let Bt in p.teamSimulation.sundayPrepare.foodNum)ut[Bt]+=p.teamSimulation.sundayPrepare.foodNum[Bt]/3}}un*=(100+p.simulation.fieldBonus)/100,A*=un,Je[Ae]={cookingList:Sn,remainFoodNum:ut}}P=A**(1/oe.length)*(1+(p.simulation.researchRankMax?.5:0)*p.simulation.shardWeight/100)+he*p.selectEvaluate.shardEnergyRate*p.simulation.shardWeight/100,A=0,De={eachTypeResult:Je}}else{if(p.teamSimulation.day==null){A*=7,he*=7,J*=7;for(let nt of be.list)Q[nt.name]*=7}for(let nt of be.list)Y[nt.name]+=Q[nt.name];let oe=0,Je=0;for(const nt of be.list)oe+=nt.energy*Y[nt.name],Je+=Y[nt.name];oe/=Je,oe=oe||0;const Ae=[];let Sn=0,ut=[];if(p.simulation.cookingWeight>0){let nt=[];if(p.teamSimulation.day!=null)for(let ze=0;ze<p.teamSimulation.cookingNum;ze++)nt.push({week:(p.teamSimulation.day+Math.floor(ze/3))%7,i:ze%3});else for(let ze=0;ze<21;ze++)nt.push({week:Math.floor(ze/3),i:ze%3});for(let{week:ze,i:Pt}of nt){let Cs=Math.round(((ze==6?p.simulation.potSize*2:p.simulation.potSize)+K[Sn])*(p.simulation.campTicket?1.5:1)),Is=null;for(let Bt of w)if(Bt.foodNum<=Cs&&Bt.foodList.every(({name:cn,num:En})=>Y[cn]>=En)){Is={cooking:Bt,week:ze,potSize:Cs,sunday:ze==6,index:ze*3+Pt};for(const{name:cn,num:En}of Bt.foodList)Y[cn]-=En,ne[cn]+=En;break}Ae.push(Is),Sn++}let gt=g.get(J);gt==null&&(gt=Me.getChanceWeekEffect(J,p.teamSimulation.day),g.set(J,gt));let yn=Object.entries(Y).map(([ze,Pt])=>({name:ze,num:Pt,energy:be.map[ze].energy})).sort((ze,Pt)=>Pt.energy-ze.energy);for(const{cooking:ze,potSize:Pt,sunday:Cs,week:Is,index:Bt}of Ae){let cn=Pt-ze.foodNum;if(p.teamSimulation.day==null){let En=0;for(;cn>0&&yn.length;){const hf=Math.min(cn,yn[0].num);cn-=hf,yn[0].num-=hf,En+=yn[0].energy*hf,yn[0].num<=0&&yn.shift()}const ji=gt.successProbabilityList[Bt]*(Cs?2:1)+1,zw=(ze.fixEnergy+En)*ji*p.simulation.cookingWeight;ut.push({cooking:ze,energy:zw,successPower:ji,addEnergy:En,successPower:ji,potSize:Pt}),A+=zw}else{const En=gt.successProbabilityList[Bt%3]*(Cs?2:1)+1,ji=ze.fixEnergy*En*p.simulation.cookingWeight;ut.push({cooking:ze,energy:ji,successPower:En,addEnergy:0,potSize:Pt}),A+=ji}}}let Nn=A;if(A*=(100+p.simulation.fieldBonus)/100,isNaN(A))throw console.error({pokemonList:_,fieldBonus:p.simulation.fieldBonus,cookingList:ut}),"計算ロジックに誤りが見つかりました";let un;if(p.teamSimulation.day!=null){let nt=7-p.teamSimulation.day,gt=A*nt;se=gt/p.selectEvaluate.shardEnergyRate,ue=p.simulation.researchRankMax?gt/p.selectEvaluate.shardEnergyRate*.5:0,qe=((p.teamSimulation.beforeEnergy??0)+A)/p.selectEvaluate.shardEnergyRate,Pe=p.simulation.researchRankMax?((p.teamSimulation.beforeEnergy??0)+A)/p.selectEvaluate.shardEnergyRate*.5:0}else qe=se=A*4/p.selectEvaluate.shardEnergyRate,Pe=ue=p.simulation.researchRankMax?A*4/p.selectEvaluate.shardEnergyRate*.5:0;de=qe*H*.06+Pe*q*.06*.5,un=(de+he)/(se+ue),P=A*(un*p.simulation.shardWeight/100+1),De={rawEnergy:Nn,cookingList:ut}}if(Gi<P){let oe=JSON.parse(JSON.stringify({beforeEnergy:p.teamSimulation.beforeEnergy,energy:A,aboutScore:S,energyShard:se,bonusShard:de,skillShard:he,todayShard:qe,todayResearchExp:Pe,score:P,shardBonusCount:H,researchExpBonusCount:q,pokemonList:_,useFoodNum:ne,addFoodNum:Q,defaultFoodNum:E,foodNum:Y,cookingPowerUpEffectList:K,...De}));for(let Je of oe.pokemonList){if(p.teamSimulation.day==null)for(let Ae of be.list)Je[Ae.name]=(Je[Ae.name]??0)*7;Je.shardBonus=Je.shard+((o=Je.subSkillNameList)!=null&&o.includes("ゆめのかけらボーナス")?oe.todayShard*.06:0)+((i=Je.subSkillNameList)!=null&&i.includes("リサーチEXPボーナス")?oe.todayResearchExp*.06:0)}r.push(oe),r=r.sort((Je,Ae)=>Ae.score-Je.score).slice(0,10),r.length>=10&&(Gi=r.at(-1).score)}++v%1e3==0&&postMessage({status:"progress",body:{progress:v/f.length*.9+.1,bestResult:r}})}}postMessage({status:"progress",body:{progress:1,bestResult:r}}),postMessage({status:"success",body:r})}}catch(r){console.error(r),postMessage({status:"error",body:r.message})}})})();
