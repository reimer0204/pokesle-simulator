var NV=Object.defineProperty;var TV=(Kn,M1,jn)=>M1 in Kn?NV(Kn,M1,{enumerable:!0,configurable:!0,writable:!0,value:jn}):Kn[M1]=jn;var et=(Kn,M1,jn)=>(TV(Kn,typeof M1!="symbol"?M1+"":M1,jn),jn);(function(){"use strict";function Kn(n,e){return e.forEach(function(t){t&&typeof t!="string"&&!Array.isArray(t)&&Object.keys(t).forEach(function(s){if(s!=="default"&&!(s in n)){var o=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:function(){return t[s]}})}})}),Object.freeze(n)}const M1=[{type:"カレー",name:"ごちゃまぜカレー",rate:1,foodList:[]},{type:"カレー",name:"とくせんリンゴカレー",rate:1.06,foodList:[{name:"とくせんリンゴ",num:7}]},{type:"カレー",name:"たんじゅんホワイトシチュー",rate:1.06,foodList:[{name:"モーモーミルク",num:7}]},{type:"カレー",name:"ベイビィハニーカレー",rate:1.06,foodList:[{name:"あまいミツ",num:7}]},{type:"カレー",name:"マメバーグカレー",rate:1.06,foodList:[{name:"マメミート",num:7}]},{type:"カレー",name:"満腹チーズバーグカレー",rate:1.11,foodList:[{name:"モーモーミルク",num:8},{name:"マメミート",num:8}]},{type:"カレー",name:"ひでりカツカレー",rate:1.11,foodList:[{name:"マメミート",num:10},{name:"ピュアなオイル",num:5}]},{type:"カレー",name:"サンパワートマトカレー",rate:1.11,foodList:[{name:"げきからハーブ",num:5},{name:"あんみんトマト",num:10}]},{type:"カレー",name:"とけるオムカレー",rate:1.11,foodList:[{name:"とくせんエッグ",num:10},{name:"あんみんトマト",num:6}]},{type:"カレー",name:"ほっこりホワイトシチュー",rate:1.17,foodList:[{name:"モーモーミルク",num:10},{name:"ほっこりポテト",num:8},{name:"あじわいキノコ",num:4}]},{type:"カレー",name:"ビルドアップマメカレー",rate:1.17,foodList:[{name:"ワカクサ大豆",num:12},{name:"マメミート",num:6},{name:"とくせんエッグ",num:4},{name:"げきからハーブ",num:4}]},{type:"カレー",name:"キノコのほうしカレー",rate:1.17,foodList:[{name:"あじわいキノコ",num:14},{name:"ほっこりポテト",num:9}]},{type:"カレー",name:"おやこあいカレー",rate:1.25,foodList:[{name:"あまいミツ",num:12},{name:"とくせんエッグ",num:8},{name:"とくせんリンゴ",num:11},{name:"ほっこりポテト",num:4}]},{type:"カレー",name:"からくちネギもりカレー",rate:1.25,foodList:[{name:"ふといながねぎ",num:14},{name:"あったかジンジャー",num:10},{name:"げきからハーブ",num:8}]},{type:"カレー",name:"ニンジャカレー",rate:1.48,foodList:[{name:"ワカクサ大豆",num:24},{name:"ふといながねぎ",num:12},{name:"マメミート",num:9},{name:"あじわいキノコ",num:5}]},{type:"カレー",name:"あぶりテールカレー",rate:1.25,foodList:[{name:"おいしいシッポ",num:8},{name:"げきからハーブ",num:25}]},{type:"カレー",name:"じゅうなんコーンシチュー",rate:1.25,foodList:[{name:"ワカクサコーン",num:14},{name:"モーモーミルク",num:8},{name:"ほっこりポテト",num:8}]},{type:"カレー",name:"ぜったいねむりバターカレー",rate:1.35,foodList:[{name:"リラックスカカオ",num:12},{name:"モーモーミルク",num:10},{name:"ほっこりポテト",num:18},{name:"あんみんトマト",num:15}]},{type:"カレー",name:"れんごくコーンキーマカレー",rate:1.48,foodList:[{name:"げきからハーブ",num:27},{name:"マメミート",num:24},{name:"ワカクサコーン",num:14},{name:"あったかジンジャー",num:12}]},{type:"サラダ",name:"ごちゃまぜサラダ",rate:1,foodList:[]},{type:"サラダ",name:"とくせんリンゴサラダ",rate:1.06,foodList:[{name:"とくせんリンゴ",num:8}]},{type:"サラダ",name:"マメハムサラダ",rate:1.06,foodList:[{name:"マメミート",num:8}]},{type:"サラダ",name:"あんみんトマトサラダ",rate:1.06,foodList:[{name:"あんみんトマト",num:8}]},{type:"サラダ",name:"ゆきかきシーザーサラダ",rate:1.11,foodList:[{name:"モーモーミルク",num:10},{name:"マメミート",num:6}]},{type:"サラダ",name:"うるおいとうふサラダ",rate:1.25,foodList:[{name:"ワカクサ大豆",num:15},{name:"あんみんトマト",num:9}]},{type:"サラダ",name:"ねっぷうとうふサラダ",rate:1.11,foodList:[{name:"ワカクサ大豆",num:10},{name:"げきからハーブ",num:6}]},{type:"サラダ",name:"めんえきねぎサラダ",rate:1.11,foodList:[{name:"あったかジンジャー",num:5},{name:"ふといながねぎ",num:10}]},{type:"サラダ",name:"メロメロりんごのチーズサラダ",rate:1.17,foodList:[{name:"モーモーミルク",num:5},{name:"ピュアなオイル",num:3},{name:"とくせんリンゴ",num:15}]},{type:"サラダ",name:"モーモーカプレーゼ",rate:1.17,foodList:[{name:"モーモーミルク",num:12},{name:"ピュアなオイル",num:5},{name:"あんみんトマト",num:6}]},{type:"サラダ",name:"ばかぢからワイルドサラダ",rate:1.17,foodList:[{name:"マメミート",num:9},{name:"あったかジンジャー",num:6},{name:"とくせんエッグ",num:5},{name:"ほっこりポテト",num:3}]},{type:"サラダ",name:"ムラっけチョコミートサラダ",rate:1.17,foodList:[{name:"リラックスカカオ",num:14},{name:"マメミート",num:9}]},{type:"サラダ",name:"くいしんぼうポテトサラダ",rate:1.25,foodList:[{name:"ほっこりポテト",num:14},{name:"とくせんエッグ",num:9},{name:"マメミート",num:7},{name:"とくせんリンゴ",num:6}]},{type:"サラダ",name:"オーバーヒートサラダ",rate:1.25,foodList:[{name:"げきからハーブ",num:17},{name:"あんみんトマト",num:8},{name:"あったかジンジャー",num:10}]},{type:"サラダ",name:"キノコのほうしサラダ",rate:1.25,foodList:[{name:"あじわいキノコ",num:17},{name:"ピュアなオイル",num:8},{name:"あんみんトマト",num:8}]},{type:"サラダ",name:"ヤドンテールのペッパーサラダ",rate:1.25,foodList:[{name:"げきからハーブ",num:10},{name:"ピュアなオイル",num:15},{name:"おいしいシッポ",num:10}]},{type:"サラダ",name:"みだれづきコーンサラダ",rate:1.25,foodList:[{name:"ワカクサコーン",num:9},{name:"ピュアなオイル",num:8}]},{type:"サラダ",name:"ニンジャサラダ",rate:1.48,foodList:[{name:"あったかジンジャー",num:11},{name:"ワカクサ大豆",num:19},{name:"あじわいキノコ",num:12},{name:"ふといながねぎ",num:15}]},{type:"サラダ",name:"めいそうスイートサラダ",rate:1.48,foodList:[{name:"とくせんリンゴ",num:21},{name:"あまいミツ",num:16},{name:"ワカクサコーン",num:12}]},{type:"サラダ",name:"ワカクササラダ",rate:1.48,foodList:[{name:"ピュアなオイル",num:22},{name:"ワカクサコーン",num:17},{name:"あんみんトマト",num:14},{name:"ほっこりポテト",num:9}]},{type:"デザート",name:"ごちゃまぜドリンク",rate:1,foodList:[]},{type:"デザート",name:"とくせんリンゴジュース",rate:1.06,foodList:[{name:"とくせんリンゴ",num:8}]},{type:"デザート",name:"モーモーホットミルク",rate:1.06,foodList:[{name:"モーモーミルク",num:7}]},{type:"デザート",name:"クラフトサイコソーダ",rate:1.06,foodList:[{name:"あまいミツ",num:9}]},{type:"デザート",name:"ねがいごとアップルパイ",rate:1.11,foodList:[{name:"モーモーミルク",num:4},{name:"とくせんリンゴ",num:12}]},{type:"デザート",name:"じゅくせいスイートポテト",rate:1.11,foodList:[{name:"モーモーミルク",num:5},{name:"ほっこりポテト",num:9}]},{type:"デザート",name:"ひのこジンジャーティー",rate:1.11,foodList:[{name:"とくせんリンゴ",num:7},{name:"あったかジンジャー",num:9}]},{type:"デザート",name:"マイペースやさいジュース",rate:1.11,foodList:[{name:"とくせんリンゴ",num:7},{name:"あんみんトマト",num:9}]},{type:"デザート",name:"かるわざソイケーキ",rate:1.11,foodList:[{name:"ワカクサ大豆",num:7},{name:"とくせんエッグ",num:8}]},{type:"デザート",name:"はりきりプロテインスムージー",rate:1.17,foodList:[{name:"ワカクサ大豆",num:15},{name:"リラックスカカオ",num:8}]},{type:"デザート",name:"ちからもちソイドーナッツ",rate:1.35,foodList:[{name:"ワカクサ大豆",num:16},{name:"リラックスカカオ",num:7},{name:"ピュアなオイル",num:12}]},{type:"デザート",name:"あまいかおりチョコケーキ",rate:1.17,foodList:[{name:"リラックスカカオ",num:8},{name:"モーモーミルク",num:7},{name:"あまいミツ",num:9}]},{type:"デザート",name:"おおきいマラサダ",rate:1.17,foodList:[{name:"モーモーミルク",num:7},{name:"ピュアなオイル",num:10},{name:"あまいミツ",num:6}]},{type:"デザート",name:"あくまのキッスフルーツオレ",rate:1.25,foodList:[{name:"リラックスカカオ",num:8},{name:"モーモーミルク",num:9},{name:"とくせんリンゴ",num:11},{name:"あまいミツ",num:7}]},{type:"デザート",name:"ふくつのジンジャークッキー",rate:1.25,foodList:[{name:"リラックスカカオ",num:5},{name:"とくせんエッグ",num:4},{name:"あまいミツ",num:14},{name:"あったかジンジャー",num:12}]},{type:"デザート",name:"ネロリのデトックスティー",rate:1.25,foodList:[{name:"とくせんリンゴ",num:15},{name:"あったかジンジャー",num:11},{name:"あじわいキノコ",num:9}]},{type:"デザート",name:"はなびらのまいチョコタルト",rate:1.25,foodList:[{name:"リラックスカカオ",num:11},{name:"とくせんリンゴ",num:11}]},{type:"デザート",name:"プリンのプリンアラモード",rate:1.35,foodList:[{name:"モーモーミルク",num:10},{name:"とくせんリンゴ",num:10},{name:"とくせんエッグ",num:15},{name:"あまいミツ",num:20}]},{type:"デザート",name:"だいばくはつポップコーン",rate:1.35,foodList:[{name:"ワカクサコーン",num:15},{name:"ピュアなオイル",num:14},{name:"モーモーミルク",num:7}]},{type:"デザート",name:"おちゃかいコーンスコーン",rate:1.48,foodList:[{name:"とくせんリンゴ",num:20},{name:"あったかジンジャー",num:20},{name:"ワカクサコーン",num:18},{name:"モーモーミルク",num:9}]},{type:"デザート",name:"フラワーギフトマカロン",rate:1.48,foodList:[{name:"リラックスカカオ",num:25},{name:"とくせんエッグ",num:25},{name:"あまいミツ",num:17},{name:"モーモーミルク",num:10}]}];let jn=M1.reduce((n,e)=>(n[e.name]=e,n),{});class $e{}et($e,"list",[]),et($e,"map",{}),$e.list=M1,$e.map=jn,$e.potMax=57,$e.recipeLvs={1:1,2:1.02,3:1.04,4:1.06,5:1.08,6:1.09,7:1.11,8:1.13,9:1.16,10:1.18,11:1.19,12:1.21,13:1.23,14:1.24,15:1.26,16:1.28,17:1.3,18:1.31,19:1.33,20:1.35,21:1.37,22:1.4,23:1.42,24:1.45,25:1.47,26:1.5,27:1.52,28:1.55,29:1.58,30:1.61,31:1.64,32:1.67,33:1.7,34:1.74,35:1.77,36:1.81,37:1.84,38:1.88,39:1.92,40:1.96,41:2,42:2.04,43:2.08,44:2.13,45:2.17,46:2.22,47:2.27,48:2.32,49:2.37,50:2.42,51:2.48,52:2.53,53:2.59,54:2.65,55:2.71,56:2.77,57:2.83,58:2.9,59:2.97,60:3.03},$e.maxRecipeBonus=Math.max(...Object.values($e.recipeLvs)),$e.getChanceWeekEffect=n=>{if(n==0)return{total:24.6,successProbabilityList:[.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.1,.3,.3,.3]};let e=Math.min(n/21,.7),t=0,s=[1];for(let o=1;o<=21;o++){let r=0;for(let i=1;i<=o;i++){let a=((o<=18?.1:.3)+e*i)*s[o-i];for(let l=o-i+1;l<o;l++)a*=1-s[l];r+=a}t+=r*(o<=18?1:2)+1,s.push(r)}return{total:t,successProbabilityList:s.slice(1)}};var w5="/pokesle-simulator/assets/largeleek-ClGbD41S.png",k5="/pokesle-simulator/assets/tastymushroom-BHOWGoG2.png",C5="/pokesle-simulator/assets/fancyegg-CQimVkp3.png",I5="/pokesle-simulator/assets/softpotato-CU5LKwfH.png",$5="/pokesle-simulator/assets/fancyapple-BsG4qAbs.png",v5="/pokesle-simulator/assets/fieryherb-W5pthftA.png",S5="/pokesle-simulator/assets/beansausage-Dtzqp425.png",N5="/pokesle-simulator/assets/moomoomilk-CZjiQjCc.png",T5="/pokesle-simulator/assets/honey-jxAhZNpE.png",R5="/pokesle-simulator/assets/pureoil-Buma1rb_.png",E5="/pokesle-simulator/assets/warmingginger-DMavfAi5.png",D5="/pokesle-simulator/assets/snoozytomato-DCzjcZT_.png",A5="/pokesle-simulator/assets/soothingcacao-gJJb5DMo.png",L5="/pokesle-simulator/assets/slowpoketail-AyaTRc1N.png",F5="/pokesle-simulator/assets/greengrasssoybeans-II6p4jsu.png",O5="/pokesle-simulator/assets/greengrasscorn-DwiZQEiG.png";const Ci=[{name:"ふといながねぎ",energy:185,img:w5},{name:"あじわいキノコ",energy:167,img:k5},{name:"とくせんエッグ",energy:115,img:C5},{name:"ほっこりポテト",energy:124,img:I5},{name:"とくせんリンゴ",energy:90,img:$5},{name:"げきからハーブ",energy:130,img:v5},{name:"マメミート",energy:103,img:S5},{name:"モーモーミルク",energy:98,img:N5},{name:"あまいミツ",energy:101,img:T5},{name:"ピュアなオイル",energy:121,img:R5},{name:"あったかジンジャー",energy:109,img:E5},{name:"あんみんトマト",energy:110,img:D5},{name:"リラックスカカオ",energy:151,img:A5},{name:"おいしいシッポ",energy:342,img:L5},{name:"ワカクサ大豆",energy:100,img:F5},{name:"ワカクサコーン",energy:140,img:O5}];for(let n of Ci)n.bestTypeRate={カレー:1,サラダ:1,デザート:1};const Xn=Ci.reduce((n,e)=>(n[e.name]=e,n),{});class Oe{}et(Oe,"list",[]),et(Oe,"map",{}),Oe.list=Ci,Oe.map=Xn,Oe.maxEnergy=Math.max(...Ci.map(n=>n.energy)),Oe.averageEnergy=Oe.list.reduce((n,e)=>n+e.energy,0)/Oe.list.length;for(let n of $e.list){for(let{name:e,num:t}of n.foodList)(Xn[e].bestRate==null||Xn[e].bestRate<n.rate)&&(Xn[e].bestRate=n.rate),(Xn[e].bestTypeRate[n.type]==null||Xn[e].bestTypeRate[n.type]<n.rate)&&(Xn[e].bestTypeRate[n.type]=n.rate);n.foodNum=n.foodList.reduce((e,t)=>e+t.num,0),n.rawEnergy=n.foodList.reduce((e,t)=>e+Oe.map[t.name].energy*t.num,0),n.energy=n.rawEnergy*n.rate,n.maxEnergy=n.rawEnergy*n.rate*$e.maxRecipeBonus,n.addEnergy=n.energy-n.rawEnergy,n.maxAddEnergy=n.maxEnergy-n.rawEnergy}$e.maxFoodNum=Math.max(...$e.list.map(n=>n.foodNum)),$e.maxEnergy=Math.max(...$e.list.map(n=>n.maxEnergy)),Oe.averageMaxCookedEnergy=Oe.list.reduce((n,e)=>n+e.energy*e.bestRate*$e.maxRecipeBonus,0)/Oe.list.length,$e.cookingPowerUpEnergy=0;for(let n of["カレー","サラダ","デザート"]){let e=$e.list.filter(r=>r.type==n),s=e.filter(r=>r.foodNum<=$e.potMax).sort((r,i)=>i.maxEnergy-r.maxEnergy)[0],o=e.sort((r,i)=>i.maxEnergy-r.maxEnergy)[0];if(o.name!=s.name){let r=(o.maxEnergy-s.maxEnergy)/(o.foodNum-s.foodNum);$e.cookingPowerUpEnergy=Math.max($e.cookingPowerUpEnergy,r)}for(let r of Oe.list)r[`bestTypeRate_${n}`]=r.bestTypeRate[n],r[`maxEnergy_${n}`]=r.energy*r.bestTypeRate[n]*$e.maxRecipeBonus}const Wd=[{name:"さみしがり",good:"手伝いスピード",weak:"げんき回復量",goodShort:"手",weakShort:"元"},{name:"いじっぱり",good:"手伝いスピード",weak:"食材お手伝い確率",goodShort:"手",weakShort:"食"},{name:"やんちゃ",good:"手伝いスピード",weak:"メインスキル発生確率",goodShort:"手",weakShort:"ス"},{name:"ゆうかん",good:"手伝いスピード",weak:"EXP獲得量",goodShort:"手",weakShort:"EX"},{name:"ずぶとい",good:"げんき回復量",weak:"手伝いスピード",goodShort:"元",weakShort:"手"},{name:"わんぱく",good:"げんき回復量",weak:"食材お手伝い確率",goodShort:"元",weakShort:"食"},{name:"のうてんき",good:"げんき回復量",weak:"メインスキル発生確率",goodShort:"元",weakShort:"ス"},{name:"のんき",good:"げんき回復量",weak:"EXP獲得量",goodShort:"元",weakShort:"EX"},{name:"ひかえめ",good:"食材お手伝い確率",weak:"手伝いスピード",goodShort:"食",weakShort:"手"},{name:"おっとり",good:"食材お手伝い確率",weak:"げんき回復量",goodShort:"食",weakShort:"元"},{name:"うっかりや",good:"食材お手伝い確率",weak:"メインスキル発生確率",goodShort:"食",weakShort:"ス"},{name:"れいせい",good:"食材お手伝い確率",weak:"EXP獲得量",goodShort:"食",weakShort:"EX"},{name:"おだやか",good:"メインスキル発生確率",weak:"手伝いスピード",goodShort:"ス",weakShort:"手"},{name:"おとなしい",good:"メインスキル発生確率",weak:"げんき回復量",goodShort:"ス",weakShort:"元"},{name:"しんちょう",good:"メインスキル発生確率",weak:"食材お手伝い確率",goodShort:"ス",weakShort:"食"},{name:"なまいき",good:"メインスキル発生確率",weak:"EXP獲得量",goodShort:"ス",weakShort:"EX"},{name:"おくびょう",good:"EXP獲得量",weak:"手伝いスピード",goodShort:"EX",weakShort:"手"},{name:"せっかち",good:"EXP獲得量",weak:"げんき回復量",goodShort:"EX",weakShort:"元"},{name:"ようき",good:"EXP獲得量",weak:"食材お手伝い確率",goodShort:"EX",weakShort:"食"},{name:"むじゃき",good:"EXP獲得量",weak:"メインスキル発生確率",goodShort:"EX",weakShort:"ス"},{name:"てれや"},{name:"がんばりや"},{name:"すなお"},{name:"きまぐれ"},{name:"まじめ"}];class zs{}et(zs,"list",[]),et(zs,"map",{}),zs.list=Wd,zs.map=Wd.reduce((n,e)=>(n[e.name]=e,n),{});const Ii=[{id:1,name:"きのみの数S",rarity:3,short:"きのみS",katakana:"キノミノカズS",inputSort:0,next:null},{id:2,name:"げんき回復ボーナス",rarity:3,short:"げんボ",katakana:"ゲンキカイフクボーナス",inputSort:0,next:null},{id:3,name:"ゆめのかけらボーナス",rarity:3,short:"ゆめボ",katakana:"ユメノカケラボーナス",inputSort:0,next:null},{id:4,name:"リサーチEXPボーナス",rarity:3,short:"リサボ",katakana:"リサーチEXPボーナス",inputSort:0,next:null},{id:5,name:"睡眠EXPボーナス",rarity:3,short:"睡眠ボ",katakana:"スイミンEXPボーナス",inputSort:0,next:null},{id:6,name:"おてつだいボーナス",rarity:3,short:"おてボ",katakana:"オテツダイボーナス",inputSort:0,next:null},{id:7,name:"スキルレベルアップM",rarity:3,short:"スキLvM",katakana:"スキルレベルアップM",inputSort:2,next:null},{id:8,name:"スキル確率アップM",rarity:2,short:"スキ確M",katakana:"スキルカクリツアップM",inputSort:1,next:null},{id:9,name:"食材確率アップM",rarity:2,short:"食確M",katakana:"ショクザイカクリツアップM",inputSort:0,next:null},{id:10,name:"スキルレベルアップS",rarity:2,short:"スキLvS",katakana:"スキルレベルアップS",inputSort:2,next:"スキルレベルアップM"},{id:11,name:"おてつだいスピードM",rarity:2,short:"おてｽﾋﾟM",katakana:"オテツダイスピードM",inputSort:0,next:null},{id:12,name:"最大所持数アップL",rarity:2,short:"所持L",katakana:"サイダイショジスウアップL",inputSort:0,next:null},{id:13,name:"最大所持数アップM",rarity:2,short:"所持M",katakana:"サイダイショジスウアップM",inputSort:0,next:"最大所持数アップL"},{id:14,name:"スキル確率アップS",rarity:1,short:"スキ確S",katakana:"スキルカクリツアップS",inputSort:1,next:"スキル確率アップM"},{id:15,name:"食材確率アップS",rarity:1,short:"食確S",katakana:"ショクザイカクリツアップS",inputSort:0,next:"食材確率アップM"},{id:16,name:"おてつだいスピードS",rarity:1,short:"おてｽﾋﾟS",katakana:"オテツダイスピードS",inputSort:0,next:"おてつだいスピードM"},{id:17,name:"最大所持数アップS",rarity:1,short:"所持S",katakana:"サイダイショジスウアップS",inputSort:0,next:"最大所持数アップM"}];let _5=Ii.reduce((n,e)=>(n[e.name]=e,n),{});class P1{}et(P1,"list",[]),et(P1,"map",{}),P1.list=Ii,P1.listForInput=Ii.toSorted((n,e)=>n.inputSort-e.inputSort),P1.map=_5,P1.idMap=Ii.reduce((n,e)=>(n[e.id]=e,n),{}),P1.useSilverSeed=n=>{let e=n.join("/");return e.includes("最大所持数アップM")&&!e.includes("最大所持数アップL")&&(e=e.replace("最大所持数アップM","最大所持数アップL")),e.includes("最大所持数アップS")&&!e.includes("最大所持数アップL")&&(e=e.replace("最大所持数アップS","最大所持数アップL")),e.includes("最大所持数アップS")&&!e.includes("最大所持数アップM")&&(e=e.replace("最大所持数アップS","最大所持数アップM")),e.includes("スキルレベルアップS")&&!e.includes("スキルレベルアップM")&&(e=e.replace("スキルレベルアップS","スキルレベルアップM")),e.includes("スキル確率アップS")&&!e.includes("スキル確率アップM")&&(e=e.replace("スキル確率アップS","スキル確率アップM")),e.includes("食材確率アップS")&&!e.includes("食材確率アップM")&&(e=e.replace("食材確率アップS","食材確率アップM")),e.includes("おてつだいスピードS")&&!e.includes("おてつだいスピードM")&&(e=e.replace("おてつだいスピードS","おてつだいスピードM")),e.split("/")};const M5={n1:[[1,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[11,1],[12,1],[13,1],[14,1],[15,1],[16,1],[17,1]],n2:[[1,2,1],[1,3,1],[1,4,1],[1,5,1],[6,1,1],[1,7,1],[1,8,1],[1,9,1],[1,10,1],[11,1,1],[1,12,1],[1,13,1],[1,14,1],[1,15,1],[16,1,1],[1,17,1],[2,3,1],[2,4,1],[2,5,1],[6,2,1],[2,7,1],[2,8,1],[2,9,1],[2,10,1],[11,2,1],[2,12,1],[2,13,1],[2,14,1],[2,15,1],[16,2,1],[2,17,1],[3,4,1],[3,5,1],[6,3,1],[3,7,1],[3,8,1],[3,9,1],[3,10,1],[11,3,1],[3,12,1],[3,13,1],[3,14,1],[3,15,1],[16,3,1],[3,17,1],[4,5,1],[6,4,1],[7,4,1],[8,4,1],[4,9,1],[10,4,1],[11,4,1],[4,12,1],[4,13,1],[14,4,1],[4,15,1],[16,4,1],[4,17,1],[6,5,1],[7,5,1],[8,5,1],[5,9,1],[10,5,1],[11,5,1],[12,5,1],[13,5,1],[14,5,1],[5,15,1],[16,5,1],[17,5,1],[6,7,1],[6,8,1],[6,9,1],[6,10,1],[11,6,1],[6,12,1],[6,13,1],[6,14,1],[6,15,1],[16,6,1],[6,17,1],[7,8,1],[7,9,1],[7,10,1],[11,7,1],[7,12,1],[7,13,1],[7,14,1],[7,15,1],[16,7,1],[7,17,1],[8,9,1],[10,8,1],[11,8,1],[8,12,1],[8,13,1],[8,14,1],[8,15,1],[16,8,1],[8,17,1],[10,9,1],[11,9,1],[12,9,1],[13,9,1],[14,9,1],[9,15,1],[16,9,1],[17,9,1],[11,10,1],[10,12,1],[10,13,1],[10,14,1],[10,15,1],[16,10,1],[10,17,1],[11,12,1],[11,13,1],[11,14,1],[11,15,1],[11,16,1],[11,17,1],[12,13,1],[14,12,1],[12,15,1],[16,12,1],[12,17,1],[14,13,1],[13,15,1],[16,13,1],[13,17,1],[14,15,1],[16,14,1],[14,17,1],[16,15,1],[17,15,1],[16,17,1]],n3:[[1,2,3,1],[1,2,4,1],[1,2,5,1],[6,1,2,1],[1,2,7,1],[1,2,8,1],[1,2,9,1],[1,2,10,1],[11,1,2,1],[1,2,12,1],[1,2,13,1],[1,2,14,1],[1,2,15,1],[16,1,2,1],[1,2,17,1],[1,3,4,1],[1,3,5,1],[6,1,3,1],[1,3,7,1],[1,3,8,1],[1,3,9,1],[1,3,10,1],[11,1,3,1],[1,3,12,1],[1,3,13,1],[1,3,14,1],[1,3,15,1],[16,1,3,1],[1,3,17,1],[1,4,5,1],[6,1,4,1],[1,7,4,1],[1,8,4,1],[1,4,9,1],[1,10,4,1],[11,1,4,1],[1,4,12,1],[1,4,13,1],[1,14,4,1],[1,4,15,1],[16,1,4,1],[1,4,17,1],[6,1,5,1],[1,7,5,1],[1,8,5,1],[1,5,9,1],[1,10,5,1],[11,1,5,1],[1,12,5,1],[1,13,5,1],[1,14,5,1],[1,5,15,1],[16,1,5,1],[1,17,5,1],[6,1,7,1],[6,1,8,1],[6,1,9,1],[6,1,10,1],[11,6,1,1],[6,1,12,1],[6,1,13,1],[6,1,14,1],[6,1,15,1],[16,6,1,1],[6,1,17,1],[1,7,8,1],[1,7,9,1],[1,7,10,1],[11,1,7,1],[1,7,12,1],[1,7,13,1],[1,7,14,1],[1,7,15,1],[16,1,7,1],[1,7,17,1],[1,8,9,1],[1,10,8,1],[11,1,8,1],[1,8,12,1],[1,8,13,1],[1,8,14,1],[1,8,15,1],[16,1,8,1],[1,8,17,1],[1,10,9,1],[11,1,9,1],[1,12,9,1],[1,13,9,1],[1,14,9,1],[1,9,15,1],[16,1,9,1],[1,17,9,1],[11,1,10,1],[1,10,12,1],[1,10,13,1],[1,10,14,1],[1,10,15,1],[16,1,10,1],[1,10,17,1],[11,1,12,1],[11,1,13,1],[11,1,14,1],[11,1,15,1],[11,16,1,1],[11,1,17,1],[1,12,13,1],[1,14,12,1],[1,12,15,1],[16,1,12,1],[1,12,17,1],[1,14,13,1],[1,13,15,1],[16,1,13,1],[1,13,17,1],[1,14,15,1],[16,1,14,1],[1,14,17,1],[16,1,15,1],[1,17,15,1],[16,1,17,1],[2,3,4,1],[2,3,5,1],[6,2,3,1],[2,3,7,1],[2,3,8,1],[2,3,9,1],[2,3,10,1],[11,2,3,1],[2,3,12,1],[2,3,13,1],[2,3,14,1],[2,3,15,1],[16,2,3,1],[2,3,17,1],[2,4,5,1],[6,2,4,1],[2,7,4,1],[2,8,4,1],[2,4,9,1],[2,10,4,1],[11,2,4,1],[2,4,12,1],[2,4,13,1],[2,14,4,1],[2,4,15,1],[16,2,4,1],[2,4,17,1],[6,2,5,1],[2,7,5,1],[2,8,5,1],[2,5,9,1],[2,10,5,1],[11,2,5,1],[2,12,5,1],[2,13,5,1],[2,14,5,1],[2,5,15,1],[16,2,5,1],[2,17,5,1],[6,2,7,1],[6,2,8,1],[6,2,9,1],[6,2,10,1],[11,6,2,1],[6,2,12,1],[6,2,13,1],[6,2,14,1],[6,2,15,1],[16,6,2,1],[6,2,17,1],[2,7,8,1],[2,7,9,1],[2,7,10,1],[11,2,7,1],[2,7,12,1],[2,7,13,1],[2,7,14,1],[2,7,15,1],[16,2,7,1],[2,7,17,1],[2,8,9,1],[2,10,8,1],[11,2,8,1],[2,8,12,1],[2,8,13,1],[2,8,14,1],[2,8,15,1],[16,2,8,1],[2,8,17,1],[2,10,9,1],[11,2,9,1],[2,12,9,1],[2,13,9,1],[2,14,9,1],[2,9,15,1],[16,2,9,1],[2,17,9,1],[11,2,10,1],[2,10,12,1],[2,10,13,1],[2,10,14,1],[2,10,15,1],[16,2,10,1],[2,10,17,1],[11,2,12,1],[11,2,13,1],[11,2,14,1],[11,2,15,1],[11,16,2,1],[11,2,17,1],[2,12,13,1],[2,14,12,1],[2,12,15,1],[16,2,12,1],[2,12,17,1],[2,14,13,1],[2,13,15,1],[16,2,13,1],[2,13,17,1],[2,14,15,1],[16,2,14,1],[2,14,17,1],[16,2,15,1],[2,17,15,1],[16,2,17,1],[3,4,5,1],[6,3,4,1],[3,7,4,1],[3,8,4,1],[3,4,9,1],[3,10,4,1],[11,3,4,1],[3,4,12,1],[3,4,13,1],[3,14,4,1],[3,4,15,1],[16,3,4,1],[3,4,17,1],[6,3,5,1],[3,7,5,1],[3,8,5,1],[3,5,9,1],[3,10,5,1],[11,3,5,1],[3,12,5,1],[3,13,5,1],[3,14,5,1],[3,5,15,1],[16,3,5,1],[3,17,5,1],[6,3,7,1],[6,3,8,1],[6,3,9,1],[6,3,10,1],[11,6,3,1],[6,3,12,1],[6,3,13,1],[6,3,14,1],[6,3,15,1],[16,6,3,1],[6,3,17,1],[3,7,8,1],[3,7,9,1],[3,7,10,1],[11,3,7,1],[3,7,12,1],[3,7,13,1],[3,7,14,1],[3,7,15,1],[16,3,7,1],[3,7,17,1],[3,8,9,1],[3,10,8,1],[11,3,8,1],[3,8,12,1],[3,8,13,1],[3,8,14,1],[3,8,15,1],[16,3,8,1],[3,8,17,1],[3,10,9,1],[11,3,9,1],[3,12,9,1],[3,13,9,1],[3,14,9,1],[3,9,15,1],[16,3,9,1],[3,17,9,1],[11,3,10,1],[3,10,12,1],[3,10,13,1],[3,10,14,1],[3,10,15,1],[16,3,10,1],[3,10,17,1],[11,3,12,1],[11,3,13,1],[11,3,14,1],[11,3,15,1],[11,16,3,1],[11,3,17,1],[3,12,13,1],[3,14,12,1],[3,12,15,1],[16,3,12,1],[3,12,17,1],[3,14,13,1],[3,13,15,1],[16,3,13,1],[3,13,17,1],[3,14,15,1],[16,3,14,1],[3,14,17,1],[16,3,15,1],[3,17,15,1],[16,3,17,1],[6,4,5,1],[7,4,5,1],[8,4,5,1],[4,5,9,1],[10,4,5,1],[11,4,5,1],[4,12,5,1],[4,13,5,1],[14,4,5,1],[4,5,15,1],[16,4,5,1],[4,17,5,1],[6,7,4,1],[6,8,4,1],[6,4,9,1],[6,10,4,1],[11,6,4,1],[6,4,12,1],[6,4,13,1],[6,14,4,1],[6,4,15,1],[16,6,4,1],[6,4,17,1],[7,8,4,1],[7,4,9,1],[7,10,4,1],[11,7,4,1],[7,4,12,1],[7,4,13,1],[7,14,4,1],[7,4,15,1],[16,7,4,1],[7,4,17,1],[8,4,9,1],[10,8,4,1],[11,8,4,1],[8,4,12,1],[8,4,13,1],[8,14,4,1],[8,4,15,1],[16,8,4,1],[8,4,17,1],[10,4,9,1],[11,4,9,1],[4,12,9,1],[4,13,9,1],[14,4,9,1],[4,9,15,1],[16,4,9,1],[4,17,9,1],[11,10,4,1],[10,4,12,1],[10,4,13,1],[10,14,4,1],[10,4,15,1],[16,10,4,1],[10,4,17,1],[11,4,12,1],[11,4,13,1],[11,14,4,1],[11,4,15,1],[11,16,4,1],[11,4,17,1],[4,12,13,1],[14,4,12,1],[4,12,15,1],[16,4,12,1],[4,12,17,1],[14,4,13,1],[4,13,15,1],[16,4,13,1],[4,13,17,1],[14,4,15,1],[16,14,4,1],[14,4,17,1],[16,4,15,1],[4,17,15,1],[16,4,17,1],[6,7,5,1],[6,8,5,1],[6,5,9,1],[6,10,5,1],[11,6,5,1],[6,12,5,1],[6,13,5,1],[6,14,5,1],[6,5,15,1],[16,6,5,1],[6,17,5,1],[7,8,5,1],[7,5,9,1],[7,10,5,1],[11,7,5,1],[7,12,5,1],[7,13,5,1],[7,14,5,1],[7,5,15,1],[16,7,5,1],[7,17,5,1],[8,5,9,1],[10,8,5,1],[11,8,5,1],[8,12,5,1],[8,13,5,1],[8,14,5,1],[8,5,15,1],[16,8,5,1],[8,17,5,1],[10,5,9,1],[11,5,9,1],[12,5,9,1],[13,5,9,1],[14,5,9,1],[5,9,15,1],[16,5,9,1],[17,5,9,1],[11,10,5,1],[10,12,5,1],[10,13,5,1],[10,14,5,1],[10,5,15,1],[16,10,5,1],[10,17,5,1],[11,12,5,1],[11,13,5,1],[11,14,5,1],[11,5,15,1],[11,16,5,1],[11,17,5,1],[12,13,5,1],[14,12,5,1],[12,5,15,1],[16,12,5,1],[12,17,5,1],[14,13,5,1],[13,5,15,1],[16,13,5,1],[13,17,5,1],[14,5,15,1],[16,14,5,1],[14,17,5,1],[16,5,15,1],[17,5,15,1],[16,17,5,1],[6,7,8,1],[6,7,9,1],[6,7,10,1],[11,6,7,1],[6,7,12,1],[6,7,13,1],[6,7,14,1],[6,7,15,1],[16,6,7,1],[6,7,17,1],[6,8,9,1],[6,10,8,1],[11,6,8,1],[6,8,12,1],[6,8,13,1],[6,8,14,1],[6,8,15,1],[16,6,8,1],[6,8,17,1],[6,10,9,1],[11,6,9,1],[6,12,9,1],[6,13,9,1],[6,14,9,1],[6,9,15,1],[16,6,9,1],[6,17,9,1],[11,6,10,1],[6,10,12,1],[6,10,13,1],[6,10,14,1],[6,10,15,1],[16,6,10,1],[6,10,17,1],[11,6,12,1],[11,6,13,1],[11,6,14,1],[11,6,15,1],[11,16,6,1],[11,6,17,1],[6,12,13,1],[6,14,12,1],[6,12,15,1],[16,6,12,1],[6,12,17,1],[6,14,13,1],[6,13,15,1],[16,6,13,1],[6,13,17,1],[6,14,15,1],[16,6,14,1],[6,14,17,1],[16,6,15,1],[6,17,15,1],[16,6,17,1],[7,8,9,1],[7,10,8,1],[11,7,8,1],[7,8,12,1],[7,8,13,1],[7,8,14,1],[7,8,15,1],[16,7,8,1],[7,8,17,1],[7,10,9,1],[11,7,9,1],[7,12,9,1],[7,13,9,1],[7,14,9,1],[7,9,15,1],[16,7,9,1],[7,17,9,1],[11,7,10,1],[7,10,12,1],[7,10,13,1],[7,10,14,1],[7,10,15,1],[16,7,10,1],[7,10,17,1],[11,7,12,1],[11,7,13,1],[11,7,14,1],[11,7,15,1],[11,16,7,1],[11,7,17,1],[7,12,13,1],[7,14,12,1],[7,12,15,1],[16,7,12,1],[7,12,17,1],[7,14,13,1],[7,13,15,1],[16,7,13,1],[7,13,17,1],[7,14,15,1],[16,7,14,1],[7,14,17,1],[16,7,15,1],[7,17,15,1],[16,7,17,1],[10,8,9,1],[11,8,9,1],[8,12,9,1],[8,13,9,1],[8,14,9,1],[8,9,15,1],[16,8,9,1],[8,17,9,1],[11,10,8,1],[10,8,12,1],[10,8,13,1],[10,8,14,1],[10,8,15,1],[16,10,8,1],[10,8,17,1],[11,8,12,1],[11,8,13,1],[11,8,14,1],[11,8,15,1],[11,16,8,1],[11,8,17,1],[8,12,13,1],[8,14,12,1],[8,12,15,1],[16,8,12,1],[8,12,17,1],[8,14,13,1],[8,13,15,1],[16,8,13,1],[8,13,17,1],[8,14,15,1],[16,8,14,1],[8,14,17,1],[16,8,15,1],[8,17,15,1],[16,8,17,1],[11,10,9,1],[10,12,9,1],[10,13,9,1],[10,14,9,1],[10,9,15,1],[16,10,9,1],[10,17,9,1],[11,12,9,1],[11,13,9,1],[11,14,9,1],[11,9,15,1],[11,16,9,1],[11,17,9,1],[12,13,9,1],[14,12,9,1],[12,9,15,1],[16,12,9,1],[12,17,9,1],[14,13,9,1],[13,9,15,1],[16,13,9,1],[13,17,9,1],[14,9,15,1],[16,14,9,1],[14,17,9,1],[16,9,15,1],[17,9,15,1],[16,17,9,1],[11,10,12,1],[11,10,13,1],[11,10,14,1],[11,10,15,1],[11,16,10,1],[11,10,17,1],[10,12,13,1],[10,14,12,1],[10,12,15,1],[16,10,12,1],[10,12,17,1],[10,14,13,1],[10,13,15,1],[16,10,13,1],[10,13,17,1],[10,14,15,1],[16,10,14,1],[10,14,17,1],[16,10,15,1],[10,17,15,1],[16,10,17,1],[11,12,13,1],[11,14,12,1],[11,12,15,1],[11,16,12,1],[11,12,17,1],[11,14,13,1],[11,13,15,1],[11,16,13,1],[11,13,17,1],[11,14,15,1],[11,16,14,1],[11,14,17,1],[11,16,15,1],[11,17,15,1],[11,16,17,1],[14,12,13,1],[12,13,15,1],[16,12,13,1],[12,13,17,1],[14,12,15,1],[16,14,12,1],[14,12,17,1],[16,12,15,1],[12,17,15,1],[16,12,17,1],[14,13,15,1],[16,14,13,1],[14,13,17,1],[16,13,15,1],[13,17,15,1],[16,13,17,1],[16,14,15,1],[14,17,15,1],[16,14,17,1],[16,17,15,1]],n4:[[1,2,3,4,1],[1,2,3,5,1],[6,1,2,3,1],[1,2,3,7,1],[1,2,3,8,1],[1,2,3,9,1],[1,2,3,10,1],[11,1,2,3,1],[1,2,3,12,1],[1,2,3,13,1],[1,2,3,14,1],[1,2,3,15,1],[16,1,2,3,1],[1,2,3,17,1],[1,2,4,5,1],[6,1,2,4,1],[1,2,7,4,1],[1,2,8,4,1],[1,2,4,9,1],[1,2,10,4,1],[11,1,2,4,1],[1,2,4,12,1],[1,2,4,13,1],[1,2,14,4,1],[1,2,4,15,1],[16,1,2,4,1],[1,2,4,17,1],[6,1,2,5,1],[1,2,7,5,1],[1,2,8,5,1],[1,2,5,9,1],[1,2,10,5,1],[11,1,2,5,1],[1,2,12,5,1],[1,2,13,5,1],[1,2,14,5,1],[1,2,5,15,1],[16,1,2,5,1],[1,2,17,5,1],[6,1,2,7,1],[6,1,2,8,1],[6,1,2,9,1],[6,1,2,10,1],[11,6,1,2,1],[6,1,2,12,1],[6,1,2,13,1],[6,1,2,14,1],[6,1,2,15,1],[16,6,1,2,1],[6,1,2,17,1],[1,2,7,8,1],[1,2,7,9,1],[1,2,7,10,1],[11,1,2,7,1],[1,2,7,12,1],[1,2,7,13,1],[1,2,7,14,1],[1,2,7,15,1],[16,1,2,7,1],[1,2,7,17,1],[1,2,8,9,1],[1,2,10,8,1],[11,1,2,8,1],[1,2,8,12,1],[1,2,8,13,1],[1,2,8,14,1],[1,2,8,15,1],[16,1,2,8,1],[1,2,8,17,1],[1,2,10,9,1],[11,1,2,9,1],[1,2,12,9,1],[1,2,13,9,1],[1,2,14,9,1],[1,2,9,15,1],[16,1,2,9,1],[1,2,17,9,1],[11,1,2,10,1],[1,2,10,12,1],[1,2,10,13,1],[1,2,10,14,1],[1,2,10,15,1],[16,1,2,10,1],[1,2,10,17,1],[11,1,2,12,1],[11,1,2,13,1],[11,1,2,14,1],[11,1,2,15,1],[11,16,1,2,1],[11,1,2,17,1],[1,2,12,13,1],[1,2,14,12,1],[1,2,12,15,1],[16,1,2,12,1],[1,2,12,17,1],[1,2,14,13,1],[1,2,13,15,1],[16,1,2,13,1],[1,2,13,17,1],[1,2,14,15,1],[16,1,2,14,1],[1,2,14,17,1],[16,1,2,15,1],[1,2,17,15,1],[16,1,2,17,1],[1,3,4,5,1],[6,1,3,4,1],[1,3,7,4,1],[1,3,8,4,1],[1,3,4,9,1],[1,3,10,4,1],[11,1,3,4,1],[1,3,4,12,1],[1,3,4,13,1],[1,3,14,4,1],[1,3,4,15,1],[16,1,3,4,1],[1,3,4,17,1],[6,1,3,5,1],[1,3,7,5,1],[1,3,8,5,1],[1,3,5,9,1],[1,3,10,5,1],[11,1,3,5,1],[1,3,12,5,1],[1,3,13,5,1],[1,3,14,5,1],[1,3,5,15,1],[16,1,3,5,1],[1,3,17,5,1],[6,1,3,7,1],[6,1,3,8,1],[6,1,3,9,1],[6,1,3,10,1],[11,6,1,3,1],[6,1,3,12,1],[6,1,3,13,1],[6,1,3,14,1],[6,1,3,15,1],[16,6,1,3,1],[6,1,3,17,1],[1,3,7,8,1],[1,3,7,9,1],[1,3,7,10,1],[11,1,3,7,1],[1,3,7,12,1],[1,3,7,13,1],[1,3,7,14,1],[1,3,7,15,1],[16,1,3,7,1],[1,3,7,17,1],[1,3,8,9,1],[1,3,10,8,1],[11,1,3,8,1],[1,3,8,12,1],[1,3,8,13,1],[1,3,8,14,1],[1,3,8,15,1],[16,1,3,8,1],[1,3,8,17,1],[1,3,10,9,1],[11,1,3,9,1],[1,3,12,9,1],[1,3,13,9,1],[1,3,14,9,1],[1,3,9,15,1],[16,1,3,9,1],[1,3,17,9,1],[11,1,3,10,1],[1,3,10,12,1],[1,3,10,13,1],[1,3,10,14,1],[1,3,10,15,1],[16,1,3,10,1],[1,3,10,17,1],[11,1,3,12,1],[11,1,3,13,1],[11,1,3,14,1],[11,1,3,15,1],[11,16,1,3,1],[11,1,3,17,1],[1,3,12,13,1],[1,3,14,12,1],[1,3,12,15,1],[16,1,3,12,1],[1,3,12,17,1],[1,3,14,13,1],[1,3,13,15,1],[16,1,3,13,1],[1,3,13,17,1],[1,3,14,15,1],[16,1,3,14,1],[1,3,14,17,1],[16,1,3,15,1],[1,3,17,15,1],[16,1,3,17,1],[6,1,4,5,1],[1,7,4,5,1],[1,8,4,5,1],[1,4,5,9,1],[1,10,4,5,1],[11,1,4,5,1],[1,4,12,5,1],[1,4,13,5,1],[1,14,4,5,1],[1,4,5,15,1],[16,1,4,5,1],[1,4,17,5,1],[6,1,7,4,1],[6,1,8,4,1],[6,1,4,9,1],[6,1,10,4,1],[11,6,1,4,1],[6,1,4,12,1],[6,1,4,13,1],[6,1,14,4,1],[6,1,4,15,1],[16,6,1,4,1],[6,1,4,17,1],[1,7,8,4,1],[1,7,4,9,1],[1,7,10,4,1],[11,1,7,4,1],[1,7,4,12,1],[1,7,4,13,1],[1,7,14,4,1],[1,7,4,15,1],[16,1,7,4,1],[1,7,4,17,1],[1,8,4,9,1],[1,10,8,4,1],[11,1,8,4,1],[1,8,4,12,1],[1,8,4,13,1],[1,8,14,4,1],[1,8,4,15,1],[16,1,8,4,1],[1,8,4,17,1],[1,10,4,9,1],[11,1,4,9,1],[1,4,12,9,1],[1,4,13,9,1],[1,14,4,9,1],[1,4,9,15,1],[16,1,4,9,1],[1,4,17,9,1],[11,1,10,4,1],[1,10,4,12,1],[1,10,4,13,1],[1,10,14,4,1],[1,10,4,15,1],[16,1,10,4,1],[1,10,4,17,1],[11,1,4,12,1],[11,1,4,13,1],[11,1,14,4,1],[11,1,4,15,1],[11,16,1,4,1],[11,1,4,17,1],[1,4,12,13,1],[1,14,4,12,1],[1,4,12,15,1],[16,1,4,12,1],[1,4,12,17,1],[1,14,4,13,1],[1,4,13,15,1],[16,1,4,13,1],[1,4,13,17,1],[1,14,4,15,1],[16,1,14,4,1],[1,14,4,17,1],[16,1,4,15,1],[1,4,17,15,1],[16,1,4,17,1],[6,1,7,5,1],[6,1,8,5,1],[6,1,5,9,1],[6,1,10,5,1],[11,6,1,5,1],[6,1,12,5,1],[6,1,13,5,1],[6,1,14,5,1],[6,1,5,15,1],[16,6,1,5,1],[6,1,17,5,1],[1,7,8,5,1],[1,7,5,9,1],[1,7,10,5,1],[11,1,7,5,1],[1,7,12,5,1],[1,7,13,5,1],[1,7,14,5,1],[1,7,5,15,1],[16,1,7,5,1],[1,7,17,5,1],[1,8,5,9,1],[1,10,8,5,1],[11,1,8,5,1],[1,8,12,5,1],[1,8,13,5,1],[1,8,14,5,1],[1,8,5,15,1],[16,1,8,5,1],[1,8,17,5,1],[1,10,5,9,1],[11,1,5,9,1],[1,12,5,9,1],[1,13,5,9,1],[1,14,5,9,1],[1,5,9,15,1],[16,1,5,9,1],[1,17,5,9,1],[11,1,10,5,1],[1,10,12,5,1],[1,10,13,5,1],[1,10,14,5,1],[1,10,5,15,1],[16,1,10,5,1],[1,10,17,5,1],[11,1,12,5,1],[11,1,13,5,1],[11,1,14,5,1],[11,1,5,15,1],[11,16,1,5,1],[11,1,17,5,1],[1,12,13,5,1],[1,14,12,5,1],[1,12,5,15,1],[16,1,12,5,1],[1,12,17,5,1],[1,14,13,5,1],[1,13,5,15,1],[16,1,13,5,1],[1,13,17,5,1],[1,14,5,15,1],[16,1,14,5,1],[1,14,17,5,1],[16,1,5,15,1],[1,17,5,15,1],[16,1,17,5,1],[6,1,7,8,1],[6,1,7,9,1],[6,1,7,10,1],[11,6,1,7,1],[6,1,7,12,1],[6,1,7,13,1],[6,1,7,14,1],[6,1,7,15,1],[16,6,1,7,1],[6,1,7,17,1],[6,1,8,9,1],[6,1,10,8,1],[11,6,1,8,1],[6,1,8,12,1],[6,1,8,13,1],[6,1,8,14,1],[6,1,8,15,1],[16,6,1,8,1],[6,1,8,17,1],[6,1,10,9,1],[11,6,1,9,1],[6,1,12,9,1],[6,1,13,9,1],[6,1,14,9,1],[6,1,9,15,1],[16,6,1,9,1],[6,1,17,9,1],[11,6,1,10,1],[6,1,10,12,1],[6,1,10,13,1],[6,1,10,14,1],[6,1,10,15,1],[16,6,1,10,1],[6,1,10,17,1],[11,6,1,12,1],[11,6,1,13,1],[11,6,1,14,1],[11,6,1,15,1],[11,16,6,1,1],[11,6,1,17,1],[6,1,12,13,1],[6,1,14,12,1],[6,1,12,15,1],[16,6,1,12,1],[6,1,12,17,1],[6,1,14,13,1],[6,1,13,15,1],[16,6,1,13,1],[6,1,13,17,1],[6,1,14,15,1],[16,6,1,14,1],[6,1,14,17,1],[16,6,1,15,1],[6,1,17,15,1],[16,6,1,17,1],[1,7,8,9,1],[1,7,10,8,1],[11,1,7,8,1],[1,7,8,12,1],[1,7,8,13,1],[1,7,8,14,1],[1,7,8,15,1],[16,1,7,8,1],[1,7,8,17,1],[1,7,10,9,1],[11,1,7,9,1],[1,7,12,9,1],[1,7,13,9,1],[1,7,14,9,1],[1,7,9,15,1],[16,1,7,9,1],[1,7,17,9,1],[11,1,7,10,1],[1,7,10,12,1],[1,7,10,13,1],[1,7,10,14,1],[1,7,10,15,1],[16,1,7,10,1],[1,7,10,17,1],[11,1,7,12,1],[11,1,7,13,1],[11,1,7,14,1],[11,1,7,15,1],[11,16,1,7,1],[11,1,7,17,1],[1,7,12,13,1],[1,7,14,12,1],[1,7,12,15,1],[16,1,7,12,1],[1,7,12,17,1],[1,7,14,13,1],[1,7,13,15,1],[16,1,7,13,1],[1,7,13,17,1],[1,7,14,15,1],[16,1,7,14,1],[1,7,14,17,1],[16,1,7,15,1],[1,7,17,15,1],[16,1,7,17,1],[1,10,8,9,1],[11,1,8,9,1],[1,8,12,9,1],[1,8,13,9,1],[1,8,14,9,1],[1,8,9,15,1],[16,1,8,9,1],[1,8,17,9,1],[11,1,10,8,1],[1,10,8,12,1],[1,10,8,13,1],[1,10,8,14,1],[1,10,8,15,1],[16,1,10,8,1],[1,10,8,17,1],[11,1,8,12,1],[11,1,8,13,1],[11,1,8,14,1],[11,1,8,15,1],[11,16,1,8,1],[11,1,8,17,1],[1,8,12,13,1],[1,8,14,12,1],[1,8,12,15,1],[16,1,8,12,1],[1,8,12,17,1],[1,8,14,13,1],[1,8,13,15,1],[16,1,8,13,1],[1,8,13,17,1],[1,8,14,15,1],[16,1,8,14,1],[1,8,14,17,1],[16,1,8,15,1],[1,8,17,15,1],[16,1,8,17,1],[11,1,10,9,1],[1,10,12,9,1],[1,10,13,9,1],[1,10,14,9,1],[1,10,9,15,1],[16,1,10,9,1],[1,10,17,9,1],[11,1,12,9,1],[11,1,13,9,1],[11,1,14,9,1],[11,1,9,15,1],[11,16,1,9,1],[11,1,17,9,1],[1,12,13,9,1],[1,14,12,9,1],[1,12,9,15,1],[16,1,12,9,1],[1,12,17,9,1],[1,14,13,9,1],[1,13,9,15,1],[16,1,13,9,1],[1,13,17,9,1],[1,14,9,15,1],[16,1,14,9,1],[1,14,17,9,1],[16,1,9,15,1],[1,17,9,15,1],[16,1,17,9,1],[11,1,10,12,1],[11,1,10,13,1],[11,1,10,14,1],[11,1,10,15,1],[11,16,1,10,1],[11,1,10,17,1],[1,10,12,13,1],[1,10,14,12,1],[1,10,12,15,1],[16,1,10,12,1],[1,10,12,17,1],[1,10,14,13,1],[1,10,13,15,1],[16,1,10,13,1],[1,10,13,17,1],[1,10,14,15,1],[16,1,10,14,1],[1,10,14,17,1],[16,1,10,15,1],[1,10,17,15,1],[16,1,10,17,1],[11,1,12,13,1],[11,1,14,12,1],[11,1,12,15,1],[11,16,1,12,1],[11,1,12,17,1],[11,1,14,13,1],[11,1,13,15,1],[11,16,1,13,1],[11,1,13,17,1],[11,1,14,15,1],[11,16,1,14,1],[11,1,14,17,1],[11,16,1,15,1],[11,1,17,15,1],[11,16,1,17,1],[1,14,12,13,1],[1,12,13,15,1],[16,1,12,13,1],[1,12,13,17,1],[1,14,12,15,1],[16,1,14,12,1],[1,14,12,17,1],[16,1,12,15,1],[1,12,17,15,1],[16,1,12,17,1],[1,14,13,15,1],[16,1,14,13,1],[1,14,13,17,1],[16,1,13,15,1],[1,13,17,15,1],[16,1,13,17,1],[16,1,14,15,1],[1,14,17,15,1],[16,1,14,17,1],[16,1,17,15,1],[2,3,4,5,1],[6,2,3,4,1],[2,3,7,4,1],[2,3,8,4,1],[2,3,4,9,1],[2,3,10,4,1],[11,2,3,4,1],[2,3,4,12,1],[2,3,4,13,1],[2,3,14,4,1],[2,3,4,15,1],[16,2,3,4,1],[2,3,4,17,1],[6,2,3,5,1],[2,3,7,5,1],[2,3,8,5,1],[2,3,5,9,1],[2,3,10,5,1],[11,2,3,5,1],[2,3,12,5,1],[2,3,13,5,1],[2,3,14,5,1],[2,3,5,15,1],[16,2,3,5,1],[2,3,17,5,1],[6,2,3,7,1],[6,2,3,8,1],[6,2,3,9,1],[6,2,3,10,1],[11,6,2,3,1],[6,2,3,12,1],[6,2,3,13,1],[6,2,3,14,1],[6,2,3,15,1],[16,6,2,3,1],[6,2,3,17,1],[2,3,7,8,1],[2,3,7,9,1],[2,3,7,10,1],[11,2,3,7,1],[2,3,7,12,1],[2,3,7,13,1],[2,3,7,14,1],[2,3,7,15,1],[16,2,3,7,1],[2,3,7,17,1],[2,3,8,9,1],[2,3,10,8,1],[11,2,3,8,1],[2,3,8,12,1],[2,3,8,13,1],[2,3,8,14,1],[2,3,8,15,1],[16,2,3,8,1],[2,3,8,17,1],[2,3,10,9,1],[11,2,3,9,1],[2,3,12,9,1],[2,3,13,9,1],[2,3,14,9,1],[2,3,9,15,1],[16,2,3,9,1],[2,3,17,9,1],[11,2,3,10,1],[2,3,10,12,1],[2,3,10,13,1],[2,3,10,14,1],[2,3,10,15,1],[16,2,3,10,1],[2,3,10,17,1],[11,2,3,12,1],[11,2,3,13,1],[11,2,3,14,1],[11,2,3,15,1],[11,16,2,3,1],[11,2,3,17,1],[2,3,12,13,1],[2,3,14,12,1],[2,3,12,15,1],[16,2,3,12,1],[2,3,12,17,1],[2,3,14,13,1],[2,3,13,15,1],[16,2,3,13,1],[2,3,13,17,1],[2,3,14,15,1],[16,2,3,14,1],[2,3,14,17,1],[16,2,3,15,1],[2,3,17,15,1],[16,2,3,17,1],[6,2,4,5,1],[2,7,4,5,1],[2,8,4,5,1],[2,4,5,9,1],[2,10,4,5,1],[11,2,4,5,1],[2,4,12,5,1],[2,4,13,5,1],[2,14,4,5,1],[2,4,5,15,1],[16,2,4,5,1],[2,4,17,5,1],[6,2,7,4,1],[6,2,8,4,1],[6,2,4,9,1],[6,2,10,4,1],[11,6,2,4,1],[6,2,4,12,1],[6,2,4,13,1],[6,2,14,4,1],[6,2,4,15,1],[16,6,2,4,1],[6,2,4,17,1],[2,7,8,4,1],[2,7,4,9,1],[2,7,10,4,1],[11,2,7,4,1],[2,7,4,12,1],[2,7,4,13,1],[2,7,14,4,1],[2,7,4,15,1],[16,2,7,4,1],[2,7,4,17,1],[2,8,4,9,1],[2,10,8,4,1],[11,2,8,4,1],[2,8,4,12,1],[2,8,4,13,1],[2,8,14,4,1],[2,8,4,15,1],[16,2,8,4,1],[2,8,4,17,1],[2,10,4,9,1],[11,2,4,9,1],[2,4,12,9,1],[2,4,13,9,1],[2,14,4,9,1],[2,4,9,15,1],[16,2,4,9,1],[2,4,17,9,1],[11,2,10,4,1],[2,10,4,12,1],[2,10,4,13,1],[2,10,14,4,1],[2,10,4,15,1],[16,2,10,4,1],[2,10,4,17,1],[11,2,4,12,1],[11,2,4,13,1],[11,2,14,4,1],[11,2,4,15,1],[11,16,2,4,1],[11,2,4,17,1],[2,4,12,13,1],[2,14,4,12,1],[2,4,12,15,1],[16,2,4,12,1],[2,4,12,17,1],[2,14,4,13,1],[2,4,13,15,1],[16,2,4,13,1],[2,4,13,17,1],[2,14,4,15,1],[16,2,14,4,1],[2,14,4,17,1],[16,2,4,15,1],[2,4,17,15,1],[16,2,4,17,1],[6,2,7,5,1],[6,2,8,5,1],[6,2,5,9,1],[6,2,10,5,1],[11,6,2,5,1],[6,2,12,5,1],[6,2,13,5,1],[6,2,14,5,1],[6,2,5,15,1],[16,6,2,5,1],[6,2,17,5,1],[2,7,8,5,1],[2,7,5,9,1],[2,7,10,5,1],[11,2,7,5,1],[2,7,12,5,1],[2,7,13,5,1],[2,7,14,5,1],[2,7,5,15,1],[16,2,7,5,1],[2,7,17,5,1],[2,8,5,9,1],[2,10,8,5,1],[11,2,8,5,1],[2,8,12,5,1],[2,8,13,5,1],[2,8,14,5,1],[2,8,5,15,1],[16,2,8,5,1],[2,8,17,5,1],[2,10,5,9,1],[11,2,5,9,1],[2,12,5,9,1],[2,13,5,9,1],[2,14,5,9,1],[2,5,9,15,1],[16,2,5,9,1],[2,17,5,9,1],[11,2,10,5,1],[2,10,12,5,1],[2,10,13,5,1],[2,10,14,5,1],[2,10,5,15,1],[16,2,10,5,1],[2,10,17,5,1],[11,2,12,5,1],[11,2,13,5,1],[11,2,14,5,1],[11,2,5,15,1],[11,16,2,5,1],[11,2,17,5,1],[2,12,13,5,1],[2,14,12,5,1],[2,12,5,15,1],[16,2,12,5,1],[2,12,17,5,1],[2,14,13,5,1],[2,13,5,15,1],[16,2,13,5,1],[2,13,17,5,1],[2,14,5,15,1],[16,2,14,5,1],[2,14,17,5,1],[16,2,5,15,1],[2,17,5,15,1],[16,2,17,5,1],[6,2,7,8,1],[6,2,7,9,1],[6,2,7,10,1],[11,6,2,7,1],[6,2,7,12,1],[6,2,7,13,1],[6,2,7,14,1],[6,2,7,15,1],[16,6,2,7,1],[6,2,7,17,1],[6,2,8,9,1],[6,2,10,8,1],[11,6,2,8,1],[6,2,8,12,1],[6,2,8,13,1],[6,2,8,14,1],[6,2,8,15,1],[16,6,2,8,1],[6,2,8,17,1],[6,2,10,9,1],[11,6,2,9,1],[6,2,12,9,1],[6,2,13,9,1],[6,2,14,9,1],[6,2,9,15,1],[16,6,2,9,1],[6,2,17,9,1],[11,6,2,10,1],[6,2,10,12,1],[6,2,10,13,1],[6,2,10,14,1],[6,2,10,15,1],[16,6,2,10,1],[6,2,10,17,1],[11,6,2,12,1],[11,6,2,13,1],[11,6,2,14,1],[11,6,2,15,1],[11,16,6,2,1],[11,6,2,17,1],[6,2,12,13,1],[6,2,14,12,1],[6,2,12,15,1],[16,6,2,12,1],[6,2,12,17,1],[6,2,14,13,1],[6,2,13,15,1],[16,6,2,13,1],[6,2,13,17,1],[6,2,14,15,1],[16,6,2,14,1],[6,2,14,17,1],[16,6,2,15,1],[6,2,17,15,1],[16,6,2,17,1],[2,7,8,9,1],[2,7,10,8,1],[11,2,7,8,1],[2,7,8,12,1],[2,7,8,13,1],[2,7,8,14,1],[2,7,8,15,1],[16,2,7,8,1],[2,7,8,17,1],[2,7,10,9,1],[11,2,7,9,1],[2,7,12,9,1],[2,7,13,9,1],[2,7,14,9,1],[2,7,9,15,1],[16,2,7,9,1],[2,7,17,9,1],[11,2,7,10,1],[2,7,10,12,1],[2,7,10,13,1],[2,7,10,14,1],[2,7,10,15,1],[16,2,7,10,1],[2,7,10,17,1],[11,2,7,12,1],[11,2,7,13,1],[11,2,7,14,1],[11,2,7,15,1],[11,16,2,7,1],[11,2,7,17,1],[2,7,12,13,1],[2,7,14,12,1],[2,7,12,15,1],[16,2,7,12,1],[2,7,12,17,1],[2,7,14,13,1],[2,7,13,15,1],[16,2,7,13,1],[2,7,13,17,1],[2,7,14,15,1],[16,2,7,14,1],[2,7,14,17,1],[16,2,7,15,1],[2,7,17,15,1],[16,2,7,17,1],[2,10,8,9,1],[11,2,8,9,1],[2,8,12,9,1],[2,8,13,9,1],[2,8,14,9,1],[2,8,9,15,1],[16,2,8,9,1],[2,8,17,9,1],[11,2,10,8,1],[2,10,8,12,1],[2,10,8,13,1],[2,10,8,14,1],[2,10,8,15,1],[16,2,10,8,1],[2,10,8,17,1],[11,2,8,12,1],[11,2,8,13,1],[11,2,8,14,1],[11,2,8,15,1],[11,16,2,8,1],[11,2,8,17,1],[2,8,12,13,1],[2,8,14,12,1],[2,8,12,15,1],[16,2,8,12,1],[2,8,12,17,1],[2,8,14,13,1],[2,8,13,15,1],[16,2,8,13,1],[2,8,13,17,1],[2,8,14,15,1],[16,2,8,14,1],[2,8,14,17,1],[16,2,8,15,1],[2,8,17,15,1],[16,2,8,17,1],[11,2,10,9,1],[2,10,12,9,1],[2,10,13,9,1],[2,10,14,9,1],[2,10,9,15,1],[16,2,10,9,1],[2,10,17,9,1],[11,2,12,9,1],[11,2,13,9,1],[11,2,14,9,1],[11,2,9,15,1],[11,16,2,9,1],[11,2,17,9,1],[2,12,13,9,1],[2,14,12,9,1],[2,12,9,15,1],[16,2,12,9,1],[2,12,17,9,1],[2,14,13,9,1],[2,13,9,15,1],[16,2,13,9,1],[2,13,17,9,1],[2,14,9,15,1],[16,2,14,9,1],[2,14,17,9,1],[16,2,9,15,1],[2,17,9,15,1],[16,2,17,9,1],[11,2,10,12,1],[11,2,10,13,1],[11,2,10,14,1],[11,2,10,15,1],[11,16,2,10,1],[11,2,10,17,1],[2,10,12,13,1],[2,10,14,12,1],[2,10,12,15,1],[16,2,10,12,1],[2,10,12,17,1],[2,10,14,13,1],[2,10,13,15,1],[16,2,10,13,1],[2,10,13,17,1],[2,10,14,15,1],[16,2,10,14,1],[2,10,14,17,1],[16,2,10,15,1],[2,10,17,15,1],[16,2,10,17,1],[11,2,12,13,1],[11,2,14,12,1],[11,2,12,15,1],[11,16,2,12,1],[11,2,12,17,1],[11,2,14,13,1],[11,2,13,15,1],[11,16,2,13,1],[11,2,13,17,1],[11,2,14,15,1],[11,16,2,14,1],[11,2,14,17,1],[11,16,2,15,1],[11,2,17,15,1],[11,16,2,17,1],[2,14,12,13,1],[2,12,13,15,1],[16,2,12,13,1],[2,12,13,17,1],[2,14,12,15,1],[16,2,14,12,1],[2,14,12,17,1],[16,2,12,15,1],[2,12,17,15,1],[16,2,12,17,1],[2,14,13,15,1],[16,2,14,13,1],[2,14,13,17,1],[16,2,13,15,1],[2,13,17,15,1],[16,2,13,17,1],[16,2,14,15,1],[2,14,17,15,1],[16,2,14,17,1],[16,2,17,15,1],[6,3,4,5,1],[3,7,4,5,1],[3,8,4,5,1],[3,4,5,9,1],[3,10,4,5,1],[11,3,4,5,1],[3,4,12,5,1],[3,4,13,5,1],[3,14,4,5,1],[3,4,5,15,1],[16,3,4,5,1],[3,4,17,5,1],[6,3,7,4,1],[6,3,8,4,1],[6,3,4,9,1],[6,3,10,4,1],[11,6,3,4,1],[6,3,4,12,1],[6,3,4,13,1],[6,3,14,4,1],[6,3,4,15,1],[16,6,3,4,1],[6,3,4,17,1],[3,7,8,4,1],[3,7,4,9,1],[3,7,10,4,1],[11,3,7,4,1],[3,7,4,12,1],[3,7,4,13,1],[3,7,14,4,1],[3,7,4,15,1],[16,3,7,4,1],[3,7,4,17,1],[3,8,4,9,1],[3,10,8,4,1],[11,3,8,4,1],[3,8,4,12,1],[3,8,4,13,1],[3,8,14,4,1],[3,8,4,15,1],[16,3,8,4,1],[3,8,4,17,1],[3,10,4,9,1],[11,3,4,9,1],[3,4,12,9,1],[3,4,13,9,1],[3,14,4,9,1],[3,4,9,15,1],[16,3,4,9,1],[3,4,17,9,1],[11,3,10,4,1],[3,10,4,12,1],[3,10,4,13,1],[3,10,14,4,1],[3,10,4,15,1],[16,3,10,4,1],[3,10,4,17,1],[11,3,4,12,1],[11,3,4,13,1],[11,3,14,4,1],[11,3,4,15,1],[11,16,3,4,1],[11,3,4,17,1],[3,4,12,13,1],[3,14,4,12,1],[3,4,12,15,1],[16,3,4,12,1],[3,4,12,17,1],[3,14,4,13,1],[3,4,13,15,1],[16,3,4,13,1],[3,4,13,17,1],[3,14,4,15,1],[16,3,14,4,1],[3,14,4,17,1],[16,3,4,15,1],[3,4,17,15,1],[16,3,4,17,1],[6,3,7,5,1],[6,3,8,5,1],[6,3,5,9,1],[6,3,10,5,1],[11,6,3,5,1],[6,3,12,5,1],[6,3,13,5,1],[6,3,14,5,1],[6,3,5,15,1],[16,6,3,5,1],[6,3,17,5,1],[3,7,8,5,1],[3,7,5,9,1],[3,7,10,5,1],[11,3,7,5,1],[3,7,12,5,1],[3,7,13,5,1],[3,7,14,5,1],[3,7,5,15,1],[16,3,7,5,1],[3,7,17,5,1],[3,8,5,9,1],[3,10,8,5,1],[11,3,8,5,1],[3,8,12,5,1],[3,8,13,5,1],[3,8,14,5,1],[3,8,5,15,1],[16,3,8,5,1],[3,8,17,5,1],[3,10,5,9,1],[11,3,5,9,1],[3,12,5,9,1],[3,13,5,9,1],[3,14,5,9,1],[3,5,9,15,1],[16,3,5,9,1],[3,17,5,9,1],[11,3,10,5,1],[3,10,12,5,1],[3,10,13,5,1],[3,10,14,5,1],[3,10,5,15,1],[16,3,10,5,1],[3,10,17,5,1],[11,3,12,5,1],[11,3,13,5,1],[11,3,14,5,1],[11,3,5,15,1],[11,16,3,5,1],[11,3,17,5,1],[3,12,13,5,1],[3,14,12,5,1],[3,12,5,15,1],[16,3,12,5,1],[3,12,17,5,1],[3,14,13,5,1],[3,13,5,15,1],[16,3,13,5,1],[3,13,17,5,1],[3,14,5,15,1],[16,3,14,5,1],[3,14,17,5,1],[16,3,5,15,1],[3,17,5,15,1],[16,3,17,5,1],[6,3,7,8,1],[6,3,7,9,1],[6,3,7,10,1],[11,6,3,7,1],[6,3,7,12,1],[6,3,7,13,1],[6,3,7,14,1],[6,3,7,15,1],[16,6,3,7,1],[6,3,7,17,1],[6,3,8,9,1],[6,3,10,8,1],[11,6,3,8,1],[6,3,8,12,1],[6,3,8,13,1],[6,3,8,14,1],[6,3,8,15,1],[16,6,3,8,1],[6,3,8,17,1],[6,3,10,9,1],[11,6,3,9,1],[6,3,12,9,1],[6,3,13,9,1],[6,3,14,9,1],[6,3,9,15,1],[16,6,3,9,1],[6,3,17,9,1],[11,6,3,10,1],[6,3,10,12,1],[6,3,10,13,1],[6,3,10,14,1],[6,3,10,15,1],[16,6,3,10,1],[6,3,10,17,1],[11,6,3,12,1],[11,6,3,13,1],[11,6,3,14,1],[11,6,3,15,1],[11,16,6,3,1],[11,6,3,17,1],[6,3,12,13,1],[6,3,14,12,1],[6,3,12,15,1],[16,6,3,12,1],[6,3,12,17,1],[6,3,14,13,1],[6,3,13,15,1],[16,6,3,13,1],[6,3,13,17,1],[6,3,14,15,1],[16,6,3,14,1],[6,3,14,17,1],[16,6,3,15,1],[6,3,17,15,1],[16,6,3,17,1],[3,7,8,9,1],[3,7,10,8,1],[11,3,7,8,1],[3,7,8,12,1],[3,7,8,13,1],[3,7,8,14,1],[3,7,8,15,1],[16,3,7,8,1],[3,7,8,17,1],[3,7,10,9,1],[11,3,7,9,1],[3,7,12,9,1],[3,7,13,9,1],[3,7,14,9,1],[3,7,9,15,1],[16,3,7,9,1],[3,7,17,9,1],[11,3,7,10,1],[3,7,10,12,1],[3,7,10,13,1],[3,7,10,14,1],[3,7,10,15,1],[16,3,7,10,1],[3,7,10,17,1],[11,3,7,12,1],[11,3,7,13,1],[11,3,7,14,1],[11,3,7,15,1],[11,16,3,7,1],[11,3,7,17,1],[3,7,12,13,1],[3,7,14,12,1],[3,7,12,15,1],[16,3,7,12,1],[3,7,12,17,1],[3,7,14,13,1],[3,7,13,15,1],[16,3,7,13,1],[3,7,13,17,1],[3,7,14,15,1],[16,3,7,14,1],[3,7,14,17,1],[16,3,7,15,1],[3,7,17,15,1],[16,3,7,17,1],[3,10,8,9,1],[11,3,8,9,1],[3,8,12,9,1],[3,8,13,9,1],[3,8,14,9,1],[3,8,9,15,1],[16,3,8,9,1],[3,8,17,9,1],[11,3,10,8,1],[3,10,8,12,1],[3,10,8,13,1],[3,10,8,14,1],[3,10,8,15,1],[16,3,10,8,1],[3,10,8,17,1],[11,3,8,12,1],[11,3,8,13,1],[11,3,8,14,1],[11,3,8,15,1],[11,16,3,8,1],[11,3,8,17,1],[3,8,12,13,1],[3,8,14,12,1],[3,8,12,15,1],[16,3,8,12,1],[3,8,12,17,1],[3,8,14,13,1],[3,8,13,15,1],[16,3,8,13,1],[3,8,13,17,1],[3,8,14,15,1],[16,3,8,14,1],[3,8,14,17,1],[16,3,8,15,1],[3,8,17,15,1],[16,3,8,17,1],[11,3,10,9,1],[3,10,12,9,1],[3,10,13,9,1],[3,10,14,9,1],[3,10,9,15,1],[16,3,10,9,1],[3,10,17,9,1],[11,3,12,9,1],[11,3,13,9,1],[11,3,14,9,1],[11,3,9,15,1],[11,16,3,9,1],[11,3,17,9,1],[3,12,13,9,1],[3,14,12,9,1],[3,12,9,15,1],[16,3,12,9,1],[3,12,17,9,1],[3,14,13,9,1],[3,13,9,15,1],[16,3,13,9,1],[3,13,17,9,1],[3,14,9,15,1],[16,3,14,9,1],[3,14,17,9,1],[16,3,9,15,1],[3,17,9,15,1],[16,3,17,9,1],[11,3,10,12,1],[11,3,10,13,1],[11,3,10,14,1],[11,3,10,15,1],[11,16,3,10,1],[11,3,10,17,1],[3,10,12,13,1],[3,10,14,12,1],[3,10,12,15,1],[16,3,10,12,1],[3,10,12,17,1],[3,10,14,13,1],[3,10,13,15,1],[16,3,10,13,1],[3,10,13,17,1],[3,10,14,15,1],[16,3,10,14,1],[3,10,14,17,1],[16,3,10,15,1],[3,10,17,15,1],[16,3,10,17,1],[11,3,12,13,1],[11,3,14,12,1],[11,3,12,15,1],[11,16,3,12,1],[11,3,12,17,1],[11,3,14,13,1],[11,3,13,15,1],[11,16,3,13,1],[11,3,13,17,1],[11,3,14,15,1],[11,16,3,14,1],[11,3,14,17,1],[11,16,3,15,1],[11,3,17,15,1],[11,16,3,17,1],[3,14,12,13,1],[3,12,13,15,1],[16,3,12,13,1],[3,12,13,17,1],[3,14,12,15,1],[16,3,14,12,1],[3,14,12,17,1],[16,3,12,15,1],[3,12,17,15,1],[16,3,12,17,1],[3,14,13,15,1],[16,3,14,13,1],[3,14,13,17,1],[16,3,13,15,1],[3,13,17,15,1],[16,3,13,17,1],[16,3,14,15,1],[3,14,17,15,1],[16,3,14,17,1],[16,3,17,15,1],[6,7,4,5,1],[6,8,4,5,1],[6,4,5,9,1],[6,10,4,5,1],[11,6,4,5,1],[6,4,12,5,1],[6,4,13,5,1],[6,14,4,5,1],[6,4,5,15,1],[16,6,4,5,1],[6,4,17,5,1],[7,8,4,5,1],[7,4,5,9,1],[7,10,4,5,1],[11,7,4,5,1],[7,4,12,5,1],[7,4,13,5,1],[7,14,4,5,1],[7,4,5,15,1],[16,7,4,5,1],[7,4,17,5,1],[8,4,5,9,1],[10,8,4,5,1],[11,8,4,5,1],[8,4,12,5,1],[8,4,13,5,1],[8,14,4,5,1],[8,4,5,15,1],[16,8,4,5,1],[8,4,17,5,1],[10,4,5,9,1],[11,4,5,9,1],[4,12,5,9,1],[4,13,5,9,1],[14,4,5,9,1],[4,5,9,15,1],[16,4,5,9,1],[4,17,5,9,1],[11,10,4,5,1],[10,4,12,5,1],[10,4,13,5,1],[10,14,4,5,1],[10,4,5,15,1],[16,10,4,5,1],[10,4,17,5,1],[11,4,12,5,1],[11,4,13,5,1],[11,14,4,5,1],[11,4,5,15,1],[11,16,4,5,1],[11,4,17,5,1],[4,12,13,5,1],[14,4,12,5,1],[4,12,5,15,1],[16,4,12,5,1],[4,12,17,5,1],[14,4,13,5,1],[4,13,5,15,1],[16,4,13,5,1],[4,13,17,5,1],[14,4,5,15,1],[16,14,4,5,1],[14,4,17,5,1],[16,4,5,15,1],[4,17,5,15,1],[16,4,17,5,1],[6,7,8,4,1],[6,7,4,9,1],[6,7,10,4,1],[11,6,7,4,1],[6,7,4,12,1],[6,7,4,13,1],[6,7,14,4,1],[6,7,4,15,1],[16,6,7,4,1],[6,7,4,17,1],[6,8,4,9,1],[6,10,8,4,1],[11,6,8,4,1],[6,8,4,12,1],[6,8,4,13,1],[6,8,14,4,1],[6,8,4,15,1],[16,6,8,4,1],[6,8,4,17,1],[6,10,4,9,1],[11,6,4,9,1],[6,4,12,9,1],[6,4,13,9,1],[6,14,4,9,1],[6,4,9,15,1],[16,6,4,9,1],[6,4,17,9,1],[11,6,10,4,1],[6,10,4,12,1],[6,10,4,13,1],[6,10,14,4,1],[6,10,4,15,1],[16,6,10,4,1],[6,10,4,17,1],[11,6,4,12,1],[11,6,4,13,1],[11,6,14,4,1],[11,6,4,15,1],[11,16,6,4,1],[11,6,4,17,1],[6,4,12,13,1],[6,14,4,12,1],[6,4,12,15,1],[16,6,4,12,1],[6,4,12,17,1],[6,14,4,13,1],[6,4,13,15,1],[16,6,4,13,1],[6,4,13,17,1],[6,14,4,15,1],[16,6,14,4,1],[6,14,4,17,1],[16,6,4,15,1],[6,4,17,15,1],[16,6,4,17,1],[7,8,4,9,1],[7,10,8,4,1],[11,7,8,4,1],[7,8,4,12,1],[7,8,4,13,1],[7,8,14,4,1],[7,8,4,15,1],[16,7,8,4,1],[7,8,4,17,1],[7,10,4,9,1],[11,7,4,9,1],[7,4,12,9,1],[7,4,13,9,1],[7,14,4,9,1],[7,4,9,15,1],[16,7,4,9,1],[7,4,17,9,1],[11,7,10,4,1],[7,10,4,12,1],[7,10,4,13,1],[7,10,14,4,1],[7,10,4,15,1],[16,7,10,4,1],[7,10,4,17,1],[11,7,4,12,1],[11,7,4,13,1],[11,7,14,4,1],[11,7,4,15,1],[11,16,7,4,1],[11,7,4,17,1],[7,4,12,13,1],[7,14,4,12,1],[7,4,12,15,1],[16,7,4,12,1],[7,4,12,17,1],[7,14,4,13,1],[7,4,13,15,1],[16,7,4,13,1],[7,4,13,17,1],[7,14,4,15,1],[16,7,14,4,1],[7,14,4,17,1],[16,7,4,15,1],[7,4,17,15,1],[16,7,4,17,1],[10,8,4,9,1],[11,8,4,9,1],[8,4,12,9,1],[8,4,13,9,1],[8,14,4,9,1],[8,4,9,15,1],[16,8,4,9,1],[8,4,17,9,1],[11,10,8,4,1],[10,8,4,12,1],[10,8,4,13,1],[10,8,14,4,1],[10,8,4,15,1],[16,10,8,4,1],[10,8,4,17,1],[11,8,4,12,1],[11,8,4,13,1],[11,8,14,4,1],[11,8,4,15,1],[11,16,8,4,1],[11,8,4,17,1],[8,4,12,13,1],[8,14,4,12,1],[8,4,12,15,1],[16,8,4,12,1],[8,4,12,17,1],[8,14,4,13,1],[8,4,13,15,1],[16,8,4,13,1],[8,4,13,17,1],[8,14,4,15,1],[16,8,14,4,1],[8,14,4,17,1],[16,8,4,15,1],[8,4,17,15,1],[16,8,4,17,1],[11,10,4,9,1],[10,4,12,9,1],[10,4,13,9,1],[10,14,4,9,1],[10,4,9,15,1],[16,10,4,9,1],[10,4,17,9,1],[11,4,12,9,1],[11,4,13,9,1],[11,14,4,9,1],[11,4,9,15,1],[11,16,4,9,1],[11,4,17,9,1],[4,12,13,9,1],[14,4,12,9,1],[4,12,9,15,1],[16,4,12,9,1],[4,12,17,9,1],[14,4,13,9,1],[4,13,9,15,1],[16,4,13,9,1],[4,13,17,9,1],[14,4,9,15,1],[16,14,4,9,1],[14,4,17,9,1],[16,4,9,15,1],[4,17,9,15,1],[16,4,17,9,1],[11,10,4,12,1],[11,10,4,13,1],[11,10,14,4,1],[11,10,4,15,1],[11,16,10,4,1],[11,10,4,17,1],[10,4,12,13,1],[10,14,4,12,1],[10,4,12,15,1],[16,10,4,12,1],[10,4,12,17,1],[10,14,4,13,1],[10,4,13,15,1],[16,10,4,13,1],[10,4,13,17,1],[10,14,4,15,1],[16,10,14,4,1],[10,14,4,17,1],[16,10,4,15,1],[10,4,17,15,1],[16,10,4,17,1],[11,4,12,13,1],[11,14,4,12,1],[11,4,12,15,1],[11,16,4,12,1],[11,4,12,17,1],[11,14,4,13,1],[11,4,13,15,1],[11,16,4,13,1],[11,4,13,17,1],[11,14,4,15,1],[11,16,14,4,1],[11,14,4,17,1],[11,16,4,15,1],[11,4,17,15,1],[11,16,4,17,1],[14,4,12,13,1],[4,12,13,15,1],[16,4,12,13,1],[4,12,13,17,1],[14,4,12,15,1],[16,14,4,12,1],[14,4,12,17,1],[16,4,12,15,1],[4,12,17,15,1],[16,4,12,17,1],[14,4,13,15,1],[16,14,4,13,1],[14,4,13,17,1],[16,4,13,15,1],[4,13,17,15,1],[16,4,13,17,1],[16,14,4,15,1],[14,4,17,15,1],[16,14,4,17,1],[16,4,17,15,1],[6,7,8,5,1],[6,7,5,9,1],[6,7,10,5,1],[11,6,7,5,1],[6,7,12,5,1],[6,7,13,5,1],[6,7,14,5,1],[6,7,5,15,1],[16,6,7,5,1],[6,7,17,5,1],[6,8,5,9,1],[6,10,8,5,1],[11,6,8,5,1],[6,8,12,5,1],[6,8,13,5,1],[6,8,14,5,1],[6,8,5,15,1],[16,6,8,5,1],[6,8,17,5,1],[6,10,5,9,1],[11,6,5,9,1],[6,12,5,9,1],[6,13,5,9,1],[6,14,5,9,1],[6,5,9,15,1],[16,6,5,9,1],[6,17,5,9,1],[11,6,10,5,1],[6,10,12,5,1],[6,10,13,5,1],[6,10,14,5,1],[6,10,5,15,1],[16,6,10,5,1],[6,10,17,5,1],[11,6,12,5,1],[11,6,13,5,1],[11,6,14,5,1],[11,6,5,15,1],[11,16,6,5,1],[11,6,17,5,1],[6,12,13,5,1],[6,14,12,5,1],[6,12,5,15,1],[16,6,12,5,1],[6,12,17,5,1],[6,14,13,5,1],[6,13,5,15,1],[16,6,13,5,1],[6,13,17,5,1],[6,14,5,15,1],[16,6,14,5,1],[6,14,17,5,1],[16,6,5,15,1],[6,17,5,15,1],[16,6,17,5,1],[7,8,5,9,1],[7,10,8,5,1],[11,7,8,5,1],[7,8,12,5,1],[7,8,13,5,1],[7,8,14,5,1],[7,8,5,15,1],[16,7,8,5,1],[7,8,17,5,1],[7,10,5,9,1],[11,7,5,9,1],[7,12,5,9,1],[7,13,5,9,1],[7,14,5,9,1],[7,5,9,15,1],[16,7,5,9,1],[7,17,5,9,1],[11,7,10,5,1],[7,10,12,5,1],[7,10,13,5,1],[7,10,14,5,1],[7,10,5,15,1],[16,7,10,5,1],[7,10,17,5,1],[11,7,12,5,1],[11,7,13,5,1],[11,7,14,5,1],[11,7,5,15,1],[11,16,7,5,1],[11,7,17,5,1],[7,12,13,5,1],[7,14,12,5,1],[7,12,5,15,1],[16,7,12,5,1],[7,12,17,5,1],[7,14,13,5,1],[7,13,5,15,1],[16,7,13,5,1],[7,13,17,5,1],[7,14,5,15,1],[16,7,14,5,1],[7,14,17,5,1],[16,7,5,15,1],[7,17,5,15,1],[16,7,17,5,1],[10,8,5,9,1],[11,8,5,9,1],[8,12,5,9,1],[8,13,5,9,1],[8,14,5,9,1],[8,5,9,15,1],[16,8,5,9,1],[8,17,5,9,1],[11,10,8,5,1],[10,8,12,5,1],[10,8,13,5,1],[10,8,14,5,1],[10,8,5,15,1],[16,10,8,5,1],[10,8,17,5,1],[11,8,12,5,1],[11,8,13,5,1],[11,8,14,5,1],[11,8,5,15,1],[11,16,8,5,1],[11,8,17,5,1],[8,12,13,5,1],[8,14,12,5,1],[8,12,5,15,1],[16,8,12,5,1],[8,12,17,5,1],[8,14,13,5,1],[8,13,5,15,1],[16,8,13,5,1],[8,13,17,5,1],[8,14,5,15,1],[16,8,14,5,1],[8,14,17,5,1],[16,8,5,15,1],[8,17,5,15,1],[16,8,17,5,1],[11,10,5,9,1],[10,12,5,9,1],[10,13,5,9,1],[10,14,5,9,1],[10,5,9,15,1],[16,10,5,9,1],[10,17,5,9,1],[11,12,5,9,1],[11,13,5,9,1],[11,14,5,9,1],[11,5,9,15,1],[11,16,5,9,1],[11,17,5,9,1],[12,13,5,9,1],[14,12,5,9,1],[12,5,9,15,1],[16,12,5,9,1],[12,17,5,9,1],[14,13,5,9,1],[13,5,9,15,1],[16,13,5,9,1],[13,17,5,9,1],[14,5,9,15,1],[16,14,5,9,1],[14,17,5,9,1],[16,5,9,15,1],[17,5,9,15,1],[16,17,5,9,1],[11,10,12,5,1],[11,10,13,5,1],[11,10,14,5,1],[11,10,5,15,1],[11,16,10,5,1],[11,10,17,5,1],[10,12,13,5,1],[10,14,12,5,1],[10,12,5,15,1],[16,10,12,5,1],[10,12,17,5,1],[10,14,13,5,1],[10,13,5,15,1],[16,10,13,5,1],[10,13,17,5,1],[10,14,5,15,1],[16,10,14,5,1],[10,14,17,5,1],[16,10,5,15,1],[10,17,5,15,1],[16,10,17,5,1],[11,12,13,5,1],[11,14,12,5,1],[11,12,5,15,1],[11,16,12,5,1],[11,12,17,5,1],[11,14,13,5,1],[11,13,5,15,1],[11,16,13,5,1],[11,13,17,5,1],[11,14,5,15,1],[11,16,14,5,1],[11,14,17,5,1],[11,16,5,15,1],[11,17,5,15,1],[11,16,17,5,1],[14,12,13,5,1],[12,13,5,15,1],[16,12,13,5,1],[12,13,17,5,1],[14,12,5,15,1],[16,14,12,5,1],[14,12,17,5,1],[16,12,5,15,1],[12,17,5,15,1],[16,12,17,5,1],[14,13,5,15,1],[16,14,13,5,1],[14,13,17,5,1],[16,13,5,15,1],[13,17,5,15,1],[16,13,17,5,1],[16,14,5,15,1],[14,17,5,15,1],[16,14,17,5,1],[16,17,5,15,1],[6,7,8,9,1],[6,7,10,8,1],[11,6,7,8,1],[6,7,8,12,1],[6,7,8,13,1],[6,7,8,14,1],[6,7,8,15,1],[16,6,7,8,1],[6,7,8,17,1],[6,7,10,9,1],[11,6,7,9,1],[6,7,12,9,1],[6,7,13,9,1],[6,7,14,9,1],[6,7,9,15,1],[16,6,7,9,1],[6,7,17,9,1],[11,6,7,10,1],[6,7,10,12,1],[6,7,10,13,1],[6,7,10,14,1],[6,7,10,15,1],[16,6,7,10,1],[6,7,10,17,1],[11,6,7,12,1],[11,6,7,13,1],[11,6,7,14,1],[11,6,7,15,1],[11,16,6,7,1],[11,6,7,17,1],[6,7,12,13,1],[6,7,14,12,1],[6,7,12,15,1],[16,6,7,12,1],[6,7,12,17,1],[6,7,14,13,1],[6,7,13,15,1],[16,6,7,13,1],[6,7,13,17,1],[6,7,14,15,1],[16,6,7,14,1],[6,7,14,17,1],[16,6,7,15,1],[6,7,17,15,1],[16,6,7,17,1],[6,10,8,9,1],[11,6,8,9,1],[6,8,12,9,1],[6,8,13,9,1],[6,8,14,9,1],[6,8,9,15,1],[16,6,8,9,1],[6,8,17,9,1],[11,6,10,8,1],[6,10,8,12,1],[6,10,8,13,1],[6,10,8,14,1],[6,10,8,15,1],[16,6,10,8,1],[6,10,8,17,1],[11,6,8,12,1],[11,6,8,13,1],[11,6,8,14,1],[11,6,8,15,1],[11,16,6,8,1],[11,6,8,17,1],[6,8,12,13,1],[6,8,14,12,1],[6,8,12,15,1],[16,6,8,12,1],[6,8,12,17,1],[6,8,14,13,1],[6,8,13,15,1],[16,6,8,13,1],[6,8,13,17,1],[6,8,14,15,1],[16,6,8,14,1],[6,8,14,17,1],[16,6,8,15,1],[6,8,17,15,1],[16,6,8,17,1],[11,6,10,9,1],[6,10,12,9,1],[6,10,13,9,1],[6,10,14,9,1],[6,10,9,15,1],[16,6,10,9,1],[6,10,17,9,1],[11,6,12,9,1],[11,6,13,9,1],[11,6,14,9,1],[11,6,9,15,1],[11,16,6,9,1],[11,6,17,9,1],[6,12,13,9,1],[6,14,12,9,1],[6,12,9,15,1],[16,6,12,9,1],[6,12,17,9,1],[6,14,13,9,1],[6,13,9,15,1],[16,6,13,9,1],[6,13,17,9,1],[6,14,9,15,1],[16,6,14,9,1],[6,14,17,9,1],[16,6,9,15,1],[6,17,9,15,1],[16,6,17,9,1],[11,6,10,12,1],[11,6,10,13,1],[11,6,10,14,1],[11,6,10,15,1],[11,16,6,10,1],[11,6,10,17,1],[6,10,12,13,1],[6,10,14,12,1],[6,10,12,15,1],[16,6,10,12,1],[6,10,12,17,1],[6,10,14,13,1],[6,10,13,15,1],[16,6,10,13,1],[6,10,13,17,1],[6,10,14,15,1],[16,6,10,14,1],[6,10,14,17,1],[16,6,10,15,1],[6,10,17,15,1],[16,6,10,17,1],[11,6,12,13,1],[11,6,14,12,1],[11,6,12,15,1],[11,16,6,12,1],[11,6,12,17,1],[11,6,14,13,1],[11,6,13,15,1],[11,16,6,13,1],[11,6,13,17,1],[11,6,14,15,1],[11,16,6,14,1],[11,6,14,17,1],[11,16,6,15,1],[11,6,17,15,1],[11,16,6,17,1],[6,14,12,13,1],[6,12,13,15,1],[16,6,12,13,1],[6,12,13,17,1],[6,14,12,15,1],[16,6,14,12,1],[6,14,12,17,1],[16,6,12,15,1],[6,12,17,15,1],[16,6,12,17,1],[6,14,13,15,1],[16,6,14,13,1],[6,14,13,17,1],[16,6,13,15,1],[6,13,17,15,1],[16,6,13,17,1],[16,6,14,15,1],[6,14,17,15,1],[16,6,14,17,1],[16,6,17,15,1],[7,10,8,9,1],[11,7,8,9,1],[7,8,12,9,1],[7,8,13,9,1],[7,8,14,9,1],[7,8,9,15,1],[16,7,8,9,1],[7,8,17,9,1],[11,7,10,8,1],[7,10,8,12,1],[7,10,8,13,1],[7,10,8,14,1],[7,10,8,15,1],[16,7,10,8,1],[7,10,8,17,1],[11,7,8,12,1],[11,7,8,13,1],[11,7,8,14,1],[11,7,8,15,1],[11,16,7,8,1],[11,7,8,17,1],[7,8,12,13,1],[7,8,14,12,1],[7,8,12,15,1],[16,7,8,12,1],[7,8,12,17,1],[7,8,14,13,1],[7,8,13,15,1],[16,7,8,13,1],[7,8,13,17,1],[7,8,14,15,1],[16,7,8,14,1],[7,8,14,17,1],[16,7,8,15,1],[7,8,17,15,1],[16,7,8,17,1],[11,7,10,9,1],[7,10,12,9,1],[7,10,13,9,1],[7,10,14,9,1],[7,10,9,15,1],[16,7,10,9,1],[7,10,17,9,1],[11,7,12,9,1],[11,7,13,9,1],[11,7,14,9,1],[11,7,9,15,1],[11,16,7,9,1],[11,7,17,9,1],[7,12,13,9,1],[7,14,12,9,1],[7,12,9,15,1],[16,7,12,9,1],[7,12,17,9,1],[7,14,13,9,1],[7,13,9,15,1],[16,7,13,9,1],[7,13,17,9,1],[7,14,9,15,1],[16,7,14,9,1],[7,14,17,9,1],[16,7,9,15,1],[7,17,9,15,1],[16,7,17,9,1],[11,7,10,12,1],[11,7,10,13,1],[11,7,10,14,1],[11,7,10,15,1],[11,16,7,10,1],[11,7,10,17,1],[7,10,12,13,1],[7,10,14,12,1],[7,10,12,15,1],[16,7,10,12,1],[7,10,12,17,1],[7,10,14,13,1],[7,10,13,15,1],[16,7,10,13,1],[7,10,13,17,1],[7,10,14,15,1],[16,7,10,14,1],[7,10,14,17,1],[16,7,10,15,1],[7,10,17,15,1],[16,7,10,17,1],[11,7,12,13,1],[11,7,14,12,1],[11,7,12,15,1],[11,16,7,12,1],[11,7,12,17,1],[11,7,14,13,1],[11,7,13,15,1],[11,16,7,13,1],[11,7,13,17,1],[11,7,14,15,1],[11,16,7,14,1],[11,7,14,17,1],[11,16,7,15,1],[11,7,17,15,1],[11,16,7,17,1],[7,14,12,13,1],[7,12,13,15,1],[16,7,12,13,1],[7,12,13,17,1],[7,14,12,15,1],[16,7,14,12,1],[7,14,12,17,1],[16,7,12,15,1],[7,12,17,15,1],[16,7,12,17,1],[7,14,13,15,1],[16,7,14,13,1],[7,14,13,17,1],[16,7,13,15,1],[7,13,17,15,1],[16,7,13,17,1],[16,7,14,15,1],[7,14,17,15,1],[16,7,14,17,1],[16,7,17,15,1],[11,10,8,9,1],[10,8,12,9,1],[10,8,13,9,1],[10,8,14,9,1],[10,8,9,15,1],[16,10,8,9,1],[10,8,17,9,1],[11,8,12,9,1],[11,8,13,9,1],[11,8,14,9,1],[11,8,9,15,1],[11,16,8,9,1],[11,8,17,9,1],[8,12,13,9,1],[8,14,12,9,1],[8,12,9,15,1],[16,8,12,9,1],[8,12,17,9,1],[8,14,13,9,1],[8,13,9,15,1],[16,8,13,9,1],[8,13,17,9,1],[8,14,9,15,1],[16,8,14,9,1],[8,14,17,9,1],[16,8,9,15,1],[8,17,9,15,1],[16,8,17,9,1],[11,10,8,12,1],[11,10,8,13,1],[11,10,8,14,1],[11,10,8,15,1],[11,16,10,8,1],[11,10,8,17,1],[10,8,12,13,1],[10,8,14,12,1],[10,8,12,15,1],[16,10,8,12,1],[10,8,12,17,1],[10,8,14,13,1],[10,8,13,15,1],[16,10,8,13,1],[10,8,13,17,1],[10,8,14,15,1],[16,10,8,14,1],[10,8,14,17,1],[16,10,8,15,1],[10,8,17,15,1],[16,10,8,17,1],[11,8,12,13,1],[11,8,14,12,1],[11,8,12,15,1],[11,16,8,12,1],[11,8,12,17,1],[11,8,14,13,1],[11,8,13,15,1],[11,16,8,13,1],[11,8,13,17,1],[11,8,14,15,1],[11,16,8,14,1],[11,8,14,17,1],[11,16,8,15,1],[11,8,17,15,1],[11,16,8,17,1],[8,14,12,13,1],[8,12,13,15,1],[16,8,12,13,1],[8,12,13,17,1],[8,14,12,15,1],[16,8,14,12,1],[8,14,12,17,1],[16,8,12,15,1],[8,12,17,15,1],[16,8,12,17,1],[8,14,13,15,1],[16,8,14,13,1],[8,14,13,17,1],[16,8,13,15,1],[8,13,17,15,1],[16,8,13,17,1],[16,8,14,15,1],[8,14,17,15,1],[16,8,14,17,1],[16,8,17,15,1],[11,10,12,9,1],[11,10,13,9,1],[11,10,14,9,1],[11,10,9,15,1],[11,16,10,9,1],[11,10,17,9,1],[10,12,13,9,1],[10,14,12,9,1],[10,12,9,15,1],[16,10,12,9,1],[10,12,17,9,1],[10,14,13,9,1],[10,13,9,15,1],[16,10,13,9,1],[10,13,17,9,1],[10,14,9,15,1],[16,10,14,9,1],[10,14,17,9,1],[16,10,9,15,1],[10,17,9,15,1],[16,10,17,9,1],[11,12,13,9,1],[11,14,12,9,1],[11,12,9,15,1],[11,16,12,9,1],[11,12,17,9,1],[11,14,13,9,1],[11,13,9,15,1],[11,16,13,9,1],[11,13,17,9,1],[11,14,9,15,1],[11,16,14,9,1],[11,14,17,9,1],[11,16,9,15,1],[11,17,9,15,1],[11,16,17,9,1],[14,12,13,9,1],[12,13,9,15,1],[16,12,13,9,1],[12,13,17,9,1],[14,12,9,15,1],[16,14,12,9,1],[14,12,17,9,1],[16,12,9,15,1],[12,17,9,15,1],[16,12,17,9,1],[14,13,9,15,1],[16,14,13,9,1],[14,13,17,9,1],[16,13,9,15,1],[13,17,9,15,1],[16,13,17,9,1],[16,14,9,15,1],[14,17,9,15,1],[16,14,17,9,1],[16,17,9,15,1],[11,10,12,13,1],[11,10,14,12,1],[11,10,12,15,1],[11,16,10,12,1],[11,10,12,17,1],[11,10,14,13,1],[11,10,13,15,1],[11,16,10,13,1],[11,10,13,17,1],[11,10,14,15,1],[11,16,10,14,1],[11,10,14,17,1],[11,16,10,15,1],[11,10,17,15,1],[11,16,10,17,1],[10,14,12,13,1],[10,12,13,15,1],[16,10,12,13,1],[10,12,13,17,1],[10,14,12,15,1],[16,10,14,12,1],[10,14,12,17,1],[16,10,12,15,1],[10,12,17,15,1],[16,10,12,17,1],[10,14,13,15,1],[16,10,14,13,1],[10,14,13,17,1],[16,10,13,15,1],[10,13,17,15,1],[16,10,13,17,1],[16,10,14,15,1],[10,14,17,15,1],[16,10,14,17,1],[16,10,17,15,1],[11,14,12,13,1],[11,12,13,15,1],[11,16,12,13,1],[11,12,13,17,1],[11,14,12,15,1],[11,16,14,12,1],[11,14,12,17,1],[11,16,12,15,1],[11,12,17,15,1],[11,16,12,17,1],[11,14,13,15,1],[11,16,14,13,1],[11,14,13,17,1],[11,16,13,15,1],[11,13,17,15,1],[11,16,13,17,1],[11,16,14,15,1],[11,14,17,15,1],[11,16,14,17,1],[11,16,17,15,1],[14,12,13,15,1],[16,14,12,13,1],[14,12,13,17,1],[16,12,13,15,1],[12,13,17,15,1],[16,12,13,17,1],[16,14,12,15,1],[14,12,17,15,1],[16,14,12,17,1],[16,12,17,15,1],[16,14,13,15,1],[14,13,17,15,1],[16,14,13,17,1],[16,13,17,15,1],[16,14,17,15,1]],n5:[[1,2,3,4,5,1],[6,1,2,3,4,1],[1,2,3,7,4,1],[1,2,3,8,4,1],[1,2,3,4,9,1],[1,2,3,10,4,1],[11,1,2,3,4,1],[1,2,3,4,12,1],[1,2,3,4,13,1],[1,2,3,14,4,1],[1,2,3,4,15,1],[16,1,2,3,4,1],[1,2,3,4,17,1],[6,1,2,3,5,1],[1,2,3,7,5,1],[1,2,3,8,5,1],[1,2,3,5,9,1],[1,2,3,10,5,1],[11,1,2,3,5,1],[1,2,3,12,5,1],[1,2,3,13,5,1],[1,2,3,14,5,1],[1,2,3,5,15,1],[16,1,2,3,5,1],[1,2,3,17,5,1],[6,1,2,3,7,1],[6,1,2,3,8,1],[6,1,2,3,9,1],[6,1,2,3,10,1],[11,6,1,2,3,1],[6,1,2,3,12,1],[6,1,2,3,13,1],[6,1,2,3,14,1],[6,1,2,3,15,1],[16,6,1,2,3,1],[6,1,2,3,17,1],[1,2,3,7,8,1],[1,2,3,7,9,1],[1,2,3,7,10,1],[11,1,2,3,7,1],[1,2,3,7,12,1],[1,2,3,7,13,1],[1,2,3,7,14,1],[1,2,3,7,15,1],[16,1,2,3,7,1],[1,2,3,7,17,1],[1,2,3,8,9,1],[1,2,3,10,8,1],[11,1,2,3,8,1],[1,2,3,8,12,1],[1,2,3,8,13,1],[1,2,3,8,14,1],[1,2,3,8,15,1],[16,1,2,3,8,1],[1,2,3,8,17,1],[1,2,3,10,9,1],[11,1,2,3,9,1],[1,2,3,12,9,1],[1,2,3,13,9,1],[1,2,3,14,9,1],[1,2,3,9,15,1],[16,1,2,3,9,1],[1,2,3,17,9,1],[11,1,2,3,10,1],[1,2,3,10,12,1],[1,2,3,10,13,1],[1,2,3,10,14,1],[1,2,3,10,15,1],[16,1,2,3,10,1],[1,2,3,10,17,1],[11,1,2,3,12,1],[11,1,2,3,13,1],[11,1,2,3,14,1],[11,1,2,3,15,1],[11,16,1,2,3,1],[11,1,2,3,17,1],[1,2,3,12,13,1],[1,2,3,14,12,1],[1,2,3,12,15,1],[16,1,2,3,12,1],[1,2,3,12,17,1],[1,2,3,14,13,1],[1,2,3,13,15,1],[16,1,2,3,13,1],[1,2,3,13,17,1],[1,2,3,14,15,1],[16,1,2,3,14,1],[1,2,3,14,17,1],[16,1,2,3,15,1],[1,2,3,17,15,1],[16,1,2,3,17,1],[6,1,2,4,5,1],[1,2,7,4,5,1],[1,2,8,4,5,1],[1,2,4,5,9,1],[1,2,10,4,5,1],[11,1,2,4,5,1],[1,2,4,12,5,1],[1,2,4,13,5,1],[1,2,14,4,5,1],[1,2,4,5,15,1],[16,1,2,4,5,1],[1,2,4,17,5,1],[6,1,2,7,4,1],[6,1,2,8,4,1],[6,1,2,4,9,1],[6,1,2,10,4,1],[11,6,1,2,4,1],[6,1,2,4,12,1],[6,1,2,4,13,1],[6,1,2,14,4,1],[6,1,2,4,15,1],[16,6,1,2,4,1],[6,1,2,4,17,1],[1,2,7,8,4,1],[1,2,7,4,9,1],[1,2,7,10,4,1],[11,1,2,7,4,1],[1,2,7,4,12,1],[1,2,7,4,13,1],[1,2,7,14,4,1],[1,2,7,4,15,1],[16,1,2,7,4,1],[1,2,7,4,17,1],[1,2,8,4,9,1],[1,2,10,8,4,1],[11,1,2,8,4,1],[1,2,8,4,12,1],[1,2,8,4,13,1],[1,2,8,14,4,1],[1,2,8,4,15,1],[16,1,2,8,4,1],[1,2,8,4,17,1],[1,2,10,4,9,1],[11,1,2,4,9,1],[1,2,4,12,9,1],[1,2,4,13,9,1],[1,2,14,4,9,1],[1,2,4,9,15,1],[16,1,2,4,9,1],[1,2,4,17,9,1],[11,1,2,10,4,1],[1,2,10,4,12,1],[1,2,10,4,13,1],[1,2,10,14,4,1],[1,2,10,4,15,1],[16,1,2,10,4,1],[1,2,10,4,17,1],[11,1,2,4,12,1],[11,1,2,4,13,1],[11,1,2,14,4,1],[11,1,2,4,15,1],[11,16,1,2,4,1],[11,1,2,4,17,1],[1,2,4,12,13,1],[1,2,14,4,12,1],[1,2,4,12,15,1],[16,1,2,4,12,1],[1,2,4,12,17,1],[1,2,14,4,13,1],[1,2,4,13,15,1],[16,1,2,4,13,1],[1,2,4,13,17,1],[1,2,14,4,15,1],[16,1,2,14,4,1],[1,2,14,4,17,1],[16,1,2,4,15,1],[1,2,4,17,15,1],[16,1,2,4,17,1],[6,1,2,7,5,1],[6,1,2,8,5,1],[6,1,2,5,9,1],[6,1,2,10,5,1],[11,6,1,2,5,1],[6,1,2,12,5,1],[6,1,2,13,5,1],[6,1,2,14,5,1],[6,1,2,5,15,1],[16,6,1,2,5,1],[6,1,2,17,5,1],[1,2,7,8,5,1],[1,2,7,5,9,1],[1,2,7,10,5,1],[11,1,2,7,5,1],[1,2,7,12,5,1],[1,2,7,13,5,1],[1,2,7,14,5,1],[1,2,7,5,15,1],[16,1,2,7,5,1],[1,2,7,17,5,1],[1,2,8,5,9,1],[1,2,10,8,5,1],[11,1,2,8,5,1],[1,2,8,12,5,1],[1,2,8,13,5,1],[1,2,8,14,5,1],[1,2,8,5,15,1],[16,1,2,8,5,1],[1,2,8,17,5,1],[1,2,10,5,9,1],[11,1,2,5,9,1],[1,2,12,5,9,1],[1,2,13,5,9,1],[1,2,14,5,9,1],[1,2,5,9,15,1],[16,1,2,5,9,1],[1,2,17,5,9,1],[11,1,2,10,5,1],[1,2,10,12,5,1],[1,2,10,13,5,1],[1,2,10,14,5,1],[1,2,10,5,15,1],[16,1,2,10,5,1],[1,2,10,17,5,1],[11,1,2,12,5,1],[11,1,2,13,5,1],[11,1,2,14,5,1],[11,1,2,5,15,1],[11,16,1,2,5,1],[11,1,2,17,5,1],[1,2,12,13,5,1],[1,2,14,12,5,1],[1,2,12,5,15,1],[16,1,2,12,5,1],[1,2,12,17,5,1],[1,2,14,13,5,1],[1,2,13,5,15,1],[16,1,2,13,5,1],[1,2,13,17,5,1],[1,2,14,5,15,1],[16,1,2,14,5,1],[1,2,14,17,5,1],[16,1,2,5,15,1],[1,2,17,5,15,1],[16,1,2,17,5,1],[6,1,2,7,8,1],[6,1,2,7,9,1],[6,1,2,7,10,1],[11,6,1,2,7,1],[6,1,2,7,12,1],[6,1,2,7,13,1],[6,1,2,7,14,1],[6,1,2,7,15,1],[16,6,1,2,7,1],[6,1,2,7,17,1],[6,1,2,8,9,1],[6,1,2,10,8,1],[11,6,1,2,8,1],[6,1,2,8,12,1],[6,1,2,8,13,1],[6,1,2,8,14,1],[6,1,2,8,15,1],[16,6,1,2,8,1],[6,1,2,8,17,1],[6,1,2,10,9,1],[11,6,1,2,9,1],[6,1,2,12,9,1],[6,1,2,13,9,1],[6,1,2,14,9,1],[6,1,2,9,15,1],[16,6,1,2,9,1],[6,1,2,17,9,1],[11,6,1,2,10,1],[6,1,2,10,12,1],[6,1,2,10,13,1],[6,1,2,10,14,1],[6,1,2,10,15,1],[16,6,1,2,10,1],[6,1,2,10,17,1],[11,6,1,2,12,1],[11,6,1,2,13,1],[11,6,1,2,14,1],[11,6,1,2,15,1],[11,16,6,1,2,1],[11,6,1,2,17,1],[6,1,2,12,13,1],[6,1,2,14,12,1],[6,1,2,12,15,1],[16,6,1,2,12,1],[6,1,2,12,17,1],[6,1,2,14,13,1],[6,1,2,13,15,1],[16,6,1,2,13,1],[6,1,2,13,17,1],[6,1,2,14,15,1],[16,6,1,2,14,1],[6,1,2,14,17,1],[16,6,1,2,15,1],[6,1,2,17,15,1],[16,6,1,2,17,1],[1,2,7,8,9,1],[1,2,7,10,8,1],[11,1,2,7,8,1],[1,2,7,8,12,1],[1,2,7,8,13,1],[1,2,7,8,14,1],[1,2,7,8,15,1],[16,1,2,7,8,1],[1,2,7,8,17,1],[1,2,7,10,9,1],[11,1,2,7,9,1],[1,2,7,12,9,1],[1,2,7,13,9,1],[1,2,7,14,9,1],[1,2,7,9,15,1],[16,1,2,7,9,1],[1,2,7,17,9,1],[11,1,2,7,10,1],[1,2,7,10,12,1],[1,2,7,10,13,1],[1,2,7,10,14,1],[1,2,7,10,15,1],[16,1,2,7,10,1],[1,2,7,10,17,1],[11,1,2,7,12,1],[11,1,2,7,13,1],[11,1,2,7,14,1],[11,1,2,7,15,1],[11,16,1,2,7,1],[11,1,2,7,17,1],[1,2,7,12,13,1],[1,2,7,14,12,1],[1,2,7,12,15,1],[16,1,2,7,12,1],[1,2,7,12,17,1],[1,2,7,14,13,1],[1,2,7,13,15,1],[16,1,2,7,13,1],[1,2,7,13,17,1],[1,2,7,14,15,1],[16,1,2,7,14,1],[1,2,7,14,17,1],[16,1,2,7,15,1],[1,2,7,17,15,1],[16,1,2,7,17,1],[1,2,10,8,9,1],[11,1,2,8,9,1],[1,2,8,12,9,1],[1,2,8,13,9,1],[1,2,8,14,9,1],[1,2,8,9,15,1],[16,1,2,8,9,1],[1,2,8,17,9,1],[11,1,2,10,8,1],[1,2,10,8,12,1],[1,2,10,8,13,1],[1,2,10,8,14,1],[1,2,10,8,15,1],[16,1,2,10,8,1],[1,2,10,8,17,1],[11,1,2,8,12,1],[11,1,2,8,13,1],[11,1,2,8,14,1],[11,1,2,8,15,1],[11,16,1,2,8,1],[11,1,2,8,17,1],[1,2,8,12,13,1],[1,2,8,14,12,1],[1,2,8,12,15,1],[16,1,2,8,12,1],[1,2,8,12,17,1],[1,2,8,14,13,1],[1,2,8,13,15,1],[16,1,2,8,13,1],[1,2,8,13,17,1],[1,2,8,14,15,1],[16,1,2,8,14,1],[1,2,8,14,17,1],[16,1,2,8,15,1],[1,2,8,17,15,1],[16,1,2,8,17,1],[11,1,2,10,9,1],[1,2,10,12,9,1],[1,2,10,13,9,1],[1,2,10,14,9,1],[1,2,10,9,15,1],[16,1,2,10,9,1],[1,2,10,17,9,1],[11,1,2,12,9,1],[11,1,2,13,9,1],[11,1,2,14,9,1],[11,1,2,9,15,1],[11,16,1,2,9,1],[11,1,2,17,9,1],[1,2,12,13,9,1],[1,2,14,12,9,1],[1,2,12,9,15,1],[16,1,2,12,9,1],[1,2,12,17,9,1],[1,2,14,13,9,1],[1,2,13,9,15,1],[16,1,2,13,9,1],[1,2,13,17,9,1],[1,2,14,9,15,1],[16,1,2,14,9,1],[1,2,14,17,9,1],[16,1,2,9,15,1],[1,2,17,9,15,1],[16,1,2,17,9,1],[11,1,2,10,12,1],[11,1,2,10,13,1],[11,1,2,10,14,1],[11,1,2,10,15,1],[11,16,1,2,10,1],[11,1,2,10,17,1],[1,2,10,12,13,1],[1,2,10,14,12,1],[1,2,10,12,15,1],[16,1,2,10,12,1],[1,2,10,12,17,1],[1,2,10,14,13,1],[1,2,10,13,15,1],[16,1,2,10,13,1],[1,2,10,13,17,1],[1,2,10,14,15,1],[16,1,2,10,14,1],[1,2,10,14,17,1],[16,1,2,10,15,1],[1,2,10,17,15,1],[16,1,2,10,17,1],[11,1,2,12,13,1],[11,1,2,14,12,1],[11,1,2,12,15,1],[11,16,1,2,12,1],[11,1,2,12,17,1],[11,1,2,14,13,1],[11,1,2,13,15,1],[11,16,1,2,13,1],[11,1,2,13,17,1],[11,1,2,14,15,1],[11,16,1,2,14,1],[11,1,2,14,17,1],[11,16,1,2,15,1],[11,1,2,17,15,1],[11,16,1,2,17,1],[1,2,14,12,13,1],[1,2,12,13,15,1],[16,1,2,12,13,1],[1,2,12,13,17,1],[1,2,14,12,15,1],[16,1,2,14,12,1],[1,2,14,12,17,1],[16,1,2,12,15,1],[1,2,12,17,15,1],[16,1,2,12,17,1],[1,2,14,13,15,1],[16,1,2,14,13,1],[1,2,14,13,17,1],[16,1,2,13,15,1],[1,2,13,17,15,1],[16,1,2,13,17,1],[16,1,2,14,15,1],[1,2,14,17,15,1],[16,1,2,14,17,1],[16,1,2,17,15,1],[6,1,3,4,5,1],[1,3,7,4,5,1],[1,3,8,4,5,1],[1,3,4,5,9,1],[1,3,10,4,5,1],[11,1,3,4,5,1],[1,3,4,12,5,1],[1,3,4,13,5,1],[1,3,14,4,5,1],[1,3,4,5,15,1],[16,1,3,4,5,1],[1,3,4,17,5,1],[6,1,3,7,4,1],[6,1,3,8,4,1],[6,1,3,4,9,1],[6,1,3,10,4,1],[11,6,1,3,4,1],[6,1,3,4,12,1],[6,1,3,4,13,1],[6,1,3,14,4,1],[6,1,3,4,15,1],[16,6,1,3,4,1],[6,1,3,4,17,1],[1,3,7,8,4,1],[1,3,7,4,9,1],[1,3,7,10,4,1],[11,1,3,7,4,1],[1,3,7,4,12,1],[1,3,7,4,13,1],[1,3,7,14,4,1],[1,3,7,4,15,1],[16,1,3,7,4,1],[1,3,7,4,17,1],[1,3,8,4,9,1],[1,3,10,8,4,1],[11,1,3,8,4,1],[1,3,8,4,12,1],[1,3,8,4,13,1],[1,3,8,14,4,1],[1,3,8,4,15,1],[16,1,3,8,4,1],[1,3,8,4,17,1],[1,3,10,4,9,1],[11,1,3,4,9,1],[1,3,4,12,9,1],[1,3,4,13,9,1],[1,3,14,4,9,1],[1,3,4,9,15,1],[16,1,3,4,9,1],[1,3,4,17,9,1],[11,1,3,10,4,1],[1,3,10,4,12,1],[1,3,10,4,13,1],[1,3,10,14,4,1],[1,3,10,4,15,1],[16,1,3,10,4,1],[1,3,10,4,17,1],[11,1,3,4,12,1],[11,1,3,4,13,1],[11,1,3,14,4,1],[11,1,3,4,15,1],[11,16,1,3,4,1],[11,1,3,4,17,1],[1,3,4,12,13,1],[1,3,14,4,12,1],[1,3,4,12,15,1],[16,1,3,4,12,1],[1,3,4,12,17,1],[1,3,14,4,13,1],[1,3,4,13,15,1],[16,1,3,4,13,1],[1,3,4,13,17,1],[1,3,14,4,15,1],[16,1,3,14,4,1],[1,3,14,4,17,1],[16,1,3,4,15,1],[1,3,4,17,15,1],[16,1,3,4,17,1],[6,1,3,7,5,1],[6,1,3,8,5,1],[6,1,3,5,9,1],[6,1,3,10,5,1],[11,6,1,3,5,1],[6,1,3,12,5,1],[6,1,3,13,5,1],[6,1,3,14,5,1],[6,1,3,5,15,1],[16,6,1,3,5,1],[6,1,3,17,5,1],[1,3,7,8,5,1],[1,3,7,5,9,1],[1,3,7,10,5,1],[11,1,3,7,5,1],[1,3,7,12,5,1],[1,3,7,13,5,1],[1,3,7,14,5,1],[1,3,7,5,15,1],[16,1,3,7,5,1],[1,3,7,17,5,1],[1,3,8,5,9,1],[1,3,10,8,5,1],[11,1,3,8,5,1],[1,3,8,12,5,1],[1,3,8,13,5,1],[1,3,8,14,5,1],[1,3,8,5,15,1],[16,1,3,8,5,1],[1,3,8,17,5,1],[1,3,10,5,9,1],[11,1,3,5,9,1],[1,3,12,5,9,1],[1,3,13,5,9,1],[1,3,14,5,9,1],[1,3,5,9,15,1],[16,1,3,5,9,1],[1,3,17,5,9,1],[11,1,3,10,5,1],[1,3,10,12,5,1],[1,3,10,13,5,1],[1,3,10,14,5,1],[1,3,10,5,15,1],[16,1,3,10,5,1],[1,3,10,17,5,1],[11,1,3,12,5,1],[11,1,3,13,5,1],[11,1,3,14,5,1],[11,1,3,5,15,1],[11,16,1,3,5,1],[11,1,3,17,5,1],[1,3,12,13,5,1],[1,3,14,12,5,1],[1,3,12,5,15,1],[16,1,3,12,5,1],[1,3,12,17,5,1],[1,3,14,13,5,1],[1,3,13,5,15,1],[16,1,3,13,5,1],[1,3,13,17,5,1],[1,3,14,5,15,1],[16,1,3,14,5,1],[1,3,14,17,5,1],[16,1,3,5,15,1],[1,3,17,5,15,1],[16,1,3,17,5,1],[6,1,3,7,8,1],[6,1,3,7,9,1],[6,1,3,7,10,1],[11,6,1,3,7,1],[6,1,3,7,12,1],[6,1,3,7,13,1],[6,1,3,7,14,1],[6,1,3,7,15,1],[16,6,1,3,7,1],[6,1,3,7,17,1],[6,1,3,8,9,1],[6,1,3,10,8,1],[11,6,1,3,8,1],[6,1,3,8,12,1],[6,1,3,8,13,1],[6,1,3,8,14,1],[6,1,3,8,15,1],[16,6,1,3,8,1],[6,1,3,8,17,1],[6,1,3,10,9,1],[11,6,1,3,9,1],[6,1,3,12,9,1],[6,1,3,13,9,1],[6,1,3,14,9,1],[6,1,3,9,15,1],[16,6,1,3,9,1],[6,1,3,17,9,1],[11,6,1,3,10,1],[6,1,3,10,12,1],[6,1,3,10,13,1],[6,1,3,10,14,1],[6,1,3,10,15,1],[16,6,1,3,10,1],[6,1,3,10,17,1],[11,6,1,3,12,1],[11,6,1,3,13,1],[11,6,1,3,14,1],[11,6,1,3,15,1],[11,16,6,1,3,1],[11,6,1,3,17,1],[6,1,3,12,13,1],[6,1,3,14,12,1],[6,1,3,12,15,1],[16,6,1,3,12,1],[6,1,3,12,17,1],[6,1,3,14,13,1],[6,1,3,13,15,1],[16,6,1,3,13,1],[6,1,3,13,17,1],[6,1,3,14,15,1],[16,6,1,3,14,1],[6,1,3,14,17,1],[16,6,1,3,15,1],[6,1,3,17,15,1],[16,6,1,3,17,1],[1,3,7,8,9,1],[1,3,7,10,8,1],[11,1,3,7,8,1],[1,3,7,8,12,1],[1,3,7,8,13,1],[1,3,7,8,14,1],[1,3,7,8,15,1],[16,1,3,7,8,1],[1,3,7,8,17,1],[1,3,7,10,9,1],[11,1,3,7,9,1],[1,3,7,12,9,1],[1,3,7,13,9,1],[1,3,7,14,9,1],[1,3,7,9,15,1],[16,1,3,7,9,1],[1,3,7,17,9,1],[11,1,3,7,10,1],[1,3,7,10,12,1],[1,3,7,10,13,1],[1,3,7,10,14,1],[1,3,7,10,15,1],[16,1,3,7,10,1],[1,3,7,10,17,1],[11,1,3,7,12,1],[11,1,3,7,13,1],[11,1,3,7,14,1],[11,1,3,7,15,1],[11,16,1,3,7,1],[11,1,3,7,17,1],[1,3,7,12,13,1],[1,3,7,14,12,1],[1,3,7,12,15,1],[16,1,3,7,12,1],[1,3,7,12,17,1],[1,3,7,14,13,1],[1,3,7,13,15,1],[16,1,3,7,13,1],[1,3,7,13,17,1],[1,3,7,14,15,1],[16,1,3,7,14,1],[1,3,7,14,17,1],[16,1,3,7,15,1],[1,3,7,17,15,1],[16,1,3,7,17,1],[1,3,10,8,9,1],[11,1,3,8,9,1],[1,3,8,12,9,1],[1,3,8,13,9,1],[1,3,8,14,9,1],[1,3,8,9,15,1],[16,1,3,8,9,1],[1,3,8,17,9,1],[11,1,3,10,8,1],[1,3,10,8,12,1],[1,3,10,8,13,1],[1,3,10,8,14,1],[1,3,10,8,15,1],[16,1,3,10,8,1],[1,3,10,8,17,1],[11,1,3,8,12,1],[11,1,3,8,13,1],[11,1,3,8,14,1],[11,1,3,8,15,1],[11,16,1,3,8,1],[11,1,3,8,17,1],[1,3,8,12,13,1],[1,3,8,14,12,1],[1,3,8,12,15,1],[16,1,3,8,12,1],[1,3,8,12,17,1],[1,3,8,14,13,1],[1,3,8,13,15,1],[16,1,3,8,13,1],[1,3,8,13,17,1],[1,3,8,14,15,1],[16,1,3,8,14,1],[1,3,8,14,17,1],[16,1,3,8,15,1],[1,3,8,17,15,1],[16,1,3,8,17,1],[11,1,3,10,9,1],[1,3,10,12,9,1],[1,3,10,13,9,1],[1,3,10,14,9,1],[1,3,10,9,15,1],[16,1,3,10,9,1],[1,3,10,17,9,1],[11,1,3,12,9,1],[11,1,3,13,9,1],[11,1,3,14,9,1],[11,1,3,9,15,1],[11,16,1,3,9,1],[11,1,3,17,9,1],[1,3,12,13,9,1],[1,3,14,12,9,1],[1,3,12,9,15,1],[16,1,3,12,9,1],[1,3,12,17,9,1],[1,3,14,13,9,1],[1,3,13,9,15,1],[16,1,3,13,9,1],[1,3,13,17,9,1],[1,3,14,9,15,1],[16,1,3,14,9,1],[1,3,14,17,9,1],[16,1,3,9,15,1],[1,3,17,9,15,1],[16,1,3,17,9,1],[11,1,3,10,12,1],[11,1,3,10,13,1],[11,1,3,10,14,1],[11,1,3,10,15,1],[11,16,1,3,10,1],[11,1,3,10,17,1],[1,3,10,12,13,1],[1,3,10,14,12,1],[1,3,10,12,15,1],[16,1,3,10,12,1],[1,3,10,12,17,1],[1,3,10,14,13,1],[1,3,10,13,15,1],[16,1,3,10,13,1],[1,3,10,13,17,1],[1,3,10,14,15,1],[16,1,3,10,14,1],[1,3,10,14,17,1],[16,1,3,10,15,1],[1,3,10,17,15,1],[16,1,3,10,17,1],[11,1,3,12,13,1],[11,1,3,14,12,1],[11,1,3,12,15,1],[11,16,1,3,12,1],[11,1,3,12,17,1],[11,1,3,14,13,1],[11,1,3,13,15,1],[11,16,1,3,13,1],[11,1,3,13,17,1],[11,1,3,14,15,1],[11,16,1,3,14,1],[11,1,3,14,17,1],[11,16,1,3,15,1],[11,1,3,17,15,1],[11,16,1,3,17,1],[1,3,14,12,13,1],[1,3,12,13,15,1],[16,1,3,12,13,1],[1,3,12,13,17,1],[1,3,14,12,15,1],[16,1,3,14,12,1],[1,3,14,12,17,1],[16,1,3,12,15,1],[1,3,12,17,15,1],[16,1,3,12,17,1],[1,3,14,13,15,1],[16,1,3,14,13,1],[1,3,14,13,17,1],[16,1,3,13,15,1],[1,3,13,17,15,1],[16,1,3,13,17,1],[16,1,3,14,15,1],[1,3,14,17,15,1],[16,1,3,14,17,1],[16,1,3,17,15,1],[6,1,7,4,5,1],[6,1,8,4,5,1],[6,1,4,5,9,1],[6,1,10,4,5,1],[11,6,1,4,5,1],[6,1,4,12,5,1],[6,1,4,13,5,1],[6,1,14,4,5,1],[6,1,4,5,15,1],[16,6,1,4,5,1],[6,1,4,17,5,1],[1,7,8,4,5,1],[1,7,4,5,9,1],[1,7,10,4,5,1],[11,1,7,4,5,1],[1,7,4,12,5,1],[1,7,4,13,5,1],[1,7,14,4,5,1],[1,7,4,5,15,1],[16,1,7,4,5,1],[1,7,4,17,5,1],[1,8,4,5,9,1],[1,10,8,4,5,1],[11,1,8,4,5,1],[1,8,4,12,5,1],[1,8,4,13,5,1],[1,8,14,4,5,1],[1,8,4,5,15,1],[16,1,8,4,5,1],[1,8,4,17,5,1],[1,10,4,5,9,1],[11,1,4,5,9,1],[1,4,12,5,9,1],[1,4,13,5,9,1],[1,14,4,5,9,1],[1,4,5,9,15,1],[16,1,4,5,9,1],[1,4,17,5,9,1],[11,1,10,4,5,1],[1,10,4,12,5,1],[1,10,4,13,5,1],[1,10,14,4,5,1],[1,10,4,5,15,1],[16,1,10,4,5,1],[1,10,4,17,5,1],[11,1,4,12,5,1],[11,1,4,13,5,1],[11,1,14,4,5,1],[11,1,4,5,15,1],[11,16,1,4,5,1],[11,1,4,17,5,1],[1,4,12,13,5,1],[1,14,4,12,5,1],[1,4,12,5,15,1],[16,1,4,12,5,1],[1,4,12,17,5,1],[1,14,4,13,5,1],[1,4,13,5,15,1],[16,1,4,13,5,1],[1,4,13,17,5,1],[1,14,4,5,15,1],[16,1,14,4,5,1],[1,14,4,17,5,1],[16,1,4,5,15,1],[1,4,17,5,15,1],[16,1,4,17,5,1],[6,1,7,8,4,1],[6,1,7,4,9,1],[6,1,7,10,4,1],[11,6,1,7,4,1],[6,1,7,4,12,1],[6,1,7,4,13,1],[6,1,7,14,4,1],[6,1,7,4,15,1],[16,6,1,7,4,1],[6,1,7,4,17,1],[6,1,8,4,9,1],[6,1,10,8,4,1],[11,6,1,8,4,1],[6,1,8,4,12,1],[6,1,8,4,13,1],[6,1,8,14,4,1],[6,1,8,4,15,1],[16,6,1,8,4,1],[6,1,8,4,17,1],[6,1,10,4,9,1],[11,6,1,4,9,1],[6,1,4,12,9,1],[6,1,4,13,9,1],[6,1,14,4,9,1],[6,1,4,9,15,1],[16,6,1,4,9,1],[6,1,4,17,9,1],[11,6,1,10,4,1],[6,1,10,4,12,1],[6,1,10,4,13,1],[6,1,10,14,4,1],[6,1,10,4,15,1],[16,6,1,10,4,1],[6,1,10,4,17,1],[11,6,1,4,12,1],[11,6,1,4,13,1],[11,6,1,14,4,1],[11,6,1,4,15,1],[11,16,6,1,4,1],[11,6,1,4,17,1],[6,1,4,12,13,1],[6,1,14,4,12,1],[6,1,4,12,15,1],[16,6,1,4,12,1],[6,1,4,12,17,1],[6,1,14,4,13,1],[6,1,4,13,15,1],[16,6,1,4,13,1],[6,1,4,13,17,1],[6,1,14,4,15,1],[16,6,1,14,4,1],[6,1,14,4,17,1],[16,6,1,4,15,1],[6,1,4,17,15,1],[16,6,1,4,17,1],[1,7,8,4,9,1],[1,7,10,8,4,1],[11,1,7,8,4,1],[1,7,8,4,12,1],[1,7,8,4,13,1],[1,7,8,14,4,1],[1,7,8,4,15,1],[16,1,7,8,4,1],[1,7,8,4,17,1],[1,7,10,4,9,1],[11,1,7,4,9,1],[1,7,4,12,9,1],[1,7,4,13,9,1],[1,7,14,4,9,1],[1,7,4,9,15,1],[16,1,7,4,9,1],[1,7,4,17,9,1],[11,1,7,10,4,1],[1,7,10,4,12,1],[1,7,10,4,13,1],[1,7,10,14,4,1],[1,7,10,4,15,1],[16,1,7,10,4,1],[1,7,10,4,17,1],[11,1,7,4,12,1],[11,1,7,4,13,1],[11,1,7,14,4,1],[11,1,7,4,15,1],[11,16,1,7,4,1],[11,1,7,4,17,1],[1,7,4,12,13,1],[1,7,14,4,12,1],[1,7,4,12,15,1],[16,1,7,4,12,1],[1,7,4,12,17,1],[1,7,14,4,13,1],[1,7,4,13,15,1],[16,1,7,4,13,1],[1,7,4,13,17,1],[1,7,14,4,15,1],[16,1,7,14,4,1],[1,7,14,4,17,1],[16,1,7,4,15,1],[1,7,4,17,15,1],[16,1,7,4,17,1],[1,10,8,4,9,1],[11,1,8,4,9,1],[1,8,4,12,9,1],[1,8,4,13,9,1],[1,8,14,4,9,1],[1,8,4,9,15,1],[16,1,8,4,9,1],[1,8,4,17,9,1],[11,1,10,8,4,1],[1,10,8,4,12,1],[1,10,8,4,13,1],[1,10,8,14,4,1],[1,10,8,4,15,1],[16,1,10,8,4,1],[1,10,8,4,17,1],[11,1,8,4,12,1],[11,1,8,4,13,1],[11,1,8,14,4,1],[11,1,8,4,15,1],[11,16,1,8,4,1],[11,1,8,4,17,1],[1,8,4,12,13,1],[1,8,14,4,12,1],[1,8,4,12,15,1],[16,1,8,4,12,1],[1,8,4,12,17,1],[1,8,14,4,13,1],[1,8,4,13,15,1],[16,1,8,4,13,1],[1,8,4,13,17,1],[1,8,14,4,15,1],[16,1,8,14,4,1],[1,8,14,4,17,1],[16,1,8,4,15,1],[1,8,4,17,15,1],[16,1,8,4,17,1],[11,1,10,4,9,1],[1,10,4,12,9,1],[1,10,4,13,9,1],[1,10,14,4,9,1],[1,10,4,9,15,1],[16,1,10,4,9,1],[1,10,4,17,9,1],[11,1,4,12,9,1],[11,1,4,13,9,1],[11,1,14,4,9,1],[11,1,4,9,15,1],[11,16,1,4,9,1],[11,1,4,17,9,1],[1,4,12,13,9,1],[1,14,4,12,9,1],[1,4,12,9,15,1],[16,1,4,12,9,1],[1,4,12,17,9,1],[1,14,4,13,9,1],[1,4,13,9,15,1],[16,1,4,13,9,1],[1,4,13,17,9,1],[1,14,4,9,15,1],[16,1,14,4,9,1],[1,14,4,17,9,1],[16,1,4,9,15,1],[1,4,17,9,15,1],[16,1,4,17,9,1],[11,1,10,4,12,1],[11,1,10,4,13,1],[11,1,10,14,4,1],[11,1,10,4,15,1],[11,16,1,10,4,1],[11,1,10,4,17,1],[1,10,4,12,13,1],[1,10,14,4,12,1],[1,10,4,12,15,1],[16,1,10,4,12,1],[1,10,4,12,17,1],[1,10,14,4,13,1],[1,10,4,13,15,1],[16,1,10,4,13,1],[1,10,4,13,17,1],[1,10,14,4,15,1],[16,1,10,14,4,1],[1,10,14,4,17,1],[16,1,10,4,15,1],[1,10,4,17,15,1],[16,1,10,4,17,1],[11,1,4,12,13,1],[11,1,14,4,12,1],[11,1,4,12,15,1],[11,16,1,4,12,1],[11,1,4,12,17,1],[11,1,14,4,13,1],[11,1,4,13,15,1],[11,16,1,4,13,1],[11,1,4,13,17,1],[11,1,14,4,15,1],[11,16,1,14,4,1],[11,1,14,4,17,1],[11,16,1,4,15,1],[11,1,4,17,15,1],[11,16,1,4,17,1],[1,14,4,12,13,1],[1,4,12,13,15,1],[16,1,4,12,13,1],[1,4,12,13,17,1],[1,14,4,12,15,1],[16,1,14,4,12,1],[1,14,4,12,17,1],[16,1,4,12,15,1],[1,4,12,17,15,1],[16,1,4,12,17,1],[1,14,4,13,15,1],[16,1,14,4,13,1],[1,14,4,13,17,1],[16,1,4,13,15,1],[1,4,13,17,15,1],[16,1,4,13,17,1],[16,1,14,4,15,1],[1,14,4,17,15,1],[16,1,14,4,17,1],[16,1,4,17,15,1],[6,1,7,8,5,1],[6,1,7,5,9,1],[6,1,7,10,5,1],[11,6,1,7,5,1],[6,1,7,12,5,1],[6,1,7,13,5,1],[6,1,7,14,5,1],[6,1,7,5,15,1],[16,6,1,7,5,1],[6,1,7,17,5,1],[6,1,8,5,9,1],[6,1,10,8,5,1],[11,6,1,8,5,1],[6,1,8,12,5,1],[6,1,8,13,5,1],[6,1,8,14,5,1],[6,1,8,5,15,1],[16,6,1,8,5,1],[6,1,8,17,5,1],[6,1,10,5,9,1],[11,6,1,5,9,1],[6,1,12,5,9,1],[6,1,13,5,9,1],[6,1,14,5,9,1],[6,1,5,9,15,1],[16,6,1,5,9,1],[6,1,17,5,9,1],[11,6,1,10,5,1],[6,1,10,12,5,1],[6,1,10,13,5,1],[6,1,10,14,5,1],[6,1,10,5,15,1],[16,6,1,10,5,1],[6,1,10,17,5,1],[11,6,1,12,5,1],[11,6,1,13,5,1],[11,6,1,14,5,1],[11,6,1,5,15,1],[11,16,6,1,5,1],[11,6,1,17,5,1],[6,1,12,13,5,1],[6,1,14,12,5,1],[6,1,12,5,15,1],[16,6,1,12,5,1],[6,1,12,17,5,1],[6,1,14,13,5,1],[6,1,13,5,15,1],[16,6,1,13,5,1],[6,1,13,17,5,1],[6,1,14,5,15,1],[16,6,1,14,5,1],[6,1,14,17,5,1],[16,6,1,5,15,1],[6,1,17,5,15,1],[16,6,1,17,5,1],[1,7,8,5,9,1],[1,7,10,8,5,1],[11,1,7,8,5,1],[1,7,8,12,5,1],[1,7,8,13,5,1],[1,7,8,14,5,1],[1,7,8,5,15,1],[16,1,7,8,5,1],[1,7,8,17,5,1],[1,7,10,5,9,1],[11,1,7,5,9,1],[1,7,12,5,9,1],[1,7,13,5,9,1],[1,7,14,5,9,1],[1,7,5,9,15,1],[16,1,7,5,9,1],[1,7,17,5,9,1],[11,1,7,10,5,1],[1,7,10,12,5,1],[1,7,10,13,5,1],[1,7,10,14,5,1],[1,7,10,5,15,1],[16,1,7,10,5,1],[1,7,10,17,5,1],[11,1,7,12,5,1],[11,1,7,13,5,1],[11,1,7,14,5,1],[11,1,7,5,15,1],[11,16,1,7,5,1],[11,1,7,17,5,1],[1,7,12,13,5,1],[1,7,14,12,5,1],[1,7,12,5,15,1],[16,1,7,12,5,1],[1,7,12,17,5,1],[1,7,14,13,5,1],[1,7,13,5,15,1],[16,1,7,13,5,1],[1,7,13,17,5,1],[1,7,14,5,15,1],[16,1,7,14,5,1],[1,7,14,17,5,1],[16,1,7,5,15,1],[1,7,17,5,15,1],[16,1,7,17,5,1],[1,10,8,5,9,1],[11,1,8,5,9,1],[1,8,12,5,9,1],[1,8,13,5,9,1],[1,8,14,5,9,1],[1,8,5,9,15,1],[16,1,8,5,9,1],[1,8,17,5,9,1],[11,1,10,8,5,1],[1,10,8,12,5,1],[1,10,8,13,5,1],[1,10,8,14,5,1],[1,10,8,5,15,1],[16,1,10,8,5,1],[1,10,8,17,5,1],[11,1,8,12,5,1],[11,1,8,13,5,1],[11,1,8,14,5,1],[11,1,8,5,15,1],[11,16,1,8,5,1],[11,1,8,17,5,1],[1,8,12,13,5,1],[1,8,14,12,5,1],[1,8,12,5,15,1],[16,1,8,12,5,1],[1,8,12,17,5,1],[1,8,14,13,5,1],[1,8,13,5,15,1],[16,1,8,13,5,1],[1,8,13,17,5,1],[1,8,14,5,15,1],[16,1,8,14,5,1],[1,8,14,17,5,1],[16,1,8,5,15,1],[1,8,17,5,15,1],[16,1,8,17,5,1],[11,1,10,5,9,1],[1,10,12,5,9,1],[1,10,13,5,9,1],[1,10,14,5,9,1],[1,10,5,9,15,1],[16,1,10,5,9,1],[1,10,17,5,9,1],[11,1,12,5,9,1],[11,1,13,5,9,1],[11,1,14,5,9,1],[11,1,5,9,15,1],[11,16,1,5,9,1],[11,1,17,5,9,1],[1,12,13,5,9,1],[1,14,12,5,9,1],[1,12,5,9,15,1],[16,1,12,5,9,1],[1,12,17,5,9,1],[1,14,13,5,9,1],[1,13,5,9,15,1],[16,1,13,5,9,1],[1,13,17,5,9,1],[1,14,5,9,15,1],[16,1,14,5,9,1],[1,14,17,5,9,1],[16,1,5,9,15,1],[1,17,5,9,15,1],[16,1,17,5,9,1],[11,1,10,12,5,1],[11,1,10,13,5,1],[11,1,10,14,5,1],[11,1,10,5,15,1],[11,16,1,10,5,1],[11,1,10,17,5,1],[1,10,12,13,5,1],[1,10,14,12,5,1],[1,10,12,5,15,1],[16,1,10,12,5,1],[1,10,12,17,5,1],[1,10,14,13,5,1],[1,10,13,5,15,1],[16,1,10,13,5,1],[1,10,13,17,5,1],[1,10,14,5,15,1],[16,1,10,14,5,1],[1,10,14,17,5,1],[16,1,10,5,15,1],[1,10,17,5,15,1],[16,1,10,17,5,1],[11,1,12,13,5,1],[11,1,14,12,5,1],[11,1,12,5,15,1],[11,16,1,12,5,1],[11,1,12,17,5,1],[11,1,14,13,5,1],[11,1,13,5,15,1],[11,16,1,13,5,1],[11,1,13,17,5,1],[11,1,14,5,15,1],[11,16,1,14,5,1],[11,1,14,17,5,1],[11,16,1,5,15,1],[11,1,17,5,15,1],[11,16,1,17,5,1],[1,14,12,13,5,1],[1,12,13,5,15,1],[16,1,12,13,5,1],[1,12,13,17,5,1],[1,14,12,5,15,1],[16,1,14,12,5,1],[1,14,12,17,5,1],[16,1,12,5,15,1],[1,12,17,5,15,1],[16,1,12,17,5,1],[1,14,13,5,15,1],[16,1,14,13,5,1],[1,14,13,17,5,1],[16,1,13,5,15,1],[1,13,17,5,15,1],[16,1,13,17,5,1],[16,1,14,5,15,1],[1,14,17,5,15,1],[16,1,14,17,5,1],[16,1,17,5,15,1],[6,1,7,8,9,1],[6,1,7,10,8,1],[11,6,1,7,8,1],[6,1,7,8,12,1],[6,1,7,8,13,1],[6,1,7,8,14,1],[6,1,7,8,15,1],[16,6,1,7,8,1],[6,1,7,8,17,1],[6,1,7,10,9,1],[11,6,1,7,9,1],[6,1,7,12,9,1],[6,1,7,13,9,1],[6,1,7,14,9,1],[6,1,7,9,15,1],[16,6,1,7,9,1],[6,1,7,17,9,1],[11,6,1,7,10,1],[6,1,7,10,12,1],[6,1,7,10,13,1],[6,1,7,10,14,1],[6,1,7,10,15,1],[16,6,1,7,10,1],[6,1,7,10,17,1],[11,6,1,7,12,1],[11,6,1,7,13,1],[11,6,1,7,14,1],[11,6,1,7,15,1],[11,16,6,1,7,1],[11,6,1,7,17,1],[6,1,7,12,13,1],[6,1,7,14,12,1],[6,1,7,12,15,1],[16,6,1,7,12,1],[6,1,7,12,17,1],[6,1,7,14,13,1],[6,1,7,13,15,1],[16,6,1,7,13,1],[6,1,7,13,17,1],[6,1,7,14,15,1],[16,6,1,7,14,1],[6,1,7,14,17,1],[16,6,1,7,15,1],[6,1,7,17,15,1],[16,6,1,7,17,1],[6,1,10,8,9,1],[11,6,1,8,9,1],[6,1,8,12,9,1],[6,1,8,13,9,1],[6,1,8,14,9,1],[6,1,8,9,15,1],[16,6,1,8,9,1],[6,1,8,17,9,1],[11,6,1,10,8,1],[6,1,10,8,12,1],[6,1,10,8,13,1],[6,1,10,8,14,1],[6,1,10,8,15,1],[16,6,1,10,8,1],[6,1,10,8,17,1],[11,6,1,8,12,1],[11,6,1,8,13,1],[11,6,1,8,14,1],[11,6,1,8,15,1],[11,16,6,1,8,1],[11,6,1,8,17,1],[6,1,8,12,13,1],[6,1,8,14,12,1],[6,1,8,12,15,1],[16,6,1,8,12,1],[6,1,8,12,17,1],[6,1,8,14,13,1],[6,1,8,13,15,1],[16,6,1,8,13,1],[6,1,8,13,17,1],[6,1,8,14,15,1],[16,6,1,8,14,1],[6,1,8,14,17,1],[16,6,1,8,15,1],[6,1,8,17,15,1],[16,6,1,8,17,1],[11,6,1,10,9,1],[6,1,10,12,9,1],[6,1,10,13,9,1],[6,1,10,14,9,1],[6,1,10,9,15,1],[16,6,1,10,9,1],[6,1,10,17,9,1],[11,6,1,12,9,1],[11,6,1,13,9,1],[11,6,1,14,9,1],[11,6,1,9,15,1],[11,16,6,1,9,1],[11,6,1,17,9,1],[6,1,12,13,9,1],[6,1,14,12,9,1],[6,1,12,9,15,1],[16,6,1,12,9,1],[6,1,12,17,9,1],[6,1,14,13,9,1],[6,1,13,9,15,1],[16,6,1,13,9,1],[6,1,13,17,9,1],[6,1,14,9,15,1],[16,6,1,14,9,1],[6,1,14,17,9,1],[16,6,1,9,15,1],[6,1,17,9,15,1],[16,6,1,17,9,1],[11,6,1,10,12,1],[11,6,1,10,13,1],[11,6,1,10,14,1],[11,6,1,10,15,1],[11,16,6,1,10,1],[11,6,1,10,17,1],[6,1,10,12,13,1],[6,1,10,14,12,1],[6,1,10,12,15,1],[16,6,1,10,12,1],[6,1,10,12,17,1],[6,1,10,14,13,1],[6,1,10,13,15,1],[16,6,1,10,13,1],[6,1,10,13,17,1],[6,1,10,14,15,1],[16,6,1,10,14,1],[6,1,10,14,17,1],[16,6,1,10,15,1],[6,1,10,17,15,1],[16,6,1,10,17,1],[11,6,1,12,13,1],[11,6,1,14,12,1],[11,6,1,12,15,1],[11,16,6,1,12,1],[11,6,1,12,17,1],[11,6,1,14,13,1],[11,6,1,13,15,1],[11,16,6,1,13,1],[11,6,1,13,17,1],[11,6,1,14,15,1],[11,16,6,1,14,1],[11,6,1,14,17,1],[11,16,6,1,15,1],[11,6,1,17,15,1],[11,16,6,1,17,1],[6,1,14,12,13,1],[6,1,12,13,15,1],[16,6,1,12,13,1],[6,1,12,13,17,1],[6,1,14,12,15,1],[16,6,1,14,12,1],[6,1,14,12,17,1],[16,6,1,12,15,1],[6,1,12,17,15,1],[16,6,1,12,17,1],[6,1,14,13,15,1],[16,6,1,14,13,1],[6,1,14,13,17,1],[16,6,1,13,15,1],[6,1,13,17,15,1],[16,6,1,13,17,1],[16,6,1,14,15,1],[6,1,14,17,15,1],[16,6,1,14,17,1],[16,6,1,17,15,1],[1,7,10,8,9,1],[11,1,7,8,9,1],[1,7,8,12,9,1],[1,7,8,13,9,1],[1,7,8,14,9,1],[1,7,8,9,15,1],[16,1,7,8,9,1],[1,7,8,17,9,1],[11,1,7,10,8,1],[1,7,10,8,12,1],[1,7,10,8,13,1],[1,7,10,8,14,1],[1,7,10,8,15,1],[16,1,7,10,8,1],[1,7,10,8,17,1],[11,1,7,8,12,1],[11,1,7,8,13,1],[11,1,7,8,14,1],[11,1,7,8,15,1],[11,16,1,7,8,1],[11,1,7,8,17,1],[1,7,8,12,13,1],[1,7,8,14,12,1],[1,7,8,12,15,1],[16,1,7,8,12,1],[1,7,8,12,17,1],[1,7,8,14,13,1],[1,7,8,13,15,1],[16,1,7,8,13,1],[1,7,8,13,17,1],[1,7,8,14,15,1],[16,1,7,8,14,1],[1,7,8,14,17,1],[16,1,7,8,15,1],[1,7,8,17,15,1],[16,1,7,8,17,1],[11,1,7,10,9,1],[1,7,10,12,9,1],[1,7,10,13,9,1],[1,7,10,14,9,1],[1,7,10,9,15,1],[16,1,7,10,9,1],[1,7,10,17,9,1],[11,1,7,12,9,1],[11,1,7,13,9,1],[11,1,7,14,9,1],[11,1,7,9,15,1],[11,16,1,7,9,1],[11,1,7,17,9,1],[1,7,12,13,9,1],[1,7,14,12,9,1],[1,7,12,9,15,1],[16,1,7,12,9,1],[1,7,12,17,9,1],[1,7,14,13,9,1],[1,7,13,9,15,1],[16,1,7,13,9,1],[1,7,13,17,9,1],[1,7,14,9,15,1],[16,1,7,14,9,1],[1,7,14,17,9,1],[16,1,7,9,15,1],[1,7,17,9,15,1],[16,1,7,17,9,1],[11,1,7,10,12,1],[11,1,7,10,13,1],[11,1,7,10,14,1],[11,1,7,10,15,1],[11,16,1,7,10,1],[11,1,7,10,17,1],[1,7,10,12,13,1],[1,7,10,14,12,1],[1,7,10,12,15,1],[16,1,7,10,12,1],[1,7,10,12,17,1],[1,7,10,14,13,1],[1,7,10,13,15,1],[16,1,7,10,13,1],[1,7,10,13,17,1],[1,7,10,14,15,1],[16,1,7,10,14,1],[1,7,10,14,17,1],[16,1,7,10,15,1],[1,7,10,17,15,1],[16,1,7,10,17,1],[11,1,7,12,13,1],[11,1,7,14,12,1],[11,1,7,12,15,1],[11,16,1,7,12,1],[11,1,7,12,17,1],[11,1,7,14,13,1],[11,1,7,13,15,1],[11,16,1,7,13,1],[11,1,7,13,17,1],[11,1,7,14,15,1],[11,16,1,7,14,1],[11,1,7,14,17,1],[11,16,1,7,15,1],[11,1,7,17,15,1],[11,16,1,7,17,1],[1,7,14,12,13,1],[1,7,12,13,15,1],[16,1,7,12,13,1],[1,7,12,13,17,1],[1,7,14,12,15,1],[16,1,7,14,12,1],[1,7,14,12,17,1],[16,1,7,12,15,1],[1,7,12,17,15,1],[16,1,7,12,17,1],[1,7,14,13,15,1],[16,1,7,14,13,1],[1,7,14,13,17,1],[16,1,7,13,15,1],[1,7,13,17,15,1],[16,1,7,13,17,1],[16,1,7,14,15,1],[1,7,14,17,15,1],[16,1,7,14,17,1],[16,1,7,17,15,1],[11,1,10,8,9,1],[1,10,8,12,9,1],[1,10,8,13,9,1],[1,10,8,14,9,1],[1,10,8,9,15,1],[16,1,10,8,9,1],[1,10,8,17,9,1],[11,1,8,12,9,1],[11,1,8,13,9,1],[11,1,8,14,9,1],[11,1,8,9,15,1],[11,16,1,8,9,1],[11,1,8,17,9,1],[1,8,12,13,9,1],[1,8,14,12,9,1],[1,8,12,9,15,1],[16,1,8,12,9,1],[1,8,12,17,9,1],[1,8,14,13,9,1],[1,8,13,9,15,1],[16,1,8,13,9,1],[1,8,13,17,9,1],[1,8,14,9,15,1],[16,1,8,14,9,1],[1,8,14,17,9,1],[16,1,8,9,15,1],[1,8,17,9,15,1],[16,1,8,17,9,1],[11,1,10,8,12,1],[11,1,10,8,13,1],[11,1,10,8,14,1],[11,1,10,8,15,1],[11,16,1,10,8,1],[11,1,10,8,17,1],[1,10,8,12,13,1],[1,10,8,14,12,1],[1,10,8,12,15,1],[16,1,10,8,12,1],[1,10,8,12,17,1],[1,10,8,14,13,1],[1,10,8,13,15,1],[16,1,10,8,13,1],[1,10,8,13,17,1],[1,10,8,14,15,1],[16,1,10,8,14,1],[1,10,8,14,17,1],[16,1,10,8,15,1],[1,10,8,17,15,1],[16,1,10,8,17,1],[11,1,8,12,13,1],[11,1,8,14,12,1],[11,1,8,12,15,1],[11,16,1,8,12,1],[11,1,8,12,17,1],[11,1,8,14,13,1],[11,1,8,13,15,1],[11,16,1,8,13,1],[11,1,8,13,17,1],[11,1,8,14,15,1],[11,16,1,8,14,1],[11,1,8,14,17,1],[11,16,1,8,15,1],[11,1,8,17,15,1],[11,16,1,8,17,1],[1,8,14,12,13,1],[1,8,12,13,15,1],[16,1,8,12,13,1],[1,8,12,13,17,1],[1,8,14,12,15,1],[16,1,8,14,12,1],[1,8,14,12,17,1],[16,1,8,12,15,1],[1,8,12,17,15,1],[16,1,8,12,17,1],[1,8,14,13,15,1],[16,1,8,14,13,1],[1,8,14,13,17,1],[16,1,8,13,15,1],[1,8,13,17,15,1],[16,1,8,13,17,1],[16,1,8,14,15,1],[1,8,14,17,15,1],[16,1,8,14,17,1],[16,1,8,17,15,1],[11,1,10,12,9,1],[11,1,10,13,9,1],[11,1,10,14,9,1],[11,1,10,9,15,1],[11,16,1,10,9,1],[11,1,10,17,9,1],[1,10,12,13,9,1],[1,10,14,12,9,1],[1,10,12,9,15,1],[16,1,10,12,9,1],[1,10,12,17,9,1],[1,10,14,13,9,1],[1,10,13,9,15,1],[16,1,10,13,9,1],[1,10,13,17,9,1],[1,10,14,9,15,1],[16,1,10,14,9,1],[1,10,14,17,9,1],[16,1,10,9,15,1],[1,10,17,9,15,1],[16,1,10,17,9,1],[11,1,12,13,9,1],[11,1,14,12,9,1],[11,1,12,9,15,1],[11,16,1,12,9,1],[11,1,12,17,9,1],[11,1,14,13,9,1],[11,1,13,9,15,1],[11,16,1,13,9,1],[11,1,13,17,9,1],[11,1,14,9,15,1],[11,16,1,14,9,1],[11,1,14,17,9,1],[11,16,1,9,15,1],[11,1,17,9,15,1],[11,16,1,17,9,1],[1,14,12,13,9,1],[1,12,13,9,15,1],[16,1,12,13,9,1],[1,12,13,17,9,1],[1,14,12,9,15,1],[16,1,14,12,9,1],[1,14,12,17,9,1],[16,1,12,9,15,1],[1,12,17,9,15,1],[16,1,12,17,9,1],[1,14,13,9,15,1],[16,1,14,13,9,1],[1,14,13,17,9,1],[16,1,13,9,15,1],[1,13,17,9,15,1],[16,1,13,17,9,1],[16,1,14,9,15,1],[1,14,17,9,15,1],[16,1,14,17,9,1],[16,1,17,9,15,1],[11,1,10,12,13,1],[11,1,10,14,12,1],[11,1,10,12,15,1],[11,16,1,10,12,1],[11,1,10,12,17,1],[11,1,10,14,13,1],[11,1,10,13,15,1],[11,16,1,10,13,1],[11,1,10,13,17,1],[11,1,10,14,15,1],[11,16,1,10,14,1],[11,1,10,14,17,1],[11,16,1,10,15,1],[11,1,10,17,15,1],[11,16,1,10,17,1],[1,10,14,12,13,1],[1,10,12,13,15,1],[16,1,10,12,13,1],[1,10,12,13,17,1],[1,10,14,12,15,1],[16,1,10,14,12,1],[1,10,14,12,17,1],[16,1,10,12,15,1],[1,10,12,17,15,1],[16,1,10,12,17,1],[1,10,14,13,15,1],[16,1,10,14,13,1],[1,10,14,13,17,1],[16,1,10,13,15,1],[1,10,13,17,15,1],[16,1,10,13,17,1],[16,1,10,14,15,1],[1,10,14,17,15,1],[16,1,10,14,17,1],[16,1,10,17,15,1],[11,1,14,12,13,1],[11,1,12,13,15,1],[11,16,1,12,13,1],[11,1,12,13,17,1],[11,1,14,12,15,1],[11,16,1,14,12,1],[11,1,14,12,17,1],[11,16,1,12,15,1],[11,1,12,17,15,1],[11,16,1,12,17,1],[11,1,14,13,15,1],[11,16,1,14,13,1],[11,1,14,13,17,1],[11,16,1,13,15,1],[11,1,13,17,15,1],[11,16,1,13,17,1],[11,16,1,14,15,1],[11,1,14,17,15,1],[11,16,1,14,17,1],[11,16,1,17,15,1],[1,14,12,13,15,1],[16,1,14,12,13,1],[1,14,12,13,17,1],[16,1,12,13,15,1],[1,12,13,17,15,1],[16,1,12,13,17,1],[16,1,14,12,15,1],[1,14,12,17,15,1],[16,1,14,12,17,1],[16,1,12,17,15,1],[16,1,14,13,15,1],[1,14,13,17,15,1],[16,1,14,13,17,1],[16,1,13,17,15,1],[16,1,14,17,15,1],[6,2,3,4,5,1],[2,3,7,4,5,1],[2,3,8,4,5,1],[2,3,4,5,9,1],[2,3,10,4,5,1],[11,2,3,4,5,1],[2,3,4,12,5,1],[2,3,4,13,5,1],[2,3,14,4,5,1],[2,3,4,5,15,1],[16,2,3,4,5,1],[2,3,4,17,5,1],[6,2,3,7,4,1],[6,2,3,8,4,1],[6,2,3,4,9,1],[6,2,3,10,4,1],[11,6,2,3,4,1],[6,2,3,4,12,1],[6,2,3,4,13,1],[6,2,3,14,4,1],[6,2,3,4,15,1],[16,6,2,3,4,1],[6,2,3,4,17,1],[2,3,7,8,4,1],[2,3,7,4,9,1],[2,3,7,10,4,1],[11,2,3,7,4,1],[2,3,7,4,12,1],[2,3,7,4,13,1],[2,3,7,14,4,1],[2,3,7,4,15,1],[16,2,3,7,4,1],[2,3,7,4,17,1],[2,3,8,4,9,1],[2,3,10,8,4,1],[11,2,3,8,4,1],[2,3,8,4,12,1],[2,3,8,4,13,1],[2,3,8,14,4,1],[2,3,8,4,15,1],[16,2,3,8,4,1],[2,3,8,4,17,1],[2,3,10,4,9,1],[11,2,3,4,9,1],[2,3,4,12,9,1],[2,3,4,13,9,1],[2,3,14,4,9,1],[2,3,4,9,15,1],[16,2,3,4,9,1],[2,3,4,17,9,1],[11,2,3,10,4,1],[2,3,10,4,12,1],[2,3,10,4,13,1],[2,3,10,14,4,1],[2,3,10,4,15,1],[16,2,3,10,4,1],[2,3,10,4,17,1],[11,2,3,4,12,1],[11,2,3,4,13,1],[11,2,3,14,4,1],[11,2,3,4,15,1],[11,16,2,3,4,1],[11,2,3,4,17,1],[2,3,4,12,13,1],[2,3,14,4,12,1],[2,3,4,12,15,1],[16,2,3,4,12,1],[2,3,4,12,17,1],[2,3,14,4,13,1],[2,3,4,13,15,1],[16,2,3,4,13,1],[2,3,4,13,17,1],[2,3,14,4,15,1],[16,2,3,14,4,1],[2,3,14,4,17,1],[16,2,3,4,15,1],[2,3,4,17,15,1],[16,2,3,4,17,1],[6,2,3,7,5,1],[6,2,3,8,5,1],[6,2,3,5,9,1],[6,2,3,10,5,1],[11,6,2,3,5,1],[6,2,3,12,5,1],[6,2,3,13,5,1],[6,2,3,14,5,1],[6,2,3,5,15,1],[16,6,2,3,5,1],[6,2,3,17,5,1],[2,3,7,8,5,1],[2,3,7,5,9,1],[2,3,7,10,5,1],[11,2,3,7,5,1],[2,3,7,12,5,1],[2,3,7,13,5,1],[2,3,7,14,5,1],[2,3,7,5,15,1],[16,2,3,7,5,1],[2,3,7,17,5,1],[2,3,8,5,9,1],[2,3,10,8,5,1],[11,2,3,8,5,1],[2,3,8,12,5,1],[2,3,8,13,5,1],[2,3,8,14,5,1],[2,3,8,5,15,1],[16,2,3,8,5,1],[2,3,8,17,5,1],[2,3,10,5,9,1],[11,2,3,5,9,1],[2,3,12,5,9,1],[2,3,13,5,9,1],[2,3,14,5,9,1],[2,3,5,9,15,1],[16,2,3,5,9,1],[2,3,17,5,9,1],[11,2,3,10,5,1],[2,3,10,12,5,1],[2,3,10,13,5,1],[2,3,10,14,5,1],[2,3,10,5,15,1],[16,2,3,10,5,1],[2,3,10,17,5,1],[11,2,3,12,5,1],[11,2,3,13,5,1],[11,2,3,14,5,1],[11,2,3,5,15,1],[11,16,2,3,5,1],[11,2,3,17,5,1],[2,3,12,13,5,1],[2,3,14,12,5,1],[2,3,12,5,15,1],[16,2,3,12,5,1],[2,3,12,17,5,1],[2,3,14,13,5,1],[2,3,13,5,15,1],[16,2,3,13,5,1],[2,3,13,17,5,1],[2,3,14,5,15,1],[16,2,3,14,5,1],[2,3,14,17,5,1],[16,2,3,5,15,1],[2,3,17,5,15,1],[16,2,3,17,5,1],[6,2,3,7,8,1],[6,2,3,7,9,1],[6,2,3,7,10,1],[11,6,2,3,7,1],[6,2,3,7,12,1],[6,2,3,7,13,1],[6,2,3,7,14,1],[6,2,3,7,15,1],[16,6,2,3,7,1],[6,2,3,7,17,1],[6,2,3,8,9,1],[6,2,3,10,8,1],[11,6,2,3,8,1],[6,2,3,8,12,1],[6,2,3,8,13,1],[6,2,3,8,14,1],[6,2,3,8,15,1],[16,6,2,3,8,1],[6,2,3,8,17,1],[6,2,3,10,9,1],[11,6,2,3,9,1],[6,2,3,12,9,1],[6,2,3,13,9,1],[6,2,3,14,9,1],[6,2,3,9,15,1],[16,6,2,3,9,1],[6,2,3,17,9,1],[11,6,2,3,10,1],[6,2,3,10,12,1],[6,2,3,10,13,1],[6,2,3,10,14,1],[6,2,3,10,15,1],[16,6,2,3,10,1],[6,2,3,10,17,1],[11,6,2,3,12,1],[11,6,2,3,13,1],[11,6,2,3,14,1],[11,6,2,3,15,1],[11,16,6,2,3,1],[11,6,2,3,17,1],[6,2,3,12,13,1],[6,2,3,14,12,1],[6,2,3,12,15,1],[16,6,2,3,12,1],[6,2,3,12,17,1],[6,2,3,14,13,1],[6,2,3,13,15,1],[16,6,2,3,13,1],[6,2,3,13,17,1],[6,2,3,14,15,1],[16,6,2,3,14,1],[6,2,3,14,17,1],[16,6,2,3,15,1],[6,2,3,17,15,1],[16,6,2,3,17,1],[2,3,7,8,9,1],[2,3,7,10,8,1],[11,2,3,7,8,1],[2,3,7,8,12,1],[2,3,7,8,13,1],[2,3,7,8,14,1],[2,3,7,8,15,1],[16,2,3,7,8,1],[2,3,7,8,17,1],[2,3,7,10,9,1],[11,2,3,7,9,1],[2,3,7,12,9,1],[2,3,7,13,9,1],[2,3,7,14,9,1],[2,3,7,9,15,1],[16,2,3,7,9,1],[2,3,7,17,9,1],[11,2,3,7,10,1],[2,3,7,10,12,1],[2,3,7,10,13,1],[2,3,7,10,14,1],[2,3,7,10,15,1],[16,2,3,7,10,1],[2,3,7,10,17,1],[11,2,3,7,12,1],[11,2,3,7,13,1],[11,2,3,7,14,1],[11,2,3,7,15,1],[11,16,2,3,7,1],[11,2,3,7,17,1],[2,3,7,12,13,1],[2,3,7,14,12,1],[2,3,7,12,15,1],[16,2,3,7,12,1],[2,3,7,12,17,1],[2,3,7,14,13,1],[2,3,7,13,15,1],[16,2,3,7,13,1],[2,3,7,13,17,1],[2,3,7,14,15,1],[16,2,3,7,14,1],[2,3,7,14,17,1],[16,2,3,7,15,1],[2,3,7,17,15,1],[16,2,3,7,17,1],[2,3,10,8,9,1],[11,2,3,8,9,1],[2,3,8,12,9,1],[2,3,8,13,9,1],[2,3,8,14,9,1],[2,3,8,9,15,1],[16,2,3,8,9,1],[2,3,8,17,9,1],[11,2,3,10,8,1],[2,3,10,8,12,1],[2,3,10,8,13,1],[2,3,10,8,14,1],[2,3,10,8,15,1],[16,2,3,10,8,1],[2,3,10,8,17,1],[11,2,3,8,12,1],[11,2,3,8,13,1],[11,2,3,8,14,1],[11,2,3,8,15,1],[11,16,2,3,8,1],[11,2,3,8,17,1],[2,3,8,12,13,1],[2,3,8,14,12,1],[2,3,8,12,15,1],[16,2,3,8,12,1],[2,3,8,12,17,1],[2,3,8,14,13,1],[2,3,8,13,15,1],[16,2,3,8,13,1],[2,3,8,13,17,1],[2,3,8,14,15,1],[16,2,3,8,14,1],[2,3,8,14,17,1],[16,2,3,8,15,1],[2,3,8,17,15,1],[16,2,3,8,17,1],[11,2,3,10,9,1],[2,3,10,12,9,1],[2,3,10,13,9,1],[2,3,10,14,9,1],[2,3,10,9,15,1],[16,2,3,10,9,1],[2,3,10,17,9,1],[11,2,3,12,9,1],[11,2,3,13,9,1],[11,2,3,14,9,1],[11,2,3,9,15,1],[11,16,2,3,9,1],[11,2,3,17,9,1],[2,3,12,13,9,1],[2,3,14,12,9,1],[2,3,12,9,15,1],[16,2,3,12,9,1],[2,3,12,17,9,1],[2,3,14,13,9,1],[2,3,13,9,15,1],[16,2,3,13,9,1],[2,3,13,17,9,1],[2,3,14,9,15,1],[16,2,3,14,9,1],[2,3,14,17,9,1],[16,2,3,9,15,1],[2,3,17,9,15,1],[16,2,3,17,9,1],[11,2,3,10,12,1],[11,2,3,10,13,1],[11,2,3,10,14,1],[11,2,3,10,15,1],[11,16,2,3,10,1],[11,2,3,10,17,1],[2,3,10,12,13,1],[2,3,10,14,12,1],[2,3,10,12,15,1],[16,2,3,10,12,1],[2,3,10,12,17,1],[2,3,10,14,13,1],[2,3,10,13,15,1],[16,2,3,10,13,1],[2,3,10,13,17,1],[2,3,10,14,15,1],[16,2,3,10,14,1],[2,3,10,14,17,1],[16,2,3,10,15,1],[2,3,10,17,15,1],[16,2,3,10,17,1],[11,2,3,12,13,1],[11,2,3,14,12,1],[11,2,3,12,15,1],[11,16,2,3,12,1],[11,2,3,12,17,1],[11,2,3,14,13,1],[11,2,3,13,15,1],[11,16,2,3,13,1],[11,2,3,13,17,1],[11,2,3,14,15,1],[11,16,2,3,14,1],[11,2,3,14,17,1],[11,16,2,3,15,1],[11,2,3,17,15,1],[11,16,2,3,17,1],[2,3,14,12,13,1],[2,3,12,13,15,1],[16,2,3,12,13,1],[2,3,12,13,17,1],[2,3,14,12,15,1],[16,2,3,14,12,1],[2,3,14,12,17,1],[16,2,3,12,15,1],[2,3,12,17,15,1],[16,2,3,12,17,1],[2,3,14,13,15,1],[16,2,3,14,13,1],[2,3,14,13,17,1],[16,2,3,13,15,1],[2,3,13,17,15,1],[16,2,3,13,17,1],[16,2,3,14,15,1],[2,3,14,17,15,1],[16,2,3,14,17,1],[16,2,3,17,15,1],[6,2,7,4,5,1],[6,2,8,4,5,1],[6,2,4,5,9,1],[6,2,10,4,5,1],[11,6,2,4,5,1],[6,2,4,12,5,1],[6,2,4,13,5,1],[6,2,14,4,5,1],[6,2,4,5,15,1],[16,6,2,4,5,1],[6,2,4,17,5,1],[2,7,8,4,5,1],[2,7,4,5,9,1],[2,7,10,4,5,1],[11,2,7,4,5,1],[2,7,4,12,5,1],[2,7,4,13,5,1],[2,7,14,4,5,1],[2,7,4,5,15,1],[16,2,7,4,5,1],[2,7,4,17,5,1],[2,8,4,5,9,1],[2,10,8,4,5,1],[11,2,8,4,5,1],[2,8,4,12,5,1],[2,8,4,13,5,1],[2,8,14,4,5,1],[2,8,4,5,15,1],[16,2,8,4,5,1],[2,8,4,17,5,1],[2,10,4,5,9,1],[11,2,4,5,9,1],[2,4,12,5,9,1],[2,4,13,5,9,1],[2,14,4,5,9,1],[2,4,5,9,15,1],[16,2,4,5,9,1],[2,4,17,5,9,1],[11,2,10,4,5,1],[2,10,4,12,5,1],[2,10,4,13,5,1],[2,10,14,4,5,1],[2,10,4,5,15,1],[16,2,10,4,5,1],[2,10,4,17,5,1],[11,2,4,12,5,1],[11,2,4,13,5,1],[11,2,14,4,5,1],[11,2,4,5,15,1],[11,16,2,4,5,1],[11,2,4,17,5,1],[2,4,12,13,5,1],[2,14,4,12,5,1],[2,4,12,5,15,1],[16,2,4,12,5,1],[2,4,12,17,5,1],[2,14,4,13,5,1],[2,4,13,5,15,1],[16,2,4,13,5,1],[2,4,13,17,5,1],[2,14,4,5,15,1],[16,2,14,4,5,1],[2,14,4,17,5,1],[16,2,4,5,15,1],[2,4,17,5,15,1],[16,2,4,17,5,1],[6,2,7,8,4,1],[6,2,7,4,9,1],[6,2,7,10,4,1],[11,6,2,7,4,1],[6,2,7,4,12,1],[6,2,7,4,13,1],[6,2,7,14,4,1],[6,2,7,4,15,1],[16,6,2,7,4,1],[6,2,7,4,17,1],[6,2,8,4,9,1],[6,2,10,8,4,1],[11,6,2,8,4,1],[6,2,8,4,12,1],[6,2,8,4,13,1],[6,2,8,14,4,1],[6,2,8,4,15,1],[16,6,2,8,4,1],[6,2,8,4,17,1],[6,2,10,4,9,1],[11,6,2,4,9,1],[6,2,4,12,9,1],[6,2,4,13,9,1],[6,2,14,4,9,1],[6,2,4,9,15,1],[16,6,2,4,9,1],[6,2,4,17,9,1],[11,6,2,10,4,1],[6,2,10,4,12,1],[6,2,10,4,13,1],[6,2,10,14,4,1],[6,2,10,4,15,1],[16,6,2,10,4,1],[6,2,10,4,17,1],[11,6,2,4,12,1],[11,6,2,4,13,1],[11,6,2,14,4,1],[11,6,2,4,15,1],[11,16,6,2,4,1],[11,6,2,4,17,1],[6,2,4,12,13,1],[6,2,14,4,12,1],[6,2,4,12,15,1],[16,6,2,4,12,1],[6,2,4,12,17,1],[6,2,14,4,13,1],[6,2,4,13,15,1],[16,6,2,4,13,1],[6,2,4,13,17,1],[6,2,14,4,15,1],[16,6,2,14,4,1],[6,2,14,4,17,1],[16,6,2,4,15,1],[6,2,4,17,15,1],[16,6,2,4,17,1],[2,7,8,4,9,1],[2,7,10,8,4,1],[11,2,7,8,4,1],[2,7,8,4,12,1],[2,7,8,4,13,1],[2,7,8,14,4,1],[2,7,8,4,15,1],[16,2,7,8,4,1],[2,7,8,4,17,1],[2,7,10,4,9,1],[11,2,7,4,9,1],[2,7,4,12,9,1],[2,7,4,13,9,1],[2,7,14,4,9,1],[2,7,4,9,15,1],[16,2,7,4,9,1],[2,7,4,17,9,1],[11,2,7,10,4,1],[2,7,10,4,12,1],[2,7,10,4,13,1],[2,7,10,14,4,1],[2,7,10,4,15,1],[16,2,7,10,4,1],[2,7,10,4,17,1],[11,2,7,4,12,1],[11,2,7,4,13,1],[11,2,7,14,4,1],[11,2,7,4,15,1],[11,16,2,7,4,1],[11,2,7,4,17,1],[2,7,4,12,13,1],[2,7,14,4,12,1],[2,7,4,12,15,1],[16,2,7,4,12,1],[2,7,4,12,17,1],[2,7,14,4,13,1],[2,7,4,13,15,1],[16,2,7,4,13,1],[2,7,4,13,17,1],[2,7,14,4,15,1],[16,2,7,14,4,1],[2,7,14,4,17,1],[16,2,7,4,15,1],[2,7,4,17,15,1],[16,2,7,4,17,1],[2,10,8,4,9,1],[11,2,8,4,9,1],[2,8,4,12,9,1],[2,8,4,13,9,1],[2,8,14,4,9,1],[2,8,4,9,15,1],[16,2,8,4,9,1],[2,8,4,17,9,1],[11,2,10,8,4,1],[2,10,8,4,12,1],[2,10,8,4,13,1],[2,10,8,14,4,1],[2,10,8,4,15,1],[16,2,10,8,4,1],[2,10,8,4,17,1],[11,2,8,4,12,1],[11,2,8,4,13,1],[11,2,8,14,4,1],[11,2,8,4,15,1],[11,16,2,8,4,1],[11,2,8,4,17,1],[2,8,4,12,13,1],[2,8,14,4,12,1],[2,8,4,12,15,1],[16,2,8,4,12,1],[2,8,4,12,17,1],[2,8,14,4,13,1],[2,8,4,13,15,1],[16,2,8,4,13,1],[2,8,4,13,17,1],[2,8,14,4,15,1],[16,2,8,14,4,1],[2,8,14,4,17,1],[16,2,8,4,15,1],[2,8,4,17,15,1],[16,2,8,4,17,1],[11,2,10,4,9,1],[2,10,4,12,9,1],[2,10,4,13,9,1],[2,10,14,4,9,1],[2,10,4,9,15,1],[16,2,10,4,9,1],[2,10,4,17,9,1],[11,2,4,12,9,1],[11,2,4,13,9,1],[11,2,14,4,9,1],[11,2,4,9,15,1],[11,16,2,4,9,1],[11,2,4,17,9,1],[2,4,12,13,9,1],[2,14,4,12,9,1],[2,4,12,9,15,1],[16,2,4,12,9,1],[2,4,12,17,9,1],[2,14,4,13,9,1],[2,4,13,9,15,1],[16,2,4,13,9,1],[2,4,13,17,9,1],[2,14,4,9,15,1],[16,2,14,4,9,1],[2,14,4,17,9,1],[16,2,4,9,15,1],[2,4,17,9,15,1],[16,2,4,17,9,1],[11,2,10,4,12,1],[11,2,10,4,13,1],[11,2,10,14,4,1],[11,2,10,4,15,1],[11,16,2,10,4,1],[11,2,10,4,17,1],[2,10,4,12,13,1],[2,10,14,4,12,1],[2,10,4,12,15,1],[16,2,10,4,12,1],[2,10,4,12,17,1],[2,10,14,4,13,1],[2,10,4,13,15,1],[16,2,10,4,13,1],[2,10,4,13,17,1],[2,10,14,4,15,1],[16,2,10,14,4,1],[2,10,14,4,17,1],[16,2,10,4,15,1],[2,10,4,17,15,1],[16,2,10,4,17,1],[11,2,4,12,13,1],[11,2,14,4,12,1],[11,2,4,12,15,1],[11,16,2,4,12,1],[11,2,4,12,17,1],[11,2,14,4,13,1],[11,2,4,13,15,1],[11,16,2,4,13,1],[11,2,4,13,17,1],[11,2,14,4,15,1],[11,16,2,14,4,1],[11,2,14,4,17,1],[11,16,2,4,15,1],[11,2,4,17,15,1],[11,16,2,4,17,1],[2,14,4,12,13,1],[2,4,12,13,15,1],[16,2,4,12,13,1],[2,4,12,13,17,1],[2,14,4,12,15,1],[16,2,14,4,12,1],[2,14,4,12,17,1],[16,2,4,12,15,1],[2,4,12,17,15,1],[16,2,4,12,17,1],[2,14,4,13,15,1],[16,2,14,4,13,1],[2,14,4,13,17,1],[16,2,4,13,15,1],[2,4,13,17,15,1],[16,2,4,13,17,1],[16,2,14,4,15,1],[2,14,4,17,15,1],[16,2,14,4,17,1],[16,2,4,17,15,1],[6,2,7,8,5,1],[6,2,7,5,9,1],[6,2,7,10,5,1],[11,6,2,7,5,1],[6,2,7,12,5,1],[6,2,7,13,5,1],[6,2,7,14,5,1],[6,2,7,5,15,1],[16,6,2,7,5,1],[6,2,7,17,5,1],[6,2,8,5,9,1],[6,2,10,8,5,1],[11,6,2,8,5,1],[6,2,8,12,5,1],[6,2,8,13,5,1],[6,2,8,14,5,1],[6,2,8,5,15,1],[16,6,2,8,5,1],[6,2,8,17,5,1],[6,2,10,5,9,1],[11,6,2,5,9,1],[6,2,12,5,9,1],[6,2,13,5,9,1],[6,2,14,5,9,1],[6,2,5,9,15,1],[16,6,2,5,9,1],[6,2,17,5,9,1],[11,6,2,10,5,1],[6,2,10,12,5,1],[6,2,10,13,5,1],[6,2,10,14,5,1],[6,2,10,5,15,1],[16,6,2,10,5,1],[6,2,10,17,5,1],[11,6,2,12,5,1],[11,6,2,13,5,1],[11,6,2,14,5,1],[11,6,2,5,15,1],[11,16,6,2,5,1],[11,6,2,17,5,1],[6,2,12,13,5,1],[6,2,14,12,5,1],[6,2,12,5,15,1],[16,6,2,12,5,1],[6,2,12,17,5,1],[6,2,14,13,5,1],[6,2,13,5,15,1],[16,6,2,13,5,1],[6,2,13,17,5,1],[6,2,14,5,15,1],[16,6,2,14,5,1],[6,2,14,17,5,1],[16,6,2,5,15,1],[6,2,17,5,15,1],[16,6,2,17,5,1],[2,7,8,5,9,1],[2,7,10,8,5,1],[11,2,7,8,5,1],[2,7,8,12,5,1],[2,7,8,13,5,1],[2,7,8,14,5,1],[2,7,8,5,15,1],[16,2,7,8,5,1],[2,7,8,17,5,1],[2,7,10,5,9,1],[11,2,7,5,9,1],[2,7,12,5,9,1],[2,7,13,5,9,1],[2,7,14,5,9,1],[2,7,5,9,15,1],[16,2,7,5,9,1],[2,7,17,5,9,1],[11,2,7,10,5,1],[2,7,10,12,5,1],[2,7,10,13,5,1],[2,7,10,14,5,1],[2,7,10,5,15,1],[16,2,7,10,5,1],[2,7,10,17,5,1],[11,2,7,12,5,1],[11,2,7,13,5,1],[11,2,7,14,5,1],[11,2,7,5,15,1],[11,16,2,7,5,1],[11,2,7,17,5,1],[2,7,12,13,5,1],[2,7,14,12,5,1],[2,7,12,5,15,1],[16,2,7,12,5,1],[2,7,12,17,5,1],[2,7,14,13,5,1],[2,7,13,5,15,1],[16,2,7,13,5,1],[2,7,13,17,5,1],[2,7,14,5,15,1],[16,2,7,14,5,1],[2,7,14,17,5,1],[16,2,7,5,15,1],[2,7,17,5,15,1],[16,2,7,17,5,1],[2,10,8,5,9,1],[11,2,8,5,9,1],[2,8,12,5,9,1],[2,8,13,5,9,1],[2,8,14,5,9,1],[2,8,5,9,15,1],[16,2,8,5,9,1],[2,8,17,5,9,1],[11,2,10,8,5,1],[2,10,8,12,5,1],[2,10,8,13,5,1],[2,10,8,14,5,1],[2,10,8,5,15,1],[16,2,10,8,5,1],[2,10,8,17,5,1],[11,2,8,12,5,1],[11,2,8,13,5,1],[11,2,8,14,5,1],[11,2,8,5,15,1],[11,16,2,8,5,1],[11,2,8,17,5,1],[2,8,12,13,5,1],[2,8,14,12,5,1],[2,8,12,5,15,1],[16,2,8,12,5,1],[2,8,12,17,5,1],[2,8,14,13,5,1],[2,8,13,5,15,1],[16,2,8,13,5,1],[2,8,13,17,5,1],[2,8,14,5,15,1],[16,2,8,14,5,1],[2,8,14,17,5,1],[16,2,8,5,15,1],[2,8,17,5,15,1],[16,2,8,17,5,1],[11,2,10,5,9,1],[2,10,12,5,9,1],[2,10,13,5,9,1],[2,10,14,5,9,1],[2,10,5,9,15,1],[16,2,10,5,9,1],[2,10,17,5,9,1],[11,2,12,5,9,1],[11,2,13,5,9,1],[11,2,14,5,9,1],[11,2,5,9,15,1],[11,16,2,5,9,1],[11,2,17,5,9,1],[2,12,13,5,9,1],[2,14,12,5,9,1],[2,12,5,9,15,1],[16,2,12,5,9,1],[2,12,17,5,9,1],[2,14,13,5,9,1],[2,13,5,9,15,1],[16,2,13,5,9,1],[2,13,17,5,9,1],[2,14,5,9,15,1],[16,2,14,5,9,1],[2,14,17,5,9,1],[16,2,5,9,15,1],[2,17,5,9,15,1],[16,2,17,5,9,1],[11,2,10,12,5,1],[11,2,10,13,5,1],[11,2,10,14,5,1],[11,2,10,5,15,1],[11,16,2,10,5,1],[11,2,10,17,5,1],[2,10,12,13,5,1],[2,10,14,12,5,1],[2,10,12,5,15,1],[16,2,10,12,5,1],[2,10,12,17,5,1],[2,10,14,13,5,1],[2,10,13,5,15,1],[16,2,10,13,5,1],[2,10,13,17,5,1],[2,10,14,5,15,1],[16,2,10,14,5,1],[2,10,14,17,5,1],[16,2,10,5,15,1],[2,10,17,5,15,1],[16,2,10,17,5,1],[11,2,12,13,5,1],[11,2,14,12,5,1],[11,2,12,5,15,1],[11,16,2,12,5,1],[11,2,12,17,5,1],[11,2,14,13,5,1],[11,2,13,5,15,1],[11,16,2,13,5,1],[11,2,13,17,5,1],[11,2,14,5,15,1],[11,16,2,14,5,1],[11,2,14,17,5,1],[11,16,2,5,15,1],[11,2,17,5,15,1],[11,16,2,17,5,1],[2,14,12,13,5,1],[2,12,13,5,15,1],[16,2,12,13,5,1],[2,12,13,17,5,1],[2,14,12,5,15,1],[16,2,14,12,5,1],[2,14,12,17,5,1],[16,2,12,5,15,1],[2,12,17,5,15,1],[16,2,12,17,5,1],[2,14,13,5,15,1],[16,2,14,13,5,1],[2,14,13,17,5,1],[16,2,13,5,15,1],[2,13,17,5,15,1],[16,2,13,17,5,1],[16,2,14,5,15,1],[2,14,17,5,15,1],[16,2,14,17,5,1],[16,2,17,5,15,1],[6,2,7,8,9,1],[6,2,7,10,8,1],[11,6,2,7,8,1],[6,2,7,8,12,1],[6,2,7,8,13,1],[6,2,7,8,14,1],[6,2,7,8,15,1],[16,6,2,7,8,1],[6,2,7,8,17,1],[6,2,7,10,9,1],[11,6,2,7,9,1],[6,2,7,12,9,1],[6,2,7,13,9,1],[6,2,7,14,9,1],[6,2,7,9,15,1],[16,6,2,7,9,1],[6,2,7,17,9,1],[11,6,2,7,10,1],[6,2,7,10,12,1],[6,2,7,10,13,1],[6,2,7,10,14,1],[6,2,7,10,15,1],[16,6,2,7,10,1],[6,2,7,10,17,1],[11,6,2,7,12,1],[11,6,2,7,13,1],[11,6,2,7,14,1],[11,6,2,7,15,1],[11,16,6,2,7,1],[11,6,2,7,17,1],[6,2,7,12,13,1],[6,2,7,14,12,1],[6,2,7,12,15,1],[16,6,2,7,12,1],[6,2,7,12,17,1],[6,2,7,14,13,1],[6,2,7,13,15,1],[16,6,2,7,13,1],[6,2,7,13,17,1],[6,2,7,14,15,1],[16,6,2,7,14,1],[6,2,7,14,17,1],[16,6,2,7,15,1],[6,2,7,17,15,1],[16,6,2,7,17,1],[6,2,10,8,9,1],[11,6,2,8,9,1],[6,2,8,12,9,1],[6,2,8,13,9,1],[6,2,8,14,9,1],[6,2,8,9,15,1],[16,6,2,8,9,1],[6,2,8,17,9,1],[11,6,2,10,8,1],[6,2,10,8,12,1],[6,2,10,8,13,1],[6,2,10,8,14,1],[6,2,10,8,15,1],[16,6,2,10,8,1],[6,2,10,8,17,1],[11,6,2,8,12,1],[11,6,2,8,13,1],[11,6,2,8,14,1],[11,6,2,8,15,1],[11,16,6,2,8,1],[11,6,2,8,17,1],[6,2,8,12,13,1],[6,2,8,14,12,1],[6,2,8,12,15,1],[16,6,2,8,12,1],[6,2,8,12,17,1],[6,2,8,14,13,1],[6,2,8,13,15,1],[16,6,2,8,13,1],[6,2,8,13,17,1],[6,2,8,14,15,1],[16,6,2,8,14,1],[6,2,8,14,17,1],[16,6,2,8,15,1],[6,2,8,17,15,1],[16,6,2,8,17,1],[11,6,2,10,9,1],[6,2,10,12,9,1],[6,2,10,13,9,1],[6,2,10,14,9,1],[6,2,10,9,15,1],[16,6,2,10,9,1],[6,2,10,17,9,1],[11,6,2,12,9,1],[11,6,2,13,9,1],[11,6,2,14,9,1],[11,6,2,9,15,1],[11,16,6,2,9,1],[11,6,2,17,9,1],[6,2,12,13,9,1],[6,2,14,12,9,1],[6,2,12,9,15,1],[16,6,2,12,9,1],[6,2,12,17,9,1],[6,2,14,13,9,1],[6,2,13,9,15,1],[16,6,2,13,9,1],[6,2,13,17,9,1],[6,2,14,9,15,1],[16,6,2,14,9,1],[6,2,14,17,9,1],[16,6,2,9,15,1],[6,2,17,9,15,1],[16,6,2,17,9,1],[11,6,2,10,12,1],[11,6,2,10,13,1],[11,6,2,10,14,1],[11,6,2,10,15,1],[11,16,6,2,10,1],[11,6,2,10,17,1],[6,2,10,12,13,1],[6,2,10,14,12,1],[6,2,10,12,15,1],[16,6,2,10,12,1],[6,2,10,12,17,1],[6,2,10,14,13,1],[6,2,10,13,15,1],[16,6,2,10,13,1],[6,2,10,13,17,1],[6,2,10,14,15,1],[16,6,2,10,14,1],[6,2,10,14,17,1],[16,6,2,10,15,1],[6,2,10,17,15,1],[16,6,2,10,17,1],[11,6,2,12,13,1],[11,6,2,14,12,1],[11,6,2,12,15,1],[11,16,6,2,12,1],[11,6,2,12,17,1],[11,6,2,14,13,1],[11,6,2,13,15,1],[11,16,6,2,13,1],[11,6,2,13,17,1],[11,6,2,14,15,1],[11,16,6,2,14,1],[11,6,2,14,17,1],[11,16,6,2,15,1],[11,6,2,17,15,1],[11,16,6,2,17,1],[6,2,14,12,13,1],[6,2,12,13,15,1],[16,6,2,12,13,1],[6,2,12,13,17,1],[6,2,14,12,15,1],[16,6,2,14,12,1],[6,2,14,12,17,1],[16,6,2,12,15,1],[6,2,12,17,15,1],[16,6,2,12,17,1],[6,2,14,13,15,1],[16,6,2,14,13,1],[6,2,14,13,17,1],[16,6,2,13,15,1],[6,2,13,17,15,1],[16,6,2,13,17,1],[16,6,2,14,15,1],[6,2,14,17,15,1],[16,6,2,14,17,1],[16,6,2,17,15,1],[2,7,10,8,9,1],[11,2,7,8,9,1],[2,7,8,12,9,1],[2,7,8,13,9,1],[2,7,8,14,9,1],[2,7,8,9,15,1],[16,2,7,8,9,1],[2,7,8,17,9,1],[11,2,7,10,8,1],[2,7,10,8,12,1],[2,7,10,8,13,1],[2,7,10,8,14,1],[2,7,10,8,15,1],[16,2,7,10,8,1],[2,7,10,8,17,1],[11,2,7,8,12,1],[11,2,7,8,13,1],[11,2,7,8,14,1],[11,2,7,8,15,1],[11,16,2,7,8,1],[11,2,7,8,17,1],[2,7,8,12,13,1],[2,7,8,14,12,1],[2,7,8,12,15,1],[16,2,7,8,12,1],[2,7,8,12,17,1],[2,7,8,14,13,1],[2,7,8,13,15,1],[16,2,7,8,13,1],[2,7,8,13,17,1],[2,7,8,14,15,1],[16,2,7,8,14,1],[2,7,8,14,17,1],[16,2,7,8,15,1],[2,7,8,17,15,1],[16,2,7,8,17,1],[11,2,7,10,9,1],[2,7,10,12,9,1],[2,7,10,13,9,1],[2,7,10,14,9,1],[2,7,10,9,15,1],[16,2,7,10,9,1],[2,7,10,17,9,1],[11,2,7,12,9,1],[11,2,7,13,9,1],[11,2,7,14,9,1],[11,2,7,9,15,1],[11,16,2,7,9,1],[11,2,7,17,9,1],[2,7,12,13,9,1],[2,7,14,12,9,1],[2,7,12,9,15,1],[16,2,7,12,9,1],[2,7,12,17,9,1],[2,7,14,13,9,1],[2,7,13,9,15,1],[16,2,7,13,9,1],[2,7,13,17,9,1],[2,7,14,9,15,1],[16,2,7,14,9,1],[2,7,14,17,9,1],[16,2,7,9,15,1],[2,7,17,9,15,1],[16,2,7,17,9,1],[11,2,7,10,12,1],[11,2,7,10,13,1],[11,2,7,10,14,1],[11,2,7,10,15,1],[11,16,2,7,10,1],[11,2,7,10,17,1],[2,7,10,12,13,1],[2,7,10,14,12,1],[2,7,10,12,15,1],[16,2,7,10,12,1],[2,7,10,12,17,1],[2,7,10,14,13,1],[2,7,10,13,15,1],[16,2,7,10,13,1],[2,7,10,13,17,1],[2,7,10,14,15,1],[16,2,7,10,14,1],[2,7,10,14,17,1],[16,2,7,10,15,1],[2,7,10,17,15,1],[16,2,7,10,17,1],[11,2,7,12,13,1],[11,2,7,14,12,1],[11,2,7,12,15,1],[11,16,2,7,12,1],[11,2,7,12,17,1],[11,2,7,14,13,1],[11,2,7,13,15,1],[11,16,2,7,13,1],[11,2,7,13,17,1],[11,2,7,14,15,1],[11,16,2,7,14,1],[11,2,7,14,17,1],[11,16,2,7,15,1],[11,2,7,17,15,1],[11,16,2,7,17,1],[2,7,14,12,13,1],[2,7,12,13,15,1],[16,2,7,12,13,1],[2,7,12,13,17,1],[2,7,14,12,15,1],[16,2,7,14,12,1],[2,7,14,12,17,1],[16,2,7,12,15,1],[2,7,12,17,15,1],[16,2,7,12,17,1],[2,7,14,13,15,1],[16,2,7,14,13,1],[2,7,14,13,17,1],[16,2,7,13,15,1],[2,7,13,17,15,1],[16,2,7,13,17,1],[16,2,7,14,15,1],[2,7,14,17,15,1],[16,2,7,14,17,1],[16,2,7,17,15,1],[11,2,10,8,9,1],[2,10,8,12,9,1],[2,10,8,13,9,1],[2,10,8,14,9,1],[2,10,8,9,15,1],[16,2,10,8,9,1],[2,10,8,17,9,1],[11,2,8,12,9,1],[11,2,8,13,9,1],[11,2,8,14,9,1],[11,2,8,9,15,1],[11,16,2,8,9,1],[11,2,8,17,9,1],[2,8,12,13,9,1],[2,8,14,12,9,1],[2,8,12,9,15,1],[16,2,8,12,9,1],[2,8,12,17,9,1],[2,8,14,13,9,1],[2,8,13,9,15,1],[16,2,8,13,9,1],[2,8,13,17,9,1],[2,8,14,9,15,1],[16,2,8,14,9,1],[2,8,14,17,9,1],[16,2,8,9,15,1],[2,8,17,9,15,1],[16,2,8,17,9,1],[11,2,10,8,12,1],[11,2,10,8,13,1],[11,2,10,8,14,1],[11,2,10,8,15,1],[11,16,2,10,8,1],[11,2,10,8,17,1],[2,10,8,12,13,1],[2,10,8,14,12,1],[2,10,8,12,15,1],[16,2,10,8,12,1],[2,10,8,12,17,1],[2,10,8,14,13,1],[2,10,8,13,15,1],[16,2,10,8,13,1],[2,10,8,13,17,1],[2,10,8,14,15,1],[16,2,10,8,14,1],[2,10,8,14,17,1],[16,2,10,8,15,1],[2,10,8,17,15,1],[16,2,10,8,17,1],[11,2,8,12,13,1],[11,2,8,14,12,1],[11,2,8,12,15,1],[11,16,2,8,12,1],[11,2,8,12,17,1],[11,2,8,14,13,1],[11,2,8,13,15,1],[11,16,2,8,13,1],[11,2,8,13,17,1],[11,2,8,14,15,1],[11,16,2,8,14,1],[11,2,8,14,17,1],[11,16,2,8,15,1],[11,2,8,17,15,1],[11,16,2,8,17,1],[2,8,14,12,13,1],[2,8,12,13,15,1],[16,2,8,12,13,1],[2,8,12,13,17,1],[2,8,14,12,15,1],[16,2,8,14,12,1],[2,8,14,12,17,1],[16,2,8,12,15,1],[2,8,12,17,15,1],[16,2,8,12,17,1],[2,8,14,13,15,1],[16,2,8,14,13,1],[2,8,14,13,17,1],[16,2,8,13,15,1],[2,8,13,17,15,1],[16,2,8,13,17,1],[16,2,8,14,15,1],[2,8,14,17,15,1],[16,2,8,14,17,1],[16,2,8,17,15,1],[11,2,10,12,9,1],[11,2,10,13,9,1],[11,2,10,14,9,1],[11,2,10,9,15,1],[11,16,2,10,9,1],[11,2,10,17,9,1],[2,10,12,13,9,1],[2,10,14,12,9,1],[2,10,12,9,15,1],[16,2,10,12,9,1],[2,10,12,17,9,1],[2,10,14,13,9,1],[2,10,13,9,15,1],[16,2,10,13,9,1],[2,10,13,17,9,1],[2,10,14,9,15,1],[16,2,10,14,9,1],[2,10,14,17,9,1],[16,2,10,9,15,1],[2,10,17,9,15,1],[16,2,10,17,9,1],[11,2,12,13,9,1],[11,2,14,12,9,1],[11,2,12,9,15,1],[11,16,2,12,9,1],[11,2,12,17,9,1],[11,2,14,13,9,1],[11,2,13,9,15,1],[11,16,2,13,9,1],[11,2,13,17,9,1],[11,2,14,9,15,1],[11,16,2,14,9,1],[11,2,14,17,9,1],[11,16,2,9,15,1],[11,2,17,9,15,1],[11,16,2,17,9,1],[2,14,12,13,9,1],[2,12,13,9,15,1],[16,2,12,13,9,1],[2,12,13,17,9,1],[2,14,12,9,15,1],[16,2,14,12,9,1],[2,14,12,17,9,1],[16,2,12,9,15,1],[2,12,17,9,15,1],[16,2,12,17,9,1],[2,14,13,9,15,1],[16,2,14,13,9,1],[2,14,13,17,9,1],[16,2,13,9,15,1],[2,13,17,9,15,1],[16,2,13,17,9,1],[16,2,14,9,15,1],[2,14,17,9,15,1],[16,2,14,17,9,1],[16,2,17,9,15,1],[11,2,10,12,13,1],[11,2,10,14,12,1],[11,2,10,12,15,1],[11,16,2,10,12,1],[11,2,10,12,17,1],[11,2,10,14,13,1],[11,2,10,13,15,1],[11,16,2,10,13,1],[11,2,10,13,17,1],[11,2,10,14,15,1],[11,16,2,10,14,1],[11,2,10,14,17,1],[11,16,2,10,15,1],[11,2,10,17,15,1],[11,16,2,10,17,1],[2,10,14,12,13,1],[2,10,12,13,15,1],[16,2,10,12,13,1],[2,10,12,13,17,1],[2,10,14,12,15,1],[16,2,10,14,12,1],[2,10,14,12,17,1],[16,2,10,12,15,1],[2,10,12,17,15,1],[16,2,10,12,17,1],[2,10,14,13,15,1],[16,2,10,14,13,1],[2,10,14,13,17,1],[16,2,10,13,15,1],[2,10,13,17,15,1],[16,2,10,13,17,1],[16,2,10,14,15,1],[2,10,14,17,15,1],[16,2,10,14,17,1],[16,2,10,17,15,1],[11,2,14,12,13,1],[11,2,12,13,15,1],[11,16,2,12,13,1],[11,2,12,13,17,1],[11,2,14,12,15,1],[11,16,2,14,12,1],[11,2,14,12,17,1],[11,16,2,12,15,1],[11,2,12,17,15,1],[11,16,2,12,17,1],[11,2,14,13,15,1],[11,16,2,14,13,1],[11,2,14,13,17,1],[11,16,2,13,15,1],[11,2,13,17,15,1],[11,16,2,13,17,1],[11,16,2,14,15,1],[11,2,14,17,15,1],[11,16,2,14,17,1],[11,16,2,17,15,1],[2,14,12,13,15,1],[16,2,14,12,13,1],[2,14,12,13,17,1],[16,2,12,13,15,1],[2,12,13,17,15,1],[16,2,12,13,17,1],[16,2,14,12,15,1],[2,14,12,17,15,1],[16,2,14,12,17,1],[16,2,12,17,15,1],[16,2,14,13,15,1],[2,14,13,17,15,1],[16,2,14,13,17,1],[16,2,13,17,15,1],[16,2,14,17,15,1],[6,3,7,4,5,1],[6,3,8,4,5,1],[6,3,4,5,9,1],[6,3,10,4,5,1],[11,6,3,4,5,1],[6,3,4,12,5,1],[6,3,4,13,5,1],[6,3,14,4,5,1],[6,3,4,5,15,1],[16,6,3,4,5,1],[6,3,4,17,5,1],[3,7,8,4,5,1],[3,7,4,5,9,1],[3,7,10,4,5,1],[11,3,7,4,5,1],[3,7,4,12,5,1],[3,7,4,13,5,1],[3,7,14,4,5,1],[3,7,4,5,15,1],[16,3,7,4,5,1],[3,7,4,17,5,1],[3,8,4,5,9,1],[3,10,8,4,5,1],[11,3,8,4,5,1],[3,8,4,12,5,1],[3,8,4,13,5,1],[3,8,14,4,5,1],[3,8,4,5,15,1],[16,3,8,4,5,1],[3,8,4,17,5,1],[3,10,4,5,9,1],[11,3,4,5,9,1],[3,4,12,5,9,1],[3,4,13,5,9,1],[3,14,4,5,9,1],[3,4,5,9,15,1],[16,3,4,5,9,1],[3,4,17,5,9,1],[11,3,10,4,5,1],[3,10,4,12,5,1],[3,10,4,13,5,1],[3,10,14,4,5,1],[3,10,4,5,15,1],[16,3,10,4,5,1],[3,10,4,17,5,1],[11,3,4,12,5,1],[11,3,4,13,5,1],[11,3,14,4,5,1],[11,3,4,5,15,1],[11,16,3,4,5,1],[11,3,4,17,5,1],[3,4,12,13,5,1],[3,14,4,12,5,1],[3,4,12,5,15,1],[16,3,4,12,5,1],[3,4,12,17,5,1],[3,14,4,13,5,1],[3,4,13,5,15,1],[16,3,4,13,5,1],[3,4,13,17,5,1],[3,14,4,5,15,1],[16,3,14,4,5,1],[3,14,4,17,5,1],[16,3,4,5,15,1],[3,4,17,5,15,1],[16,3,4,17,5,1],[6,3,7,8,4,1],[6,3,7,4,9,1],[6,3,7,10,4,1],[11,6,3,7,4,1],[6,3,7,4,12,1],[6,3,7,4,13,1],[6,3,7,14,4,1],[6,3,7,4,15,1],[16,6,3,7,4,1],[6,3,7,4,17,1],[6,3,8,4,9,1],[6,3,10,8,4,1],[11,6,3,8,4,1],[6,3,8,4,12,1],[6,3,8,4,13,1],[6,3,8,14,4,1],[6,3,8,4,15,1],[16,6,3,8,4,1],[6,3,8,4,17,1],[6,3,10,4,9,1],[11,6,3,4,9,1],[6,3,4,12,9,1],[6,3,4,13,9,1],[6,3,14,4,9,1],[6,3,4,9,15,1],[16,6,3,4,9,1],[6,3,4,17,9,1],[11,6,3,10,4,1],[6,3,10,4,12,1],[6,3,10,4,13,1],[6,3,10,14,4,1],[6,3,10,4,15,1],[16,6,3,10,4,1],[6,3,10,4,17,1],[11,6,3,4,12,1],[11,6,3,4,13,1],[11,6,3,14,4,1],[11,6,3,4,15,1],[11,16,6,3,4,1],[11,6,3,4,17,1],[6,3,4,12,13,1],[6,3,14,4,12,1],[6,3,4,12,15,1],[16,6,3,4,12,1],[6,3,4,12,17,1],[6,3,14,4,13,1],[6,3,4,13,15,1],[16,6,3,4,13,1],[6,3,4,13,17,1],[6,3,14,4,15,1],[16,6,3,14,4,1],[6,3,14,4,17,1],[16,6,3,4,15,1],[6,3,4,17,15,1],[16,6,3,4,17,1],[3,7,8,4,9,1],[3,7,10,8,4,1],[11,3,7,8,4,1],[3,7,8,4,12,1],[3,7,8,4,13,1],[3,7,8,14,4,1],[3,7,8,4,15,1],[16,3,7,8,4,1],[3,7,8,4,17,1],[3,7,10,4,9,1],[11,3,7,4,9,1],[3,7,4,12,9,1],[3,7,4,13,9,1],[3,7,14,4,9,1],[3,7,4,9,15,1],[16,3,7,4,9,1],[3,7,4,17,9,1],[11,3,7,10,4,1],[3,7,10,4,12,1],[3,7,10,4,13,1],[3,7,10,14,4,1],[3,7,10,4,15,1],[16,3,7,10,4,1],[3,7,10,4,17,1],[11,3,7,4,12,1],[11,3,7,4,13,1],[11,3,7,14,4,1],[11,3,7,4,15,1],[11,16,3,7,4,1],[11,3,7,4,17,1],[3,7,4,12,13,1],[3,7,14,4,12,1],[3,7,4,12,15,1],[16,3,7,4,12,1],[3,7,4,12,17,1],[3,7,14,4,13,1],[3,7,4,13,15,1],[16,3,7,4,13,1],[3,7,4,13,17,1],[3,7,14,4,15,1],[16,3,7,14,4,1],[3,7,14,4,17,1],[16,3,7,4,15,1],[3,7,4,17,15,1],[16,3,7,4,17,1],[3,10,8,4,9,1],[11,3,8,4,9,1],[3,8,4,12,9,1],[3,8,4,13,9,1],[3,8,14,4,9,1],[3,8,4,9,15,1],[16,3,8,4,9,1],[3,8,4,17,9,1],[11,3,10,8,4,1],[3,10,8,4,12,1],[3,10,8,4,13,1],[3,10,8,14,4,1],[3,10,8,4,15,1],[16,3,10,8,4,1],[3,10,8,4,17,1],[11,3,8,4,12,1],[11,3,8,4,13,1],[11,3,8,14,4,1],[11,3,8,4,15,1],[11,16,3,8,4,1],[11,3,8,4,17,1],[3,8,4,12,13,1],[3,8,14,4,12,1],[3,8,4,12,15,1],[16,3,8,4,12,1],[3,8,4,12,17,1],[3,8,14,4,13,1],[3,8,4,13,15,1],[16,3,8,4,13,1],[3,8,4,13,17,1],[3,8,14,4,15,1],[16,3,8,14,4,1],[3,8,14,4,17,1],[16,3,8,4,15,1],[3,8,4,17,15,1],[16,3,8,4,17,1],[11,3,10,4,9,1],[3,10,4,12,9,1],[3,10,4,13,9,1],[3,10,14,4,9,1],[3,10,4,9,15,1],[16,3,10,4,9,1],[3,10,4,17,9,1],[11,3,4,12,9,1],[11,3,4,13,9,1],[11,3,14,4,9,1],[11,3,4,9,15,1],[11,16,3,4,9,1],[11,3,4,17,9,1],[3,4,12,13,9,1],[3,14,4,12,9,1],[3,4,12,9,15,1],[16,3,4,12,9,1],[3,4,12,17,9,1],[3,14,4,13,9,1],[3,4,13,9,15,1],[16,3,4,13,9,1],[3,4,13,17,9,1],[3,14,4,9,15,1],[16,3,14,4,9,1],[3,14,4,17,9,1],[16,3,4,9,15,1],[3,4,17,9,15,1],[16,3,4,17,9,1],[11,3,10,4,12,1],[11,3,10,4,13,1],[11,3,10,14,4,1],[11,3,10,4,15,1],[11,16,3,10,4,1],[11,3,10,4,17,1],[3,10,4,12,13,1],[3,10,14,4,12,1],[3,10,4,12,15,1],[16,3,10,4,12,1],[3,10,4,12,17,1],[3,10,14,4,13,1],[3,10,4,13,15,1],[16,3,10,4,13,1],[3,10,4,13,17,1],[3,10,14,4,15,1],[16,3,10,14,4,1],[3,10,14,4,17,1],[16,3,10,4,15,1],[3,10,4,17,15,1],[16,3,10,4,17,1],[11,3,4,12,13,1],[11,3,14,4,12,1],[11,3,4,12,15,1],[11,16,3,4,12,1],[11,3,4,12,17,1],[11,3,14,4,13,1],[11,3,4,13,15,1],[11,16,3,4,13,1],[11,3,4,13,17,1],[11,3,14,4,15,1],[11,16,3,14,4,1],[11,3,14,4,17,1],[11,16,3,4,15,1],[11,3,4,17,15,1],[11,16,3,4,17,1],[3,14,4,12,13,1],[3,4,12,13,15,1],[16,3,4,12,13,1],[3,4,12,13,17,1],[3,14,4,12,15,1],[16,3,14,4,12,1],[3,14,4,12,17,1],[16,3,4,12,15,1],[3,4,12,17,15,1],[16,3,4,12,17,1],[3,14,4,13,15,1],[16,3,14,4,13,1],[3,14,4,13,17,1],[16,3,4,13,15,1],[3,4,13,17,15,1],[16,3,4,13,17,1],[16,3,14,4,15,1],[3,14,4,17,15,1],[16,3,14,4,17,1],[16,3,4,17,15,1],[6,3,7,8,5,1],[6,3,7,5,9,1],[6,3,7,10,5,1],[11,6,3,7,5,1],[6,3,7,12,5,1],[6,3,7,13,5,1],[6,3,7,14,5,1],[6,3,7,5,15,1],[16,6,3,7,5,1],[6,3,7,17,5,1],[6,3,8,5,9,1],[6,3,10,8,5,1],[11,6,3,8,5,1],[6,3,8,12,5,1],[6,3,8,13,5,1],[6,3,8,14,5,1],[6,3,8,5,15,1],[16,6,3,8,5,1],[6,3,8,17,5,1],[6,3,10,5,9,1],[11,6,3,5,9,1],[6,3,12,5,9,1],[6,3,13,5,9,1],[6,3,14,5,9,1],[6,3,5,9,15,1],[16,6,3,5,9,1],[6,3,17,5,9,1],[11,6,3,10,5,1],[6,3,10,12,5,1],[6,3,10,13,5,1],[6,3,10,14,5,1],[6,3,10,5,15,1],[16,6,3,10,5,1],[6,3,10,17,5,1],[11,6,3,12,5,1],[11,6,3,13,5,1],[11,6,3,14,5,1],[11,6,3,5,15,1],[11,16,6,3,5,1],[11,6,3,17,5,1],[6,3,12,13,5,1],[6,3,14,12,5,1],[6,3,12,5,15,1],[16,6,3,12,5,1],[6,3,12,17,5,1],[6,3,14,13,5,1],[6,3,13,5,15,1],[16,6,3,13,5,1],[6,3,13,17,5,1],[6,3,14,5,15,1],[16,6,3,14,5,1],[6,3,14,17,5,1],[16,6,3,5,15,1],[6,3,17,5,15,1],[16,6,3,17,5,1],[3,7,8,5,9,1],[3,7,10,8,5,1],[11,3,7,8,5,1],[3,7,8,12,5,1],[3,7,8,13,5,1],[3,7,8,14,5,1],[3,7,8,5,15,1],[16,3,7,8,5,1],[3,7,8,17,5,1],[3,7,10,5,9,1],[11,3,7,5,9,1],[3,7,12,5,9,1],[3,7,13,5,9,1],[3,7,14,5,9,1],[3,7,5,9,15,1],[16,3,7,5,9,1],[3,7,17,5,9,1],[11,3,7,10,5,1],[3,7,10,12,5,1],[3,7,10,13,5,1],[3,7,10,14,5,1],[3,7,10,5,15,1],[16,3,7,10,5,1],[3,7,10,17,5,1],[11,3,7,12,5,1],[11,3,7,13,5,1],[11,3,7,14,5,1],[11,3,7,5,15,1],[11,16,3,7,5,1],[11,3,7,17,5,1],[3,7,12,13,5,1],[3,7,14,12,5,1],[3,7,12,5,15,1],[16,3,7,12,5,1],[3,7,12,17,5,1],[3,7,14,13,5,1],[3,7,13,5,15,1],[16,3,7,13,5,1],[3,7,13,17,5,1],[3,7,14,5,15,1],[16,3,7,14,5,1],[3,7,14,17,5,1],[16,3,7,5,15,1],[3,7,17,5,15,1],[16,3,7,17,5,1],[3,10,8,5,9,1],[11,3,8,5,9,1],[3,8,12,5,9,1],[3,8,13,5,9,1],[3,8,14,5,9,1],[3,8,5,9,15,1],[16,3,8,5,9,1],[3,8,17,5,9,1],[11,3,10,8,5,1],[3,10,8,12,5,1],[3,10,8,13,5,1],[3,10,8,14,5,1],[3,10,8,5,15,1],[16,3,10,8,5,1],[3,10,8,17,5,1],[11,3,8,12,5,1],[11,3,8,13,5,1],[11,3,8,14,5,1],[11,3,8,5,15,1],[11,16,3,8,5,1],[11,3,8,17,5,1],[3,8,12,13,5,1],[3,8,14,12,5,1],[3,8,12,5,15,1],[16,3,8,12,5,1],[3,8,12,17,5,1],[3,8,14,13,5,1],[3,8,13,5,15,1],[16,3,8,13,5,1],[3,8,13,17,5,1],[3,8,14,5,15,1],[16,3,8,14,5,1],[3,8,14,17,5,1],[16,3,8,5,15,1],[3,8,17,5,15,1],[16,3,8,17,5,1],[11,3,10,5,9,1],[3,10,12,5,9,1],[3,10,13,5,9,1],[3,10,14,5,9,1],[3,10,5,9,15,1],[16,3,10,5,9,1],[3,10,17,5,9,1],[11,3,12,5,9,1],[11,3,13,5,9,1],[11,3,14,5,9,1],[11,3,5,9,15,1],[11,16,3,5,9,1],[11,3,17,5,9,1],[3,12,13,5,9,1],[3,14,12,5,9,1],[3,12,5,9,15,1],[16,3,12,5,9,1],[3,12,17,5,9,1],[3,14,13,5,9,1],[3,13,5,9,15,1],[16,3,13,5,9,1],[3,13,17,5,9,1],[3,14,5,9,15,1],[16,3,14,5,9,1],[3,14,17,5,9,1],[16,3,5,9,15,1],[3,17,5,9,15,1],[16,3,17,5,9,1],[11,3,10,12,5,1],[11,3,10,13,5,1],[11,3,10,14,5,1],[11,3,10,5,15,1],[11,16,3,10,5,1],[11,3,10,17,5,1],[3,10,12,13,5,1],[3,10,14,12,5,1],[3,10,12,5,15,1],[16,3,10,12,5,1],[3,10,12,17,5,1],[3,10,14,13,5,1],[3,10,13,5,15,1],[16,3,10,13,5,1],[3,10,13,17,5,1],[3,10,14,5,15,1],[16,3,10,14,5,1],[3,10,14,17,5,1],[16,3,10,5,15,1],[3,10,17,5,15,1],[16,3,10,17,5,1],[11,3,12,13,5,1],[11,3,14,12,5,1],[11,3,12,5,15,1],[11,16,3,12,5,1],[11,3,12,17,5,1],[11,3,14,13,5,1],[11,3,13,5,15,1],[11,16,3,13,5,1],[11,3,13,17,5,1],[11,3,14,5,15,1],[11,16,3,14,5,1],[11,3,14,17,5,1],[11,16,3,5,15,1],[11,3,17,5,15,1],[11,16,3,17,5,1],[3,14,12,13,5,1],[3,12,13,5,15,1],[16,3,12,13,5,1],[3,12,13,17,5,1],[3,14,12,5,15,1],[16,3,14,12,5,1],[3,14,12,17,5,1],[16,3,12,5,15,1],[3,12,17,5,15,1],[16,3,12,17,5,1],[3,14,13,5,15,1],[16,3,14,13,5,1],[3,14,13,17,5,1],[16,3,13,5,15,1],[3,13,17,5,15,1],[16,3,13,17,5,1],[16,3,14,5,15,1],[3,14,17,5,15,1],[16,3,14,17,5,1],[16,3,17,5,15,1],[6,3,7,8,9,1],[6,3,7,10,8,1],[11,6,3,7,8,1],[6,3,7,8,12,1],[6,3,7,8,13,1],[6,3,7,8,14,1],[6,3,7,8,15,1],[16,6,3,7,8,1],[6,3,7,8,17,1],[6,3,7,10,9,1],[11,6,3,7,9,1],[6,3,7,12,9,1],[6,3,7,13,9,1],[6,3,7,14,9,1],[6,3,7,9,15,1],[16,6,3,7,9,1],[6,3,7,17,9,1],[11,6,3,7,10,1],[6,3,7,10,12,1],[6,3,7,10,13,1],[6,3,7,10,14,1],[6,3,7,10,15,1],[16,6,3,7,10,1],[6,3,7,10,17,1],[11,6,3,7,12,1],[11,6,3,7,13,1],[11,6,3,7,14,1],[11,6,3,7,15,1],[11,16,6,3,7,1],[11,6,3,7,17,1],[6,3,7,12,13,1],[6,3,7,14,12,1],[6,3,7,12,15,1],[16,6,3,7,12,1],[6,3,7,12,17,1],[6,3,7,14,13,1],[6,3,7,13,15,1],[16,6,3,7,13,1],[6,3,7,13,17,1],[6,3,7,14,15,1],[16,6,3,7,14,1],[6,3,7,14,17,1],[16,6,3,7,15,1],[6,3,7,17,15,1],[16,6,3,7,17,1],[6,3,10,8,9,1],[11,6,3,8,9,1],[6,3,8,12,9,1],[6,3,8,13,9,1],[6,3,8,14,9,1],[6,3,8,9,15,1],[16,6,3,8,9,1],[6,3,8,17,9,1],[11,6,3,10,8,1],[6,3,10,8,12,1],[6,3,10,8,13,1],[6,3,10,8,14,1],[6,3,10,8,15,1],[16,6,3,10,8,1],[6,3,10,8,17,1],[11,6,3,8,12,1],[11,6,3,8,13,1],[11,6,3,8,14,1],[11,6,3,8,15,1],[11,16,6,3,8,1],[11,6,3,8,17,1],[6,3,8,12,13,1],[6,3,8,14,12,1],[6,3,8,12,15,1],[16,6,3,8,12,1],[6,3,8,12,17,1],[6,3,8,14,13,1],[6,3,8,13,15,1],[16,6,3,8,13,1],[6,3,8,13,17,1],[6,3,8,14,15,1],[16,6,3,8,14,1],[6,3,8,14,17,1],[16,6,3,8,15,1],[6,3,8,17,15,1],[16,6,3,8,17,1],[11,6,3,10,9,1],[6,3,10,12,9,1],[6,3,10,13,9,1],[6,3,10,14,9,1],[6,3,10,9,15,1],[16,6,3,10,9,1],[6,3,10,17,9,1],[11,6,3,12,9,1],[11,6,3,13,9,1],[11,6,3,14,9,1],[11,6,3,9,15,1],[11,16,6,3,9,1],[11,6,3,17,9,1],[6,3,12,13,9,1],[6,3,14,12,9,1],[6,3,12,9,15,1],[16,6,3,12,9,1],[6,3,12,17,9,1],[6,3,14,13,9,1],[6,3,13,9,15,1],[16,6,3,13,9,1],[6,3,13,17,9,1],[6,3,14,9,15,1],[16,6,3,14,9,1],[6,3,14,17,9,1],[16,6,3,9,15,1],[6,3,17,9,15,1],[16,6,3,17,9,1],[11,6,3,10,12,1],[11,6,3,10,13,1],[11,6,3,10,14,1],[11,6,3,10,15,1],[11,16,6,3,10,1],[11,6,3,10,17,1],[6,3,10,12,13,1],[6,3,10,14,12,1],[6,3,10,12,15,1],[16,6,3,10,12,1],[6,3,10,12,17,1],[6,3,10,14,13,1],[6,3,10,13,15,1],[16,6,3,10,13,1],[6,3,10,13,17,1],[6,3,10,14,15,1],[16,6,3,10,14,1],[6,3,10,14,17,1],[16,6,3,10,15,1],[6,3,10,17,15,1],[16,6,3,10,17,1],[11,6,3,12,13,1],[11,6,3,14,12,1],[11,6,3,12,15,1],[11,16,6,3,12,1],[11,6,3,12,17,1],[11,6,3,14,13,1],[11,6,3,13,15,1],[11,16,6,3,13,1],[11,6,3,13,17,1],[11,6,3,14,15,1],[11,16,6,3,14,1],[11,6,3,14,17,1],[11,16,6,3,15,1],[11,6,3,17,15,1],[11,16,6,3,17,1],[6,3,14,12,13,1],[6,3,12,13,15,1],[16,6,3,12,13,1],[6,3,12,13,17,1],[6,3,14,12,15,1],[16,6,3,14,12,1],[6,3,14,12,17,1],[16,6,3,12,15,1],[6,3,12,17,15,1],[16,6,3,12,17,1],[6,3,14,13,15,1],[16,6,3,14,13,1],[6,3,14,13,17,1],[16,6,3,13,15,1],[6,3,13,17,15,1],[16,6,3,13,17,1],[16,6,3,14,15,1],[6,3,14,17,15,1],[16,6,3,14,17,1],[16,6,3,17,15,1],[3,7,10,8,9,1],[11,3,7,8,9,1],[3,7,8,12,9,1],[3,7,8,13,9,1],[3,7,8,14,9,1],[3,7,8,9,15,1],[16,3,7,8,9,1],[3,7,8,17,9,1],[11,3,7,10,8,1],[3,7,10,8,12,1],[3,7,10,8,13,1],[3,7,10,8,14,1],[3,7,10,8,15,1],[16,3,7,10,8,1],[3,7,10,8,17,1],[11,3,7,8,12,1],[11,3,7,8,13,1],[11,3,7,8,14,1],[11,3,7,8,15,1],[11,16,3,7,8,1],[11,3,7,8,17,1],[3,7,8,12,13,1],[3,7,8,14,12,1],[3,7,8,12,15,1],[16,3,7,8,12,1],[3,7,8,12,17,1],[3,7,8,14,13,1],[3,7,8,13,15,1],[16,3,7,8,13,1],[3,7,8,13,17,1],[3,7,8,14,15,1],[16,3,7,8,14,1],[3,7,8,14,17,1],[16,3,7,8,15,1],[3,7,8,17,15,1],[16,3,7,8,17,1],[11,3,7,10,9,1],[3,7,10,12,9,1],[3,7,10,13,9,1],[3,7,10,14,9,1],[3,7,10,9,15,1],[16,3,7,10,9,1],[3,7,10,17,9,1],[11,3,7,12,9,1],[11,3,7,13,9,1],[11,3,7,14,9,1],[11,3,7,9,15,1],[11,16,3,7,9,1],[11,3,7,17,9,1],[3,7,12,13,9,1],[3,7,14,12,9,1],[3,7,12,9,15,1],[16,3,7,12,9,1],[3,7,12,17,9,1],[3,7,14,13,9,1],[3,7,13,9,15,1],[16,3,7,13,9,1],[3,7,13,17,9,1],[3,7,14,9,15,1],[16,3,7,14,9,1],[3,7,14,17,9,1],[16,3,7,9,15,1],[3,7,17,9,15,1],[16,3,7,17,9,1],[11,3,7,10,12,1],[11,3,7,10,13,1],[11,3,7,10,14,1],[11,3,7,10,15,1],[11,16,3,7,10,1],[11,3,7,10,17,1],[3,7,10,12,13,1],[3,7,10,14,12,1],[3,7,10,12,15,1],[16,3,7,10,12,1],[3,7,10,12,17,1],[3,7,10,14,13,1],[3,7,10,13,15,1],[16,3,7,10,13,1],[3,7,10,13,17,1],[3,7,10,14,15,1],[16,3,7,10,14,1],[3,7,10,14,17,1],[16,3,7,10,15,1],[3,7,10,17,15,1],[16,3,7,10,17,1],[11,3,7,12,13,1],[11,3,7,14,12,1],[11,3,7,12,15,1],[11,16,3,7,12,1],[11,3,7,12,17,1],[11,3,7,14,13,1],[11,3,7,13,15,1],[11,16,3,7,13,1],[11,3,7,13,17,1],[11,3,7,14,15,1],[11,16,3,7,14,1],[11,3,7,14,17,1],[11,16,3,7,15,1],[11,3,7,17,15,1],[11,16,3,7,17,1],[3,7,14,12,13,1],[3,7,12,13,15,1],[16,3,7,12,13,1],[3,7,12,13,17,1],[3,7,14,12,15,1],[16,3,7,14,12,1],[3,7,14,12,17,1],[16,3,7,12,15,1],[3,7,12,17,15,1],[16,3,7,12,17,1],[3,7,14,13,15,1],[16,3,7,14,13,1],[3,7,14,13,17,1],[16,3,7,13,15,1],[3,7,13,17,15,1],[16,3,7,13,17,1],[16,3,7,14,15,1],[3,7,14,17,15,1],[16,3,7,14,17,1],[16,3,7,17,15,1],[11,3,10,8,9,1],[3,10,8,12,9,1],[3,10,8,13,9,1],[3,10,8,14,9,1],[3,10,8,9,15,1],[16,3,10,8,9,1],[3,10,8,17,9,1],[11,3,8,12,9,1],[11,3,8,13,9,1],[11,3,8,14,9,1],[11,3,8,9,15,1],[11,16,3,8,9,1],[11,3,8,17,9,1],[3,8,12,13,9,1],[3,8,14,12,9,1],[3,8,12,9,15,1],[16,3,8,12,9,1],[3,8,12,17,9,1],[3,8,14,13,9,1],[3,8,13,9,15,1],[16,3,8,13,9,1],[3,8,13,17,9,1],[3,8,14,9,15,1],[16,3,8,14,9,1],[3,8,14,17,9,1],[16,3,8,9,15,1],[3,8,17,9,15,1],[16,3,8,17,9,1],[11,3,10,8,12,1],[11,3,10,8,13,1],[11,3,10,8,14,1],[11,3,10,8,15,1],[11,16,3,10,8,1],[11,3,10,8,17,1],[3,10,8,12,13,1],[3,10,8,14,12,1],[3,10,8,12,15,1],[16,3,10,8,12,1],[3,10,8,12,17,1],[3,10,8,14,13,1],[3,10,8,13,15,1],[16,3,10,8,13,1],[3,10,8,13,17,1],[3,10,8,14,15,1],[16,3,10,8,14,1],[3,10,8,14,17,1],[16,3,10,8,15,1],[3,10,8,17,15,1],[16,3,10,8,17,1],[11,3,8,12,13,1],[11,3,8,14,12,1],[11,3,8,12,15,1],[11,16,3,8,12,1],[11,3,8,12,17,1],[11,3,8,14,13,1],[11,3,8,13,15,1],[11,16,3,8,13,1],[11,3,8,13,17,1],[11,3,8,14,15,1],[11,16,3,8,14,1],[11,3,8,14,17,1],[11,16,3,8,15,1],[11,3,8,17,15,1],[11,16,3,8,17,1],[3,8,14,12,13,1],[3,8,12,13,15,1],[16,3,8,12,13,1],[3,8,12,13,17,1],[3,8,14,12,15,1],[16,3,8,14,12,1],[3,8,14,12,17,1],[16,3,8,12,15,1],[3,8,12,17,15,1],[16,3,8,12,17,1],[3,8,14,13,15,1],[16,3,8,14,13,1],[3,8,14,13,17,1],[16,3,8,13,15,1],[3,8,13,17,15,1],[16,3,8,13,17,1],[16,3,8,14,15,1],[3,8,14,17,15,1],[16,3,8,14,17,1],[16,3,8,17,15,1],[11,3,10,12,9,1],[11,3,10,13,9,1],[11,3,10,14,9,1],[11,3,10,9,15,1],[11,16,3,10,9,1],[11,3,10,17,9,1],[3,10,12,13,9,1],[3,10,14,12,9,1],[3,10,12,9,15,1],[16,3,10,12,9,1],[3,10,12,17,9,1],[3,10,14,13,9,1],[3,10,13,9,15,1],[16,3,10,13,9,1],[3,10,13,17,9,1],[3,10,14,9,15,1],[16,3,10,14,9,1],[3,10,14,17,9,1],[16,3,10,9,15,1],[3,10,17,9,15,1],[16,3,10,17,9,1],[11,3,12,13,9,1],[11,3,14,12,9,1],[11,3,12,9,15,1],[11,16,3,12,9,1],[11,3,12,17,9,1],[11,3,14,13,9,1],[11,3,13,9,15,1],[11,16,3,13,9,1],[11,3,13,17,9,1],[11,3,14,9,15,1],[11,16,3,14,9,1],[11,3,14,17,9,1],[11,16,3,9,15,1],[11,3,17,9,15,1],[11,16,3,17,9,1],[3,14,12,13,9,1],[3,12,13,9,15,1],[16,3,12,13,9,1],[3,12,13,17,9,1],[3,14,12,9,15,1],[16,3,14,12,9,1],[3,14,12,17,9,1],[16,3,12,9,15,1],[3,12,17,9,15,1],[16,3,12,17,9,1],[3,14,13,9,15,1],[16,3,14,13,9,1],[3,14,13,17,9,1],[16,3,13,9,15,1],[3,13,17,9,15,1],[16,3,13,17,9,1],[16,3,14,9,15,1],[3,14,17,9,15,1],[16,3,14,17,9,1],[16,3,17,9,15,1],[11,3,10,12,13,1],[11,3,10,14,12,1],[11,3,10,12,15,1],[11,16,3,10,12,1],[11,3,10,12,17,1],[11,3,10,14,13,1],[11,3,10,13,15,1],[11,16,3,10,13,1],[11,3,10,13,17,1],[11,3,10,14,15,1],[11,16,3,10,14,1],[11,3,10,14,17,1],[11,16,3,10,15,1],[11,3,10,17,15,1],[11,16,3,10,17,1],[3,10,14,12,13,1],[3,10,12,13,15,1],[16,3,10,12,13,1],[3,10,12,13,17,1],[3,10,14,12,15,1],[16,3,10,14,12,1],[3,10,14,12,17,1],[16,3,10,12,15,1],[3,10,12,17,15,1],[16,3,10,12,17,1],[3,10,14,13,15,1],[16,3,10,14,13,1],[3,10,14,13,17,1],[16,3,10,13,15,1],[3,10,13,17,15,1],[16,3,10,13,17,1],[16,3,10,14,15,1],[3,10,14,17,15,1],[16,3,10,14,17,1],[16,3,10,17,15,1],[11,3,14,12,13,1],[11,3,12,13,15,1],[11,16,3,12,13,1],[11,3,12,13,17,1],[11,3,14,12,15,1],[11,16,3,14,12,1],[11,3,14,12,17,1],[11,16,3,12,15,1],[11,3,12,17,15,1],[11,16,3,12,17,1],[11,3,14,13,15,1],[11,16,3,14,13,1],[11,3,14,13,17,1],[11,16,3,13,15,1],[11,3,13,17,15,1],[11,16,3,13,17,1],[11,16,3,14,15,1],[11,3,14,17,15,1],[11,16,3,14,17,1],[11,16,3,17,15,1],[3,14,12,13,15,1],[16,3,14,12,13,1],[3,14,12,13,17,1],[16,3,12,13,15,1],[3,12,13,17,15,1],[16,3,12,13,17,1],[16,3,14,12,15,1],[3,14,12,17,15,1],[16,3,14,12,17,1],[16,3,12,17,15,1],[16,3,14,13,15,1],[3,14,13,17,15,1],[16,3,14,13,17,1],[16,3,13,17,15,1],[16,3,14,17,15,1],[6,7,8,4,5,1],[6,7,4,5,9,1],[6,7,10,4,5,1],[11,6,7,4,5,1],[6,7,4,12,5,1],[6,7,4,13,5,1],[6,7,14,4,5,1],[6,7,4,5,15,1],[16,6,7,4,5,1],[6,7,4,17,5,1],[6,8,4,5,9,1],[6,10,8,4,5,1],[11,6,8,4,5,1],[6,8,4,12,5,1],[6,8,4,13,5,1],[6,8,14,4,5,1],[6,8,4,5,15,1],[16,6,8,4,5,1],[6,8,4,17,5,1],[6,10,4,5,9,1],[11,6,4,5,9,1],[6,4,12,5,9,1],[6,4,13,5,9,1],[6,14,4,5,9,1],[6,4,5,9,15,1],[16,6,4,5,9,1],[6,4,17,5,9,1],[11,6,10,4,5,1],[6,10,4,12,5,1],[6,10,4,13,5,1],[6,10,14,4,5,1],[6,10,4,5,15,1],[16,6,10,4,5,1],[6,10,4,17,5,1],[11,6,4,12,5,1],[11,6,4,13,5,1],[11,6,14,4,5,1],[11,6,4,5,15,1],[11,16,6,4,5,1],[11,6,4,17,5,1],[6,4,12,13,5,1],[6,14,4,12,5,1],[6,4,12,5,15,1],[16,6,4,12,5,1],[6,4,12,17,5,1],[6,14,4,13,5,1],[6,4,13,5,15,1],[16,6,4,13,5,1],[6,4,13,17,5,1],[6,14,4,5,15,1],[16,6,14,4,5,1],[6,14,4,17,5,1],[16,6,4,5,15,1],[6,4,17,5,15,1],[16,6,4,17,5,1],[7,8,4,5,9,1],[7,10,8,4,5,1],[11,7,8,4,5,1],[7,8,4,12,5,1],[7,8,4,13,5,1],[7,8,14,4,5,1],[7,8,4,5,15,1],[16,7,8,4,5,1],[7,8,4,17,5,1],[7,10,4,5,9,1],[11,7,4,5,9,1],[7,4,12,5,9,1],[7,4,13,5,9,1],[7,14,4,5,9,1],[7,4,5,9,15,1],[16,7,4,5,9,1],[7,4,17,5,9,1],[11,7,10,4,5,1],[7,10,4,12,5,1],[7,10,4,13,5,1],[7,10,14,4,5,1],[7,10,4,5,15,1],[16,7,10,4,5,1],[7,10,4,17,5,1],[11,7,4,12,5,1],[11,7,4,13,5,1],[11,7,14,4,5,1],[11,7,4,5,15,1],[11,16,7,4,5,1],[11,7,4,17,5,1],[7,4,12,13,5,1],[7,14,4,12,5,1],[7,4,12,5,15,1],[16,7,4,12,5,1],[7,4,12,17,5,1],[7,14,4,13,5,1],[7,4,13,5,15,1],[16,7,4,13,5,1],[7,4,13,17,5,1],[7,14,4,5,15,1],[16,7,14,4,5,1],[7,14,4,17,5,1],[16,7,4,5,15,1],[7,4,17,5,15,1],[16,7,4,17,5,1],[10,8,4,5,9,1],[11,8,4,5,9,1],[8,4,12,5,9,1],[8,4,13,5,9,1],[8,14,4,5,9,1],[8,4,5,9,15,1],[16,8,4,5,9,1],[8,4,17,5,9,1],[11,10,8,4,5,1],[10,8,4,12,5,1],[10,8,4,13,5,1],[10,8,14,4,5,1],[10,8,4,5,15,1],[16,10,8,4,5,1],[10,8,4,17,5,1],[11,8,4,12,5,1],[11,8,4,13,5,1],[11,8,14,4,5,1],[11,8,4,5,15,1],[11,16,8,4,5,1],[11,8,4,17,5,1],[8,4,12,13,5,1],[8,14,4,12,5,1],[8,4,12,5,15,1],[16,8,4,12,5,1],[8,4,12,17,5,1],[8,14,4,13,5,1],[8,4,13,5,15,1],[16,8,4,13,5,1],[8,4,13,17,5,1],[8,14,4,5,15,1],[16,8,14,4,5,1],[8,14,4,17,5,1],[16,8,4,5,15,1],[8,4,17,5,15,1],[16,8,4,17,5,1],[11,10,4,5,9,1],[10,4,12,5,9,1],[10,4,13,5,9,1],[10,14,4,5,9,1],[10,4,5,9,15,1],[16,10,4,5,9,1],[10,4,17,5,9,1],[11,4,12,5,9,1],[11,4,13,5,9,1],[11,14,4,5,9,1],[11,4,5,9,15,1],[11,16,4,5,9,1],[11,4,17,5,9,1],[4,12,13,5,9,1],[14,4,12,5,9,1],[4,12,5,9,15,1],[16,4,12,5,9,1],[4,12,17,5,9,1],[14,4,13,5,9,1],[4,13,5,9,15,1],[16,4,13,5,9,1],[4,13,17,5,9,1],[14,4,5,9,15,1],[16,14,4,5,9,1],[14,4,17,5,9,1],[16,4,5,9,15,1],[4,17,5,9,15,1],[16,4,17,5,9,1],[11,10,4,12,5,1],[11,10,4,13,5,1],[11,10,14,4,5,1],[11,10,4,5,15,1],[11,16,10,4,5,1],[11,10,4,17,5,1],[10,4,12,13,5,1],[10,14,4,12,5,1],[10,4,12,5,15,1],[16,10,4,12,5,1],[10,4,12,17,5,1],[10,14,4,13,5,1],[10,4,13,5,15,1],[16,10,4,13,5,1],[10,4,13,17,5,1],[10,14,4,5,15,1],[16,10,14,4,5,1],[10,14,4,17,5,1],[16,10,4,5,15,1],[10,4,17,5,15,1],[16,10,4,17,5,1],[11,4,12,13,5,1],[11,14,4,12,5,1],[11,4,12,5,15,1],[11,16,4,12,5,1],[11,4,12,17,5,1],[11,14,4,13,5,1],[11,4,13,5,15,1],[11,16,4,13,5,1],[11,4,13,17,5,1],[11,14,4,5,15,1],[11,16,14,4,5,1],[11,14,4,17,5,1],[11,16,4,5,15,1],[11,4,17,5,15,1],[11,16,4,17,5,1],[14,4,12,13,5,1],[4,12,13,5,15,1],[16,4,12,13,5,1],[4,12,13,17,5,1],[14,4,12,5,15,1],[16,14,4,12,5,1],[14,4,12,17,5,1],[16,4,12,5,15,1],[4,12,17,5,15,1],[16,4,12,17,5,1],[14,4,13,5,15,1],[16,14,4,13,5,1],[14,4,13,17,5,1],[16,4,13,5,15,1],[4,13,17,5,15,1],[16,4,13,17,5,1],[16,14,4,5,15,1],[14,4,17,5,15,1],[16,14,4,17,5,1],[16,4,17,5,15,1],[6,7,8,4,9,1],[6,7,10,8,4,1],[11,6,7,8,4,1],[6,7,8,4,12,1],[6,7,8,4,13,1],[6,7,8,14,4,1],[6,7,8,4,15,1],[16,6,7,8,4,1],[6,7,8,4,17,1],[6,7,10,4,9,1],[11,6,7,4,9,1],[6,7,4,12,9,1],[6,7,4,13,9,1],[6,7,14,4,9,1],[6,7,4,9,15,1],[16,6,7,4,9,1],[6,7,4,17,9,1],[11,6,7,10,4,1],[6,7,10,4,12,1],[6,7,10,4,13,1],[6,7,10,14,4,1],[6,7,10,4,15,1],[16,6,7,10,4,1],[6,7,10,4,17,1],[11,6,7,4,12,1],[11,6,7,4,13,1],[11,6,7,14,4,1],[11,6,7,4,15,1],[11,16,6,7,4,1],[11,6,7,4,17,1],[6,7,4,12,13,1],[6,7,14,4,12,1],[6,7,4,12,15,1],[16,6,7,4,12,1],[6,7,4,12,17,1],[6,7,14,4,13,1],[6,7,4,13,15,1],[16,6,7,4,13,1],[6,7,4,13,17,1],[6,7,14,4,15,1],[16,6,7,14,4,1],[6,7,14,4,17,1],[16,6,7,4,15,1],[6,7,4,17,15,1],[16,6,7,4,17,1],[6,10,8,4,9,1],[11,6,8,4,9,1],[6,8,4,12,9,1],[6,8,4,13,9,1],[6,8,14,4,9,1],[6,8,4,9,15,1],[16,6,8,4,9,1],[6,8,4,17,9,1],[11,6,10,8,4,1],[6,10,8,4,12,1],[6,10,8,4,13,1],[6,10,8,14,4,1],[6,10,8,4,15,1],[16,6,10,8,4,1],[6,10,8,4,17,1],[11,6,8,4,12,1],[11,6,8,4,13,1],[11,6,8,14,4,1],[11,6,8,4,15,1],[11,16,6,8,4,1],[11,6,8,4,17,1],[6,8,4,12,13,1],[6,8,14,4,12,1],[6,8,4,12,15,1],[16,6,8,4,12,1],[6,8,4,12,17,1],[6,8,14,4,13,1],[6,8,4,13,15,1],[16,6,8,4,13,1],[6,8,4,13,17,1],[6,8,14,4,15,1],[16,6,8,14,4,1],[6,8,14,4,17,1],[16,6,8,4,15,1],[6,8,4,17,15,1],[16,6,8,4,17,1],[11,6,10,4,9,1],[6,10,4,12,9,1],[6,10,4,13,9,1],[6,10,14,4,9,1],[6,10,4,9,15,1],[16,6,10,4,9,1],[6,10,4,17,9,1],[11,6,4,12,9,1],[11,6,4,13,9,1],[11,6,14,4,9,1],[11,6,4,9,15,1],[11,16,6,4,9,1],[11,6,4,17,9,1],[6,4,12,13,9,1],[6,14,4,12,9,1],[6,4,12,9,15,1],[16,6,4,12,9,1],[6,4,12,17,9,1],[6,14,4,13,9,1],[6,4,13,9,15,1],[16,6,4,13,9,1],[6,4,13,17,9,1],[6,14,4,9,15,1],[16,6,14,4,9,1],[6,14,4,17,9,1],[16,6,4,9,15,1],[6,4,17,9,15,1],[16,6,4,17,9,1],[11,6,10,4,12,1],[11,6,10,4,13,1],[11,6,10,14,4,1],[11,6,10,4,15,1],[11,16,6,10,4,1],[11,6,10,4,17,1],[6,10,4,12,13,1],[6,10,14,4,12,1],[6,10,4,12,15,1],[16,6,10,4,12,1],[6,10,4,12,17,1],[6,10,14,4,13,1],[6,10,4,13,15,1],[16,6,10,4,13,1],[6,10,4,13,17,1],[6,10,14,4,15,1],[16,6,10,14,4,1],[6,10,14,4,17,1],[16,6,10,4,15,1],[6,10,4,17,15,1],[16,6,10,4,17,1],[11,6,4,12,13,1],[11,6,14,4,12,1],[11,6,4,12,15,1],[11,16,6,4,12,1],[11,6,4,12,17,1],[11,6,14,4,13,1],[11,6,4,13,15,1],[11,16,6,4,13,1],[11,6,4,13,17,1],[11,6,14,4,15,1],[11,16,6,14,4,1],[11,6,14,4,17,1],[11,16,6,4,15,1],[11,6,4,17,15,1],[11,16,6,4,17,1],[6,14,4,12,13,1],[6,4,12,13,15,1],[16,6,4,12,13,1],[6,4,12,13,17,1],[6,14,4,12,15,1],[16,6,14,4,12,1],[6,14,4,12,17,1],[16,6,4,12,15,1],[6,4,12,17,15,1],[16,6,4,12,17,1],[6,14,4,13,15,1],[16,6,14,4,13,1],[6,14,4,13,17,1],[16,6,4,13,15,1],[6,4,13,17,15,1],[16,6,4,13,17,1],[16,6,14,4,15,1],[6,14,4,17,15,1],[16,6,14,4,17,1],[16,6,4,17,15,1],[7,10,8,4,9,1],[11,7,8,4,9,1],[7,8,4,12,9,1],[7,8,4,13,9,1],[7,8,14,4,9,1],[7,8,4,9,15,1],[16,7,8,4,9,1],[7,8,4,17,9,1],[11,7,10,8,4,1],[7,10,8,4,12,1],[7,10,8,4,13,1],[7,10,8,14,4,1],[7,10,8,4,15,1],[16,7,10,8,4,1],[7,10,8,4,17,1],[11,7,8,4,12,1],[11,7,8,4,13,1],[11,7,8,14,4,1],[11,7,8,4,15,1],[11,16,7,8,4,1],[11,7,8,4,17,1],[7,8,4,12,13,1],[7,8,14,4,12,1],[7,8,4,12,15,1],[16,7,8,4,12,1],[7,8,4,12,17,1],[7,8,14,4,13,1],[7,8,4,13,15,1],[16,7,8,4,13,1],[7,8,4,13,17,1],[7,8,14,4,15,1],[16,7,8,14,4,1],[7,8,14,4,17,1],[16,7,8,4,15,1],[7,8,4,17,15,1],[16,7,8,4,17,1],[11,7,10,4,9,1],[7,10,4,12,9,1],[7,10,4,13,9,1],[7,10,14,4,9,1],[7,10,4,9,15,1],[16,7,10,4,9,1],[7,10,4,17,9,1],[11,7,4,12,9,1],[11,7,4,13,9,1],[11,7,14,4,9,1],[11,7,4,9,15,1],[11,16,7,4,9,1],[11,7,4,17,9,1],[7,4,12,13,9,1],[7,14,4,12,9,1],[7,4,12,9,15,1],[16,7,4,12,9,1],[7,4,12,17,9,1],[7,14,4,13,9,1],[7,4,13,9,15,1],[16,7,4,13,9,1],[7,4,13,17,9,1],[7,14,4,9,15,1],[16,7,14,4,9,1],[7,14,4,17,9,1],[16,7,4,9,15,1],[7,4,17,9,15,1],[16,7,4,17,9,1],[11,7,10,4,12,1],[11,7,10,4,13,1],[11,7,10,14,4,1],[11,7,10,4,15,1],[11,16,7,10,4,1],[11,7,10,4,17,1],[7,10,4,12,13,1],[7,10,14,4,12,1],[7,10,4,12,15,1],[16,7,10,4,12,1],[7,10,4,12,17,1],[7,10,14,4,13,1],[7,10,4,13,15,1],[16,7,10,4,13,1],[7,10,4,13,17,1],[7,10,14,4,15,1],[16,7,10,14,4,1],[7,10,14,4,17,1],[16,7,10,4,15,1],[7,10,4,17,15,1],[16,7,10,4,17,1],[11,7,4,12,13,1],[11,7,14,4,12,1],[11,7,4,12,15,1],[11,16,7,4,12,1],[11,7,4,12,17,1],[11,7,14,4,13,1],[11,7,4,13,15,1],[11,16,7,4,13,1],[11,7,4,13,17,1],[11,7,14,4,15,1],[11,16,7,14,4,1],[11,7,14,4,17,1],[11,16,7,4,15,1],[11,7,4,17,15,1],[11,16,7,4,17,1],[7,14,4,12,13,1],[7,4,12,13,15,1],[16,7,4,12,13,1],[7,4,12,13,17,1],[7,14,4,12,15,1],[16,7,14,4,12,1],[7,14,4,12,17,1],[16,7,4,12,15,1],[7,4,12,17,15,1],[16,7,4,12,17,1],[7,14,4,13,15,1],[16,7,14,4,13,1],[7,14,4,13,17,1],[16,7,4,13,15,1],[7,4,13,17,15,1],[16,7,4,13,17,1],[16,7,14,4,15,1],[7,14,4,17,15,1],[16,7,14,4,17,1],[16,7,4,17,15,1],[11,10,8,4,9,1],[10,8,4,12,9,1],[10,8,4,13,9,1],[10,8,14,4,9,1],[10,8,4,9,15,1],[16,10,8,4,9,1],[10,8,4,17,9,1],[11,8,4,12,9,1],[11,8,4,13,9,1],[11,8,14,4,9,1],[11,8,4,9,15,1],[11,16,8,4,9,1],[11,8,4,17,9,1],[8,4,12,13,9,1],[8,14,4,12,9,1],[8,4,12,9,15,1],[16,8,4,12,9,1],[8,4,12,17,9,1],[8,14,4,13,9,1],[8,4,13,9,15,1],[16,8,4,13,9,1],[8,4,13,17,9,1],[8,14,4,9,15,1],[16,8,14,4,9,1],[8,14,4,17,9,1],[16,8,4,9,15,1],[8,4,17,9,15,1],[16,8,4,17,9,1],[11,10,8,4,12,1],[11,10,8,4,13,1],[11,10,8,14,4,1],[11,10,8,4,15,1],[11,16,10,8,4,1],[11,10,8,4,17,1],[10,8,4,12,13,1],[10,8,14,4,12,1],[10,8,4,12,15,1],[16,10,8,4,12,1],[10,8,4,12,17,1],[10,8,14,4,13,1],[10,8,4,13,15,1],[16,10,8,4,13,1],[10,8,4,13,17,1],[10,8,14,4,15,1],[16,10,8,14,4,1],[10,8,14,4,17,1],[16,10,8,4,15,1],[10,8,4,17,15,1],[16,10,8,4,17,1],[11,8,4,12,13,1],[11,8,14,4,12,1],[11,8,4,12,15,1],[11,16,8,4,12,1],[11,8,4,12,17,1],[11,8,14,4,13,1],[11,8,4,13,15,1],[11,16,8,4,13,1],[11,8,4,13,17,1],[11,8,14,4,15,1],[11,16,8,14,4,1],[11,8,14,4,17,1],[11,16,8,4,15,1],[11,8,4,17,15,1],[11,16,8,4,17,1],[8,14,4,12,13,1],[8,4,12,13,15,1],[16,8,4,12,13,1],[8,4,12,13,17,1],[8,14,4,12,15,1],[16,8,14,4,12,1],[8,14,4,12,17,1],[16,8,4,12,15,1],[8,4,12,17,15,1],[16,8,4,12,17,1],[8,14,4,13,15,1],[16,8,14,4,13,1],[8,14,4,13,17,1],[16,8,4,13,15,1],[8,4,13,17,15,1],[16,8,4,13,17,1],[16,8,14,4,15,1],[8,14,4,17,15,1],[16,8,14,4,17,1],[16,8,4,17,15,1],[11,10,4,12,9,1],[11,10,4,13,9,1],[11,10,14,4,9,1],[11,10,4,9,15,1],[11,16,10,4,9,1],[11,10,4,17,9,1],[10,4,12,13,9,1],[10,14,4,12,9,1],[10,4,12,9,15,1],[16,10,4,12,9,1],[10,4,12,17,9,1],[10,14,4,13,9,1],[10,4,13,9,15,1],[16,10,4,13,9,1],[10,4,13,17,9,1],[10,14,4,9,15,1],[16,10,14,4,9,1],[10,14,4,17,9,1],[16,10,4,9,15,1],[10,4,17,9,15,1],[16,10,4,17,9,1],[11,4,12,13,9,1],[11,14,4,12,9,1],[11,4,12,9,15,1],[11,16,4,12,9,1],[11,4,12,17,9,1],[11,14,4,13,9,1],[11,4,13,9,15,1],[11,16,4,13,9,1],[11,4,13,17,9,1],[11,14,4,9,15,1],[11,16,14,4,9,1],[11,14,4,17,9,1],[11,16,4,9,15,1],[11,4,17,9,15,1],[11,16,4,17,9,1],[14,4,12,13,9,1],[4,12,13,9,15,1],[16,4,12,13,9,1],[4,12,13,17,9,1],[14,4,12,9,15,1],[16,14,4,12,9,1],[14,4,12,17,9,1],[16,4,12,9,15,1],[4,12,17,9,15,1],[16,4,12,17,9,1],[14,4,13,9,15,1],[16,14,4,13,9,1],[14,4,13,17,9,1],[16,4,13,9,15,1],[4,13,17,9,15,1],[16,4,13,17,9,1],[16,14,4,9,15,1],[14,4,17,9,15,1],[16,14,4,17,9,1],[16,4,17,9,15,1],[11,10,4,12,13,1],[11,10,14,4,12,1],[11,10,4,12,15,1],[11,16,10,4,12,1],[11,10,4,12,17,1],[11,10,14,4,13,1],[11,10,4,13,15,1],[11,16,10,4,13,1],[11,10,4,13,17,1],[11,10,14,4,15,1],[11,16,10,14,4,1],[11,10,14,4,17,1],[11,16,10,4,15,1],[11,10,4,17,15,1],[11,16,10,4,17,1],[10,14,4,12,13,1],[10,4,12,13,15,1],[16,10,4,12,13,1],[10,4,12,13,17,1],[10,14,4,12,15,1],[16,10,14,4,12,1],[10,14,4,12,17,1],[16,10,4,12,15,1],[10,4,12,17,15,1],[16,10,4,12,17,1],[10,14,4,13,15,1],[16,10,14,4,13,1],[10,14,4,13,17,1],[16,10,4,13,15,1],[10,4,13,17,15,1],[16,10,4,13,17,1],[16,10,14,4,15,1],[10,14,4,17,15,1],[16,10,14,4,17,1],[16,10,4,17,15,1],[11,14,4,12,13,1],[11,4,12,13,15,1],[11,16,4,12,13,1],[11,4,12,13,17,1],[11,14,4,12,15,1],[11,16,14,4,12,1],[11,14,4,12,17,1],[11,16,4,12,15,1],[11,4,12,17,15,1],[11,16,4,12,17,1],[11,14,4,13,15,1],[11,16,14,4,13,1],[11,14,4,13,17,1],[11,16,4,13,15,1],[11,4,13,17,15,1],[11,16,4,13,17,1],[11,16,14,4,15,1],[11,14,4,17,15,1],[11,16,14,4,17,1],[11,16,4,17,15,1],[14,4,12,13,15,1],[16,14,4,12,13,1],[14,4,12,13,17,1],[16,4,12,13,15,1],[4,12,13,17,15,1],[16,4,12,13,17,1],[16,14,4,12,15,1],[14,4,12,17,15,1],[16,14,4,12,17,1],[16,4,12,17,15,1],[16,14,4,13,15,1],[14,4,13,17,15,1],[16,14,4,13,17,1],[16,4,13,17,15,1],[16,14,4,17,15,1],[6,7,8,5,9,1],[6,7,10,8,5,1],[11,6,7,8,5,1],[6,7,8,12,5,1],[6,7,8,13,5,1],[6,7,8,14,5,1],[6,7,8,5,15,1],[16,6,7,8,5,1],[6,7,8,17,5,1],[6,7,10,5,9,1],[11,6,7,5,9,1],[6,7,12,5,9,1],[6,7,13,5,9,1],[6,7,14,5,9,1],[6,7,5,9,15,1],[16,6,7,5,9,1],[6,7,17,5,9,1],[11,6,7,10,5,1],[6,7,10,12,5,1],[6,7,10,13,5,1],[6,7,10,14,5,1],[6,7,10,5,15,1],[16,6,7,10,5,1],[6,7,10,17,5,1],[11,6,7,12,5,1],[11,6,7,13,5,1],[11,6,7,14,5,1],[11,6,7,5,15,1],[11,16,6,7,5,1],[11,6,7,17,5,1],[6,7,12,13,5,1],[6,7,14,12,5,1],[6,7,12,5,15,1],[16,6,7,12,5,1],[6,7,12,17,5,1],[6,7,14,13,5,1],[6,7,13,5,15,1],[16,6,7,13,5,1],[6,7,13,17,5,1],[6,7,14,5,15,1],[16,6,7,14,5,1],[6,7,14,17,5,1],[16,6,7,5,15,1],[6,7,17,5,15,1],[16,6,7,17,5,1],[6,10,8,5,9,1],[11,6,8,5,9,1],[6,8,12,5,9,1],[6,8,13,5,9,1],[6,8,14,5,9,1],[6,8,5,9,15,1],[16,6,8,5,9,1],[6,8,17,5,9,1],[11,6,10,8,5,1],[6,10,8,12,5,1],[6,10,8,13,5,1],[6,10,8,14,5,1],[6,10,8,5,15,1],[16,6,10,8,5,1],[6,10,8,17,5,1],[11,6,8,12,5,1],[11,6,8,13,5,1],[11,6,8,14,5,1],[11,6,8,5,15,1],[11,16,6,8,5,1],[11,6,8,17,5,1],[6,8,12,13,5,1],[6,8,14,12,5,1],[6,8,12,5,15,1],[16,6,8,12,5,1],[6,8,12,17,5,1],[6,8,14,13,5,1],[6,8,13,5,15,1],[16,6,8,13,5,1],[6,8,13,17,5,1],[6,8,14,5,15,1],[16,6,8,14,5,1],[6,8,14,17,5,1],[16,6,8,5,15,1],[6,8,17,5,15,1],[16,6,8,17,5,1],[11,6,10,5,9,1],[6,10,12,5,9,1],[6,10,13,5,9,1],[6,10,14,5,9,1],[6,10,5,9,15,1],[16,6,10,5,9,1],[6,10,17,5,9,1],[11,6,12,5,9,1],[11,6,13,5,9,1],[11,6,14,5,9,1],[11,6,5,9,15,1],[11,16,6,5,9,1],[11,6,17,5,9,1],[6,12,13,5,9,1],[6,14,12,5,9,1],[6,12,5,9,15,1],[16,6,12,5,9,1],[6,12,17,5,9,1],[6,14,13,5,9,1],[6,13,5,9,15,1],[16,6,13,5,9,1],[6,13,17,5,9,1],[6,14,5,9,15,1],[16,6,14,5,9,1],[6,14,17,5,9,1],[16,6,5,9,15,1],[6,17,5,9,15,1],[16,6,17,5,9,1],[11,6,10,12,5,1],[11,6,10,13,5,1],[11,6,10,14,5,1],[11,6,10,5,15,1],[11,16,6,10,5,1],[11,6,10,17,5,1],[6,10,12,13,5,1],[6,10,14,12,5,1],[6,10,12,5,15,1],[16,6,10,12,5,1],[6,10,12,17,5,1],[6,10,14,13,5,1],[6,10,13,5,15,1],[16,6,10,13,5,1],[6,10,13,17,5,1],[6,10,14,5,15,1],[16,6,10,14,5,1],[6,10,14,17,5,1],[16,6,10,5,15,1],[6,10,17,5,15,1],[16,6,10,17,5,1],[11,6,12,13,5,1],[11,6,14,12,5,1],[11,6,12,5,15,1],[11,16,6,12,5,1],[11,6,12,17,5,1],[11,6,14,13,5,1],[11,6,13,5,15,1],[11,16,6,13,5,1],[11,6,13,17,5,1],[11,6,14,5,15,1],[11,16,6,14,5,1],[11,6,14,17,5,1],[11,16,6,5,15,1],[11,6,17,5,15,1],[11,16,6,17,5,1],[6,14,12,13,5,1],[6,12,13,5,15,1],[16,6,12,13,5,1],[6,12,13,17,5,1],[6,14,12,5,15,1],[16,6,14,12,5,1],[6,14,12,17,5,1],[16,6,12,5,15,1],[6,12,17,5,15,1],[16,6,12,17,5,1],[6,14,13,5,15,1],[16,6,14,13,5,1],[6,14,13,17,5,1],[16,6,13,5,15,1],[6,13,17,5,15,1],[16,6,13,17,5,1],[16,6,14,5,15,1],[6,14,17,5,15,1],[16,6,14,17,5,1],[16,6,17,5,15,1],[7,10,8,5,9,1],[11,7,8,5,9,1],[7,8,12,5,9,1],[7,8,13,5,9,1],[7,8,14,5,9,1],[7,8,5,9,15,1],[16,7,8,5,9,1],[7,8,17,5,9,1],[11,7,10,8,5,1],[7,10,8,12,5,1],[7,10,8,13,5,1],[7,10,8,14,5,1],[7,10,8,5,15,1],[16,7,10,8,5,1],[7,10,8,17,5,1],[11,7,8,12,5,1],[11,7,8,13,5,1],[11,7,8,14,5,1],[11,7,8,5,15,1],[11,16,7,8,5,1],[11,7,8,17,5,1],[7,8,12,13,5,1],[7,8,14,12,5,1],[7,8,12,5,15,1],[16,7,8,12,5,1],[7,8,12,17,5,1],[7,8,14,13,5,1],[7,8,13,5,15,1],[16,7,8,13,5,1],[7,8,13,17,5,1],[7,8,14,5,15,1],[16,7,8,14,5,1],[7,8,14,17,5,1],[16,7,8,5,15,1],[7,8,17,5,15,1],[16,7,8,17,5,1],[11,7,10,5,9,1],[7,10,12,5,9,1],[7,10,13,5,9,1],[7,10,14,5,9,1],[7,10,5,9,15,1],[16,7,10,5,9,1],[7,10,17,5,9,1],[11,7,12,5,9,1],[11,7,13,5,9,1],[11,7,14,5,9,1],[11,7,5,9,15,1],[11,16,7,5,9,1],[11,7,17,5,9,1],[7,12,13,5,9,1],[7,14,12,5,9,1],[7,12,5,9,15,1],[16,7,12,5,9,1],[7,12,17,5,9,1],[7,14,13,5,9,1],[7,13,5,9,15,1],[16,7,13,5,9,1],[7,13,17,5,9,1],[7,14,5,9,15,1],[16,7,14,5,9,1],[7,14,17,5,9,1],[16,7,5,9,15,1],[7,17,5,9,15,1],[16,7,17,5,9,1],[11,7,10,12,5,1],[11,7,10,13,5,1],[11,7,10,14,5,1],[11,7,10,5,15,1],[11,16,7,10,5,1],[11,7,10,17,5,1],[7,10,12,13,5,1],[7,10,14,12,5,1],[7,10,12,5,15,1],[16,7,10,12,5,1],[7,10,12,17,5,1],[7,10,14,13,5,1],[7,10,13,5,15,1],[16,7,10,13,5,1],[7,10,13,17,5,1],[7,10,14,5,15,1],[16,7,10,14,5,1],[7,10,14,17,5,1],[16,7,10,5,15,1],[7,10,17,5,15,1],[16,7,10,17,5,1],[11,7,12,13,5,1],[11,7,14,12,5,1],[11,7,12,5,15,1],[11,16,7,12,5,1],[11,7,12,17,5,1],[11,7,14,13,5,1],[11,7,13,5,15,1],[11,16,7,13,5,1],[11,7,13,17,5,1],[11,7,14,5,15,1],[11,16,7,14,5,1],[11,7,14,17,5,1],[11,16,7,5,15,1],[11,7,17,5,15,1],[11,16,7,17,5,1],[7,14,12,13,5,1],[7,12,13,5,15,1],[16,7,12,13,5,1],[7,12,13,17,5,1],[7,14,12,5,15,1],[16,7,14,12,5,1],[7,14,12,17,5,1],[16,7,12,5,15,1],[7,12,17,5,15,1],[16,7,12,17,5,1],[7,14,13,5,15,1],[16,7,14,13,5,1],[7,14,13,17,5,1],[16,7,13,5,15,1],[7,13,17,5,15,1],[16,7,13,17,5,1],[16,7,14,5,15,1],[7,14,17,5,15,1],[16,7,14,17,5,1],[16,7,17,5,15,1],[11,10,8,5,9,1],[10,8,12,5,9,1],[10,8,13,5,9,1],[10,8,14,5,9,1],[10,8,5,9,15,1],[16,10,8,5,9,1],[10,8,17,5,9,1],[11,8,12,5,9,1],[11,8,13,5,9,1],[11,8,14,5,9,1],[11,8,5,9,15,1],[11,16,8,5,9,1],[11,8,17,5,9,1],[8,12,13,5,9,1],[8,14,12,5,9,1],[8,12,5,9,15,1],[16,8,12,5,9,1],[8,12,17,5,9,1],[8,14,13,5,9,1],[8,13,5,9,15,1],[16,8,13,5,9,1],[8,13,17,5,9,1],[8,14,5,9,15,1],[16,8,14,5,9,1],[8,14,17,5,9,1],[16,8,5,9,15,1],[8,17,5,9,15,1],[16,8,17,5,9,1],[11,10,8,12,5,1],[11,10,8,13,5,1],[11,10,8,14,5,1],[11,10,8,5,15,1],[11,16,10,8,5,1],[11,10,8,17,5,1],[10,8,12,13,5,1],[10,8,14,12,5,1],[10,8,12,5,15,1],[16,10,8,12,5,1],[10,8,12,17,5,1],[10,8,14,13,5,1],[10,8,13,5,15,1],[16,10,8,13,5,1],[10,8,13,17,5,1],[10,8,14,5,15,1],[16,10,8,14,5,1],[10,8,14,17,5,1],[16,10,8,5,15,1],[10,8,17,5,15,1],[16,10,8,17,5,1],[11,8,12,13,5,1],[11,8,14,12,5,1],[11,8,12,5,15,1],[11,16,8,12,5,1],[11,8,12,17,5,1],[11,8,14,13,5,1],[11,8,13,5,15,1],[11,16,8,13,5,1],[11,8,13,17,5,1],[11,8,14,5,15,1],[11,16,8,14,5,1],[11,8,14,17,5,1],[11,16,8,5,15,1],[11,8,17,5,15,1],[11,16,8,17,5,1],[8,14,12,13,5,1],[8,12,13,5,15,1],[16,8,12,13,5,1],[8,12,13,17,5,1],[8,14,12,5,15,1],[16,8,14,12,5,1],[8,14,12,17,5,1],[16,8,12,5,15,1],[8,12,17,5,15,1],[16,8,12,17,5,1],[8,14,13,5,15,1],[16,8,14,13,5,1],[8,14,13,17,5,1],[16,8,13,5,15,1],[8,13,17,5,15,1],[16,8,13,17,5,1],[16,8,14,5,15,1],[8,14,17,5,15,1],[16,8,14,17,5,1],[16,8,17,5,15,1],[11,10,12,5,9,1],[11,10,13,5,9,1],[11,10,14,5,9,1],[11,10,5,9,15,1],[11,16,10,5,9,1],[11,10,17,5,9,1],[10,12,13,5,9,1],[10,14,12,5,9,1],[10,12,5,9,15,1],[16,10,12,5,9,1],[10,12,17,5,9,1],[10,14,13,5,9,1],[10,13,5,9,15,1],[16,10,13,5,9,1],[10,13,17,5,9,1],[10,14,5,9,15,1],[16,10,14,5,9,1],[10,14,17,5,9,1],[16,10,5,9,15,1],[10,17,5,9,15,1],[16,10,17,5,9,1],[11,12,13,5,9,1],[11,14,12,5,9,1],[11,12,5,9,15,1],[11,16,12,5,9,1],[11,12,17,5,9,1],[11,14,13,5,9,1],[11,13,5,9,15,1],[11,16,13,5,9,1],[11,13,17,5,9,1],[11,14,5,9,15,1],[11,16,14,5,9,1],[11,14,17,5,9,1],[11,16,5,9,15,1],[11,17,5,9,15,1],[11,16,17,5,9,1],[14,12,13,5,9,1],[12,13,5,9,15,1],[16,12,13,5,9,1],[12,13,17,5,9,1],[14,12,5,9,15,1],[16,14,12,5,9,1],[14,12,17,5,9,1],[16,12,5,9,15,1],[12,17,5,9,15,1],[16,12,17,5,9,1],[14,13,5,9,15,1],[16,14,13,5,9,1],[14,13,17,5,9,1],[16,13,5,9,15,1],[13,17,5,9,15,1],[16,13,17,5,9,1],[16,14,5,9,15,1],[14,17,5,9,15,1],[16,14,17,5,9,1],[16,17,5,9,15,1],[11,10,12,13,5,1],[11,10,14,12,5,1],[11,10,12,5,15,1],[11,16,10,12,5,1],[11,10,12,17,5,1],[11,10,14,13,5,1],[11,10,13,5,15,1],[11,16,10,13,5,1],[11,10,13,17,5,1],[11,10,14,5,15,1],[11,16,10,14,5,1],[11,10,14,17,5,1],[11,16,10,5,15,1],[11,10,17,5,15,1],[11,16,10,17,5,1],[10,14,12,13,5,1],[10,12,13,5,15,1],[16,10,12,13,5,1],[10,12,13,17,5,1],[10,14,12,5,15,1],[16,10,14,12,5,1],[10,14,12,17,5,1],[16,10,12,5,15,1],[10,12,17,5,15,1],[16,10,12,17,5,1],[10,14,13,5,15,1],[16,10,14,13,5,1],[10,14,13,17,5,1],[16,10,13,5,15,1],[10,13,17,5,15,1],[16,10,13,17,5,1],[16,10,14,5,15,1],[10,14,17,5,15,1],[16,10,14,17,5,1],[16,10,17,5,15,1],[11,14,12,13,5,1],[11,12,13,5,15,1],[11,16,12,13,5,1],[11,12,13,17,5,1],[11,14,12,5,15,1],[11,16,14,12,5,1],[11,14,12,17,5,1],[11,16,12,5,15,1],[11,12,17,5,15,1],[11,16,12,17,5,1],[11,14,13,5,15,1],[11,16,14,13,5,1],[11,14,13,17,5,1],[11,16,13,5,15,1],[11,13,17,5,15,1],[11,16,13,17,5,1],[11,16,14,5,15,1],[11,14,17,5,15,1],[11,16,14,17,5,1],[11,16,17,5,15,1],[14,12,13,5,15,1],[16,14,12,13,5,1],[14,12,13,17,5,1],[16,12,13,5,15,1],[12,13,17,5,15,1],[16,12,13,17,5,1],[16,14,12,5,15,1],[14,12,17,5,15,1],[16,14,12,17,5,1],[16,12,17,5,15,1],[16,14,13,5,15,1],[14,13,17,5,15,1],[16,14,13,17,5,1],[16,13,17,5,15,1],[16,14,17,5,15,1],[6,7,10,8,9,1],[11,6,7,8,9,1],[6,7,8,12,9,1],[6,7,8,13,9,1],[6,7,8,14,9,1],[6,7,8,9,15,1],[16,6,7,8,9,1],[6,7,8,17,9,1],[11,6,7,10,8,1],[6,7,10,8,12,1],[6,7,10,8,13,1],[6,7,10,8,14,1],[6,7,10,8,15,1],[16,6,7,10,8,1],[6,7,10,8,17,1],[11,6,7,8,12,1],[11,6,7,8,13,1],[11,6,7,8,14,1],[11,6,7,8,15,1],[11,16,6,7,8,1],[11,6,7,8,17,1],[6,7,8,12,13,1],[6,7,8,14,12,1],[6,7,8,12,15,1],[16,6,7,8,12,1],[6,7,8,12,17,1],[6,7,8,14,13,1],[6,7,8,13,15,1],[16,6,7,8,13,1],[6,7,8,13,17,1],[6,7,8,14,15,1],[16,6,7,8,14,1],[6,7,8,14,17,1],[16,6,7,8,15,1],[6,7,8,17,15,1],[16,6,7,8,17,1],[11,6,7,10,9,1],[6,7,10,12,9,1],[6,7,10,13,9,1],[6,7,10,14,9,1],[6,7,10,9,15,1],[16,6,7,10,9,1],[6,7,10,17,9,1],[11,6,7,12,9,1],[11,6,7,13,9,1],[11,6,7,14,9,1],[11,6,7,9,15,1],[11,16,6,7,9,1],[11,6,7,17,9,1],[6,7,12,13,9,1],[6,7,14,12,9,1],[6,7,12,9,15,1],[16,6,7,12,9,1],[6,7,12,17,9,1],[6,7,14,13,9,1],[6,7,13,9,15,1],[16,6,7,13,9,1],[6,7,13,17,9,1],[6,7,14,9,15,1],[16,6,7,14,9,1],[6,7,14,17,9,1],[16,6,7,9,15,1],[6,7,17,9,15,1],[16,6,7,17,9,1],[11,6,7,10,12,1],[11,6,7,10,13,1],[11,6,7,10,14,1],[11,6,7,10,15,1],[11,16,6,7,10,1],[11,6,7,10,17,1],[6,7,10,12,13,1],[6,7,10,14,12,1],[6,7,10,12,15,1],[16,6,7,10,12,1],[6,7,10,12,17,1],[6,7,10,14,13,1],[6,7,10,13,15,1],[16,6,7,10,13,1],[6,7,10,13,17,1],[6,7,10,14,15,1],[16,6,7,10,14,1],[6,7,10,14,17,1],[16,6,7,10,15,1],[6,7,10,17,15,1],[16,6,7,10,17,1],[11,6,7,12,13,1],[11,6,7,14,12,1],[11,6,7,12,15,1],[11,16,6,7,12,1],[11,6,7,12,17,1],[11,6,7,14,13,1],[11,6,7,13,15,1],[11,16,6,7,13,1],[11,6,7,13,17,1],[11,6,7,14,15,1],[11,16,6,7,14,1],[11,6,7,14,17,1],[11,16,6,7,15,1],[11,6,7,17,15,1],[11,16,6,7,17,1],[6,7,14,12,13,1],[6,7,12,13,15,1],[16,6,7,12,13,1],[6,7,12,13,17,1],[6,7,14,12,15,1],[16,6,7,14,12,1],[6,7,14,12,17,1],[16,6,7,12,15,1],[6,7,12,17,15,1],[16,6,7,12,17,1],[6,7,14,13,15,1],[16,6,7,14,13,1],[6,7,14,13,17,1],[16,6,7,13,15,1],[6,7,13,17,15,1],[16,6,7,13,17,1],[16,6,7,14,15,1],[6,7,14,17,15,1],[16,6,7,14,17,1],[16,6,7,17,15,1],[11,6,10,8,9,1],[6,10,8,12,9,1],[6,10,8,13,9,1],[6,10,8,14,9,1],[6,10,8,9,15,1],[16,6,10,8,9,1],[6,10,8,17,9,1],[11,6,8,12,9,1],[11,6,8,13,9,1],[11,6,8,14,9,1],[11,6,8,9,15,1],[11,16,6,8,9,1],[11,6,8,17,9,1],[6,8,12,13,9,1],[6,8,14,12,9,1],[6,8,12,9,15,1],[16,6,8,12,9,1],[6,8,12,17,9,1],[6,8,14,13,9,1],[6,8,13,9,15,1],[16,6,8,13,9,1],[6,8,13,17,9,1],[6,8,14,9,15,1],[16,6,8,14,9,1],[6,8,14,17,9,1],[16,6,8,9,15,1],[6,8,17,9,15,1],[16,6,8,17,9,1],[11,6,10,8,12,1],[11,6,10,8,13,1],[11,6,10,8,14,1],[11,6,10,8,15,1],[11,16,6,10,8,1],[11,6,10,8,17,1],[6,10,8,12,13,1],[6,10,8,14,12,1],[6,10,8,12,15,1],[16,6,10,8,12,1],[6,10,8,12,17,1],[6,10,8,14,13,1],[6,10,8,13,15,1],[16,6,10,8,13,1],[6,10,8,13,17,1],[6,10,8,14,15,1],[16,6,10,8,14,1],[6,10,8,14,17,1],[16,6,10,8,15,1],[6,10,8,17,15,1],[16,6,10,8,17,1],[11,6,8,12,13,1],[11,6,8,14,12,1],[11,6,8,12,15,1],[11,16,6,8,12,1],[11,6,8,12,17,1],[11,6,8,14,13,1],[11,6,8,13,15,1],[11,16,6,8,13,1],[11,6,8,13,17,1],[11,6,8,14,15,1],[11,16,6,8,14,1],[11,6,8,14,17,1],[11,16,6,8,15,1],[11,6,8,17,15,1],[11,16,6,8,17,1],[6,8,14,12,13,1],[6,8,12,13,15,1],[16,6,8,12,13,1],[6,8,12,13,17,1],[6,8,14,12,15,1],[16,6,8,14,12,1],[6,8,14,12,17,1],[16,6,8,12,15,1],[6,8,12,17,15,1],[16,6,8,12,17,1],[6,8,14,13,15,1],[16,6,8,14,13,1],[6,8,14,13,17,1],[16,6,8,13,15,1],[6,8,13,17,15,1],[16,6,8,13,17,1],[16,6,8,14,15,1],[6,8,14,17,15,1],[16,6,8,14,17,1],[16,6,8,17,15,1],[11,6,10,12,9,1],[11,6,10,13,9,1],[11,6,10,14,9,1],[11,6,10,9,15,1],[11,16,6,10,9,1],[11,6,10,17,9,1],[6,10,12,13,9,1],[6,10,14,12,9,1],[6,10,12,9,15,1],[16,6,10,12,9,1],[6,10,12,17,9,1],[6,10,14,13,9,1],[6,10,13,9,15,1],[16,6,10,13,9,1],[6,10,13,17,9,1],[6,10,14,9,15,1],[16,6,10,14,9,1],[6,10,14,17,9,1],[16,6,10,9,15,1],[6,10,17,9,15,1],[16,6,10,17,9,1],[11,6,12,13,9,1],[11,6,14,12,9,1],[11,6,12,9,15,1],[11,16,6,12,9,1],[11,6,12,17,9,1],[11,6,14,13,9,1],[11,6,13,9,15,1],[11,16,6,13,9,1],[11,6,13,17,9,1],[11,6,14,9,15,1],[11,16,6,14,9,1],[11,6,14,17,9,1],[11,16,6,9,15,1],[11,6,17,9,15,1],[11,16,6,17,9,1],[6,14,12,13,9,1],[6,12,13,9,15,1],[16,6,12,13,9,1],[6,12,13,17,9,1],[6,14,12,9,15,1],[16,6,14,12,9,1],[6,14,12,17,9,1],[16,6,12,9,15,1],[6,12,17,9,15,1],[16,6,12,17,9,1],[6,14,13,9,15,1],[16,6,14,13,9,1],[6,14,13,17,9,1],[16,6,13,9,15,1],[6,13,17,9,15,1],[16,6,13,17,9,1],[16,6,14,9,15,1],[6,14,17,9,15,1],[16,6,14,17,9,1],[16,6,17,9,15,1],[11,6,10,12,13,1],[11,6,10,14,12,1],[11,6,10,12,15,1],[11,16,6,10,12,1],[11,6,10,12,17,1],[11,6,10,14,13,1],[11,6,10,13,15,1],[11,16,6,10,13,1],[11,6,10,13,17,1],[11,6,10,14,15,1],[11,16,6,10,14,1],[11,6,10,14,17,1],[11,16,6,10,15,1],[11,6,10,17,15,1],[11,16,6,10,17,1],[6,10,14,12,13,1],[6,10,12,13,15,1],[16,6,10,12,13,1],[6,10,12,13,17,1],[6,10,14,12,15,1],[16,6,10,14,12,1],[6,10,14,12,17,1],[16,6,10,12,15,1],[6,10,12,17,15,1],[16,6,10,12,17,1],[6,10,14,13,15,1],[16,6,10,14,13,1],[6,10,14,13,17,1],[16,6,10,13,15,1],[6,10,13,17,15,1],[16,6,10,13,17,1],[16,6,10,14,15,1],[6,10,14,17,15,1],[16,6,10,14,17,1],[16,6,10,17,15,1],[11,6,14,12,13,1],[11,6,12,13,15,1],[11,16,6,12,13,1],[11,6,12,13,17,1],[11,6,14,12,15,1],[11,16,6,14,12,1],[11,6,14,12,17,1],[11,16,6,12,15,1],[11,6,12,17,15,1],[11,16,6,12,17,1],[11,6,14,13,15,1],[11,16,6,14,13,1],[11,6,14,13,17,1],[11,16,6,13,15,1],[11,6,13,17,15,1],[11,16,6,13,17,1],[11,16,6,14,15,1],[11,6,14,17,15,1],[11,16,6,14,17,1],[11,16,6,17,15,1],[6,14,12,13,15,1],[16,6,14,12,13,1],[6,14,12,13,17,1],[16,6,12,13,15,1],[6,12,13,17,15,1],[16,6,12,13,17,1],[16,6,14,12,15,1],[6,14,12,17,15,1],[16,6,14,12,17,1],[16,6,12,17,15,1],[16,6,14,13,15,1],[6,14,13,17,15,1],[16,6,14,13,17,1],[16,6,13,17,15,1],[16,6,14,17,15,1],[11,7,10,8,9,1],[7,10,8,12,9,1],[7,10,8,13,9,1],[7,10,8,14,9,1],[7,10,8,9,15,1],[16,7,10,8,9,1],[7,10,8,17,9,1],[11,7,8,12,9,1],[11,7,8,13,9,1],[11,7,8,14,9,1],[11,7,8,9,15,1],[11,16,7,8,9,1],[11,7,8,17,9,1],[7,8,12,13,9,1],[7,8,14,12,9,1],[7,8,12,9,15,1],[16,7,8,12,9,1],[7,8,12,17,9,1],[7,8,14,13,9,1],[7,8,13,9,15,1],[16,7,8,13,9,1],[7,8,13,17,9,1],[7,8,14,9,15,1],[16,7,8,14,9,1],[7,8,14,17,9,1],[16,7,8,9,15,1],[7,8,17,9,15,1],[16,7,8,17,9,1],[11,7,10,8,12,1],[11,7,10,8,13,1],[11,7,10,8,14,1],[11,7,10,8,15,1],[11,16,7,10,8,1],[11,7,10,8,17,1],[7,10,8,12,13,1],[7,10,8,14,12,1],[7,10,8,12,15,1],[16,7,10,8,12,1],[7,10,8,12,17,1],[7,10,8,14,13,1],[7,10,8,13,15,1],[16,7,10,8,13,1],[7,10,8,13,17,1],[7,10,8,14,15,1],[16,7,10,8,14,1],[7,10,8,14,17,1],[16,7,10,8,15,1],[7,10,8,17,15,1],[16,7,10,8,17,1],[11,7,8,12,13,1],[11,7,8,14,12,1],[11,7,8,12,15,1],[11,16,7,8,12,1],[11,7,8,12,17,1],[11,7,8,14,13,1],[11,7,8,13,15,1],[11,16,7,8,13,1],[11,7,8,13,17,1],[11,7,8,14,15,1],[11,16,7,8,14,1],[11,7,8,14,17,1],[11,16,7,8,15,1],[11,7,8,17,15,1],[11,16,7,8,17,1],[7,8,14,12,13,1],[7,8,12,13,15,1],[16,7,8,12,13,1],[7,8,12,13,17,1],[7,8,14,12,15,1],[16,7,8,14,12,1],[7,8,14,12,17,1],[16,7,8,12,15,1],[7,8,12,17,15,1],[16,7,8,12,17,1],[7,8,14,13,15,1],[16,7,8,14,13,1],[7,8,14,13,17,1],[16,7,8,13,15,1],[7,8,13,17,15,1],[16,7,8,13,17,1],[16,7,8,14,15,1],[7,8,14,17,15,1],[16,7,8,14,17,1],[16,7,8,17,15,1],[11,7,10,12,9,1],[11,7,10,13,9,1],[11,7,10,14,9,1],[11,7,10,9,15,1],[11,16,7,10,9,1],[11,7,10,17,9,1],[7,10,12,13,9,1],[7,10,14,12,9,1],[7,10,12,9,15,1],[16,7,10,12,9,1],[7,10,12,17,9,1],[7,10,14,13,9,1],[7,10,13,9,15,1],[16,7,10,13,9,1],[7,10,13,17,9,1],[7,10,14,9,15,1],[16,7,10,14,9,1],[7,10,14,17,9,1],[16,7,10,9,15,1],[7,10,17,9,15,1],[16,7,10,17,9,1],[11,7,12,13,9,1],[11,7,14,12,9,1],[11,7,12,9,15,1],[11,16,7,12,9,1],[11,7,12,17,9,1],[11,7,14,13,9,1],[11,7,13,9,15,1],[11,16,7,13,9,1],[11,7,13,17,9,1],[11,7,14,9,15,1],[11,16,7,14,9,1],[11,7,14,17,9,1],[11,16,7,9,15,1],[11,7,17,9,15,1],[11,16,7,17,9,1],[7,14,12,13,9,1],[7,12,13,9,15,1],[16,7,12,13,9,1],[7,12,13,17,9,1],[7,14,12,9,15,1],[16,7,14,12,9,1],[7,14,12,17,9,1],[16,7,12,9,15,1],[7,12,17,9,15,1],[16,7,12,17,9,1],[7,14,13,9,15,1],[16,7,14,13,9,1],[7,14,13,17,9,1],[16,7,13,9,15,1],[7,13,17,9,15,1],[16,7,13,17,9,1],[16,7,14,9,15,1],[7,14,17,9,15,1],[16,7,14,17,9,1],[16,7,17,9,15,1],[11,7,10,12,13,1],[11,7,10,14,12,1],[11,7,10,12,15,1],[11,16,7,10,12,1],[11,7,10,12,17,1],[11,7,10,14,13,1],[11,7,10,13,15,1],[11,16,7,10,13,1],[11,7,10,13,17,1],[11,7,10,14,15,1],[11,16,7,10,14,1],[11,7,10,14,17,1],[11,16,7,10,15,1],[11,7,10,17,15,1],[11,16,7,10,17,1],[7,10,14,12,13,1],[7,10,12,13,15,1],[16,7,10,12,13,1],[7,10,12,13,17,1],[7,10,14,12,15,1],[16,7,10,14,12,1],[7,10,14,12,17,1],[16,7,10,12,15,1],[7,10,12,17,15,1],[16,7,10,12,17,1],[7,10,14,13,15,1],[16,7,10,14,13,1],[7,10,14,13,17,1],[16,7,10,13,15,1],[7,10,13,17,15,1],[16,7,10,13,17,1],[16,7,10,14,15,1],[7,10,14,17,15,1],[16,7,10,14,17,1],[16,7,10,17,15,1],[11,7,14,12,13,1],[11,7,12,13,15,1],[11,16,7,12,13,1],[11,7,12,13,17,1],[11,7,14,12,15,1],[11,16,7,14,12,1],[11,7,14,12,17,1],[11,16,7,12,15,1],[11,7,12,17,15,1],[11,16,7,12,17,1],[11,7,14,13,15,1],[11,16,7,14,13,1],[11,7,14,13,17,1],[11,16,7,13,15,1],[11,7,13,17,15,1],[11,16,7,13,17,1],[11,16,7,14,15,1],[11,7,14,17,15,1],[11,16,7,14,17,1],[11,16,7,17,15,1],[7,14,12,13,15,1],[16,7,14,12,13,1],[7,14,12,13,17,1],[16,7,12,13,15,1],[7,12,13,17,15,1],[16,7,12,13,17,1],[16,7,14,12,15,1],[7,14,12,17,15,1],[16,7,14,12,17,1],[16,7,12,17,15,1],[16,7,14,13,15,1],[7,14,13,17,15,1],[16,7,14,13,17,1],[16,7,13,17,15,1],[16,7,14,17,15,1],[11,10,8,12,9,1],[11,10,8,13,9,1],[11,10,8,14,9,1],[11,10,8,9,15,1],[11,16,10,8,9,1],[11,10,8,17,9,1],[10,8,12,13,9,1],[10,8,14,12,9,1],[10,8,12,9,15,1],[16,10,8,12,9,1],[10,8,12,17,9,1],[10,8,14,13,9,1],[10,8,13,9,15,1],[16,10,8,13,9,1],[10,8,13,17,9,1],[10,8,14,9,15,1],[16,10,8,14,9,1],[10,8,14,17,9,1],[16,10,8,9,15,1],[10,8,17,9,15,1],[16,10,8,17,9,1],[11,8,12,13,9,1],[11,8,14,12,9,1],[11,8,12,9,15,1],[11,16,8,12,9,1],[11,8,12,17,9,1],[11,8,14,13,9,1],[11,8,13,9,15,1],[11,16,8,13,9,1],[11,8,13,17,9,1],[11,8,14,9,15,1],[11,16,8,14,9,1],[11,8,14,17,9,1],[11,16,8,9,15,1],[11,8,17,9,15,1],[11,16,8,17,9,1],[8,14,12,13,9,1],[8,12,13,9,15,1],[16,8,12,13,9,1],[8,12,13,17,9,1],[8,14,12,9,15,1],[16,8,14,12,9,1],[8,14,12,17,9,1],[16,8,12,9,15,1],[8,12,17,9,15,1],[16,8,12,17,9,1],[8,14,13,9,15,1],[16,8,14,13,9,1],[8,14,13,17,9,1],[16,8,13,9,15,1],[8,13,17,9,15,1],[16,8,13,17,9,1],[16,8,14,9,15,1],[8,14,17,9,15,1],[16,8,14,17,9,1],[16,8,17,9,15,1],[11,10,8,12,13,1],[11,10,8,14,12,1],[11,10,8,12,15,1],[11,16,10,8,12,1],[11,10,8,12,17,1],[11,10,8,14,13,1],[11,10,8,13,15,1],[11,16,10,8,13,1],[11,10,8,13,17,1],[11,10,8,14,15,1],[11,16,10,8,14,1],[11,10,8,14,17,1],[11,16,10,8,15,1],[11,10,8,17,15,1],[11,16,10,8,17,1],[10,8,14,12,13,1],[10,8,12,13,15,1],[16,10,8,12,13,1],[10,8,12,13,17,1],[10,8,14,12,15,1],[16,10,8,14,12,1],[10,8,14,12,17,1],[16,10,8,12,15,1],[10,8,12,17,15,1],[16,10,8,12,17,1],[10,8,14,13,15,1],[16,10,8,14,13,1],[10,8,14,13,17,1],[16,10,8,13,15,1],[10,8,13,17,15,1],[16,10,8,13,17,1],[16,10,8,14,15,1],[10,8,14,17,15,1],[16,10,8,14,17,1],[16,10,8,17,15,1],[11,8,14,12,13,1],[11,8,12,13,15,1],[11,16,8,12,13,1],[11,8,12,13,17,1],[11,8,14,12,15,1],[11,16,8,14,12,1],[11,8,14,12,17,1],[11,16,8,12,15,1],[11,8,12,17,15,1],[11,16,8,12,17,1],[11,8,14,13,15,1],[11,16,8,14,13,1],[11,8,14,13,17,1],[11,16,8,13,15,1],[11,8,13,17,15,1],[11,16,8,13,17,1],[11,16,8,14,15,1],[11,8,14,17,15,1],[11,16,8,14,17,1],[11,16,8,17,15,1],[8,14,12,13,15,1],[16,8,14,12,13,1],[8,14,12,13,17,1],[16,8,12,13,15,1],[8,12,13,17,15,1],[16,8,12,13,17,1],[16,8,14,12,15,1],[8,14,12,17,15,1],[16,8,14,12,17,1],[16,8,12,17,15,1],[16,8,14,13,15,1],[8,14,13,17,15,1],[16,8,14,13,17,1],[16,8,13,17,15,1],[16,8,14,17,15,1],[11,10,12,13,9,1],[11,10,14,12,9,1],[11,10,12,9,15,1],[11,16,10,12,9,1],[11,10,12,17,9,1],[11,10,14,13,9,1],[11,10,13,9,15,1],[11,16,10,13,9,1],[11,10,13,17,9,1],[11,10,14,9,15,1],[11,16,10,14,9,1],[11,10,14,17,9,1],[11,16,10,9,15,1],[11,10,17,9,15,1],[11,16,10,17,9,1],[10,14,12,13,9,1],[10,12,13,9,15,1],[16,10,12,13,9,1],[10,12,13,17,9,1],[10,14,12,9,15,1],[16,10,14,12,9,1],[10,14,12,17,9,1],[16,10,12,9,15,1],[10,12,17,9,15,1],[16,10,12,17,9,1],[10,14,13,9,15,1],[16,10,14,13,9,1],[10,14,13,17,9,1],[16,10,13,9,15,1],[10,13,17,9,15,1],[16,10,13,17,9,1],[16,10,14,9,15,1],[10,14,17,9,15,1],[16,10,14,17,9,1],[16,10,17,9,15,1],[11,14,12,13,9,1],[11,12,13,9,15,1],[11,16,12,13,9,1],[11,12,13,17,9,1],[11,14,12,9,15,1],[11,16,14,12,9,1],[11,14,12,17,9,1],[11,16,12,9,15,1],[11,12,17,9,15,1],[11,16,12,17,9,1],[11,14,13,9,15,1],[11,16,14,13,9,1],[11,14,13,17,9,1],[11,16,13,9,15,1],[11,13,17,9,15,1],[11,16,13,17,9,1],[11,16,14,9,15,1],[11,14,17,9,15,1],[11,16,14,17,9,1],[11,16,17,9,15,1],[14,12,13,9,15,1],[16,14,12,13,9,1],[14,12,13,17,9,1],[16,12,13,9,15,1],[12,13,17,9,15,1],[16,12,13,17,9,1],[16,14,12,9,15,1],[14,12,17,9,15,1],[16,14,12,17,9,1],[16,12,17,9,15,1],[16,14,13,9,15,1],[14,13,17,9,15,1],[16,14,13,17,9,1],[16,13,17,9,15,1],[16,14,17,9,15,1],[11,10,14,12,13,1],[11,10,12,13,15,1],[11,16,10,12,13,1],[11,10,12,13,17,1],[11,10,14,12,15,1],[11,16,10,14,12,1],[11,10,14,12,17,1],[11,16,10,12,15,1],[11,10,12,17,15,1],[11,16,10,12,17,1],[11,10,14,13,15,1],[11,16,10,14,13,1],[11,10,14,13,17,1],[11,16,10,13,15,1],[11,10,13,17,15,1],[11,16,10,13,17,1],[11,16,10,14,15,1],[11,10,14,17,15,1],[11,16,10,14,17,1],[11,16,10,17,15,1],[10,14,12,13,15,1],[16,10,14,12,13,1],[10,14,12,13,17,1],[16,10,12,13,15,1],[10,12,13,17,15,1],[16,10,12,13,17,1],[16,10,14,12,15,1],[10,14,12,17,15,1],[16,10,14,12,17,1],[16,10,12,17,15,1],[16,10,14,13,15,1],[10,14,13,17,15,1],[16,10,14,13,17,1],[16,10,13,17,15,1],[16,10,14,17,15,1],[11,14,12,13,15,1],[11,16,14,12,13,1],[11,14,12,13,17,1],[11,16,12,13,15,1],[11,12,13,17,15,1],[11,16,12,13,17,1],[11,16,14,12,15,1],[11,14,12,17,15,1],[11,16,14,12,17,1],[11,16,12,17,15,1],[11,16,14,13,15,1],[11,14,13,17,15,1],[11,16,14,13,17,1],[11,16,13,17,15,1],[11,16,14,17,15,1],[16,14,12,13,15,1],[14,12,13,17,15,1],[16,14,12,13,17,1],[16,12,13,17,15,1],[16,14,12,17,15,1],[16,14,13,17,15,1]],s1:[[1,20],[2,20],[3,20],[4,20],[5,20],[6,20],[7,35],[8,35],[9,35],[10,5],[11,35],[12,35],[13,24],[14,5],[15,5],[16,5],[17,1]],s2:[[1,2,455],[1,3,455],[1,4,455],[1,5,455],[6,1,455],[1,7,819],[1,8,819],[1,9,819],[1,10,91],[11,1,819],[1,12,819],[1,13,533],[1,14,91],[1,15,91],[16,1,91],[1,17,13],[2,3,455],[2,4,455],[2,5,455],[6,2,455],[2,7,819],[2,8,819],[2,9,819],[2,10,91],[11,2,819],[2,12,819],[2,13,533],[2,14,91],[2,15,91],[16,2,91],[2,17,13],[3,4,455],[3,5,455],[6,3,455],[3,7,819],[3,8,819],[3,9,819],[3,10,91],[11,3,819],[3,12,819],[3,13,533],[3,14,91],[3,15,91],[16,3,91],[3,17,13],[4,5,455],[6,4,455],[7,4,819],[8,4,819],[4,9,819],[10,4,91],[11,4,819],[4,12,819],[4,13,533],[14,4,91],[4,15,91],[16,4,91],[4,17,13],[6,5,455],[7,5,819],[8,5,819],[5,9,819],[10,5,91],[11,5,819],[12,5,819],[13,5,533],[14,5,91],[5,15,91],[16,5,91],[17,5,13],[6,7,819],[6,8,819],[6,9,819],[6,10,91],[11,6,819],[6,12,819],[6,13,533],[6,14,91],[6,15,91],[16,6,91],[6,17,13],[7,8,1469],[7,9,1469],[7,10,455],[11,7,1469],[7,12,1469],[7,13,963],[7,14,169],[7,15,169],[16,7,169],[7,17,25],[8,9,1469],[10,8,169],[11,8,1469],[8,12,1469],[8,13,963],[8,14,455],[8,15,169],[16,8,169],[8,17,25],[10,9,169],[11,9,1469],[12,9,1469],[13,9,963],[14,9,169],[9,15,455],[16,9,169],[17,9,25],[11,10,169],[10,12,169],[10,13,103],[10,14,13],[10,15,13],[16,10,13],[10,17,1],[11,12,1469],[11,13,963],[11,14,169],[11,15,169],[11,16,455],[11,17,25],[12,13,1183],[14,12,169],[12,15,169],[16,12,169],[12,17,91],[14,13,103],[13,15,103],[16,13,103],[13,17,91],[14,15,13],[16,14,13],[14,17,1],[16,15,13],[17,15,1],[16,17,1]],s3:[[1,2,3,91],[1,2,4,91],[1,2,5,91],[6,1,2,91],[1,2,7,169],[1,2,8,169],[1,2,9,169],[1,2,10,13],[11,1,2,169],[1,2,12,169],[1,2,13,103],[1,2,14,13],[1,2,15,13],[16,1,2,13],[1,2,17,1],[1,3,4,91],[1,3,5,91],[6,1,3,91],[1,3,7,169],[1,3,8,169],[1,3,9,169],[1,3,10,13],[11,1,3,169],[1,3,12,169],[1,3,13,103],[1,3,14,13],[1,3,15,13],[16,1,3,13],[1,3,17,1],[1,4,5,91],[6,1,4,91],[1,7,4,169],[1,8,4,169],[1,4,9,169],[1,10,4,13],[11,1,4,169],[1,4,12,169],[1,4,13,103],[1,14,4,13],[1,4,15,13],[16,1,4,13],[1,4,17,1],[6,1,5,91],[1,7,5,169],[1,8,5,169],[1,5,9,169],[1,10,5,13],[11,1,5,169],[1,12,5,169],[1,13,5,103],[1,14,5,13],[1,5,15,13],[16,1,5,13],[1,17,5,1],[6,1,7,169],[6,1,8,169],[6,1,9,169],[6,1,10,13],[11,6,1,169],[6,1,12,169],[6,1,13,103],[6,1,14,13],[6,1,15,13],[16,6,1,13],[6,1,17,1],[1,7,8,313],[1,7,9,313],[1,7,10,91],[11,1,7,313],[1,7,12,313],[1,7,13,192],[1,7,14,25],[1,7,15,25],[16,1,7,25],[1,7,17,2],[1,8,9,313],[1,10,8,25],[11,1,8,313],[1,8,12,313],[1,8,13,192],[1,8,14,91],[1,8,15,25],[16,1,8,25],[1,8,17,2],[1,10,9,25],[11,1,9,313],[1,12,9,313],[1,13,9,192],[1,14,9,25],[1,9,15,91],[16,1,9,25],[1,17,9,2],[11,1,10,25],[1,10,12,25],[1,10,13,14],[1,10,14,1],[1,10,15,1],[16,1,10,1],[11,1,12,313],[11,1,13,192],[11,1,14,25],[11,1,15,25],[11,16,1,91],[11,1,17,2],[1,12,13,247],[1,14,12,25],[1,12,15,25],[16,1,12,25],[1,12,17,13],[1,14,13,14],[1,13,15,14],[16,1,13,14],[1,13,17,13],[1,14,15,1],[16,1,14,1],[16,1,15,1],[2,3,4,91],[2,3,5,91],[6,2,3,91],[2,3,7,169],[2,3,8,169],[2,3,9,169],[2,3,10,13],[11,2,3,169],[2,3,12,169],[2,3,13,103],[2,3,14,13],[2,3,15,13],[16,2,3,13],[2,3,17,1],[2,4,5,91],[6,2,4,91],[2,7,4,169],[2,8,4,169],[2,4,9,169],[2,10,4,13],[11,2,4,169],[2,4,12,169],[2,4,13,103],[2,14,4,13],[2,4,15,13],[16,2,4,13],[2,4,17,1],[6,2,5,91],[2,7,5,169],[2,8,5,169],[2,5,9,169],[2,10,5,13],[11,2,5,169],[2,12,5,169],[2,13,5,103],[2,14,5,13],[2,5,15,13],[16,2,5,13],[2,17,5,1],[6,2,7,169],[6,2,8,169],[6,2,9,169],[6,2,10,13],[11,6,2,169],[6,2,12,169],[6,2,13,103],[6,2,14,13],[6,2,15,13],[16,6,2,13],[6,2,17,1],[2,7,8,313],[2,7,9,313],[2,7,10,91],[11,2,7,313],[2,7,12,313],[2,7,13,192],[2,7,14,25],[2,7,15,25],[16,2,7,25],[2,7,17,2],[2,8,9,313],[2,10,8,25],[11,2,8,313],[2,8,12,313],[2,8,13,192],[2,8,14,91],[2,8,15,25],[16,2,8,25],[2,8,17,2],[2,10,9,25],[11,2,9,313],[2,12,9,313],[2,13,9,192],[2,14,9,25],[2,9,15,91],[16,2,9,25],[2,17,9,2],[11,2,10,25],[2,10,12,25],[2,10,13,14],[2,10,14,1],[2,10,15,1],[16,2,10,1],[11,2,12,313],[11,2,13,192],[11,2,14,25],[11,2,15,25],[11,16,2,91],[11,2,17,2],[2,12,13,247],[2,14,12,25],[2,12,15,25],[16,2,12,25],[2,12,17,13],[2,14,13,14],[2,13,15,14],[16,2,13,14],[2,13,17,13],[2,14,15,1],[16,2,14,1],[16,2,15,1],[3,4,5,91],[6,3,4,91],[3,7,4,169],[3,8,4,169],[3,4,9,169],[3,10,4,13],[11,3,4,169],[3,4,12,169],[3,4,13,103],[3,14,4,13],[3,4,15,13],[16,3,4,13],[3,4,17,1],[6,3,5,91],[3,7,5,169],[3,8,5,169],[3,5,9,169],[3,10,5,13],[11,3,5,169],[3,12,5,169],[3,13,5,103],[3,14,5,13],[3,5,15,13],[16,3,5,13],[3,17,5,1],[6,3,7,169],[6,3,8,169],[6,3,9,169],[6,3,10,13],[11,6,3,169],[6,3,12,169],[6,3,13,103],[6,3,14,13],[6,3,15,13],[16,6,3,13],[6,3,17,1],[3,7,8,313],[3,7,9,313],[3,7,10,91],[11,3,7,313],[3,7,12,313],[3,7,13,192],[3,7,14,25],[3,7,15,25],[16,3,7,25],[3,7,17,2],[3,8,9,313],[3,10,8,25],[11,3,8,313],[3,8,12,313],[3,8,13,192],[3,8,14,91],[3,8,15,25],[16,3,8,25],[3,8,17,2],[3,10,9,25],[11,3,9,313],[3,12,9,313],[3,13,9,192],[3,14,9,25],[3,9,15,91],[16,3,9,25],[3,17,9,2],[11,3,10,25],[3,10,12,25],[3,10,13,14],[3,10,14,1],[3,10,15,1],[16,3,10,1],[11,3,12,313],[11,3,13,192],[11,3,14,25],[11,3,15,25],[11,16,3,91],[11,3,17,2],[3,12,13,247],[3,14,12,25],[3,12,15,25],[16,3,12,25],[3,12,17,13],[3,14,13,14],[3,13,15,14],[16,3,13,14],[3,13,17,13],[3,14,15,1],[16,3,14,1],[16,3,15,1],[6,4,5,91],[7,4,5,169],[8,4,5,169],[4,5,9,169],[10,4,5,13],[11,4,5,169],[4,12,5,169],[4,13,5,103],[14,4,5,13],[4,5,15,13],[16,4,5,13],[4,17,5,1],[6,7,4,169],[6,8,4,169],[6,4,9,169],[6,10,4,13],[11,6,4,169],[6,4,12,169],[6,4,13,103],[6,14,4,13],[6,4,15,13],[16,6,4,13],[6,4,17,1],[7,8,4,313],[7,4,9,313],[7,10,4,91],[11,7,4,313],[7,4,12,313],[7,4,13,192],[7,14,4,25],[7,4,15,25],[16,7,4,25],[7,4,17,2],[8,4,9,313],[10,8,4,25],[11,8,4,313],[8,4,12,313],[8,4,13,192],[8,14,4,91],[8,4,15,25],[16,8,4,25],[8,4,17,2],[10,4,9,25],[11,4,9,313],[4,12,9,313],[4,13,9,192],[14,4,9,25],[4,9,15,91],[16,4,9,25],[4,17,9,2],[11,10,4,25],[10,4,12,25],[10,4,13,14],[10,14,4,1],[10,4,15,1],[16,10,4,1],[11,4,12,313],[11,4,13,192],[11,14,4,25],[11,4,15,25],[11,16,4,91],[11,4,17,2],[4,12,13,247],[14,4,12,25],[4,12,15,25],[16,4,12,25],[4,12,17,13],[14,4,13,14],[4,13,15,14],[16,4,13,14],[4,13,17,13],[14,4,15,1],[16,14,4,1],[16,4,15,1],[6,7,5,169],[6,8,5,169],[6,5,9,169],[6,10,5,13],[11,6,5,169],[6,12,5,169],[6,13,5,103],[6,14,5,13],[6,5,15,13],[16,6,5,13],[6,17,5,1],[7,8,5,313],[7,5,9,313],[7,10,5,91],[11,7,5,313],[7,12,5,313],[7,13,5,192],[7,14,5,25],[7,5,15,25],[16,7,5,25],[7,17,5,2],[8,5,9,313],[10,8,5,25],[11,8,5,313],[8,12,5,313],[8,13,5,192],[8,14,5,91],[8,5,15,25],[16,8,5,25],[8,17,5,2],[10,5,9,25],[11,5,9,313],[12,5,9,313],[13,5,9,192],[14,5,9,25],[5,9,15,91],[16,5,9,25],[17,5,9,2],[11,10,5,25],[10,12,5,25],[10,13,5,14],[10,14,5,1],[10,5,15,1],[16,10,5,1],[11,12,5,313],[11,13,5,192],[11,14,5,25],[11,5,15,25],[11,16,5,91],[11,17,5,2],[12,13,5,247],[14,12,5,25],[12,5,15,25],[16,12,5,25],[12,17,5,13],[14,13,5,14],[13,5,15,14],[16,13,5,14],[13,17,5,13],[14,5,15,1],[16,14,5,1],[16,5,15,1],[6,7,8,313],[6,7,9,313],[6,7,10,91],[11,6,7,313],[6,7,12,313],[6,7,13,192],[6,7,14,25],[6,7,15,25],[16,6,7,25],[6,7,17,2],[6,8,9,313],[6,10,8,25],[11,6,8,313],[6,8,12,313],[6,8,13,192],[6,8,14,91],[6,8,15,25],[16,6,8,25],[6,8,17,2],[6,10,9,25],[11,6,9,313],[6,12,9,313],[6,13,9,192],[6,14,9,25],[6,9,15,91],[16,6,9,25],[6,17,9,2],[11,6,10,25],[6,10,12,25],[6,10,13,14],[6,10,14,1],[6,10,15,1],[16,6,10,1],[11,6,12,313],[11,6,13,192],[11,6,14,25],[11,6,15,25],[11,16,6,91],[11,6,17,2],[6,12,13,247],[6,14,12,25],[6,12,15,25],[16,6,12,25],[6,12,17,13],[6,14,13,14],[6,13,15,14],[16,6,13,14],[6,13,17,13],[6,14,15,1],[16,6,14,1],[16,6,15,1],[7,8,9,578],[7,10,8,169],[11,7,8,578],[7,8,12,578],[7,8,13,357],[7,8,14,169],[7,8,15,48],[16,7,8,48],[7,8,17,4],[7,10,9,169],[11,7,9,578],[7,12,9,578],[7,13,9,357],[7,14,9,48],[7,9,15,169],[16,7,9,48],[7,17,9,4],[11,7,10,169],[7,10,12,169],[7,10,13,103],[7,10,14,13],[7,10,15,13],[16,7,10,13],[7,10,17,1],[11,7,12,578],[11,7,13,357],[11,7,14,48],[11,7,15,48],[11,16,7,169],[11,7,17,4],[7,12,13,457],[7,14,12,48],[7,12,15,48],[16,7,12,48],[7,12,17,25],[7,14,13,27],[7,13,15,27],[16,7,13,27],[7,13,17,25],[7,14,15,2],[16,7,14,2],[16,7,15,2],[10,8,9,48],[11,8,9,578],[8,12,9,578],[8,13,9,357],[8,14,9,169],[8,9,15,169],[16,8,9,48],[8,17,9,4],[11,10,8,48],[10,8,12,48],[10,8,13,27],[10,8,14,13],[10,8,15,2],[16,10,8,2],[11,8,12,578],[11,8,13,357],[11,8,14,169],[11,8,15,48],[11,16,8,169],[11,8,17,4],[8,12,13,457],[8,14,12,169],[8,12,15,48],[16,8,12,48],[8,12,17,25],[8,14,13,103],[8,13,15,27],[16,8,13,27],[8,13,17,25],[8,14,15,13],[16,8,14,13],[8,14,17,1],[16,8,15,2],[11,10,9,48],[10,12,9,48],[10,13,9,27],[10,14,9,2],[10,9,15,13],[16,10,9,2],[11,12,9,578],[11,13,9,357],[11,14,9,48],[11,9,15,169],[11,16,9,169],[11,17,9,4],[12,13,9,457],[14,12,9,48],[12,9,15,169],[16,12,9,48],[12,17,9,25],[14,13,9,27],[13,9,15,103],[16,13,9,27],[13,17,9,25],[14,9,15,13],[16,14,9,2],[16,9,15,13],[17,9,15,1],[11,10,12,48],[11,10,13,27],[11,10,14,2],[11,10,15,2],[11,16,10,13],[10,12,13,37],[10,14,12,2],[10,12,15,2],[16,10,12,2],[10,12,17,1],[10,13,17,1],[10,14,13,1],[10,13,15,1],[16,10,13,1],[11,12,13,457],[11,14,12,48],[11,12,15,48],[11,16,12,169],[11,12,17,25],[11,14,13,27],[11,13,15,27],[11,16,13,103],[11,13,17,25],[11,14,15,2],[11,16,14,13],[11,16,15,13],[11,16,17,1],[14,12,13,37],[12,13,15,37],[16,12,13,37],[12,13,17,91],[14,12,15,2],[16,14,12,2],[14,12,17,1],[16,12,15,2],[12,17,15,1],[16,12,17,1],[14,13,17,1],[13,17,15,1],[16,13,17,1],[14,13,15,1],[16,14,13,1],[16,13,15,1]],s4:[[1,2,3,4,13],[1,2,3,5,13],[6,1,2,3,13],[1,2,3,7,25],[1,2,3,8,25],[1,2,3,9,25],[1,2,3,10,1],[11,1,2,3,25],[1,2,3,12,25],[1,2,3,13,14],[1,2,3,14,1],[1,2,3,15,1],[16,1,2,3,1],[1,2,4,5,13],[6,1,2,4,13],[1,2,7,4,25],[1,2,8,4,25],[1,2,4,9,25],[1,2,10,4,1],[11,1,2,4,25],[1,2,4,12,25],[1,2,4,13,14],[1,2,14,4,1],[1,2,4,15,1],[16,1,2,4,1],[6,1,2,5,13],[1,2,7,5,25],[1,2,8,5,25],[1,2,5,9,25],[1,2,10,5,1],[11,1,2,5,25],[1,2,12,5,25],[1,2,13,5,14],[1,2,14,5,1],[1,2,5,15,1],[16,1,2,5,1],[6,1,2,7,25],[6,1,2,8,25],[6,1,2,9,25],[6,1,2,10,1],[11,6,1,2,25],[6,1,2,12,25],[6,1,2,13,14],[6,1,2,14,1],[6,1,2,15,1],[16,6,1,2,1],[1,2,7,8,48],[1,2,7,9,48],[1,2,7,10,13],[11,1,2,7,48],[1,2,7,12,48],[1,2,7,13,27],[1,2,7,14,2],[1,2,7,15,2],[16,1,2,7,2],[1,2,8,9,48],[1,2,10,8,2],[11,1,2,8,48],[1,2,8,12,48],[1,2,8,13,27],[1,2,8,14,13],[1,2,8,15,2],[16,1,2,8,2],[1,2,10,9,2],[11,1,2,9,48],[1,2,12,9,48],[1,2,13,9,27],[1,2,14,9,2],[1,2,9,15,13],[16,1,2,9,2],[11,1,2,10,2],[1,2,10,12,2],[1,2,10,13,1],[11,1,2,12,48],[11,1,2,13,27],[11,1,2,14,2],[11,1,2,15,2],[11,16,1,2,13],[1,2,12,13,37],[1,2,14,12,2],[1,2,12,15,2],[16,1,2,12,2],[1,2,12,17,1],[1,2,13,17,1],[1,2,14,13,1],[1,2,13,15,1],[16,1,2,13,1],[1,3,4,5,13],[6,1,3,4,13],[1,3,7,4,25],[1,3,8,4,25],[1,3,4,9,25],[1,3,10,4,1],[11,1,3,4,25],[1,3,4,12,25],[1,3,4,13,14],[1,3,14,4,1],[1,3,4,15,1],[16,1,3,4,1],[6,1,3,5,13],[1,3,7,5,25],[1,3,8,5,25],[1,3,5,9,25],[1,3,10,5,1],[11,1,3,5,25],[1,3,12,5,25],[1,3,13,5,14],[1,3,14,5,1],[1,3,5,15,1],[16,1,3,5,1],[6,1,3,7,25],[6,1,3,8,25],[6,1,3,9,25],[6,1,3,10,1],[11,6,1,3,25],[6,1,3,12,25],[6,1,3,13,14],[6,1,3,14,1],[6,1,3,15,1],[16,6,1,3,1],[1,3,7,8,48],[1,3,7,9,48],[1,3,7,10,13],[11,1,3,7,48],[1,3,7,12,48],[1,3,7,13,27],[1,3,7,14,2],[1,3,7,15,2],[16,1,3,7,2],[1,3,8,9,48],[1,3,10,8,2],[11,1,3,8,48],[1,3,8,12,48],[1,3,8,13,27],[1,3,8,14,13],[1,3,8,15,2],[16,1,3,8,2],[1,3,10,9,2],[11,1,3,9,48],[1,3,12,9,48],[1,3,13,9,27],[1,3,14,9,2],[1,3,9,15,13],[16,1,3,9,2],[11,1,3,10,2],[1,3,10,12,2],[1,3,10,13,1],[11,1,3,12,48],[11,1,3,13,27],[11,1,3,14,2],[11,1,3,15,2],[11,16,1,3,13],[1,3,12,13,37],[1,3,14,12,2],[1,3,12,15,2],[16,1,3,12,2],[1,3,12,17,1],[1,3,13,17,1],[1,3,14,13,1],[1,3,13,15,1],[16,1,3,13,1],[6,1,4,5,13],[1,7,4,5,25],[1,8,4,5,25],[1,4,5,9,25],[1,10,4,5,1],[11,1,4,5,25],[1,4,12,5,25],[1,4,13,5,14],[1,14,4,5,1],[1,4,5,15,1],[16,1,4,5,1],[6,1,7,4,25],[6,1,8,4,25],[6,1,4,9,25],[6,1,10,4,1],[11,6,1,4,25],[6,1,4,12,25],[6,1,4,13,14],[6,1,14,4,1],[6,1,4,15,1],[16,6,1,4,1],[1,7,8,4,48],[1,7,4,9,48],[1,7,10,4,13],[11,1,7,4,48],[1,7,4,12,48],[1,7,4,13,27],[1,7,14,4,2],[1,7,4,15,2],[16,1,7,4,2],[1,8,4,9,48],[1,10,8,4,2],[11,1,8,4,48],[1,8,4,12,48],[1,8,4,13,27],[1,8,14,4,13],[1,8,4,15,2],[16,1,8,4,2],[1,10,4,9,2],[11,1,4,9,48],[1,4,12,9,48],[1,4,13,9,27],[1,14,4,9,2],[1,4,9,15,13],[16,1,4,9,2],[11,1,10,4,2],[1,10,4,12,2],[1,10,4,13,1],[11,1,4,12,48],[11,1,4,13,27],[11,1,14,4,2],[11,1,4,15,2],[11,16,1,4,13],[1,4,12,13,37],[1,14,4,12,2],[1,4,12,15,2],[16,1,4,12,2],[1,4,12,17,1],[1,4,13,17,1],[1,14,4,13,1],[1,4,13,15,1],[16,1,4,13,1],[6,1,7,5,25],[6,1,8,5,25],[6,1,5,9,25],[6,1,10,5,1],[11,6,1,5,25],[6,1,12,5,25],[6,1,13,5,14],[6,1,14,5,1],[6,1,5,15,1],[16,6,1,5,1],[1,7,8,5,48],[1,7,5,9,48],[1,7,10,5,13],[11,1,7,5,48],[1,7,12,5,48],[1,7,13,5,27],[1,7,14,5,2],[1,7,5,15,2],[16,1,7,5,2],[1,8,5,9,48],[1,10,8,5,2],[11,1,8,5,48],[1,8,12,5,48],[1,8,13,5,27],[1,8,14,5,13],[1,8,5,15,2],[16,1,8,5,2],[1,10,5,9,2],[11,1,5,9,48],[1,12,5,9,48],[1,13,5,9,27],[1,14,5,9,2],[1,5,9,15,13],[16,1,5,9,2],[11,1,10,5,2],[1,10,12,5,2],[1,10,13,5,1],[11,1,12,5,48],[11,1,13,5,27],[11,1,14,5,2],[11,1,5,15,2],[11,16,1,5,13],[1,12,13,5,37],[1,14,12,5,2],[1,12,5,15,2],[16,1,12,5,2],[1,12,17,5,1],[1,13,17,5,1],[1,14,13,5,1],[1,13,5,15,1],[16,1,13,5,1],[6,1,7,8,48],[6,1,7,9,48],[6,1,7,10,13],[11,6,1,7,48],[6,1,7,12,48],[6,1,7,13,27],[6,1,7,14,2],[6,1,7,15,2],[16,6,1,7,2],[6,1,8,9,48],[6,1,10,8,2],[11,6,1,8,48],[6,1,8,12,48],[6,1,8,13,27],[6,1,8,14,13],[6,1,8,15,2],[16,6,1,8,2],[6,1,10,9,2],[11,6,1,9,48],[6,1,12,9,48],[6,1,13,9,27],[6,1,14,9,2],[6,1,9,15,13],[16,6,1,9,2],[11,6,1,10,2],[6,1,10,12,2],[6,1,10,13,1],[11,6,1,12,48],[11,6,1,13,27],[11,6,1,14,2],[11,6,1,15,2],[11,16,6,1,13],[6,1,12,13,37],[6,1,14,12,2],[6,1,12,15,2],[16,6,1,12,2],[6,1,12,17,1],[6,1,13,17,1],[6,1,14,13,1],[6,1,13,15,1],[16,6,1,13,1],[1,7,8,9,92],[1,7,10,8,25],[11,1,7,8,92],[1,7,8,12,92],[1,7,8,13,52],[1,7,8,14,25],[1,7,8,15,4],[16,1,7,8,4],[1,7,10,9,25],[11,1,7,9,92],[1,7,12,9,92],[1,7,13,9,52],[1,7,14,9,4],[1,7,9,15,25],[16,1,7,9,4],[11,1,7,10,25],[1,7,10,12,25],[1,7,10,13,14],[1,7,10,14,1],[1,7,10,15,1],[16,1,7,10,1],[11,1,7,12,92],[11,1,7,13,52],[11,1,7,14,4],[11,1,7,15,4],[11,16,1,7,25],[1,7,12,13,71],[1,7,14,12,4],[1,7,12,15,4],[16,1,7,12,4],[1,7,12,17,2],[1,7,13,17,2],[1,7,14,13,2],[1,7,13,15,2],[16,1,7,13,2],[1,10,8,9,4],[11,1,8,9,92],[1,8,12,9,92],[1,8,13,9,52],[1,8,14,9,25],[1,8,9,15,25],[16,1,8,9,4],[11,1,10,8,4],[1,10,8,12,4],[1,10,8,14,1],[1,10,8,13,2],[11,1,8,12,92],[11,1,8,13,52],[11,1,8,14,25],[11,1,8,15,4],[11,16,1,8,25],[1,8,12,13,71],[1,8,14,12,25],[1,8,12,15,4],[16,1,8,12,4],[1,8,12,17,2],[1,8,14,13,14],[1,8,13,17,2],[1,8,14,15,1],[16,1,8,14,1],[1,8,13,15,2],[16,1,8,13,2],[11,1,10,9,4],[1,10,12,9,4],[1,10,9,15,1],[1,10,13,9,2],[11,1,12,9,92],[11,1,13,9,52],[11,1,14,9,4],[11,1,9,15,25],[11,16,1,9,25],[1,12,13,9,71],[1,14,12,9,4],[1,12,9,15,25],[16,1,12,9,4],[1,12,17,9,2],[1,13,9,15,14],[1,13,17,9,2],[1,14,9,15,1],[1,14,13,9,2],[16,1,9,15,1],[16,1,13,9,2],[11,1,10,12,4],[11,16,1,10,1],[11,1,10,13,2],[1,10,12,13,3],[11,1,12,13,71],[11,1,14,12,4],[11,1,12,15,4],[11,16,1,12,25],[11,1,12,17,2],[11,16,1,13,14],[11,1,13,17,2],[11,16,1,14,1],[11,1,14,13,2],[11,16,1,15,1],[11,1,13,15,2],[1,14,12,13,3],[1,12,13,15,3],[16,1,12,13,3],[1,12,13,17,13],[2,3,4,5,13],[6,2,3,4,13],[2,3,7,4,25],[2,3,8,4,25],[2,3,4,9,25],[2,3,10,4,1],[11,2,3,4,25],[2,3,4,12,25],[2,3,4,13,14],[2,3,14,4,1],[2,3,4,15,1],[16,2,3,4,1],[6,2,3,5,13],[2,3,7,5,25],[2,3,8,5,25],[2,3,5,9,25],[2,3,10,5,1],[11,2,3,5,25],[2,3,12,5,25],[2,3,13,5,14],[2,3,14,5,1],[2,3,5,15,1],[16,2,3,5,1],[6,2,3,7,25],[6,2,3,8,25],[6,2,3,9,25],[6,2,3,10,1],[11,6,2,3,25],[6,2,3,12,25],[6,2,3,13,14],[6,2,3,14,1],[6,2,3,15,1],[16,6,2,3,1],[2,3,7,8,48],[2,3,7,9,48],[2,3,7,10,13],[11,2,3,7,48],[2,3,7,12,48],[2,3,7,13,27],[2,3,7,14,2],[2,3,7,15,2],[16,2,3,7,2],[2,3,8,9,48],[2,3,10,8,2],[11,2,3,8,48],[2,3,8,12,48],[2,3,8,13,27],[2,3,8,14,13],[2,3,8,15,2],[16,2,3,8,2],[2,3,10,9,2],[11,2,3,9,48],[2,3,12,9,48],[2,3,13,9,27],[2,3,14,9,2],[2,3,9,15,13],[16,2,3,9,2],[11,2,3,10,2],[2,3,10,12,2],[2,3,10,13,1],[11,2,3,12,48],[11,2,3,13,27],[11,2,3,14,2],[11,2,3,15,2],[11,16,2,3,13],[2,3,12,13,37],[2,3,14,12,2],[2,3,12,15,2],[16,2,3,12,2],[2,3,12,17,1],[2,3,13,17,1],[2,3,14,13,1],[2,3,13,15,1],[16,2,3,13,1],[6,2,4,5,13],[2,7,4,5,25],[2,8,4,5,25],[2,4,5,9,25],[2,10,4,5,1],[11,2,4,5,25],[2,4,12,5,25],[2,4,13,5,14],[2,14,4,5,1],[2,4,5,15,1],[16,2,4,5,1],[6,2,7,4,25],[6,2,8,4,25],[6,2,4,9,25],[6,2,10,4,1],[11,6,2,4,25],[6,2,4,12,25],[6,2,4,13,14],[6,2,14,4,1],[6,2,4,15,1],[16,6,2,4,1],[2,7,8,4,48],[2,7,4,9,48],[2,7,10,4,13],[11,2,7,4,48],[2,7,4,12,48],[2,7,4,13,27],[2,7,14,4,2],[2,7,4,15,2],[16,2,7,4,2],[2,8,4,9,48],[2,10,8,4,2],[11,2,8,4,48],[2,8,4,12,48],[2,8,4,13,27],[2,8,14,4,13],[2,8,4,15,2],[16,2,8,4,2],[2,10,4,9,2],[11,2,4,9,48],[2,4,12,9,48],[2,4,13,9,27],[2,14,4,9,2],[2,4,9,15,13],[16,2,4,9,2],[11,2,10,4,2],[2,10,4,12,2],[2,10,4,13,1],[11,2,4,12,48],[11,2,4,13,27],[11,2,14,4,2],[11,2,4,15,2],[11,16,2,4,13],[2,4,12,13,37],[2,14,4,12,2],[2,4,12,15,2],[16,2,4,12,2],[2,4,12,17,1],[2,4,13,17,1],[2,14,4,13,1],[2,4,13,15,1],[16,2,4,13,1],[6,2,7,5,25],[6,2,8,5,25],[6,2,5,9,25],[6,2,10,5,1],[11,6,2,5,25],[6,2,12,5,25],[6,2,13,5,14],[6,2,14,5,1],[6,2,5,15,1],[16,6,2,5,1],[2,7,8,5,48],[2,7,5,9,48],[2,7,10,5,13],[11,2,7,5,48],[2,7,12,5,48],[2,7,13,5,27],[2,7,14,5,2],[2,7,5,15,2],[16,2,7,5,2],[2,8,5,9,48],[2,10,8,5,2],[11,2,8,5,48],[2,8,12,5,48],[2,8,13,5,27],[2,8,14,5,13],[2,8,5,15,2],[16,2,8,5,2],[2,10,5,9,2],[11,2,5,9,48],[2,12,5,9,48],[2,13,5,9,27],[2,14,5,9,2],[2,5,9,15,13],[16,2,5,9,2],[11,2,10,5,2],[2,10,12,5,2],[2,10,13,5,1],[11,2,12,5,48],[11,2,13,5,27],[11,2,14,5,2],[11,2,5,15,2],[11,16,2,5,13],[2,12,13,5,37],[2,14,12,5,2],[2,12,5,15,2],[16,2,12,5,2],[2,12,17,5,1],[2,13,17,5,1],[2,14,13,5,1],[2,13,5,15,1],[16,2,13,5,1],[6,2,7,8,48],[6,2,7,9,48],[6,2,7,10,13],[11,6,2,7,48],[6,2,7,12,48],[6,2,7,13,27],[6,2,7,14,2],[6,2,7,15,2],[16,6,2,7,2],[6,2,8,9,48],[6,2,10,8,2],[11,6,2,8,48],[6,2,8,12,48],[6,2,8,13,27],[6,2,8,14,13],[6,2,8,15,2],[16,6,2,8,2],[6,2,10,9,2],[11,6,2,9,48],[6,2,12,9,48],[6,2,13,9,27],[6,2,14,9,2],[6,2,9,15,13],[16,6,2,9,2],[11,6,2,10,2],[6,2,10,12,2],[6,2,10,13,1],[11,6,2,12,48],[11,6,2,13,27],[11,6,2,14,2],[11,6,2,15,2],[11,16,6,2,13],[6,2,12,13,37],[6,2,14,12,2],[6,2,12,15,2],[16,6,2,12,2],[6,2,12,17,1],[6,2,13,17,1],[6,2,14,13,1],[6,2,13,15,1],[16,6,2,13,1],[2,7,8,9,92],[2,7,10,8,25],[11,2,7,8,92],[2,7,8,12,92],[2,7,8,13,52],[2,7,8,14,25],[2,7,8,15,4],[16,2,7,8,4],[2,7,10,9,25],[11,2,7,9,92],[2,7,12,9,92],[2,7,13,9,52],[2,7,14,9,4],[2,7,9,15,25],[16,2,7,9,4],[11,2,7,10,25],[2,7,10,12,25],[2,7,10,13,14],[2,7,10,14,1],[2,7,10,15,1],[16,2,7,10,1],[11,2,7,12,92],[11,2,7,13,52],[11,2,7,14,4],[11,2,7,15,4],[11,16,2,7,25],[2,7,12,13,71],[2,7,14,12,4],[2,7,12,15,4],[16,2,7,12,4],[2,7,12,17,2],[2,7,13,17,2],[2,7,14,13,2],[2,7,13,15,2],[16,2,7,13,2],[2,10,8,9,4],[11,2,8,9,92],[2,8,12,9,92],[2,8,13,9,52],[2,8,14,9,25],[2,8,9,15,25],[16,2,8,9,4],[11,2,10,8,4],[2,10,8,12,4],[2,10,8,14,1],[2,10,8,13,2],[11,2,8,12,92],[11,2,8,13,52],[11,2,8,14,25],[11,2,8,15,4],[11,16,2,8,25],[2,8,12,13,71],[2,8,14,12,25],[2,8,12,15,4],[16,2,8,12,4],[2,8,12,17,2],[2,8,14,13,14],[2,8,13,17,2],[2,8,14,15,1],[16,2,8,14,1],[2,8,13,15,2],[16,2,8,13,2],[11,2,10,9,4],[2,10,12,9,4],[2,10,9,15,1],[2,10,13,9,2],[11,2,12,9,92],[11,2,13,9,52],[11,2,14,9,4],[11,2,9,15,25],[11,16,2,9,25],[2,12,13,9,71],[2,14,12,9,4],[2,12,9,15,25],[16,2,12,9,4],[2,12,17,9,2],[2,13,9,15,14],[2,13,17,9,2],[2,14,9,15,1],[2,14,13,9,2],[16,2,9,15,1],[16,2,13,9,2],[11,2,10,12,4],[11,16,2,10,1],[11,2,10,13,2],[2,10,12,13,3],[11,2,12,13,71],[11,2,14,12,4],[11,2,12,15,4],[11,16,2,12,25],[11,2,12,17,2],[11,16,2,13,14],[11,2,13,17,2],[11,16,2,14,1],[11,2,14,13,2],[11,16,2,15,1],[11,2,13,15,2],[2,14,12,13,3],[2,12,13,15,3],[16,2,12,13,3],[2,12,13,17,13],[6,3,4,5,13],[3,7,4,5,25],[3,8,4,5,25],[3,4,5,9,25],[3,10,4,5,1],[11,3,4,5,25],[3,4,12,5,25],[3,4,13,5,14],[3,14,4,5,1],[3,4,5,15,1],[16,3,4,5,1],[6,3,7,4,25],[6,3,8,4,25],[6,3,4,9,25],[6,3,10,4,1],[11,6,3,4,25],[6,3,4,12,25],[6,3,4,13,14],[6,3,14,4,1],[6,3,4,15,1],[16,6,3,4,1],[3,7,8,4,48],[3,7,4,9,48],[3,7,10,4,13],[11,3,7,4,48],[3,7,4,12,48],[3,7,4,13,27],[3,7,14,4,2],[3,7,4,15,2],[16,3,7,4,2],[3,8,4,9,48],[3,10,8,4,2],[11,3,8,4,48],[3,8,4,12,48],[3,8,4,13,27],[3,8,14,4,13],[3,8,4,15,2],[16,3,8,4,2],[3,10,4,9,2],[11,3,4,9,48],[3,4,12,9,48],[3,4,13,9,27],[3,14,4,9,2],[3,4,9,15,13],[16,3,4,9,2],[11,3,10,4,2],[3,10,4,12,2],[3,10,4,13,1],[11,3,4,12,48],[11,3,4,13,27],[11,3,14,4,2],[11,3,4,15,2],[11,16,3,4,13],[3,4,12,13,37],[3,14,4,12,2],[3,4,12,15,2],[16,3,4,12,2],[3,4,12,17,1],[3,4,13,17,1],[3,14,4,13,1],[3,4,13,15,1],[16,3,4,13,1],[6,3,7,5,25],[6,3,8,5,25],[6,3,5,9,25],[6,3,10,5,1],[11,6,3,5,25],[6,3,12,5,25],[6,3,13,5,14],[6,3,14,5,1],[6,3,5,15,1],[16,6,3,5,1],[3,7,8,5,48],[3,7,5,9,48],[3,7,10,5,13],[11,3,7,5,48],[3,7,12,5,48],[3,7,13,5,27],[3,7,14,5,2],[3,7,5,15,2],[16,3,7,5,2],[3,8,5,9,48],[3,10,8,5,2],[11,3,8,5,48],[3,8,12,5,48],[3,8,13,5,27],[3,8,14,5,13],[3,8,5,15,2],[16,3,8,5,2],[3,10,5,9,2],[11,3,5,9,48],[3,12,5,9,48],[3,13,5,9,27],[3,14,5,9,2],[3,5,9,15,13],[16,3,5,9,2],[11,3,10,5,2],[3,10,12,5,2],[3,10,13,5,1],[11,3,12,5,48],[11,3,13,5,27],[11,3,14,5,2],[11,3,5,15,2],[11,16,3,5,13],[3,12,13,5,37],[3,14,12,5,2],[3,12,5,15,2],[16,3,12,5,2],[3,12,17,5,1],[3,13,17,5,1],[3,14,13,5,1],[3,13,5,15,1],[16,3,13,5,1],[6,3,7,8,48],[6,3,7,9,48],[6,3,7,10,13],[11,6,3,7,48],[6,3,7,12,48],[6,3,7,13,27],[6,3,7,14,2],[6,3,7,15,2],[16,6,3,7,2],[6,3,8,9,48],[6,3,10,8,2],[11,6,3,8,48],[6,3,8,12,48],[6,3,8,13,27],[6,3,8,14,13],[6,3,8,15,2],[16,6,3,8,2],[6,3,10,9,2],[11,6,3,9,48],[6,3,12,9,48],[6,3,13,9,27],[6,3,14,9,2],[6,3,9,15,13],[16,6,3,9,2],[11,6,3,10,2],[6,3,10,12,2],[6,3,10,13,1],[11,6,3,12,48],[11,6,3,13,27],[11,6,3,14,2],[11,6,3,15,2],[11,16,6,3,13],[6,3,12,13,37],[6,3,14,12,2],[6,3,12,15,2],[16,6,3,12,2],[6,3,12,17,1],[6,3,13,17,1],[6,3,14,13,1],[6,3,13,15,1],[16,6,3,13,1],[3,7,8,9,92],[3,7,10,8,25],[11,3,7,8,92],[3,7,8,12,92],[3,7,8,13,52],[3,7,8,14,25],[3,7,8,15,4],[16,3,7,8,4],[3,7,10,9,25],[11,3,7,9,92],[3,7,12,9,92],[3,7,13,9,52],[3,7,14,9,4],[3,7,9,15,25],[16,3,7,9,4],[11,3,7,10,25],[3,7,10,12,25],[3,7,10,13,14],[3,7,10,14,1],[3,7,10,15,1],[16,3,7,10,1],[11,3,7,12,92],[11,3,7,13,52],[11,3,7,14,4],[11,3,7,15,4],[11,16,3,7,25],[3,7,12,13,71],[3,7,14,12,4],[3,7,12,15,4],[16,3,7,12,4],[3,7,12,17,2],[3,7,13,17,2],[3,7,14,13,2],[3,7,13,15,2],[16,3,7,13,2],[3,10,8,9,4],[11,3,8,9,92],[3,8,12,9,92],[3,8,13,9,52],[3,8,14,9,25],[3,8,9,15,25],[16,3,8,9,4],[11,3,10,8,4],[3,10,8,12,4],[3,10,8,14,1],[3,10,8,13,2],[11,3,8,12,92],[11,3,8,13,52],[11,3,8,14,25],[11,3,8,15,4],[11,16,3,8,25],[3,8,12,13,71],[3,8,14,12,25],[3,8,12,15,4],[16,3,8,12,4],[3,8,12,17,2],[3,8,14,13,14],[3,8,13,17,2],[3,8,14,15,1],[16,3,8,14,1],[3,8,13,15,2],[16,3,8,13,2],[11,3,10,9,4],[3,10,12,9,4],[3,10,9,15,1],[3,10,13,9,2],[11,3,12,9,92],[11,3,13,9,52],[11,3,14,9,4],[11,3,9,15,25],[11,16,3,9,25],[3,12,13,9,71],[3,14,12,9,4],[3,12,9,15,25],[16,3,12,9,4],[3,12,17,9,2],[3,13,9,15,14],[3,13,17,9,2],[3,14,9,15,1],[3,14,13,9,2],[16,3,9,15,1],[16,3,13,9,2],[11,3,10,12,4],[11,16,3,10,1],[11,3,10,13,2],[3,10,12,13,3],[11,3,12,13,71],[11,3,14,12,4],[11,3,12,15,4],[11,16,3,12,25],[11,3,12,17,2],[11,16,3,13,14],[11,3,13,17,2],[11,16,3,14,1],[11,3,14,13,2],[11,16,3,15,1],[11,3,13,15,2],[3,14,12,13,3],[3,12,13,15,3],[16,3,12,13,3],[3,12,13,17,13],[6,7,4,5,25],[6,8,4,5,25],[6,4,5,9,25],[6,10,4,5,1],[11,6,4,5,25],[6,4,12,5,25],[6,4,13,5,14],[6,14,4,5,1],[6,4,5,15,1],[16,6,4,5,1],[7,8,4,5,48],[7,4,5,9,48],[7,10,4,5,13],[11,7,4,5,48],[7,4,12,5,48],[7,4,13,5,27],[7,14,4,5,2],[7,4,5,15,2],[16,7,4,5,2],[8,4,5,9,48],[10,8,4,5,2],[11,8,4,5,48],[8,4,12,5,48],[8,4,13,5,27],[8,14,4,5,13],[8,4,5,15,2],[16,8,4,5,2],[10,4,5,9,2],[11,4,5,9,48],[4,12,5,9,48],[4,13,5,9,27],[14,4,5,9,2],[4,5,9,15,13],[16,4,5,9,2],[11,10,4,5,2],[10,4,12,5,2],[10,4,13,5,1],[11,4,12,5,48],[11,4,13,5,27],[11,14,4,5,2],[11,4,5,15,2],[11,16,4,5,13],[4,12,13,5,37],[14,4,12,5,2],[4,12,5,15,2],[16,4,12,5,2],[4,12,17,5,1],[4,13,17,5,1],[14,4,13,5,1],[4,13,5,15,1],[16,4,13,5,1],[6,7,8,4,48],[6,7,4,9,48],[6,7,10,4,13],[11,6,7,4,48],[6,7,4,12,48],[6,7,4,13,27],[6,7,14,4,2],[6,7,4,15,2],[16,6,7,4,2],[6,8,4,9,48],[6,10,8,4,2],[11,6,8,4,48],[6,8,4,12,48],[6,8,4,13,27],[6,8,14,4,13],[6,8,4,15,2],[16,6,8,4,2],[6,10,4,9,2],[11,6,4,9,48],[6,4,12,9,48],[6,4,13,9,27],[6,14,4,9,2],[6,4,9,15,13],[16,6,4,9,2],[11,6,10,4,2],[6,10,4,12,2],[6,10,4,13,1],[11,6,4,12,48],[11,6,4,13,27],[11,6,14,4,2],[11,6,4,15,2],[11,16,6,4,13],[6,4,12,13,37],[6,14,4,12,2],[6,4,12,15,2],[16,6,4,12,2],[6,4,12,17,1],[6,4,13,17,1],[6,14,4,13,1],[6,4,13,15,1],[16,6,4,13,1],[7,8,4,9,92],[7,10,8,4,25],[11,7,8,4,92],[7,8,4,12,92],[7,8,4,13,52],[7,8,14,4,25],[7,8,4,15,4],[16,7,8,4,4],[7,10,4,9,25],[11,7,4,9,92],[7,4,12,9,92],[7,4,13,9,52],[7,14,4,9,4],[7,4,9,15,25],[16,7,4,9,4],[11,7,10,4,25],[7,10,4,12,25],[7,10,4,13,14],[7,10,14,4,1],[7,10,4,15,1],[16,7,10,4,1],[11,7,4,12,92],[11,7,4,13,52],[11,7,14,4,4],[11,7,4,15,4],[11,16,7,4,25],[7,4,12,13,71],[7,14,4,12,4],[7,4,12,15,4],[16,7,4,12,4],[7,4,12,17,2],[7,4,13,17,2],[7,14,4,13,2],[7,4,13,15,2],[16,7,4,13,2],[10,8,4,9,4],[11,8,4,9,92],[8,4,12,9,92],[8,4,13,9,52],[8,14,4,9,25],[8,4,9,15,25],[16,8,4,9,4],[11,10,8,4,4],[10,8,4,12,4],[10,8,14,4,1],[10,8,4,13,2],[11,8,4,12,92],[11,8,4,13,52],[11,8,14,4,25],[11,8,4,15,4],[11,16,8,4,25],[8,4,12,13,71],[8,14,4,12,25],[8,4,12,15,4],[16,8,4,12,4],[8,4,12,17,2],[8,14,4,13,14],[8,4,13,17,2],[8,14,4,15,1],[16,8,14,4,1],[8,4,13,15,2],[16,8,4,13,2],[11,10,4,9,4],[10,4,12,9,4],[10,4,9,15,1],[10,4,13,9,2],[11,4,12,9,92],[11,4,13,9,52],[11,14,4,9,4],[11,4,9,15,25],[11,16,4,9,25],[4,12,13,9,71],[14,4,12,9,4],[4,12,9,15,25],[16,4,12,9,4],[4,12,17,9,2],[4,13,9,15,14],[4,13,17,9,2],[14,4,9,15,1],[14,4,13,9,2],[16,4,9,15,1],[16,4,13,9,2],[11,10,4,12,4],[11,16,10,4,1],[11,10,4,13,2],[10,4,12,13,3],[11,4,12,13,71],[11,14,4,12,4],[11,4,12,15,4],[11,16,4,12,25],[11,4,12,17,2],[11,16,4,13,14],[11,4,13,17,2],[11,16,14,4,1],[11,14,4,13,2],[11,16,4,15,1],[11,4,13,15,2],[14,4,12,13,3],[4,12,13,15,3],[16,4,12,13,3],[4,12,13,17,13],[6,7,8,5,48],[6,7,5,9,48],[6,7,10,5,13],[11,6,7,5,48],[6,7,12,5,48],[6,7,13,5,27],[6,7,14,5,2],[6,7,5,15,2],[16,6,7,5,2],[6,8,5,9,48],[6,10,8,5,2],[11,6,8,5,48],[6,8,12,5,48],[6,8,13,5,27],[6,8,14,5,13],[6,8,5,15,2],[16,6,8,5,2],[6,10,5,9,2],[11,6,5,9,48],[6,12,5,9,48],[6,13,5,9,27],[6,14,5,9,2],[6,5,9,15,13],[16,6,5,9,2],[11,6,10,5,2],[6,10,12,5,2],[6,10,13,5,1],[11,6,12,5,48],[11,6,13,5,27],[11,6,14,5,2],[11,6,5,15,2],[11,16,6,5,13],[6,12,13,5,37],[6,14,12,5,2],[6,12,5,15,2],[16,6,12,5,2],[6,12,17,5,1],[6,13,17,5,1],[6,14,13,5,1],[6,13,5,15,1],[16,6,13,5,1],[7,8,5,9,92],[7,10,8,5,25],[11,7,8,5,92],[7,8,12,5,92],[7,8,13,5,52],[7,8,14,5,25],[7,8,5,15,4],[16,7,8,5,4],[7,10,5,9,25],[11,7,5,9,92],[7,12,5,9,92],[7,13,5,9,52],[7,14,5,9,4],[7,5,9,15,25],[16,7,5,9,4],[11,7,10,5,25],[7,10,12,5,25],[7,10,13,5,14],[7,10,14,5,1],[7,10,5,15,1],[16,7,10,5,1],[11,7,12,5,92],[11,7,13,5,52],[11,7,14,5,4],[11,7,5,15,4],[11,16,7,5,25],[7,12,13,5,71],[7,14,12,5,4],[7,12,5,15,4],[16,7,12,5,4],[7,12,17,5,2],[7,13,17,5,2],[7,14,13,5,2],[7,13,5,15,2],[16,7,13,5,2],[10,8,5,9,4],[11,8,5,9,92],[8,12,5,9,92],[8,13,5,9,52],[8,14,5,9,25],[8,5,9,15,25],[16,8,5,9,4],[11,10,8,5,4],[10,8,12,5,4],[10,8,14,5,1],[10,8,13,5,2],[11,8,12,5,92],[11,8,13,5,52],[11,8,14,5,25],[11,8,5,15,4],[11,16,8,5,25],[8,12,13,5,71],[8,14,12,5,25],[8,12,5,15,4],[16,8,12,5,4],[8,12,17,5,2],[8,14,13,5,14],[8,13,17,5,2],[8,14,5,15,1],[16,8,14,5,1],[8,13,5,15,2],[16,8,13,5,2],[11,10,5,9,4],[10,12,5,9,4],[10,5,9,15,1],[10,13,5,9,2],[11,12,5,9,92],[11,13,5,9,52],[11,14,5,9,4],[11,5,9,15,25],[11,16,5,9,25],[12,13,5,9,71],[14,12,5,9,4],[12,5,9,15,25],[16,12,5,9,4],[12,17,5,9,2],[13,5,9,15,14],[13,17,5,9,2],[14,5,9,15,1],[14,13,5,9,2],[16,5,9,15,1],[16,13,5,9,2],[11,10,12,5,4],[11,16,10,5,1],[11,10,13,5,2],[10,12,13,5,3],[11,12,13,5,71],[11,14,12,5,4],[11,12,5,15,4],[11,16,12,5,25],[11,12,17,5,2],[11,16,13,5,14],[11,13,17,5,2],[11,16,14,5,1],[11,14,13,5,2],[11,16,5,15,1],[11,13,5,15,2],[14,12,13,5,3],[12,13,5,15,3],[16,12,13,5,3],[12,13,17,5,13],[6,7,8,9,92],[6,7,10,8,25],[11,6,7,8,92],[6,7,8,12,92],[6,7,8,13,52],[6,7,8,14,25],[6,7,8,15,4],[16,6,7,8,4],[6,7,10,9,25],[11,6,7,9,92],[6,7,12,9,92],[6,7,13,9,52],[6,7,14,9,4],[6,7,9,15,25],[16,6,7,9,4],[11,6,7,10,25],[6,7,10,12,25],[6,7,10,13,14],[6,7,10,14,1],[6,7,10,15,1],[16,6,7,10,1],[11,6,7,12,92],[11,6,7,13,52],[11,6,7,14,4],[11,6,7,15,4],[11,16,6,7,25],[6,7,12,13,71],[6,7,14,12,4],[6,7,12,15,4],[16,6,7,12,4],[6,7,12,17,2],[6,7,13,17,2],[6,7,14,13,2],[6,7,13,15,2],[16,6,7,13,2],[6,10,8,9,4],[11,6,8,9,92],[6,8,12,9,92],[6,8,13,9,52],[6,8,14,9,25],[6,8,9,15,25],[16,6,8,9,4],[11,6,10,8,4],[6,10,8,12,4],[6,10,8,14,1],[6,10,8,13,2],[11,6,8,12,92],[11,6,8,13,52],[11,6,8,14,25],[11,6,8,15,4],[11,16,6,8,25],[6,8,12,13,71],[6,8,14,12,25],[6,8,12,15,4],[16,6,8,12,4],[6,8,12,17,2],[6,8,14,13,14],[6,8,13,17,2],[6,8,14,15,1],[16,6,8,14,1],[6,8,13,15,2],[16,6,8,13,2],[11,6,10,9,4],[6,10,12,9,4],[6,10,9,15,1],[6,10,13,9,2],[11,6,12,9,92],[11,6,13,9,52],[11,6,14,9,4],[11,6,9,15,25],[11,16,6,9,25],[6,12,13,9,71],[6,14,12,9,4],[6,12,9,15,25],[16,6,12,9,4],[6,12,17,9,2],[6,13,9,15,14],[6,13,17,9,2],[6,14,9,15,1],[6,14,13,9,2],[16,6,9,15,1],[16,6,13,9,2],[11,6,10,12,4],[11,16,6,10,1],[11,6,10,13,2],[6,10,12,13,3],[11,6,12,13,71],[11,6,14,12,4],[11,6,12,15,4],[11,16,6,12,25],[11,6,12,17,2],[11,16,6,13,14],[11,6,13,17,2],[11,16,6,14,1],[11,6,14,13,2],[11,16,6,15,1],[11,6,13,15,2],[6,14,12,13,3],[6,12,13,15,3],[16,6,12,13,3],[6,12,13,17,13],[7,10,8,9,48],[11,7,8,9,176],[7,8,12,9,176],[7,8,13,9,100],[7,8,14,9,48],[7,8,9,15,48],[16,7,8,9,8],[11,7,10,8,48],[7,10,8,12,48],[7,10,8,13,27],[7,10,8,14,13],[7,10,8,15,2],[16,7,10,8,2],[11,7,8,12,176],[11,7,8,13,100],[11,7,8,14,48],[11,7,8,15,8],[11,16,7,8,48],[7,8,12,13,136],[7,8,14,12,48],[7,8,12,15,8],[16,7,8,12,8],[7,8,12,17,4],[7,8,14,13,27],[7,8,13,17,4],[7,8,14,15,2],[16,7,8,14,2],[7,8,13,15,4],[16,7,8,13,4],[11,7,10,9,48],[7,10,12,9,48],[7,10,13,9,27],[7,10,14,9,2],[7,10,9,15,13],[16,7,10,9,2],[11,7,12,9,176],[11,7,13,9,100],[11,7,14,9,8],[11,7,9,15,48],[11,16,7,9,48],[7,12,13,9,136],[7,14,12,9,8],[7,12,9,15,48],[16,7,12,9,8],[7,12,17,9,4],[7,13,9,15,27],[7,13,17,9,4],[7,14,9,15,2],[7,14,13,9,4],[16,7,9,15,2],[16,7,13,9,4],[11,7,10,12,48],[11,7,10,13,27],[11,7,10,14,2],[11,7,10,15,2],[11,16,7,10,13],[7,10,12,13,37],[7,10,14,12,2],[7,10,12,15,2],[16,7,10,12,2],[7,10,12,17,1],[7,10,13,17,1],[7,10,14,13,1],[7,10,13,15,1],[16,7,10,13,1],[11,7,12,13,136],[11,7,14,12,8],[11,7,12,15,8],[11,16,7,12,48],[11,7,12,17,4],[11,16,7,13,27],[11,7,13,17,4],[11,16,7,14,2],[11,7,14,13,4],[11,16,7,15,2],[11,7,13,15,4],[7,14,12,13,6],[7,12,13,15,6],[16,7,12,13,6],[7,12,13,17,25],[11,10,8,9,8],[10,8,12,9,8],[10,8,14,9,2],[10,8,9,15,2],[10,8,13,9,4],[11,8,12,9,176],[11,8,13,9,100],[11,8,14,9,48],[11,8,9,15,48],[11,16,8,9,48],[8,12,13,9,136],[8,14,12,9,48],[8,12,9,15,48],[16,8,12,9,8],[8,12,17,9,4],[8,14,13,9,27],[8,13,9,15,27],[8,13,17,9,4],[8,14,9,15,13],[16,8,14,9,2],[16,8,9,15,2],[16,8,13,9,4],[11,10,8,12,8],[11,10,8,14,2],[11,16,10,8,2],[11,10,8,13,4],[10,8,12,13,6],[10,8,14,12,2],[10,8,14,13,1],[11,8,12,13,136],[11,8,14,12,48],[11,8,12,15,8],[11,16,8,12,48],[11,8,12,17,4],[11,8,14,13,27],[11,16,8,13,27],[11,8,13,17,4],[11,8,14,15,2],[11,16,8,14,13],[11,16,8,15,2],[11,8,13,15,4],[8,14,12,13,37],[8,12,13,15,6],[16,8,12,13,6],[8,12,13,17,25],[8,14,12,15,2],[16,8,14,12,2],[8,14,12,17,1],[8,14,13,17,1],[8,14,13,15,1],[16,8,14,13,1],[11,10,12,9,8],[11,10,9,15,2],[11,16,10,9,2],[11,10,13,9,4],[10,12,13,9,6],[10,12,9,15,2],[10,13,9,15,1],[11,12,13,9,136],[11,14,12,9,8],[11,12,9,15,48],[11,16,12,9,48],[11,12,17,9,4],[11,13,9,15,27],[11,16,13,9,27],[11,13,17,9,4],[11,14,9,15,2],[11,16,14,9,2],[11,14,13,9,4],[11,16,9,15,13],[14,12,13,9,6],[12,13,9,15,37],[16,12,13,9,6],[12,13,17,9,25],[14,12,9,15,2],[16,12,9,15,2],[12,17,9,15,1],[13,17,9,15,1],[14,13,9,15,1],[16,13,9,15,1],[11,10,12,13,6],[11,16,10,12,2],[11,16,10,13,1],[10,12,13,17,1],[11,14,12,13,6],[11,12,13,15,6],[11,16,12,13,37],[11,12,13,17,25],[11,16,14,12,2],[11,16,12,15,2],[11,16,12,17,1],[11,16,13,17,1],[11,16,14,13,1],[11,16,13,15,1],[14,12,13,17,1],[12,13,17,15,1],[16,12,13,17,1]],s5:[[1,2,3,4,5,1],[6,1,2,3,4,1],[1,2,3,7,4,2],[1,2,3,8,4,2],[1,2,3,4,9,2],[11,1,2,3,4,2],[1,2,3,4,12,2],[1,2,3,4,13,1],[6,1,2,3,5,1],[1,2,3,7,5,2],[1,2,3,8,5,2],[1,2,3,5,9,2],[11,1,2,3,5,2],[1,2,3,12,5,2],[1,2,3,13,5,1],[6,1,2,3,7,2],[6,1,2,3,8,2],[6,1,2,3,9,2],[11,6,1,2,3,2],[6,1,2,3,12,2],[6,1,2,3,13,1],[1,2,3,7,8,4],[1,2,3,7,9,4],[1,2,3,7,10,1],[11,1,2,3,7,4],[1,2,3,7,12,4],[1,2,3,7,13,2],[1,2,3,8,9,4],[11,1,2,3,8,4],[1,2,3,8,12,4],[1,2,3,8,14,1],[1,2,3,8,13,2],[11,1,2,3,9,4],[1,2,3,12,9,4],[1,2,3,9,15,1],[1,2,3,13,9,2],[11,1,2,3,12,4],[11,16,1,2,3,1],[11,1,2,3,13,2],[1,2,3,12,13,3],[6,1,2,4,5,1],[1,2,7,4,5,2],[1,2,8,4,5,2],[1,2,4,5,9,2],[11,1,2,4,5,2],[1,2,4,12,5,2],[1,2,4,13,5,1],[6,1,2,7,4,2],[6,1,2,8,4,2],[6,1,2,4,9,2],[11,6,1,2,4,2],[6,1,2,4,12,2],[6,1,2,4,13,1],[1,2,7,8,4,4],[1,2,7,4,9,4],[1,2,7,10,4,1],[11,1,2,7,4,4],[1,2,7,4,12,4],[1,2,7,4,13,2],[1,2,8,4,9,4],[11,1,2,8,4,4],[1,2,8,4,12,4],[1,2,8,14,4,1],[1,2,8,4,13,2],[11,1,2,4,9,4],[1,2,4,12,9,4],[1,2,4,9,15,1],[1,2,4,13,9,2],[11,1,2,4,12,4],[11,16,1,2,4,1],[11,1,2,4,13,2],[1,2,4,12,13,3],[6,1,2,7,5,2],[6,1,2,8,5,2],[6,1,2,5,9,2],[11,6,1,2,5,2],[6,1,2,12,5,2],[6,1,2,13,5,1],[1,2,7,8,5,4],[1,2,7,5,9,4],[1,2,7,10,5,1],[11,1,2,7,5,4],[1,2,7,12,5,4],[1,2,7,13,5,2],[1,2,8,5,9,4],[11,1,2,8,5,4],[1,2,8,12,5,4],[1,2,8,14,5,1],[1,2,8,13,5,2],[11,1,2,5,9,4],[1,2,12,5,9,4],[1,2,5,9,15,1],[1,2,13,5,9,2],[11,1,2,12,5,4],[11,16,1,2,5,1],[11,1,2,13,5,2],[1,2,12,13,5,3],[6,1,2,7,8,4],[6,1,2,7,9,4],[6,1,2,7,10,1],[11,6,1,2,7,4],[6,1,2,7,12,4],[6,1,2,7,13,2],[6,1,2,8,9,4],[11,6,1,2,8,4],[6,1,2,8,12,4],[6,1,2,8,14,1],[6,1,2,8,13,2],[11,6,1,2,9,4],[6,1,2,12,9,4],[6,1,2,9,15,1],[6,1,2,13,9,2],[11,6,1,2,12,4],[11,16,6,1,2,1],[11,6,1,2,13,2],[6,1,2,12,13,3],[1,2,7,8,9,8],[1,2,7,10,8,2],[11,1,2,7,8,8],[1,2,7,8,12,8],[1,2,7,8,14,2],[1,2,7,8,13,4],[1,2,7,10,9,2],[11,1,2,7,9,8],[1,2,7,12,9,8],[1,2,7,9,15,2],[1,2,7,13,9,4],[11,1,2,7,10,2],[1,2,7,10,12,2],[1,2,7,10,13,1],[11,1,2,7,12,8],[11,16,1,2,7,2],[11,1,2,7,13,4],[1,2,7,12,13,6],[11,1,2,8,9,8],[1,2,8,12,9,8],[1,2,8,14,9,2],[1,2,8,9,15,2],[1,2,8,13,9,4],[11,1,2,8,12,8],[11,1,2,8,14,2],[11,16,1,2,8,2],[11,1,2,8,13,4],[1,2,8,12,13,6],[1,2,8,14,12,2],[1,2,8,14,13,1],[11,1,2,12,9,8],[11,1,2,9,15,2],[11,16,1,2,9,2],[11,1,2,13,9,4],[1,2,12,13,9,6],[1,2,12,9,15,2],[1,2,13,9,15,1],[11,1,2,12,13,6],[11,16,1,2,12,2],[11,16,1,2,13,1],[1,2,12,13,17,1],[6,1,3,4,5,1],[1,3,7,4,5,2],[1,3,8,4,5,2],[1,3,4,5,9,2],[11,1,3,4,5,2],[1,3,4,12,5,2],[1,3,4,13,5,1],[6,1,3,7,4,2],[6,1,3,8,4,2],[6,1,3,4,9,2],[11,6,1,3,4,2],[6,1,3,4,12,2],[6,1,3,4,13,1],[1,3,7,8,4,4],[1,3,7,4,9,4],[1,3,7,10,4,1],[11,1,3,7,4,4],[1,3,7,4,12,4],[1,3,7,4,13,2],[1,3,8,4,9,4],[11,1,3,8,4,4],[1,3,8,4,12,4],[1,3,8,14,4,1],[1,3,8,4,13,2],[11,1,3,4,9,4],[1,3,4,12,9,4],[1,3,4,9,15,1],[1,3,4,13,9,2],[11,1,3,4,12,4],[11,16,1,3,4,1],[11,1,3,4,13,2],[1,3,4,12,13,3],[6,1,3,7,5,2],[6,1,3,8,5,2],[6,1,3,5,9,2],[11,6,1,3,5,2],[6,1,3,12,5,2],[6,1,3,13,5,1],[1,3,7,8,5,4],[1,3,7,5,9,4],[1,3,7,10,5,1],[11,1,3,7,5,4],[1,3,7,12,5,4],[1,3,7,13,5,2],[1,3,8,5,9,4],[11,1,3,8,5,4],[1,3,8,12,5,4],[1,3,8,14,5,1],[1,3,8,13,5,2],[11,1,3,5,9,4],[1,3,12,5,9,4],[1,3,5,9,15,1],[1,3,13,5,9,2],[11,1,3,12,5,4],[11,16,1,3,5,1],[11,1,3,13,5,2],[1,3,12,13,5,3],[6,1,3,7,8,4],[6,1,3,7,9,4],[6,1,3,7,10,1],[11,6,1,3,7,4],[6,1,3,7,12,4],[6,1,3,7,13,2],[6,1,3,8,9,4],[11,6,1,3,8,4],[6,1,3,8,12,4],[6,1,3,8,14,1],[6,1,3,8,13,2],[11,6,1,3,9,4],[6,1,3,12,9,4],[6,1,3,9,15,1],[6,1,3,13,9,2],[11,6,1,3,12,4],[11,16,6,1,3,1],[11,6,1,3,13,2],[6,1,3,12,13,3],[1,3,7,8,9,8],[1,3,7,10,8,2],[11,1,3,7,8,8],[1,3,7,8,12,8],[1,3,7,8,14,2],[1,3,7,8,13,4],[1,3,7,10,9,2],[11,1,3,7,9,8],[1,3,7,12,9,8],[1,3,7,9,15,2],[1,3,7,13,9,4],[11,1,3,7,10,2],[1,3,7,10,12,2],[1,3,7,10,13,1],[11,1,3,7,12,8],[11,16,1,3,7,2],[11,1,3,7,13,4],[1,3,7,12,13,6],[11,1,3,8,9,8],[1,3,8,12,9,8],[1,3,8,14,9,2],[1,3,8,9,15,2],[1,3,8,13,9,4],[11,1,3,8,12,8],[11,1,3,8,14,2],[11,16,1,3,8,2],[11,1,3,8,13,4],[1,3,8,12,13,6],[1,3,8,14,12,2],[1,3,8,14,13,1],[11,1,3,12,9,8],[11,1,3,9,15,2],[11,16,1,3,9,2],[11,1,3,13,9,4],[1,3,12,13,9,6],[1,3,12,9,15,2],[1,3,13,9,15,1],[11,1,3,12,13,6],[11,16,1,3,12,2],[11,16,1,3,13,1],[1,3,12,13,17,1],[6,1,7,4,5,2],[6,1,8,4,5,2],[6,1,4,5,9,2],[11,6,1,4,5,2],[6,1,4,12,5,2],[6,1,4,13,5,1],[1,7,8,4,5,4],[1,7,4,5,9,4],[1,7,10,4,5,1],[11,1,7,4,5,4],[1,7,4,12,5,4],[1,7,4,13,5,2],[1,8,4,5,9,4],[11,1,8,4,5,4],[1,8,4,12,5,4],[1,8,14,4,5,1],[1,8,4,13,5,2],[11,1,4,5,9,4],[1,4,12,5,9,4],[1,4,5,9,15,1],[1,4,13,5,9,2],[11,1,4,12,5,4],[11,16,1,4,5,1],[11,1,4,13,5,2],[1,4,12,13,5,3],[6,1,7,8,4,4],[6,1,7,4,9,4],[6,1,7,10,4,1],[11,6,1,7,4,4],[6,1,7,4,12,4],[6,1,7,4,13,2],[6,1,8,4,9,4],[11,6,1,8,4,4],[6,1,8,4,12,4],[6,1,8,14,4,1],[6,1,8,4,13,2],[11,6,1,4,9,4],[6,1,4,12,9,4],[6,1,4,9,15,1],[6,1,4,13,9,2],[11,6,1,4,12,4],[11,16,6,1,4,1],[11,6,1,4,13,2],[6,1,4,12,13,3],[1,7,8,4,9,8],[1,7,10,8,4,2],[11,1,7,8,4,8],[1,7,8,4,12,8],[1,7,8,14,4,2],[1,7,8,4,13,4],[1,7,10,4,9,2],[11,1,7,4,9,8],[1,7,4,12,9,8],[1,7,4,9,15,2],[1,7,4,13,9,4],[11,1,7,10,4,2],[1,7,10,4,12,2],[1,7,10,4,13,1],[11,1,7,4,12,8],[11,16,1,7,4,2],[11,1,7,4,13,4],[1,7,4,12,13,6],[11,1,8,4,9,8],[1,8,4,12,9,8],[1,8,14,4,9,2],[1,8,4,9,15,2],[1,8,4,13,9,4],[11,1,8,4,12,8],[11,1,8,14,4,2],[11,16,1,8,4,2],[11,1,8,4,13,4],[1,8,4,12,13,6],[1,8,14,4,12,2],[1,8,14,4,13,1],[11,1,4,12,9,8],[11,1,4,9,15,2],[11,16,1,4,9,2],[11,1,4,13,9,4],[1,4,12,13,9,6],[1,4,12,9,15,2],[1,4,13,9,15,1],[11,1,4,12,13,6],[11,16,1,4,12,2],[11,16,1,4,13,1],[1,4,12,13,17,1],[6,1,7,8,5,4],[6,1,7,5,9,4],[6,1,7,10,5,1],[11,6,1,7,5,4],[6,1,7,12,5,4],[6,1,7,13,5,2],[6,1,8,5,9,4],[11,6,1,8,5,4],[6,1,8,12,5,4],[6,1,8,14,5,1],[6,1,8,13,5,2],[11,6,1,5,9,4],[6,1,12,5,9,4],[6,1,5,9,15,1],[6,1,13,5,9,2],[11,6,1,12,5,4],[11,16,6,1,5,1],[11,6,1,13,5,2],[6,1,12,13,5,3],[1,7,8,5,9,8],[1,7,10,8,5,2],[11,1,7,8,5,8],[1,7,8,12,5,8],[1,7,8,14,5,2],[1,7,8,13,5,4],[1,7,10,5,9,2],[11,1,7,5,9,8],[1,7,12,5,9,8],[1,7,5,9,15,2],[1,7,13,5,9,4],[11,1,7,10,5,2],[1,7,10,12,5,2],[1,7,10,13,5,1],[11,1,7,12,5,8],[11,16,1,7,5,2],[11,1,7,13,5,4],[1,7,12,13,5,6],[11,1,8,5,9,8],[1,8,12,5,9,8],[1,8,14,5,9,2],[1,8,5,9,15,2],[1,8,13,5,9,4],[11,1,8,12,5,8],[11,1,8,14,5,2],[11,16,1,8,5,2],[11,1,8,13,5,4],[1,8,12,13,5,6],[1,8,14,12,5,2],[1,8,14,13,5,1],[11,1,12,5,9,8],[11,1,5,9,15,2],[11,16,1,5,9,2],[11,1,13,5,9,4],[1,12,13,5,9,6],[1,12,5,9,15,2],[1,13,5,9,15,1],[11,1,12,13,5,6],[11,16,1,12,5,2],[11,16,1,13,5,1],[1,12,13,17,5,1],[6,1,7,8,9,8],[6,1,7,10,8,2],[11,6,1,7,8,8],[6,1,7,8,12,8],[6,1,7,8,14,2],[6,1,7,8,13,4],[6,1,7,10,9,2],[11,6,1,7,9,8],[6,1,7,12,9,8],[6,1,7,9,15,2],[6,1,7,13,9,4],[11,6,1,7,10,2],[6,1,7,10,12,2],[6,1,7,10,13,1],[11,6,1,7,12,8],[11,16,6,1,7,2],[11,6,1,7,13,4],[6,1,7,12,13,6],[11,6,1,8,9,8],[6,1,8,12,9,8],[6,1,8,14,9,2],[6,1,8,9,15,2],[6,1,8,13,9,4],[11,6,1,8,12,8],[11,6,1,8,14,2],[11,16,6,1,8,2],[11,6,1,8,13,4],[6,1,8,12,13,6],[6,1,8,14,12,2],[6,1,8,14,13,1],[11,6,1,12,9,8],[11,6,1,9,15,2],[11,16,6,1,9,2],[11,6,1,13,9,4],[6,1,12,13,9,6],[6,1,12,9,15,2],[6,1,13,9,15,1],[11,6,1,12,13,6],[11,16,6,1,12,2],[11,16,6,1,13,1],[6,1,12,13,17,1],[1,7,10,8,9,4],[11,1,7,8,9,16],[1,7,8,12,9,16],[1,7,8,14,9,4],[1,7,8,9,15,4],[1,7,8,13,9,8],[11,1,7,10,8,4],[1,7,10,8,12,4],[1,7,10,8,14,1],[1,7,10,8,13,2],[11,1,7,8,12,16],[11,1,7,8,14,4],[11,16,1,7,8,4],[11,1,7,8,13,8],[1,7,8,12,13,12],[1,7,8,14,12,4],[1,7,8,14,13,2],[11,1,7,10,9,4],[1,7,10,12,9,4],[1,7,10,9,15,1],[1,7,10,13,9,2],[11,1,7,12,9,16],[11,1,7,9,15,4],[11,16,1,7,9,4],[11,1,7,13,9,8],[1,7,12,13,9,12],[1,7,12,9,15,4],[1,7,13,9,15,2],[11,1,7,10,12,4],[11,16,1,7,10,1],[11,1,7,10,13,2],[1,7,10,12,13,3],[11,1,7,12,13,12],[11,16,1,7,12,4],[11,16,1,7,13,2],[1,7,12,13,17,2],[11,1,8,12,9,16],[11,1,8,14,9,4],[11,1,8,9,15,4],[11,16,1,8,9,4],[11,1,8,13,9,8],[1,8,12,13,9,12],[1,8,14,12,9,4],[1,8,12,9,15,4],[1,8,14,9,15,1],[1,8,14,13,9,2],[1,8,13,9,15,2],[11,1,8,12,13,12],[11,1,8,14,12,4],[11,16,1,8,12,4],[11,16,1,8,14,1],[11,1,8,14,13,2],[11,16,1,8,13,2],[1,8,14,12,13,3],[1,8,12,13,17,2],[11,1,12,13,9,12],[11,1,12,9,15,4],[11,16,1,12,9,4],[11,16,1,9,15,1],[11,1,13,9,15,2],[11,16,1,13,9,2],[1,12,13,9,15,3],[1,12,13,17,9,2],[11,16,1,12,13,3],[11,1,12,13,17,2],[6,2,3,4,5,1],[2,3,7,4,5,2],[2,3,8,4,5,2],[2,3,4,5,9,2],[11,2,3,4,5,2],[2,3,4,12,5,2],[2,3,4,13,5,1],[6,2,3,7,4,2],[6,2,3,8,4,2],[6,2,3,4,9,2],[11,6,2,3,4,2],[6,2,3,4,12,2],[6,2,3,4,13,1],[2,3,7,8,4,4],[2,3,7,4,9,4],[2,3,7,10,4,1],[11,2,3,7,4,4],[2,3,7,4,12,4],[2,3,7,4,13,2],[2,3,8,4,9,4],[11,2,3,8,4,4],[2,3,8,4,12,4],[2,3,8,14,4,1],[2,3,8,4,13,2],[11,2,3,4,9,4],[2,3,4,12,9,4],[2,3,4,9,15,1],[2,3,4,13,9,2],[11,2,3,4,12,4],[11,16,2,3,4,1],[11,2,3,4,13,2],[2,3,4,12,13,3],[6,2,3,7,5,2],[6,2,3,8,5,2],[6,2,3,5,9,2],[11,6,2,3,5,2],[6,2,3,12,5,2],[6,2,3,13,5,1],[2,3,7,8,5,4],[2,3,7,5,9,4],[2,3,7,10,5,1],[11,2,3,7,5,4],[2,3,7,12,5,4],[2,3,7,13,5,2],[2,3,8,5,9,4],[11,2,3,8,5,4],[2,3,8,12,5,4],[2,3,8,14,5,1],[2,3,8,13,5,2],[11,2,3,5,9,4],[2,3,12,5,9,4],[2,3,5,9,15,1],[2,3,13,5,9,2],[11,2,3,12,5,4],[11,16,2,3,5,1],[11,2,3,13,5,2],[2,3,12,13,5,3],[6,2,3,7,8,4],[6,2,3,7,9,4],[6,2,3,7,10,1],[11,6,2,3,7,4],[6,2,3,7,12,4],[6,2,3,7,13,2],[6,2,3,8,9,4],[11,6,2,3,8,4],[6,2,3,8,12,4],[6,2,3,8,14,1],[6,2,3,8,13,2],[11,6,2,3,9,4],[6,2,3,12,9,4],[6,2,3,9,15,1],[6,2,3,13,9,2],[11,6,2,3,12,4],[11,16,6,2,3,1],[11,6,2,3,13,2],[6,2,3,12,13,3],[2,3,7,8,9,8],[2,3,7,10,8,2],[11,2,3,7,8,8],[2,3,7,8,12,8],[2,3,7,8,14,2],[2,3,7,8,13,4],[2,3,7,10,9,2],[11,2,3,7,9,8],[2,3,7,12,9,8],[2,3,7,9,15,2],[2,3,7,13,9,4],[11,2,3,7,10,2],[2,3,7,10,12,2],[2,3,7,10,13,1],[11,2,3,7,12,8],[11,16,2,3,7,2],[11,2,3,7,13,4],[2,3,7,12,13,6],[11,2,3,8,9,8],[2,3,8,12,9,8],[2,3,8,14,9,2],[2,3,8,9,15,2],[2,3,8,13,9,4],[11,2,3,8,12,8],[11,2,3,8,14,2],[11,16,2,3,8,2],[11,2,3,8,13,4],[2,3,8,12,13,6],[2,3,8,14,12,2],[2,3,8,14,13,1],[11,2,3,12,9,8],[11,2,3,9,15,2],[11,16,2,3,9,2],[11,2,3,13,9,4],[2,3,12,13,9,6],[2,3,12,9,15,2],[2,3,13,9,15,1],[11,2,3,12,13,6],[11,16,2,3,12,2],[11,16,2,3,13,1],[2,3,12,13,17,1],[6,2,7,4,5,2],[6,2,8,4,5,2],[6,2,4,5,9,2],[11,6,2,4,5,2],[6,2,4,12,5,2],[6,2,4,13,5,1],[2,7,8,4,5,4],[2,7,4,5,9,4],[2,7,10,4,5,1],[11,2,7,4,5,4],[2,7,4,12,5,4],[2,7,4,13,5,2],[2,8,4,5,9,4],[11,2,8,4,5,4],[2,8,4,12,5,4],[2,8,14,4,5,1],[2,8,4,13,5,2],[11,2,4,5,9,4],[2,4,12,5,9,4],[2,4,5,9,15,1],[2,4,13,5,9,2],[11,2,4,12,5,4],[11,16,2,4,5,1],[11,2,4,13,5,2],[2,4,12,13,5,3],[6,2,7,8,4,4],[6,2,7,4,9,4],[6,2,7,10,4,1],[11,6,2,7,4,4],[6,2,7,4,12,4],[6,2,7,4,13,2],[6,2,8,4,9,4],[11,6,2,8,4,4],[6,2,8,4,12,4],[6,2,8,14,4,1],[6,2,8,4,13,2],[11,6,2,4,9,4],[6,2,4,12,9,4],[6,2,4,9,15,1],[6,2,4,13,9,2],[11,6,2,4,12,4],[11,16,6,2,4,1],[11,6,2,4,13,2],[6,2,4,12,13,3],[2,7,8,4,9,8],[2,7,10,8,4,2],[11,2,7,8,4,8],[2,7,8,4,12,8],[2,7,8,14,4,2],[2,7,8,4,13,4],[2,7,10,4,9,2],[11,2,7,4,9,8],[2,7,4,12,9,8],[2,7,4,9,15,2],[2,7,4,13,9,4],[11,2,7,10,4,2],[2,7,10,4,12,2],[2,7,10,4,13,1],[11,2,7,4,12,8],[11,16,2,7,4,2],[11,2,7,4,13,4],[2,7,4,12,13,6],[11,2,8,4,9,8],[2,8,4,12,9,8],[2,8,14,4,9,2],[2,8,4,9,15,2],[2,8,4,13,9,4],[11,2,8,4,12,8],[11,2,8,14,4,2],[11,16,2,8,4,2],[11,2,8,4,13,4],[2,8,4,12,13,6],[2,8,14,4,12,2],[2,8,14,4,13,1],[11,2,4,12,9,8],[11,2,4,9,15,2],[11,16,2,4,9,2],[11,2,4,13,9,4],[2,4,12,13,9,6],[2,4,12,9,15,2],[2,4,13,9,15,1],[11,2,4,12,13,6],[11,16,2,4,12,2],[11,16,2,4,13,1],[2,4,12,13,17,1],[6,2,7,8,5,4],[6,2,7,5,9,4],[6,2,7,10,5,1],[11,6,2,7,5,4],[6,2,7,12,5,4],[6,2,7,13,5,2],[6,2,8,5,9,4],[11,6,2,8,5,4],[6,2,8,12,5,4],[6,2,8,14,5,1],[6,2,8,13,5,2],[11,6,2,5,9,4],[6,2,12,5,9,4],[6,2,5,9,15,1],[6,2,13,5,9,2],[11,6,2,12,5,4],[11,16,6,2,5,1],[11,6,2,13,5,2],[6,2,12,13,5,3],[2,7,8,5,9,8],[2,7,10,8,5,2],[11,2,7,8,5,8],[2,7,8,12,5,8],[2,7,8,14,5,2],[2,7,8,13,5,4],[2,7,10,5,9,2],[11,2,7,5,9,8],[2,7,12,5,9,8],[2,7,5,9,15,2],[2,7,13,5,9,4],[11,2,7,10,5,2],[2,7,10,12,5,2],[2,7,10,13,5,1],[11,2,7,12,5,8],[11,16,2,7,5,2],[11,2,7,13,5,4],[2,7,12,13,5,6],[11,2,8,5,9,8],[2,8,12,5,9,8],[2,8,14,5,9,2],[2,8,5,9,15,2],[2,8,13,5,9,4],[11,2,8,12,5,8],[11,2,8,14,5,2],[11,16,2,8,5,2],[11,2,8,13,5,4],[2,8,12,13,5,6],[2,8,14,12,5,2],[2,8,14,13,5,1],[11,2,12,5,9,8],[11,2,5,9,15,2],[11,16,2,5,9,2],[11,2,13,5,9,4],[2,12,13,5,9,6],[2,12,5,9,15,2],[2,13,5,9,15,1],[11,2,12,13,5,6],[11,16,2,12,5,2],[11,16,2,13,5,1],[2,12,13,17,5,1],[6,2,7,8,9,8],[6,2,7,10,8,2],[11,6,2,7,8,8],[6,2,7,8,12,8],[6,2,7,8,14,2],[6,2,7,8,13,4],[6,2,7,10,9,2],[11,6,2,7,9,8],[6,2,7,12,9,8],[6,2,7,9,15,2],[6,2,7,13,9,4],[11,6,2,7,10,2],[6,2,7,10,12,2],[6,2,7,10,13,1],[11,6,2,7,12,8],[11,16,6,2,7,2],[11,6,2,7,13,4],[6,2,7,12,13,6],[11,6,2,8,9,8],[6,2,8,12,9,8],[6,2,8,14,9,2],[6,2,8,9,15,2],[6,2,8,13,9,4],[11,6,2,8,12,8],[11,6,2,8,14,2],[11,16,6,2,8,2],[11,6,2,8,13,4],[6,2,8,12,13,6],[6,2,8,14,12,2],[6,2,8,14,13,1],[11,6,2,12,9,8],[11,6,2,9,15,2],[11,16,6,2,9,2],[11,6,2,13,9,4],[6,2,12,13,9,6],[6,2,12,9,15,2],[6,2,13,9,15,1],[11,6,2,12,13,6],[11,16,6,2,12,2],[11,16,6,2,13,1],[6,2,12,13,17,1],[2,7,10,8,9,4],[11,2,7,8,9,16],[2,7,8,12,9,16],[2,7,8,14,9,4],[2,7,8,9,15,4],[2,7,8,13,9,8],[11,2,7,10,8,4],[2,7,10,8,12,4],[2,7,10,8,14,1],[2,7,10,8,13,2],[11,2,7,8,12,16],[11,2,7,8,14,4],[11,16,2,7,8,4],[11,2,7,8,13,8],[2,7,8,12,13,12],[2,7,8,14,12,4],[2,7,8,14,13,2],[11,2,7,10,9,4],[2,7,10,12,9,4],[2,7,10,9,15,1],[2,7,10,13,9,2],[11,2,7,12,9,16],[11,2,7,9,15,4],[11,16,2,7,9,4],[11,2,7,13,9,8],[2,7,12,13,9,12],[2,7,12,9,15,4],[2,7,13,9,15,2],[11,2,7,10,12,4],[11,16,2,7,10,1],[11,2,7,10,13,2],[2,7,10,12,13,3],[11,2,7,12,13,12],[11,16,2,7,12,4],[11,16,2,7,13,2],[2,7,12,13,17,2],[11,2,8,12,9,16],[11,2,8,14,9,4],[11,2,8,9,15,4],[11,16,2,8,9,4],[11,2,8,13,9,8],[2,8,12,13,9,12],[2,8,14,12,9,4],[2,8,12,9,15,4],[2,8,14,9,15,1],[2,8,14,13,9,2],[2,8,13,9,15,2],[11,2,8,12,13,12],[11,2,8,14,12,4],[11,16,2,8,12,4],[11,16,2,8,14,1],[11,2,8,14,13,2],[11,16,2,8,13,2],[2,8,14,12,13,3],[2,8,12,13,17,2],[11,2,12,13,9,12],[11,2,12,9,15,4],[11,16,2,12,9,4],[11,16,2,9,15,1],[11,2,13,9,15,2],[11,16,2,13,9,2],[2,12,13,9,15,3],[2,12,13,17,9,2],[11,16,2,12,13,3],[11,2,12,13,17,2],[6,3,7,4,5,2],[6,3,8,4,5,2],[6,3,4,5,9,2],[11,6,3,4,5,2],[6,3,4,12,5,2],[6,3,4,13,5,1],[3,7,8,4,5,4],[3,7,4,5,9,4],[3,7,10,4,5,1],[11,3,7,4,5,4],[3,7,4,12,5,4],[3,7,4,13,5,2],[3,8,4,5,9,4],[11,3,8,4,5,4],[3,8,4,12,5,4],[3,8,14,4,5,1],[3,8,4,13,5,2],[11,3,4,5,9,4],[3,4,12,5,9,4],[3,4,5,9,15,1],[3,4,13,5,9,2],[11,3,4,12,5,4],[11,16,3,4,5,1],[11,3,4,13,5,2],[3,4,12,13,5,3],[6,3,7,8,4,4],[6,3,7,4,9,4],[6,3,7,10,4,1],[11,6,3,7,4,4],[6,3,7,4,12,4],[6,3,7,4,13,2],[6,3,8,4,9,4],[11,6,3,8,4,4],[6,3,8,4,12,4],[6,3,8,14,4,1],[6,3,8,4,13,2],[11,6,3,4,9,4],[6,3,4,12,9,4],[6,3,4,9,15,1],[6,3,4,13,9,2],[11,6,3,4,12,4],[11,16,6,3,4,1],[11,6,3,4,13,2],[6,3,4,12,13,3],[3,7,8,4,9,8],[3,7,10,8,4,2],[11,3,7,8,4,8],[3,7,8,4,12,8],[3,7,8,14,4,2],[3,7,8,4,13,4],[3,7,10,4,9,2],[11,3,7,4,9,8],[3,7,4,12,9,8],[3,7,4,9,15,2],[3,7,4,13,9,4],[11,3,7,10,4,2],[3,7,10,4,12,2],[3,7,10,4,13,1],[11,3,7,4,12,8],[11,16,3,7,4,2],[11,3,7,4,13,4],[3,7,4,12,13,6],[11,3,8,4,9,8],[3,8,4,12,9,8],[3,8,14,4,9,2],[3,8,4,9,15,2],[3,8,4,13,9,4],[11,3,8,4,12,8],[11,3,8,14,4,2],[11,16,3,8,4,2],[11,3,8,4,13,4],[3,8,4,12,13,6],[3,8,14,4,12,2],[3,8,14,4,13,1],[11,3,4,12,9,8],[11,3,4,9,15,2],[11,16,3,4,9,2],[11,3,4,13,9,4],[3,4,12,13,9,6],[3,4,12,9,15,2],[3,4,13,9,15,1],[11,3,4,12,13,6],[11,16,3,4,12,2],[11,16,3,4,13,1],[3,4,12,13,17,1],[6,3,7,8,5,4],[6,3,7,5,9,4],[6,3,7,10,5,1],[11,6,3,7,5,4],[6,3,7,12,5,4],[6,3,7,13,5,2],[6,3,8,5,9,4],[11,6,3,8,5,4],[6,3,8,12,5,4],[6,3,8,14,5,1],[6,3,8,13,5,2],[11,6,3,5,9,4],[6,3,12,5,9,4],[6,3,5,9,15,1],[6,3,13,5,9,2],[11,6,3,12,5,4],[11,16,6,3,5,1],[11,6,3,13,5,2],[6,3,12,13,5,3],[3,7,8,5,9,8],[3,7,10,8,5,2],[11,3,7,8,5,8],[3,7,8,12,5,8],[3,7,8,14,5,2],[3,7,8,13,5,4],[3,7,10,5,9,2],[11,3,7,5,9,8],[3,7,12,5,9,8],[3,7,5,9,15,2],[3,7,13,5,9,4],[11,3,7,10,5,2],[3,7,10,12,5,2],[3,7,10,13,5,1],[11,3,7,12,5,8],[11,16,3,7,5,2],[11,3,7,13,5,4],[3,7,12,13,5,6],[11,3,8,5,9,8],[3,8,12,5,9,8],[3,8,14,5,9,2],[3,8,5,9,15,2],[3,8,13,5,9,4],[11,3,8,12,5,8],[11,3,8,14,5,2],[11,16,3,8,5,2],[11,3,8,13,5,4],[3,8,12,13,5,6],[3,8,14,12,5,2],[3,8,14,13,5,1],[11,3,12,5,9,8],[11,3,5,9,15,2],[11,16,3,5,9,2],[11,3,13,5,9,4],[3,12,13,5,9,6],[3,12,5,9,15,2],[3,13,5,9,15,1],[11,3,12,13,5,6],[11,16,3,12,5,2],[11,16,3,13,5,1],[3,12,13,17,5,1],[6,3,7,8,9,8],[6,3,7,10,8,2],[11,6,3,7,8,8],[6,3,7,8,12,8],[6,3,7,8,14,2],[6,3,7,8,13,4],[6,3,7,10,9,2],[11,6,3,7,9,8],[6,3,7,12,9,8],[6,3,7,9,15,2],[6,3,7,13,9,4],[11,6,3,7,10,2],[6,3,7,10,12,2],[6,3,7,10,13,1],[11,6,3,7,12,8],[11,16,6,3,7,2],[11,6,3,7,13,4],[6,3,7,12,13,6],[11,6,3,8,9,8],[6,3,8,12,9,8],[6,3,8,14,9,2],[6,3,8,9,15,2],[6,3,8,13,9,4],[11,6,3,8,12,8],[11,6,3,8,14,2],[11,16,6,3,8,2],[11,6,3,8,13,4],[6,3,8,12,13,6],[6,3,8,14,12,2],[6,3,8,14,13,1],[11,6,3,12,9,8],[11,6,3,9,15,2],[11,16,6,3,9,2],[11,6,3,13,9,4],[6,3,12,13,9,6],[6,3,12,9,15,2],[6,3,13,9,15,1],[11,6,3,12,13,6],[11,16,6,3,12,2],[11,16,6,3,13,1],[6,3,12,13,17,1],[3,7,10,8,9,4],[11,3,7,8,9,16],[3,7,8,12,9,16],[3,7,8,14,9,4],[3,7,8,9,15,4],[3,7,8,13,9,8],[11,3,7,10,8,4],[3,7,10,8,12,4],[3,7,10,8,14,1],[3,7,10,8,13,2],[11,3,7,8,12,16],[11,3,7,8,14,4],[11,16,3,7,8,4],[11,3,7,8,13,8],[3,7,8,12,13,12],[3,7,8,14,12,4],[3,7,8,14,13,2],[11,3,7,10,9,4],[3,7,10,12,9,4],[3,7,10,9,15,1],[3,7,10,13,9,2],[11,3,7,12,9,16],[11,3,7,9,15,4],[11,16,3,7,9,4],[11,3,7,13,9,8],[3,7,12,13,9,12],[3,7,12,9,15,4],[3,7,13,9,15,2],[11,3,7,10,12,4],[11,16,3,7,10,1],[11,3,7,10,13,2],[3,7,10,12,13,3],[11,3,7,12,13,12],[11,16,3,7,12,4],[11,16,3,7,13,2],[3,7,12,13,17,2],[11,3,8,12,9,16],[11,3,8,14,9,4],[11,3,8,9,15,4],[11,16,3,8,9,4],[11,3,8,13,9,8],[3,8,12,13,9,12],[3,8,14,12,9,4],[3,8,12,9,15,4],[3,8,14,9,15,1],[3,8,14,13,9,2],[3,8,13,9,15,2],[11,3,8,12,13,12],[11,3,8,14,12,4],[11,16,3,8,12,4],[11,16,3,8,14,1],[11,3,8,14,13,2],[11,16,3,8,13,2],[3,8,14,12,13,3],[3,8,12,13,17,2],[11,3,12,13,9,12],[11,3,12,9,15,4],[11,16,3,12,9,4],[11,16,3,9,15,1],[11,3,13,9,15,2],[11,16,3,13,9,2],[3,12,13,9,15,3],[3,12,13,17,9,2],[11,16,3,12,13,3],[11,3,12,13,17,2],[6,7,8,4,5,4],[6,7,4,5,9,4],[6,7,10,4,5,1],[11,6,7,4,5,4],[6,7,4,12,5,4],[6,7,4,13,5,2],[6,8,4,5,9,4],[11,6,8,4,5,4],[6,8,4,12,5,4],[6,8,14,4,5,1],[6,8,4,13,5,2],[11,6,4,5,9,4],[6,4,12,5,9,4],[6,4,5,9,15,1],[6,4,13,5,9,2],[11,6,4,12,5,4],[11,16,6,4,5,1],[11,6,4,13,5,2],[6,4,12,13,5,3],[7,8,4,5,9,8],[7,10,8,4,5,2],[11,7,8,4,5,8],[7,8,4,12,5,8],[7,8,14,4,5,2],[7,8,4,13,5,4],[7,10,4,5,9,2],[11,7,4,5,9,8],[7,4,12,5,9,8],[7,4,5,9,15,2],[7,4,13,5,9,4],[11,7,10,4,5,2],[7,10,4,12,5,2],[7,10,4,13,5,1],[11,7,4,12,5,8],[11,16,7,4,5,2],[11,7,4,13,5,4],[7,4,12,13,5,6],[11,8,4,5,9,8],[8,4,12,5,9,8],[8,14,4,5,9,2],[8,4,5,9,15,2],[8,4,13,5,9,4],[11,8,4,12,5,8],[11,8,14,4,5,2],[11,16,8,4,5,2],[11,8,4,13,5,4],[8,4,12,13,5,6],[8,14,4,12,5,2],[8,14,4,13,5,1],[11,4,12,5,9,8],[11,4,5,9,15,2],[11,16,4,5,9,2],[11,4,13,5,9,4],[4,12,13,5,9,6],[4,12,5,9,15,2],[4,13,5,9,15,1],[11,4,12,13,5,6],[11,16,4,12,5,2],[11,16,4,13,5,1],[4,12,13,17,5,1],[6,7,8,4,9,8],[6,7,10,8,4,2],[11,6,7,8,4,8],[6,7,8,4,12,8],[6,7,8,14,4,2],[6,7,8,4,13,4],[6,7,10,4,9,2],[11,6,7,4,9,8],[6,7,4,12,9,8],[6,7,4,9,15,2],[6,7,4,13,9,4],[11,6,7,10,4,2],[6,7,10,4,12,2],[6,7,10,4,13,1],[11,6,7,4,12,8],[11,16,6,7,4,2],[11,6,7,4,13,4],[6,7,4,12,13,6],[11,6,8,4,9,8],[6,8,4,12,9,8],[6,8,14,4,9,2],[6,8,4,9,15,2],[6,8,4,13,9,4],[11,6,8,4,12,8],[11,6,8,14,4,2],[11,16,6,8,4,2],[11,6,8,4,13,4],[6,8,4,12,13,6],[6,8,14,4,12,2],[6,8,14,4,13,1],[11,6,4,12,9,8],[11,6,4,9,15,2],[11,16,6,4,9,2],[11,6,4,13,9,4],[6,4,12,13,9,6],[6,4,12,9,15,2],[6,4,13,9,15,1],[11,6,4,12,13,6],[11,16,6,4,12,2],[11,16,6,4,13,1],[6,4,12,13,17,1],[7,10,8,4,9,4],[11,7,8,4,9,16],[7,8,4,12,9,16],[7,8,14,4,9,4],[7,8,4,9,15,4],[7,8,4,13,9,8],[11,7,10,8,4,4],[7,10,8,4,12,4],[7,10,8,14,4,1],[7,10,8,4,13,2],[11,7,8,4,12,16],[11,7,8,14,4,4],[11,16,7,8,4,4],[11,7,8,4,13,8],[7,8,4,12,13,12],[7,8,14,4,12,4],[7,8,14,4,13,2],[11,7,10,4,9,4],[7,10,4,12,9,4],[7,10,4,9,15,1],[7,10,4,13,9,2],[11,7,4,12,9,16],[11,7,4,9,15,4],[11,16,7,4,9,4],[11,7,4,13,9,8],[7,4,12,13,9,12],[7,4,12,9,15,4],[7,4,13,9,15,2],[11,7,10,4,12,4],[11,16,7,10,4,1],[11,7,10,4,13,2],[7,10,4,12,13,3],[11,7,4,12,13,12],[11,16,7,4,12,4],[11,16,7,4,13,2],[7,4,12,13,17,2],[11,8,4,12,9,16],[11,8,14,4,9,4],[11,8,4,9,15,4],[11,16,8,4,9,4],[11,8,4,13,9,8],[8,4,12,13,9,12],[8,14,4,12,9,4],[8,4,12,9,15,4],[8,14,4,9,15,1],[8,14,4,13,9,2],[8,4,13,9,15,2],[11,8,4,12,13,12],[11,8,14,4,12,4],[11,16,8,4,12,4],[11,16,8,14,4,1],[11,8,14,4,13,2],[11,16,8,4,13,2],[8,14,4,12,13,3],[8,4,12,13,17,2],[11,4,12,13,9,12],[11,4,12,9,15,4],[11,16,4,12,9,4],[11,16,4,9,15,1],[11,4,13,9,15,2],[11,16,4,13,9,2],[4,12,13,9,15,3],[4,12,13,17,9,2],[11,16,4,12,13,3],[11,4,12,13,17,2],[6,7,8,5,9,8],[6,7,10,8,5,2],[11,6,7,8,5,8],[6,7,8,12,5,8],[6,7,8,14,5,2],[6,7,8,13,5,4],[6,7,10,5,9,2],[11,6,7,5,9,8],[6,7,12,5,9,8],[6,7,5,9,15,2],[6,7,13,5,9,4],[11,6,7,10,5,2],[6,7,10,12,5,2],[6,7,10,13,5,1],[11,6,7,12,5,8],[11,16,6,7,5,2],[11,6,7,13,5,4],[6,7,12,13,5,6],[11,6,8,5,9,8],[6,8,12,5,9,8],[6,8,14,5,9,2],[6,8,5,9,15,2],[6,8,13,5,9,4],[11,6,8,12,5,8],[11,6,8,14,5,2],[11,16,6,8,5,2],[11,6,8,13,5,4],[6,8,12,13,5,6],[6,8,14,12,5,2],[6,8,14,13,5,1],[11,6,12,5,9,8],[11,6,5,9,15,2],[11,16,6,5,9,2],[11,6,13,5,9,4],[6,12,13,5,9,6],[6,12,5,9,15,2],[6,13,5,9,15,1],[11,6,12,13,5,6],[11,16,6,12,5,2],[11,16,6,13,5,1],[6,12,13,17,5,1],[7,10,8,5,9,4],[11,7,8,5,9,16],[7,8,12,5,9,16],[7,8,14,5,9,4],[7,8,5,9,15,4],[7,8,13,5,9,8],[11,7,10,8,5,4],[7,10,8,12,5,4],[7,10,8,14,5,1],[7,10,8,13,5,2],[11,7,8,12,5,16],[11,7,8,14,5,4],[11,16,7,8,5,4],[11,7,8,13,5,8],[7,8,12,13,5,12],[7,8,14,12,5,4],[7,8,14,13,5,2],[11,7,10,5,9,4],[7,10,12,5,9,4],[7,10,5,9,15,1],[7,10,13,5,9,2],[11,7,12,5,9,16],[11,7,5,9,15,4],[11,16,7,5,9,4],[11,7,13,5,9,8],[7,12,13,5,9,12],[7,12,5,9,15,4],[7,13,5,9,15,2],[11,7,10,12,5,4],[11,16,7,10,5,1],[11,7,10,13,5,2],[7,10,12,13,5,3],[11,7,12,13,5,12],[11,16,7,12,5,4],[11,16,7,13,5,2],[7,12,13,17,5,2],[11,8,12,5,9,16],[11,8,14,5,9,4],[11,8,5,9,15,4],[11,16,8,5,9,4],[11,8,13,5,9,8],[8,12,13,5,9,12],[8,14,12,5,9,4],[8,12,5,9,15,4],[8,14,5,9,15,1],[8,14,13,5,9,2],[8,13,5,9,15,2],[11,8,12,13,5,12],[11,8,14,12,5,4],[11,16,8,12,5,4],[11,16,8,14,5,1],[11,8,14,13,5,2],[11,16,8,13,5,2],[8,14,12,13,5,3],[8,12,13,17,5,2],[11,12,13,5,9,12],[11,12,5,9,15,4],[11,16,12,5,9,4],[11,16,5,9,15,1],[11,13,5,9,15,2],[11,16,13,5,9,2],[12,13,5,9,15,3],[12,13,17,5,9,2],[11,16,12,13,5,3],[11,12,13,17,5,2],[6,7,10,8,9,4],[11,6,7,8,9,16],[6,7,8,12,9,16],[6,7,8,14,9,4],[6,7,8,9,15,4],[6,7,8,13,9,8],[11,6,7,10,8,4],[6,7,10,8,12,4],[6,7,10,8,14,1],[6,7,10,8,13,2],[11,6,7,8,12,16],[11,6,7,8,14,4],[11,16,6,7,8,4],[11,6,7,8,13,8],[6,7,8,12,13,12],[6,7,8,14,12,4],[6,7,8,14,13,2],[11,6,7,10,9,4],[6,7,10,12,9,4],[6,7,10,9,15,1],[6,7,10,13,9,2],[11,6,7,12,9,16],[11,6,7,9,15,4],[11,16,6,7,9,4],[11,6,7,13,9,8],[6,7,12,13,9,12],[6,7,12,9,15,4],[6,7,13,9,15,2],[11,6,7,10,12,4],[11,16,6,7,10,1],[11,6,7,10,13,2],[6,7,10,12,13,3],[11,6,7,12,13,12],[11,16,6,7,12,4],[11,16,6,7,13,2],[6,7,12,13,17,2],[11,6,8,12,9,16],[11,6,8,14,9,4],[11,6,8,9,15,4],[11,16,6,8,9,4],[11,6,8,13,9,8],[6,8,12,13,9,12],[6,8,14,12,9,4],[6,8,12,9,15,4],[6,8,14,9,15,1],[6,8,14,13,9,2],[6,8,13,9,15,2],[11,6,8,12,13,12],[11,6,8,14,12,4],[11,16,6,8,12,4],[11,16,6,8,14,1],[11,6,8,14,13,2],[11,16,6,8,13,2],[6,8,14,12,13,3],[6,8,12,13,17,2],[11,6,12,13,9,12],[11,6,12,9,15,4],[11,16,6,12,9,4],[11,16,6,9,15,1],[11,6,13,9,15,2],[11,16,6,13,9,2],[6,12,13,9,15,3],[6,12,13,17,9,2],[11,16,6,12,13,3],[11,6,12,13,17,2],[11,7,10,8,9,8],[7,10,8,12,9,8],[7,10,8,14,9,2],[7,10,8,9,15,2],[7,10,8,13,9,4],[11,7,8,12,9,32],[11,7,8,14,9,8],[11,7,8,9,15,8],[11,16,7,8,9,8],[11,7,8,13,9,16],[7,8,12,13,9,24],[7,8,14,12,9,8],[7,8,12,9,15,8],[7,8,14,9,15,2],[7,8,14,13,9,4],[7,8,13,9,15,4],[11,7,10,8,12,8],[11,7,10,8,14,2],[11,16,7,10,8,2],[11,7,10,8,13,4],[7,10,8,12,13,6],[7,10,8,14,12,2],[7,10,8,14,13,1],[11,7,8,12,13,24],[11,7,8,14,12,8],[11,16,7,8,12,8],[11,16,7,8,14,2],[11,7,8,14,13,4],[11,16,7,8,13,4],[7,8,14,12,13,6],[7,8,12,13,17,4],[11,7,10,12,9,8],[11,7,10,9,15,2],[11,16,7,10,9,2],[11,7,10,13,9,4],[7,10,12,13,9,6],[7,10,12,9,15,2],[7,10,13,9,15,1],[11,7,12,13,9,24],[11,7,12,9,15,8],[11,16,7,12,9,8],[11,16,7,9,15,2],[11,7,13,9,15,4],[11,16,7,13,9,4],[7,12,13,9,15,6],[7,12,13,17,9,4],[11,7,10,12,13,6],[11,16,7,10,12,2],[11,16,7,10,13,1],[7,10,12,13,17,1],[11,16,7,12,13,6],[11,7,12,13,17,4],[11,8,12,13,9,24],[11,8,14,12,9,8],[11,8,12,9,15,8],[11,16,8,12,9,8],[11,8,14,9,15,2],[11,16,8,14,9,2],[11,8,14,13,9,4],[11,16,8,9,15,2],[11,8,13,9,15,4],[11,16,8,13,9,4],[8,14,12,13,9,6],[8,12,13,9,15,6],[8,12,13,17,9,4],[8,14,12,9,15,2],[8,14,13,9,15,1],[11,8,14,12,13,6],[11,16,8,12,13,6],[11,8,12,13,17,4],[11,16,8,14,12,2],[11,16,8,14,13,1],[8,14,12,13,17,1],[11,12,13,9,15,6],[11,16,12,13,9,6],[11,12,13,17,9,4],[11,16,12,9,15,2],[11,16,13,9,15,1],[12,13,17,9,15,1],[11,16,12,13,17,1]]};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=1e-7,z5=1e-4;class Ud{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Kl{refCount(e){return jt("refCount")}incRef(e){return jt("incRef")}timerAvailable(){return!0}time(e){return jt("time")}read(e){return jt("read")}readSync(e){return jt("readSync")}readToGPU(e,t){return jt("readToGPU")}numDataIds(){return jt("numDataIds")}disposeData(e,t){return jt("disposeData")}write(e,t,s){return jt("write")}move(e,t,s,o,r){return jt("move")}createTensorFromGPUData(e,t,s){return jt("createTensorFromGPUData")}memory(){return jt("memory")}floatPrecision(){return jt("floatPrecision")}epsilon(){return this.floatPrecision()===32?P5:z5}dispose(){return jt("dispose")}}function jt(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B5(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Bs(n,e,t)}function Yn(n,e,t){return Math.max(n,Math.min(e,t))}function jl(n){return n%2===0?n:n+1}function Bs(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function V5(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function I(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Xl(n,e,t=""){I(Re(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Gd(n){I(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function U(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Re(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Vs(n){return n%1===0}function Yl(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Ws(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Hd(n,e=o=>0,t,s){return new Promise((o,r)=>{let i=0;const a=()=>{if(n()){o();return}i++;const l=e(i);if(t!=null&&i>=t){r();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function qd(n,e){let t=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)t*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const o=n.slice();return o[s]=e/t,o}function ke(n,e){const t=e.length;return n=n==null?e.map((s,o)=>o):[].concat(n),I(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),I(n.every(s=>Vs(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function bn(n,e){const t=[],s=[],o=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||o?null:ke(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(r!=null){if(r[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(r[i]==null||r[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),r[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function Rt(n,e){return nt(n,e)}function nt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function W5(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function U5(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Kd(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function $i(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function G5(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function No(n){return typeof n=="string"||n instanceof String}function H5(n){return typeof n=="boolean"}function Zl(n){return typeof n=="number"}function Us(n){return Array.isArray(n)?Us(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Zl(n)?"float32":No(n)?"string":H5(n)?"bool":"float32"}function Jl(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ql(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function le(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function jd(n,e,t,s=!1){const o=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let i=0;i<r;i++)o[i]=t[n+i]}else{const r=e[0],i=e.slice(1),a=i.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<r;l++)o[l]=jd(n+l*a,i,t,s)}return o}function I1(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((o,r)=>o*r)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return jd(0,n,e,t)}function q5(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function ec(n,e){const t=Et(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Et(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Xd(n,e){const t=n.reduce((s,o)=>s*o,1);if(e==null||e==="float32")return I1(n,new Float32Array(t));if(e==="int32")return I1(n,new Int32Array(t));if(e==="bool")return I1(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function sn(n){n.forEach(e=>{I(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function z1(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let o=0;o<n.length-1;++o)s+=t[o]*n[o];return s}function Gs(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let o=0;o<s.length-1;++o)s[o]=Math.floor(n/t[o]),n-=s[o]*t[o];return s[s.length-1]=n,s}function tc(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yd="tfjsflags";class K5{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=j5,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const o=this.urlFlags[e];P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(tc(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Yd in e&&e[Yd].split(",").forEach(s=>{const[o,r]=s.split(":");this.urlFlags[o]=Y5(o,r)})}}function j5(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(X5(e,s[0],s[1]),s.join("="))),e}function X5(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Y5(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function P(){return Zd}let Zd=null;function Z5(n){Zd=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nc;function Jd(){if(nc==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");nc=n}return nc}function J5(){const n=Jd();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function sc(n,e){const t=J5();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const vi="Abs",To="Acos",Ro="Acosh",Hs="Add",oc="AddN",rc="All",ic="Any",Si="ArgMax",Ni="ArgMin",Eo="Asin",Do="Asinh",Ao="Atan",Lo="Atanh",Fo="Atan2",Ti="AvgPool",ac="AvgPoolGrad",Ri="AvgPool3D",lc="AvgPool3DGrad",Ei="BatchMatMul",Di="BatchToSpaceND",cc="Bincount",uc="BitwiseAnd",Q5="BroadcastTo",Qd="BroadcastArgs",Oo="Cast",_o="Ceil",Mo="ClipByValue",hc="Complex",Ai="ComplexAbs",Li="Concat",Fi="Conv2D",dc="Conv2DBackpropFilter",Oi="Conv2DBackpropInput",_i="Conv3D",pc="Conv3DBackpropFilterV2",fc="Conv3DBackpropInputV2",Po="Cos",zo="Cosh",mc="Cumprod",Mi="Cumsum",gc="CropAndResize",xc="DenseBincount",bc="DepthToSpace",Pi="DepthwiseConv2dNative",yc="DepthwiseConv2dNativeBackpropFilter",wc="DepthwiseConv2dNativeBackpropInput",ep="Diag",zi="Dilation2D",kc="Dilation2DBackpropInput",Cc="Dilation2DBackpropFilter",e6="Draw",Bo="RealDiv",Ic="Einsum",Vo="Elu",$c="EluGrad",Wo="Erf",Bi="Equal",Uo="Exp",Vi="ExpandDims",Go="Expm1",vc="FFT",Sc="Fill",Nc="FlipLeftRight",Ho="Floor",qo="FloorDiv",Wi="FusedBatchNorm",Ui="GatherV2",tp="GatherNd",Gi="Greater",Ko="GreaterEqual",jo="Identity",Tc="IFFT",Rc="Imag",Xo="IsFinite",Yo="IsInf",Zo="IsNan",Hi="LeakyRelu",qi="Less",Ki="LessEqual",np="LinSpace",Jo="Log",Qo="Log1p",ji="LogicalAnd",Xi="LogicalNot",Yi="LogicalOr",t6="LogSoftmax",Zi="LRN",Ec="LRNGrad",Ji="Max",er="Maximum",Qi="MaxPool",Dc="MaxPoolGrad",ea="MaxPool3D",Ac="MaxPool3DGrad",sp="MaxPoolWithArgmax",ta="Mean",na="Min",tr="Minimum",sa="MirrorPad",nr="Mod",op="Multinomial",sr="Multiply",oa="Neg",ra="NotEqual",Lc="NonMaxSuppressionV3",Fc="NonMaxSuppressionV4",Oc="NonMaxSuppressionV5",ia="OnesLike",aa="OneHot",la="Pack",ca="PadV2",or="Pow",ua="Prelu",ha="Prod",rp="RaggedGather",ip="RaggedRange",ap="RaggedTensorToTensor",_c="Range",Mc="Real",rr="Reciprocal",ir="Relu",da="Reshape",pa="ResizeNearestNeighbor",Pc="ResizeNearestNeighborGrad",fa="ResizeBilinear",zc="ResizeBilinearGrad",ar="Relu6",ma="Reverse",lr="Round",cr="Rsqrt",lp="ScatterNd",cp="TensorScatterUpdate",up="SearchSorted",ga="Select",ur="Selu",xa="Slice",hr="Sin",dr="Sinh",pr="Sign",fr="Sigmoid",mr="Softplus",gr="Sqrt",ba="Sum",ya="SpaceToBatchND",wa="SplitV",ka="Softmax",hp="SparseFillEmptyRows",dp="SparseReshape",pp="SparseSegmentMean",fp="SparseSegmentSum",mp="SparseToDense",xr="SquaredDifference",Bc="Square",Vc="StaticRegexReplace",Wc="StridedSlice",gp="StringNGrams",xp="StringSplit",bp="StringToHashBucketFast",br="Sub",yr="Tan",wr="Tanh",kr="Tile",Uc="TopK",Gc="Transform",qs="Transpose",Hc="Unique",Ca="Unpack",Ia="UnsortedSegmentSum",$a="ZerosLike",Cr="Step",n6="FromPixels",qc="RotateWithOffset",va="_FusedMatMul",Sa="FusedConv2D",yp="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1(...n){P().getBool("IS_TEST")||P().getBool("PROD")||console.warn(...n)}function s6(...n){P().getBool("IS_TEST")||P().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na=sc("kernelRegistry",()=>new Map),Kc=sc("gradRegistry",()=>new Map);function wp(n,e){const t=$p(n,e);return Na.get(t)}function kp(n){return Kc.get(n)}function Cp(n){const e=Na.entries(),t=[];for(;;){const{done:s,value:o}=e.next();if(s)break;const[r,i]=o,[a]=r.split("_");a===n&&t.push(i)}return t}function Ip(n){const{kernelName:e,backendName:t}=n,s=$p(e,t);Na.has(s)&&n1(`The kernel '${e}' for backend '${t}' is already registered`),Na.set(s,n)}function o6(n){const{kernelName:e}=n;Kc.has(e)&&P().getBool("DEBUG")&&n1(`Overriding the gradient for '${e}'`),Kc.set(e,n)}function $p(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Zn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function r6(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function i6(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var o=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,o.get?o:{enumerable:!0,get:function(){return n[s]}})}),t}var Sp=Ge,c1=null;try{c1=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ge(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Ge.prototype.__isLong__,Object.defineProperty(Ge.prototype,"__isLong__",{value:!0});function Xt(n){return(n&&n.__isLong__)===!0}Ge.isLong=Xt;var Np={},Tp={};function Jn(n,e){var t,s,o;return e?(n>>>=0,(o=0<=n&&n<256)&&(s=Tp[n],s)?s:(t=He(n,(n|0)<0?-1:0,!0),o&&(Tp[n]=t),t)):(n|=0,(o=-128<=n&&n<128)&&(s=Np[n],s)?s:(t=He(n,n<0?-1:0,!1),o&&(Np[n]=t),t))}Ge.fromInt=Jn;function u1(n,e){if(isNaN(n))return e?Qn:h1;if(e){if(n<0)return Qn;if(n>=Ep)return Op}else{if(n<=-Dp)return Yt;if(n+1>=Dp)return Fp}return n<0?u1(-n,e).neg():He(n%Ks|0,n/Ks|0,e)}Ge.fromNumber=u1;function He(n,e,t){return new Ge(n,e,t)}Ge.fromBits=He;var Ta=Math.pow;function jc(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return h1;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return jc(n.substring(1),e,t).neg();for(var o=u1(Ta(t,8)),r=h1,i=0;i<n.length;i+=8){var a=Math.min(8,n.length-i),l=parseInt(n.substring(i,i+a),t);if(a<8){var c=u1(Ta(t,a));r=r.mul(c).add(u1(l))}else r=r.mul(o),r=r.add(u1(l))}return r.unsigned=e,r}Ge.fromString=jc;function $1(n,e){return typeof n=="number"?u1(n,e):typeof n=="string"?jc(n,e):He(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Ge.fromValue=$1;var Rp=65536,a6=1<<24,Ks=Rp*Rp,Ep=Ks*Ks,Dp=Ep/2,Ap=Jn(a6),h1=Jn(0);Ge.ZERO=h1;var Qn=Jn(0,!0);Ge.UZERO=Qn;var js=Jn(1);Ge.ONE=js;var Lp=Jn(1,!0);Ge.UONE=Lp;var Xc=Jn(-1);Ge.NEG_ONE=Xc;var Fp=He(-1,2147483647,!1);Ge.MAX_VALUE=Fp;var Op=He(-1,-1,!0);Ge.MAX_UNSIGNED_VALUE=Op;var Yt=He(0,-2147483648,!1);Ge.MIN_VALUE=Yt;var te=Ge.prototype;te.toInt=function(){return this.unsigned?this.low>>>0:this.low},te.toNumber=function(){return this.unsigned?(this.high>>>0)*Ks+(this.low>>>0):this.high*Ks+(this.low>>>0)},te.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Yt)){var t=u1(e),s=this.div(t),o=s.mul(t).sub(this);return s.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=u1(Ta(e,6),this.unsigned),i=this,a="";;){var l=i.div(r),c=i.sub(l.mul(r)).toInt()>>>0,u=c.toString(e);if(i=l,i.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}},te.getHighBits=function(){return this.high},te.getHighBitsUnsigned=function(){return this.high>>>0},te.getLowBits=function(){return this.low},te.getLowBitsUnsigned=function(){return this.low>>>0},te.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Yt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1},te.isZero=function(){return this.high===0&&this.low===0},te.eqz=te.isZero,te.isNegative=function(){return!this.unsigned&&this.high<0},te.isPositive=function(){return this.unsigned||this.high>=0},te.isOdd=function(){return(this.low&1)===1},te.isEven=function(){return(this.low&1)===0},te.equals=function(e){return Xt(e)||(e=$1(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low},te.eq=te.equals,te.notEquals=function(e){return!this.eq(e)},te.neq=te.notEquals,te.ne=te.notEquals,te.lessThan=function(e){return this.comp(e)<0},te.lt=te.lessThan,te.lessThanOrEqual=function(e){return this.comp(e)<=0},te.lte=te.lessThanOrEqual,te.le=te.lessThanOrEqual,te.greaterThan=function(e){return this.comp(e)>0},te.gt=te.greaterThan,te.greaterThanOrEqual=function(e){return this.comp(e)>=0},te.gte=te.greaterThanOrEqual,te.ge=te.greaterThanOrEqual,te.compare=function(e){if(Xt(e)||(e=$1(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},te.comp=te.compare,te.negate=function(){return!this.unsigned&&this.eq(Yt)?Yt:this.not().add(js)},te.neg=te.negate,te.add=function(e){Xt(e)||(e=$1(e));var t=this.high>>>16,s=this.high&65535,o=this.low>>>16,r=this.low&65535,i=e.high>>>16,a=e.high&65535,l=e.low>>>16,c=e.low&65535,u=0,h=0,d=0,p=0;return p+=r+c,d+=p>>>16,p&=65535,d+=o+l,h+=d>>>16,d&=65535,h+=s+a,u+=h>>>16,h&=65535,u+=t+i,u&=65535,He(d<<16|p,u<<16|h,this.unsigned)},te.subtract=function(e){return Xt(e)||(e=$1(e)),this.add(e.neg())},te.sub=te.subtract,te.multiply=function(e){if(this.isZero())return h1;if(Xt(e)||(e=$1(e)),c1){var t=c1.mul(this.low,this.high,e.low,e.high);return He(t,c1.get_high(),this.unsigned)}if(e.isZero())return h1;if(this.eq(Yt))return e.isOdd()?Yt:h1;if(e.eq(Yt))return this.isOdd()?Yt:h1;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Ap)&&e.lt(Ap))return u1(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,o=this.high&65535,r=this.low>>>16,i=this.low&65535,a=e.high>>>16,l=e.high&65535,c=e.low>>>16,u=e.low&65535,h=0,d=0,p=0,f=0;return f+=i*u,p+=f>>>16,f&=65535,p+=r*u,d+=p>>>16,p&=65535,p+=i*c,d+=p>>>16,p&=65535,d+=o*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,h+=s*u+o*c+r*l+i*a,h&=65535,He(p<<16|f,h<<16|d,this.unsigned)},te.mul=te.multiply,te.divide=function(e){if(Xt(e)||(e=$1(e)),e.isZero())throw Error("division by zero");if(c1){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?c1.div_u:c1.div_s)(this.low,this.high,e.low,e.high);return He(t,c1.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Qn:h1;var s,o,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Qn;if(e.gt(this.shru(1)))return Lp;r=Qn}else{if(this.eq(Yt)){if(e.eq(js)||e.eq(Xc))return Yt;if(e.eq(Yt))return js;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(h1)?e.isNegative()?js:Xc:(o=this.sub(e.mul(s)),r=s.add(o.div(e)),r)}else if(e.eq(Yt))return this.unsigned?Qn:h1;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=h1}for(o=this;o.gte(e);){s=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:Ta(2,a-48),c=u1(s),u=c.mul(e);u.isNegative()||u.gt(o);)s-=l,c=u1(s,this.unsigned),u=c.mul(e);c.isZero()&&(c=js),r=r.add(c),o=o.sub(u)}return r},te.div=te.divide,te.modulo=function(e){if(Xt(e)||(e=$1(e)),c1){var t=(this.unsigned?c1.rem_u:c1.rem_s)(this.low,this.high,e.low,e.high);return He(t,c1.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},te.mod=te.modulo,te.rem=te.modulo,te.not=function(){return He(~this.low,~this.high,this.unsigned)},te.and=function(e){return Xt(e)||(e=$1(e)),He(this.low&e.low,this.high&e.high,this.unsigned)},te.or=function(e){return Xt(e)||(e=$1(e)),He(this.low|e.low,this.high|e.high,this.unsigned)},te.xor=function(e){return Xt(e)||(e=$1(e)),He(this.low^e.low,this.high^e.high,this.unsigned)},te.shiftLeft=function(e){return Xt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?He(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):He(0,this.low<<e-32,this.unsigned)},te.shl=te.shiftLeft,te.shiftRight=function(e){return Xt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?He(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):He(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},te.shr=te.shiftRight,te.shiftRightUnsigned=function(e){if(Xt(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return He(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?He(t,0,this.unsigned):He(t>>>e-32,0,this.unsigned)},te.shru=te.shiftRightUnsigned,te.shr_u=te.shiftRightUnsigned,te.toSigned=function(){return this.unsigned?He(this.low,this.high,!1):this},te.toUnsigned=function(){return this.unsigned?this:He(this.low,this.high,!0)},te.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},te.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]},te.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]},Ge.fromBytes=function(e,t,s){return s?Ge.fromBytesLE(e,t):Ge.fromBytesBE(e,t)},Ge.fromBytesLE=function(e,t){return new Ge(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Ge.fromBytesBE=function(e,t){return new Ge(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};var _p=r6(Sp),l6=Kn({__proto__:null,default:_p},[Sp]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es=_p||l6;function Ra(n){return es.fromString(n,!0,16)}const Mp=Ra("c3a5c85c97cb3127"),ts=Ra("b492b66fbe98f273"),Ot=Ra("9ae16a3b2f90404f");function Yc(n){return n.xor(n.shru(47))}function Pp(n,e,t){const s=n.slice(e,e+t);return es.fromBytes(Array.from(s),!0,!0)}function ze(n,e){return Pp(n,e,8)}function zp(n,e){return Pp(n,e,4)}function xt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function yn(n,e,t=Ra("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let o=e.xor(s).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function c6(n,e,t,s,o,r){o=o.add(n),r=xt(r.add(o).add(s),21);const i=o;return o=o.add(e),o=o.add(t),r=r.add(xt(o,44)),[o.add(s),r.add(i)]}function Ea(n,e,t,s){return c6(ze(n,e),ze(n,e+8),ze(n,e+16),ze(n,e+24),t,s)}function u6(n,e=n.length){if(e>=8){const t=Ot.add(e*2),s=ze(n,0).add(Ot),o=ze(n,e-8),r=xt(o,37).mul(t).add(s),i=xt(s,25).add(o).mul(t);return yn(r,i,t)}if(e>=4){const t=Ot.add(e*2),s=zp(n,0);return yn(s.shl(3).add(e),zp(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],o=n[e-1],r=t+(s<<8),i=e+(o<<2);return Yc(Ot.mul(r).xor(Mp.mul(i))).mul(Ot)}return Ot}function h6(n,e=n.length){const t=Ot.add(e*2),s=ze(n,0).mul(ts),o=ze(n,8),r=ze(n,e-8).mul(t),i=ze(n,e-16).mul(Ot);return yn(xt(s.add(o),43).add(xt(r,30)).add(i),s.add(xt(o.add(Ot),18)).add(r),t)}function d6(n,e=n.length){const t=Ot.add(e*2),s=ze(n,0).mul(Ot),o=ze(n,8),r=ze(n,e-8).mul(t),i=ze(n,e-16).mul(Ot),a=xt(s.add(o),43).add(xt(r,30)).add(i),l=yn(a,s.add(xt(o.add(Ot),18)).add(r),t),c=ze(n,16).mul(t),u=ze(n,24),h=a.add(ze(n,e-32)).mul(t),d=l.add(ze(n,e-24)).mul(t);return yn(xt(c.add(u),43).add(xt(h,30)).add(d),c.add(xt(u.add(s),18)).add(h),t)}function p6(n,e=n.length){const t=es.fromNumber(81,!0);if(e<=32)return e<=16?u6(n,e):h6(n,e);if(e<=64)return d6(n,e);let s=t,o=t.mul(ts).add(113),r=Yc(o.mul(Ot).add(113)).mul(Ot),i=[es.UZERO,es.UZERO],a=[es.UZERO,es.UZERO];s=s.mul(Ot).add(ze(n,0));let l=0;const c=(e-1>>6)*64,u=c+(e-1&63)-63;do s=xt(s.add(o).add(i[0]).add(ze(n,l+8)),37).mul(ts),o=xt(o.add(i[1]).add(ze(n,l+48)),42).mul(ts),s=s.xor(a[1]),o=o.add(i[0]).add(ze(n,l+40)),r=xt(r.add(a[0]),33).mul(ts),i=Ea(n,l,i[1].mul(ts),s.add(a[0])),a=Ea(n,l+32,r.add(a[1]),o.add(ze(n,l+16))),[r,s]=[s,r],l+=64;while(l!==c);const h=ts.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=xt(s.add(o).add(i[0]).add(ze(n,l+8)),37).mul(h),o=xt(o.add(i[1]).add(ze(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(ze(n,l+40))),r=xt(r.add(a[0]),33).mul(h),i=Ea(n,l,i[1].mul(h),s.add(a[0])),a=Ea(n,l+32,r.add(a[1]),o.add(ze(n,l+16))),[r,s]=[s,r],yn(yn(i[0],a[0],h).add(Yc(o).mul(Mp)).add(r),yn(i[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(n,e){return e==="string"?kn(n):ns([n],e)}function f6(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function ns(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ss(n)),P().getBool("DEBUG")&&W5(n,e),f6(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Vt(){return P().platform.now()}function kn(n,e="utf-8"){return e=e||"utf-8",P().platform.encode(n,e)}function Cn(n,e="utf-8"){return e=e||"utf-8",P().platform.decode(n,e)}function d1(n){return P().platform.isTypedArray!=null?P().platform.isTypedArray(n):vp(n)}function ss(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||tc(n)||n==null||d1(n)&&t)e.push(n);else if(Array.isArray(n)||d1(n))for(let s=0;s<n.length;++s)ss(n[s],e,t);else{let s=-1;for(const o of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(o)&&(s=Math.max(s,Number(o)));for(let o=0;o<=s;o++)ss(n[o],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m6{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new x6)}profileKernel(e,t,s){let o;const r=()=>{o=s()};let i;const a=Vt();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const c of o)c.dataSync();i=Promise.resolve({kernelMs:Vt()-a})}if(P().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<o.length;c++){const u=o[c];u.data().then(h=>{g6(h,u.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:o,inputs:r,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),o,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],r,l[2])})})}}function g6(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const o=n[s];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}class x6{logKernelProfile(e,t,s,o,r,i){const a=typeof o=="number"?Ws(`${o}ms`,9):o.error,l=Ws(e,25),c=t.rank,u=t.size,h=Ws(t.shape.toString(),14);let d="";for(const p in r){const f=r[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(n,e,t){const s={},o={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const h in u){const d=u[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,o[c.id]=!0;break}if(p)break}}const r={};r[t.id]=!0;const i={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,i[c.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const c=n[l];if(o[c.id]&&i[c.id]){const u={};for(const d in c.inputs){const p=c.inputs[d];s[p.id]&&(u[d]=p)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function y6(n,e,t,s){for(let o=e.length-1;o>=0;o--){const r=e[o],i=[];if(r.outputs.forEach(l=>{const c=n[l.id];c!=null?i.push(c):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(i);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=t(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!Re(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const h=n[u.id];n[u.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bp=20,Ir=3,Zc=7;function w6(n,e,t,s){const o=le(e),r=k6(n,e,t,o),i=e.length,a=Da(n,e,t,o,r),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function k6(n,e,t,s){const o=U(e),r=s[s.length-1],i=new Array(r).fill(0),a=e.length,l=t==="complex64"?vr(n):n;if(a>1)for(let c=0;c<o/r;c++){const u=c*r;for(let h=0;h<r;h++)i[h]=Math.max(i[h],$r(l[u+h],0,t).length)}return i}function $r(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Zc))} + ${parseFloat(n[1].toFixed(Zc))}j`:No(n)?s=`'${n}'`:t==="bool"?s=Vp(n):s=parseFloat(n.toFixed(Zc)).toString(),Ws(s,e)}function Vp(n){return n===0?"false":"true"}function Da(n,e,t,s,o,r=!0){const i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const m=vr(n);return[$r(m[0],0,t)]}return t==="bool"?[Vp(n[0])]:[n[0].toString()]}if(l===1){if(a>Bp){const g=Ir*i;let x=Array.from(n.slice(0,g)),b=Array.from(n.slice((a-Ir)*i,a*i));return t==="complex64"&&(x=vr(x),b=vr(b)),["["+x.map((w,y)=>$r(w,o[y],t)).join(", ")+", ..., "+b.map((w,y)=>$r(w,o[a-Ir+y],t)).join(", ")+"]"]}return["["+(t==="complex64"?vr(n):Array.from(n)).map((g,x)=>$r(g,o[x],t)).join(", ")+"]"]}const c=e.slice(1),u=s.slice(1),h=s[0]*i,d=[];if(a>Bp){for(let m=0;m<Ir;m++){const g=m*h,x=g+h;d.push(...Da(n.slice(g,x),c,t,u,o,!1))}d.push("...");for(let m=a-Ir;m<a;m++){const g=m*h,x=g+h;d.push(...Da(n.slice(g,x),c,t,u,o,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,x=g+h;d.push(...Da(n.slice(g,x),c,t,u,o,m===a-1))}const p=l===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":f),d}function vr(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ct{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=U(e),s!=null){const o=s.length;I(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||nt(t,this.size),this.strides=le(e)}set(e,...t){t.length===0&&(t=[0]),I(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const o of e){if(o<0||o>=this.shape[t]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let s=e[e.length-1];for(let o=0;o<e.length-1;++o)s+=this.strides[o]*e[o];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return v1().makeTensor(this.values,this.shape,this.dtype)}}let v1=null,Xs=null;function C6(n){v1=n}function I6(n){Xs=n}class ut{constructor(e,t,s,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=U(e),this.strides=le(e),this.dataId=s,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Xs.buffer(this.shape,this.dtype,e)}bufferSync(){return Xs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return I1(this.shape,e,this.dtype==="complex64")}arraySync(){return I1(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=v1().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Cn(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),v1().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=v1().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Cn(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await v1().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),v1().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Xs.print(this,e)}clone(){return this.throwIfDisposed(),Xs.clone(this)}toString(e=!1){const t=this.dataSync();return w6(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Xs.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),v1().makeVariable(this,e,t,s)}}Object.defineProperty(ut,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function W(){return sc("Tensor",()=>ut)}W();class Aa extends ut{constructor(e,t,s,o){super(e.shape,e.dtype,e.dataId,o),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Re(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);v1().disposeTensor(this),this.dataId=e.dataId,v1().incRef(this,null)}dispose(){v1().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Aa,Symbol.hasInstance,{value:n=>n instanceof ut&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wp;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Wp||(Wp={}));var Jc;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Jc||(Jc={}));var Qc;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Qc||(Qc={}));var eu;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(eu||(eu={}));var tu;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(tu||(tu={}));const $6={float32:eu,int32:Jc,bool:Qc,complex64:tu};function Zt(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return $6[n][e]}function nu(n){return Zt(n,"int32")}function Up(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Gp(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function st(n,e){if(n.dtype===e.dtype)return[n,e];const t=Zt(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function Hp(n){const e=[];return qp(n,e,new Set),e}function qp(n,e,t){if(n==null)return;if(n instanceof ut){e.push(n);return}if(!v6(n))return;const s=n;for(const o in s){const r=s[o];t.has(r)||(t.add(r),qp(r,e,t))}}function v6(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(n){return n.kernelName!=null}class Kp{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ys{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kp}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(n1(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new m6(this.backendInstance),!0}setupRegisteredKernels(){Cp(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Cp(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Kl)&&typeof s.then=="function"){const o=++this.pendingBackendInitId,r=s.then(i=>o<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,n1(`Initialization of backend ${e} failed`),n1(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return n1(`Initialization of backend ${e} failed`),n1(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:o,asyncInit:r}=this.initializeBackend(s);if(r||o)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),o=s.backend,r=this.readSync(t),i=o.refCount(t);o.disposeData(t,!0),s.backend=e,e.move(t,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let o;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,s){e();try{const o=s();return t(),o}catch(o){throw t(),o}}nextTensorId(){return Ys.nextTensorId++}nextVariableId(){return Ys.nextVariableId++}clone(e){const t=D.runKernel(jo,{x:e}),s={x:e},o=i=>({x:()=>{const a="float32",l={x:i},c={dtype:a};return D.runKernel(Oo,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[t],o,r,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(wp(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const o=this.backend.numDataIds();let r=0;s.forEach(l=>{r+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-t-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const o=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=su(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(su(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const x=wp(f,this.backendName);I(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();l=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,w);const y=w.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){const k=this.getTensorsForGradient(f,m,y);s=this.saveTensorsForBackwardMode(k)}return y}}else{const{forwardFunc:f}=e,m=g=>{o&&(s=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,x),x}}const{inputs:u,attrs:h}=e,d=su(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),o&&this.addTapeNode(c,u,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const o=kp(e);if(o!=null){const r=o.inputsToSave||[],i=o.outputsToSave||[];let a;o.saveAllInputs?(I(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(c=>t[c])):a=r.map(c=>t[c]);const l=s.filter((c,u)=>i[u]);return a.concat(l)}return[]}makeTensor(e,t,s,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",o=o||this.backend;let r=e;s==="string"&&No(e[0])&&(r=e.map(l=>kn(l)));const i=o.write(r,t,s),a=new ut(t,s,i,this.nextTensorId());if(this.trackTensor(a,o),s==="string"){const l=this.state.tensorInfo.get(i),c=G5(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(e,t,s,o){s=s||"float32";const r={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(r,o)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:o,dtype:r}=e,i=new ut(o,r,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,o){s=s||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));const r=new Aa(e,t,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*$i(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Aa||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*$i(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,o,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:r},l=kp(e);l!=null&&(o=l.gradFunc),o!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],p=Et(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),o(c.length>1?c:c[0],r,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Hp(e),s=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===o.id&&this.track(r)})}gradients(e,t,s,o=!1){if(I(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));I(r instanceof ut,()=>"The result y returned by f() must be a tensor.");const i=b6(this.state.activeTape,t,r);if(!o&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=s??S6(r.shape),y6(a,i,c=>this.tidy(c),N6);const l=t.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return I(Jl(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{I(t.every(a=>a instanceof ut),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const o={};t.forEach((a,l)=>{o[l]=a});const r=(a,l)=>(s=e(...t,l),I(s.value instanceof ut,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),I(Jl(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const c=s.gradFunc(a,l),u=Array.isArray(c)?c:[c];I(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),I(u.every(d=>d instanceof ut),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Vt(),s=await this.backend.time(e);return s.wallMs=Vt()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kp;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ys.nextTensorId=0,Ys.nextVariableId=0;function S6(n){const e=ec(U(n),"float32");return D.makeTensor(e,n,"float32")}function jp(){const n=Jd();if(n._tfengine==null){const e=new K5(n);n._tfengine=new Ys(e)}return Z5(n._tfengine.ENV),C6(()=>n._tfengine),n._tfengine}const D=jp();function N6(n,e){const t={a:n,b:e};return D.runKernel(Hs,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(){return typeof navigator<"u"&&navigator!=null}function Xp(n){if(n||T6()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Yp(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wt=P();Wt.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Wt.registerFlag("IS_BROWSER",()=>Yp()),Wt.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),Wt.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Wt.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),Wt.registerFlag("PROD",()=>!1),Wt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Wt.getBool("DEBUG")),Wt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Wt.registerFlag("IS_TEST",()=>!1),Wt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Wt.getBool("DEBUG")),Wt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Wt.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Wt.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function La(n,e){let t=n;if(d1(n))return e==="string"?[]:[n.length];if(Up(n)){const o=n.channels||"RGBA";return[n.height,n.width*o.length]}else if(Gp(n))return[n.buffer.size/(e==null?4:$i(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||d1(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&P().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Zp(n,s,[]),s}function Zp(n,e,t){if(t=t||[],!Array.isArray(n)&&!d1(n)){I(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}I(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),I(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let o=0;o<n.length;++o)Zp(n[o],s,t.concat(o))}function Jp(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function N(n,e,t,s="numeric"){if(n instanceof W())return Jp(s,n.dtype,e,t),n;let o=Us(n);if(o!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),Jp(s,o,e,t),n==null||!d1(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const r=La(n,o);!d1(n)&&!Array.isArray(n)&&(n=[n]);const a=o!=="string"?ns(n,o):ss(n,[],!0);return D.makeTensor(a,r,o)}function Qp(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,i)=>N(r,`${e}[${i}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6="__op";function F(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+R6;const o=(...r)=>{D.startScope(t);try{const i=s(...r);return tc(i)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(i),i}catch(i){throw D.endScope(null),i}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n,e){const t=N(n,"real","complex"),s=N(e,"imag","complex");Xl(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const o={real:t,imag:s};return D.runKernel(hc,o)}const os=F({complex_:E6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fa(n,e,t,s){if(s==null)s=Us(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Gp(n)||Up(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return D.backend.createTensorFromGPUData(n,e||t,s)}if(!d1(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){sn(e);const o=U(e),r=U(t);I(o===r,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${r}`);for(let i=0;i<t.length;++i){const a=t[i],l=i===t.length-1?a!==U(e.slice(i)):!0;I(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!d1(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?ns(n,s):ss(n,[],!0),D.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(n,e,t){const s=La(n,t);return Fa(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class In{static join(e){return new In(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>d1(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const o=e[s];s!==e.length-1&&o.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+o.byteLength;this.shards.push({buffer:o,start:t,end:r}),t=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const o=t-e,r=new ArrayBuffer(o),i=new Uint8Array(r);let a=0;for(let l=s;l<this.shards.length;l++){const c=this.shards[l],h=e+a-c.start,d=a,f=Math.min(t,c.end)-c.start,m=new Uint8Array(c.buffer,h,f-h);if(i.set(m,d),a+=m.length,t<c.end)break}return r}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(o){return e<o.start?-1:e>=o.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=D6(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function D6(n,e){let t=0,s=n.length;for(;t<=s;){const o=Math.floor((s-t)/2)+t,r=e(n[o]);if(r===0)return o;r<0?s=o:t=o+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(){return D}function ef(){return D.memory()}function O(n,e){return D.tidy(n,e)}function ye(n){Hp(n).forEach(t=>t.dispose())}function V1(n){return D.keep(n)}function A6(n){return D.setBackend(n)}function tf(n,e,t=1){return D.registerBackend(n,e,t)}function L6(){return D.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs=4;async function nf(n,e){const t=[],s=[],o=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<o.length;++i){const a=o[i],l=Array.isArray(n)?n[i].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((g,x)=>g+x.length,0)+Zs*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(b,m),m+=Zs,f.set(x,m),m+=x.length}h(f)});s.push(u)}else s.push(l.data());e!=null&&(c.group=e),t.push(c)}const r=await Promise.all(s);return{data:M6(r),specs:t}}function F6(n,e){const t=new In(n),s={};let o=0;for(const r of e){const i=O6(r,(a,l)=>t.slice(o+a,o+l));s[r.name]=_6(r,t.slice(o,o+i)),o+=i}return s}function O6(n,e){const t=U(n.shape);let s;if("quantization"in n){const o=n.quantization;s=Oa[o.dtype]}else if(n.dtype==="string"){let o=0;for(let r=0;r<t;r++)o+=Zs+new Uint32Array(e(o,o+Zs))[0];return o}else s=Oa[n.dtype];return t*s}function _6(n,e){const t=n.name,s=n.dtype,o=n.shape,r=U(o);let i,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=Oa[l.dtype],u=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];i[h]=d*l.scale+l.min}}else if(l.dtype==="float16")i=K6()(u);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];i[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=r*c}else if(s==="string"){const l=U(n.shape);i=[];for(let c=0;c<l;c++){const u=new Uint32Array(e.slice(a,a+Zs))[0];a+=Zs;const h=new Uint8Array(e.slice(a,a+u));i.push(h),a+=u}}else{const l=Oa[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const c=new Float32Array(i.length/2),u=new Float32Array(i.length/2);for(let f=0;f<c.length;f++)c[f]=i[f*2],u[f]=i[f*2+1];const h=Sr(c,o,"float32"),d=Sr(u,o,"float32"),p=os(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=r*l}return Sr(i,o,s)}function M6(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(r=>{if(e+=r.byteLength,t.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let o=0;return t.forEach(r=>{s.set(new Uint8Array(r.buffer),o),o+=r.byteLength}),s.buffer}const ou=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function sf(n){return ou?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function P6(n){if(ou)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,o=e.length;s<o;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function z6(n){if(ou){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function B6(n){return In.join(n)}function V6(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function W6(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function U6(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),W6(n,t,s)}function ru(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:sf(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:sf(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new In(n.weightData).byteLength}}function of(n){const e=[];for(const t of n)e.push(...t.weights);return e}function G6(){const n=t=>{let s=t<<13,o=0;for(;!(s&8388608);)o-=8388608,s<<=1;return s&=-8388609,o+=947912704,s|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function H6(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function q6(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function K6(){const n=G6(),e=H6(),t=q6();return s=>{const o=new ArrayBuffer(4*s.length),r=new Uint32Array(o);for(let i=0;i<s.length;i++){const a=s[i],l=n[t[a>>10]+(a&1023)]+e[a>>10];r[i]=l}return new Float32Array(o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return bt.instance==null&&(bt.instance=new bt),bt.instance}static registerSaveRouter(e){bt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){bt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return bt.getHandlers(e,"save")}static getLoadHandlers(e,t){return bt.getHandlers(e,"load",t)}static getHandlers(e,t,s){const o=[];return(t==="load"?bt.getInstance().loadRouters:bt.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&o.push(a)}),o}}const j6=n=>bt.getSaveHandlers(n),X6=(n,e)=>bt.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iu="tensorflowjs",au=1,rs="models_store",$n="model_info_store";function rf(){if(!P().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function lu(n){const e=n.result;e.createObjectStore(rs,{keyPath:"modelPath"}),e.createObjectStore($n,{keyPath:"modelPath"})}class is{constructor(e){if(this.indexedDB=rf(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,o)=>{const r=this.indexedDB.open(iu,au);r.onupgradeneeded=()=>lu(r),r.onsuccess=()=>{const i=r.result;if(t==null){const a=i.transaction(rs,"readonly"),c=a.objectStore(rs).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(i.close(),o(c.error)),a.oncomplete=()=>i.close()}else{t.weightData=In.join(t.weightData);const a=ru(t),l=i.transaction($n,"readwrite");let c=l.objectStore($n),u;try{u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return o(d)}let h;u.onsuccess=()=>{h=i.transaction(rs,"readwrite");const d=h.objectStore(rs);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(f){return o(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{c=l.objectStore($n);const m=c.delete(this.modelPath);m.onsuccess=()=>(i.close(),o(p.error)),m.onerror=g=>(i.close(),o(p.error))}},u.onerror=d=>(i.close(),o(u.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},r.onerror=i=>o(r.error)})}}is.URL_SCHEME="indexeddb://";const af=n=>P().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(is.URL_SCHEME)?Y6(n.slice(is.URL_SCHEME.length)):null;bt.registerSaveRouter(af),bt.registerLoadRouter(af);function Y6(n){return new is(n)}function Z6(n){return n.startsWith(is.URL_SCHEME)?n.slice(is.URL_SCHEME.length):n}class J6{constructor(){this.indexedDB=rf()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(iu,au);s.onupgradeneeded=()=>lu(s),s.onsuccess=()=>{const o=s.result,r=o.transaction($n,"readonly"),a=r.objectStore($n).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},a.onerror=l=>(o.close(),t(a.error)),r.oncomplete=()=>o.close()},s.onerror=o=>t(s.error)})}async removeModel(e){return e=Z6(e),new Promise((t,s)=>{const o=this.indexedDB.open(iu,au);o.onupgradeneeded=()=>lu(o),o.onsuccess=()=>{const r=o.result,i=r.transaction($n,"readwrite"),a=i.objectStore($n),l=a.get(e);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=a.delete(e),h=()=>{c=r.transaction(rs,"readwrite");const p=c.objectStore(rs).delete(e);p.onsuccess=()=>t(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),s(l.error))}},l.onerror=u=>(r.close(),s(l.error)),i.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},o.onerror=r=>s(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const on="/",Js="tensorflowjs_models",lf="info",Q6="model_topology",e7="weight_specs",t7="weight_data",n7="model_metadata";function cf(n){return{info:[Js,n,lf].join(on),topology:[Js,n,Q6].join(on),weightSpecs:[Js,n,e7].join(on),weightData:[Js,n,t7].join(on),modelMetadata:[Js,n,n7].join(on)}}function uf(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function s7(n){const e=n.split(on);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(on)}function o7(n){return n.startsWith(as.URL_SCHEME)?n.slice(as.URL_SCHEME.length):n}class as{constructor(e){if(!P().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=cf(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),o=ru(e),r=In.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,P6(r));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:o}}catch{throw uf(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=z6(i),t}}as.URL_SCHEME="localstorage://";const hf=n=>P().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(as.URL_SCHEME)?r7(n.slice(as.URL_SCHEME.length)):null;bt.registerSaveRouter(hf),bt.registerLoadRouter(hf);function r7(n){return new as(n)}class i7{constructor(){I(P().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),I(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Js+on,s=on+lf;for(let o=0;o<this.LS.length;++o){const r=this.LS.key(o);if(r.startsWith(t)&&r.endsWith(s)){const i=s7(r);e[i]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=o7(e);const t=cf(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return uf(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const df="://";class W1{constructor(){this.managers={}}static getInstance(){return W1.instance==null&&(W1.instance=new W1),W1.instance}static registerManager(e,t){I(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(df)&&(e=e.slice(0,e.indexOf(df))),I(e.length>0,()=>"scheme must not be an empty string.");const s=W1.getInstance();I(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=W1.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(W1.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a7{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!P().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const o=this.functionRefs[s.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return vp(e)}}if(P().get("IS_BROWSER")){P().setPlatform("browser",new a7);try{W1.registerManager(as.URL_SCHEME,new i7)}catch{}try{W1.registerManager(is.URL_SCHEME,new J6)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7={importFetch:()=>require("node-fetch")};let cu;class c7{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return P().global.fetch!=null?P().global.fetch(e,t):(cu==null&&(cu=l7.importFetch()),cu(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}P().get("IS_NODE")&&!P().get("IS_BROWSER")&&P().setPlatform("node",new c7);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(n,e="float32",t){return e=e||"float32",sn(n),new Ct(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(n,e){const t=N(n,"x","cast");if(!U5(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},o={dtype:e};return D.runKernel(Oo,s,o)}const se=F({cast_:u7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){const t={x:N(n,"x","clone","string_or_numeric")};return D.runKernel(jo,t)}const ls=F({clone_:h7});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */jp(),I6({buffer:Ce,cast:se,clone:ls,print:d7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(n,e){let t=N(n,"a","add"),s=N(e,"b","add");[t,s]=st(t,s);const o={a:t,b:s};return D.runKernel(Hs,o)}const Y=F({add_:p7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n,e){let t=N(n,"a","floorDiv"),s=N(e,"b","floorDiv");[t,s]=st(t,s);const o={a:t,b:s};return D.runKernel(qo,o)}const pf=F({floorDiv_:f7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(n,e){let t=N(n,"a","div"),s=N(e,"b","div");if([t,s]=st(t,s),t.dtype==="int32"&&s.dtype==="int32")return pf(t,s);const o={a:t,b:s},r={};return D.runKernel(Bo,o,r)}const he=F({div_:m7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n,e){let t=N(n,"a","mul"),s=N(e,"b","mul");[t,s]=st(t,s);const o={a:t,b:s};return D.runKernel(sr,o)}const E=F({mul_:g7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const e=N(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(Ai,t)}else{const t={x:e};return D.runKernel(vi,t)}}const _t=F({abs_:x7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n){const t={x:N(n,"x","acos")};return D.runKernel(To,t)}const y7=F({acos_:b7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(n){const t={x:N(n,"x","acosh")};return D.runKernel(Ro,t)}const k7=F({acosh_:w7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n,e=null,t=!1){const o={x:N(n,"x","all","bool")},r={axis:e,keepDims:t};return D.runKernel(rc,o,r)}const ff=F({all_:C7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(n,e=null,t=!1){const o={x:N(n,"x","any","bool")},r={axis:e,keepDims:t};return D.runKernel(ic,o,r)}const uu=F({any_:I7});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n,e=0){const s={x:N(n,"x","argMax")},o={axis:e};return D.runKernel(Si,s,o)}const Nr=F({argMax_:$7});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n,e=0){const s={x:N(n,"x","argMin")},o={axis:e};return D.runKernel(Ni,s,o)}const S7=F({argMin_:v7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n){const t={x:N(n,"x","asin")};return D.runKernel(Eo,t)}const T7=F({asin_:N7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){const t={x:N(n,"x","asinh")};return D.runKernel(Do,t)}const E7=F({asinh_:R7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const t={x:N(n,"x","atan")};return D.runKernel(Ao,t)}const A7=F({atan_:D7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n,e){let t=N(n,"a","atan2"),s=N(e,"b","atan2");[t,s]=st(t,s);const o={a:t,b:s};return D.runKernel(Fo,o)}const F7=F({atan2_:L7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(n){const t={x:N(n,"x","atanh")};return D.runKernel(Lo,t)}const _7=F({atanh_:O7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(n,e,t,s,o="NHWC",r){const i=n[3],a=[...e,i],l=an(o);return It(n,a,t,r,s,null,null,l)}function p1(n,e,t,s,o,r,i="channelsLast"){const[a,l]=Rr(e);let c;if(i==="channelsLast")c=[a,l,n[3],n[3]];else if(i==="channelsFirst")c=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return It(n,c,t,s,o,r,!1,i)}function rn(n,e,t,s,o,r,i="NDHWC"){const[a,l,c]=du(e);let u,h;if(i==="NDHWC")h="channelsLast",u=[a,l,c,n[4],n[4]];else if(i==="NCDHW")h="channelsFirst",u=[a,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return vn(n,u,t,s,o,!1,h,r)}function It(n,e,t,s,o,r,i=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=n;else if(a==="channelsFirst")[l,h,c,u]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[m,g]=Rr(t),[x,b]=Rr(s),w=Qs(d,x),y=Qs(p,b),{padInfo:k,outHeight:C,outWidth:$}=z7(o,c,u,m,g,w,y,r,a),v=i?f*h:f;let S;return a==="channelsFirst"?S=[l,v,C,$]:a==="channelsLast"&&(S=[l,C,$,v]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:C,outWidth:$,outChannels:v,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:b,inShape:n,outShape:S,filterShape:e}}function vn(n,e,t,s,o,r=!1,i="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,h,d]=n;else if(i==="channelsFirst")[l,d,c,u,h]=n;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,g]=e,[x,b,w]=du(t),[y,k,C]=du(s),$=Qs(p,y),v=Qs(f,k),S=Qs(m,C),{padInfo:T,outDepth:A,outHeight:z,outWidth:_}=B7(o,c,u,h,x,b,w,$,v,S,a),B=r?g*d:g;let M;return i==="channelsFirst"?M=[l,B,A,z,_]:i==="channelsLast"&&(M=[l,A,z,_,B]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:A,outHeight:z,outWidth:_,outChannels:B,padInfo:T,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:v,effectiveFilterWidth:S,dilationDepth:y,dilationHeight:k,dilationWidth:C,inShape:n,outShape:M,filterShape:e}}function M7(n,e,t,s,o){s==null&&(s=hu(n,e,t));const r=n[0],i=n[1],a=Er((r-e+2*s)/t+1,o),l=Er((i-e+2*s)/t+1,o);return[a,l]}function P7(n,e,t,s,o,r){o==null&&(o=hu(n,e[0],s[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*o>=e[a]&&(i[a]=Er((n[a]-e[a]+2*o)/s[a]+1,r));return i}function hu(n,e,t,s=1){const o=Qs(e,s);return Math.floor((n[0]*(t-1)-t+o)/2)}function Rr(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function du(n){return typeof n=="number"?[n,n,n]:n}function Qs(n,e){return e<=1?n:n+(n-1)*(e-1)}function z7(n,e,t,s,o,r,i,a,l){let c,u,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=M7([e,t],r,s,n,a);u=p[0],h=p[1]}else if(n==="same"){u=Math.ceil(e/s),h=Math.ceil(t/o);const d=Math.max(0,(u-1)*s+r-e),p=Math.max(0,(h-1)*o+i-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;c={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-r+1)/s),h=Math.ceil((t-i+1)/o);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=Er((e-r+d+p)/s+1,a),h=Er((t-i+f+m)/o+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:h}}function B7(n,e,t,s,o,r,i,a,l,c,u){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=P7([e,t,s,1],[a,l,c],1,[o,r,i],n,u);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/o),p=Math.ceil(t/r),f=Math.ceil(s/i);const m=(d-1)*o+a-e,g=(p-1)*r+l-t,x=(f-1)*i+c-s,b=Math.floor(m/2),w=m-b,y=Math.floor(g/2),k=g-y,C=Math.floor(x/2),$=x-C;h={top:y,bottom:k,left:C,right:$,front:b,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Er(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function cs(n){const[e,t,s]=Rr(n);return e===1&&t===1&&s===1}function Dt(n,e){return cs(n)||cs(e)}function us(n){return Rr(n).every(e=>e>0)}function an(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Ut(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")I(Vs(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(o=>{I(Vs(o),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V7(n,e){const s={x:N(n,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(da,s,o)}const L=F({reshape_:V7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n,e,t,s,o){const r=N(n,"x","avgPool","float32"),i=1;I(Dt(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=L(r,[1,r.shape[0],r.shape[1],r.shape[2]])),I(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Ut("avgPool",s,o);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o};let h=D.runKernel(Ti,c,u);return h=se(h,r.dtype),l?L(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const pu=F({avgPool_:W7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(n,e,t,s,o,r="NDHWC"){const i=N(n,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),I(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),I(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Ut("avgPool3d",s,o);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:r};let h=D.runKernel(Ri,c,u);return h=se(h,a.dtype),l?L(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const G7=F({avgPool3d_:U7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(n,e=0){I(n.length>=1,()=>"Pass at least one tensor to concat");const t=Qp(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),t.length===1)return ls(t[0]);const s=t,o={axis:e};return D.runKernel(Li,s,o)}const Gt=F({concat_:H7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n,e,t=!1,s=!1){let o=N(n,"a","matMul"),r=N(e,"b","matMul");[o,r]=st(o,r);const i={a:o,b:r},a={transposeA:t,transposeB:s};return D.runKernel(Ei,i,a)}const Ee=F({matMul_:q7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(n){const t={x:N(n,"x","sigmoid","float32")};return D.runKernel(fr,t)}const eo=F({sigmoid_:K7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(n,e,t){const s=N(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const o={x:s},r={begin:e,size:t};return D.runKernel(xa,o,r)}const Be=F({slice_:j7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const t={x:N(n,"x","tanh","float32")};return D.runKernel(wr,t)}const _a=F({tanh_:X7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n,e,t){const s=N(n,"x","batchToSpaceND"),o=e.reduce((a,l)=>a*l);I(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),I(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),I(s.shape[0]%o===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);const r={x:s},i={blockShape:e,crops:t};return D.runKernel(Di,r,i)}const fu=F({batchToSpaceND_:Y7});function Z7(n){let e;return n.rank===0||n.rank===1?e=L(n,[1,1,1,n.size]):n.rank===2?e=L(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=L(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n,e,t,s,o,r){r==null&&(r=.001);const i=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let c;o!=null&&(c=N(o,"scale","batchNorm"));let u;s!=null&&(u=N(s,"offset","batchNorm")),I(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:Z7(i),scale:c,offset:u,mean:a,variance:l},p={varianceEpsilon:r},f=D.runKernel(Wi,d,p);return L(f,i.shape)}const Ma=F({batchNorm_:J7});function Q7(n,e,t,s,o,r){const i=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let c;o!=null&&(c=N(o,"scale","batchNorm"));let u;return s!=null&&(u=N(s,"offset","batchNorm")),I(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),I(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),I(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&I(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&I(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Ma(i,a,l,u,c,r)}const ex=F({batchNorm2d_:Q7});function tx(n,e,t,s,o,r){const i=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let c;o!=null&&(c=N(o,"scale","batchNorm"));let u;return s!=null&&(u=N(s,"offset","batchNorm")),I(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),I(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),I(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&I(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&I(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Ma(i,a,l,u,c,r)}const nx=F({batchNorm3d_:tx});function sx(n,e,t,s,o,r){const i=N(n,"x","batchNorm"),a=N(e,"mean","batchNorm"),l=N(t,"variance","batchNorm");let c;o!=null&&(c=N(o,"scale","batchNorm"));let u;return s!=null&&(u=N(s,"offset","batchNorm")),I(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),I(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),I(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&I(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&I(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Ma(i,a,l,u,c,r)}const ox=F({batchNorm4d_:sx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rx(n,e,t){const s=N(n,"x","bincount"),o=N(e,"weights","bincount");I(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),I(t>=0,()=>`size must be non-negative, but got ${t}.`),I(o.size===s.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${o.shape}.`);const r={x:s,weights:o},i={size:t};return D.runKernel(cc,r,i)}const ix=F({bincount_:rx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ax(n,e){let t=N(n,"broadcastTo","x");const s=t.shape;if(sn(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=L(t,c)}const o=t.shape,r=Array.from(e);for(let c=e.length-1;c>=0;c--)if(o[c]===e[c])r[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return ls(t);const a={x:t},l={reps:r};return D.runKernel(kr,a,l)}const Dr=F({broadcastTo_:ax});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lx(n){const t={x:N(n,"x","ceil","float32")};return D.runKernel(_o,t)}const cx=F({ceil_:lx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pa(n,e,t){sn(n),t=t||Us(e);const s={shape:n,value:e,dtype:t};return D.runKernel(Sc,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ux(n,e,t){const s=N(n,"x","clipByValue");if(I(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Pa(s.shape,e,s.dtype);const o={x:s},r={clipValueMin:e,clipValueMax:t};return D.runKernel(Mo,o,r)}const s1=F({clipByValue_:ux});function hx(n){return Gt(n,0)}const dx=F({concat1d_:hx});function px(n,e){return Gt(n,e)}const fx=F({concat2d_:px});function mx(n,e){return Gt(n,e)}const gx=F({concat3d_:mx});function xx(n,e){return Gt(n,e)}const bx=F({concat4d_:xx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yx(n,e,t,s,o="NHWC",r=[1,1],i){const a=N(n,"x","conv2d","float32"),l=N(e,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),I(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Ut("conv2d",s,i);const h=o==="NHWC"?c.shape[3]:c.shape[1];I(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),I(Dt(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),I(us(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),I(us(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},f=D.runKernel(Fi,d,p);return u?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const hs=F({conv2d_:yx});function wx(n,e,t,s,o="NWC",r=1,i){const a=N(n,"x","conv1d"),l=N(e,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=L(a,[1,a.shape[0],a.shape[1]])),I(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),I(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Ut("conv1d",s,i),I(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),I(Dt(t,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${r}'`),I(us(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),I(us(t),()=>"Error in conv1D: Stride should be larger than 0."),I(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const h=L(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=L(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=hs(d,h,[1,t],s,"NHWC",[1,r],i);return u?L(g,[g.shape[2],g.shape[3]]):L(g,[g.shape[0],g.shape[2],g.shape[3]])}const mf=F({conv1d_:wx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kx(n,e,t,s,o,r="NHWC",i){I(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,c=!1;e.rank===3&&(c=!0,l=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),I(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),I(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),I(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];I(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),I(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Ut("conv2dDerInput",o,i);const d={dy:l,filter:t},p={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,inputShape:a},f=D.runKernel(Oi,d,p);return c?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const mu=F({conv2DBackpropInput_:kx});function Cx(n,e,t,s,o,r){const i=N(n,"x","conv2dTranspose"),a=N(e,"filter","conv2dTranspose");return mu(t,i,a,s,o,"NHWC",r)}const gf=F({conv2dTranspose_:Cx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ix(n,e,t,s,o="NDHWC",r=[1,1,1]){const i=N(n,"x","conv3d"),a=N(e,"filter","conv3d");let l=i,c=!1;i.rank===4&&(c=!0,l=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),I(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),I(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),I(Dt(t,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),I(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),I(us(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),I(us(t),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:l,filter:a},h={strides:t,pad:s,dataFormat:o,dilations:r},d=D.runKernel(_i,u,h);return c?L(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const $x=F({conv3d_:Ix});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vx(n,e,t,s,o){I(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let r=n,i=e,a=!1;e.rank===4&&(a=!0,i=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const l=r[4],c=i.shape[4];I(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),I(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),I(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),I(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),I(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const u={dy:i,filter:t},h={pad:o,strides:s,inputShape:r},d=D.runKernel(fc,u,h);return a?L(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const xf=F({conv3DBackpropInput_:vx});function Sx(n,e,t,s,o){const r=N(n,"x","conv3dTranspose"),i=N(e,"filter","conv3dTranspose");return xf(t,r,i,s,o)}const Nx=F({conv3dTranspose_:Sx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tx(n){const t={x:N(n,"x","cos","float32")};return D.runKernel(Po,t)}const gu=F({cos_:Tx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rx(n){const t={x:N(n,"x","cosh","float32")};return D.runKernel(zo,t)}const bf=F({cosh_:Rx});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ex(n,e=0,t=!1,s=!1){const r={x:N(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return D.runKernel(mc,r,i)}const xu=F({cumprod_:Ex});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dx(n,e=0,t=!1,s=!1){const r={x:N(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return D.runKernel(Mi,r,i)}const yf=F({cumsum_:Dx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(n,e,t,s=!1){const o=N(n,"x","denseBincount"),r=N(e,"weights","denseBincount");I(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),I(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),I(t>=0,()=>`size must be non-negative, but got ${t}.`),I(r.size===o.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${r.shape}.`);const i={x:o,weights:r},a={size:t,binaryOutput:s};return D.runKernel(xc,i,a)}const wf=F({denseBincount_:Ax});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lx(n,e,t="NHWC"){const s=N(n,"x","depthToSpace","float32"),o=t==="NHWC"?s.shape[1]:s.shape[2],r=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];I(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),I(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${s.shape}`),I(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),I(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return D.runKernel(bc,a,l)}const Fx=F({depthToSpace_:Lx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ox(n,e,t,s,o="NHWC",r=[1,1],i){const a=N(n,"x","depthwiseConv2d","float32"),l=N(e,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),I(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=o==="NHWC"?c.shape[3]:c.shape[1];I(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Ut("depthwiseConv2d",s,i);const d={x:c,filter:l},p={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},f=D.runKernel(Pi,d,p);return u?L(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const bu=F({depthwiseConv2d_:Ox});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _x(n,e,t,s,o=[1,1],r="NHWC"){const i=N(n,"x","dilation2d"),a=N(e,"filter","dilation2d");I(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),I(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),I(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=i,c=!1;i.rank===3&&(l=L(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0),I(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const u={x:l,filter:a},h={strides:t,pad:s,dilations:o},d=D.runKernel(zi,u,h);return c?L(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Mx=F({dilation2d_:_x});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(n,e){const t=n.length,s=[];for(let o=0;o<t;o++){const r=t-1-o,i=n[r]||1;(e[e.length-1-o]||1)>1&&i===1&&s.unshift(r)}return s}function ht(n,e){const t=[];for(let s=0;s<e.length;s++){const o=n[n.length-s-1],r=e.length-s-1,i=e[r];(o==null||o===1&&i>1)&&t.unshift(r)}return t}function ge(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let o=0;o<t;o++){let r=n[n.length-o-1];r==null&&(r=1);let i=e[e.length-o-1];if(i==null&&(i=1),r===1)s[t-o-1]=i;else if(i===1)s[t-o-1]=r;else if(r!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-o-1]=r}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Px(n,e){let t=N(n,"a","equal","string_or_numeric"),s=N(e,"b","equal","string_or_numeric");[t,s]=st(t,s),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(Bi,o)}const U1=F({equal_:Px});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zx(n,e,t){const s=N(e,"a","where"),o=N(t,"b","where"),r=N(n,"condition","where","bool"),i=ge(ge(r.shape,s.shape),o.shape),a=Dr(r,i),l=Dr(s,i),c=Dr(o,i),u={condition:a,t:l,e:c};return D.runKernel(ga,u)}const Mt=F({where_:zx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bx(n){const t={x:N(n,"x","zerosLike")};return D.runKernel($a,t)}const ve=F({zerosLike_:Bx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vx(n,e){let t=N(n,"a","div"),s=N(e,"b","div");[t,s]=st(t,s);const o=he(t,s),r=ve(o),i=U1(s,r);return Mt(i,r,o)}const Wx=F({divNoNan_:Vx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ux(n,e){const t=N(n,"t1","dot"),s=N(e,"t2","dot");I((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const o=t.rank===1?t.size:t.shape[1],r=s.rank===1?s.size:s.shape[0];if(I(o===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${r}.`),t.rank===1&&s.rank===1){const i=L(t,[1,-1]),a=L(s,[-1,1]),l=Ee(i,a);return L(l,[])}else if(t.rank===1&&s.rank===2){const i=L(t,[1,-1]),a=L(s,[s.shape[0],s.shape[1]]),l=Ee(i,a);return L(l,[l.size])}else if(t.rank===2&&s.rank===1){const i=L(s,[-1,1]),a=Ee(t,i);return L(a,[a.size])}else{const i=L(s,[s.shape[0],s.shape[1]]);return Ee(t,i)}}const Gx=F({dot_:Ux});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hx(n,...e){const t=e.map((o,r)=>N(o,`tensors${r}`,"einsum")),s={equation:n};return D.runKernel(Ic,t,s)}const Ar=F({einsum_:Hx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(n){const t={x:N(n,"x","elu","float32")};return D.runKernel(Vo,t)}const za=F({elu_:qx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kx(n){let e=N(n,"x","erf");I(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=se(e,"float32"));const t={x:e};return D.runKernel(Wo,t)}const kf=F({erf_:Kx});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yu(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Cf(n,e,t){const s=n.length+e.length,o=[];let r=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?o.push(n[r++]):o.push(e[i++]);return o}function yt(n,e){const t=[],s=n.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&t.push(n[r]);const o=e.map(r=>n[r]);return[t,o]}function lt(n,e){const t=e.map(s=>1);return Cf(n,t,e)}function $t(n,e,t){I(yu(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Ze(n,e){if(yu(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Sn(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function ot(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(n,e=null,t=!1){const o={x:N(n,"x","max")},r={reductionIndices:e,keepDims:t};return D.runKernel(Ji,o,r)}const S1=F({max_:jx});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xx(n,e=null,t=!1){const o={x:N(n,"x","min")},r={axis:e,keepDims:t};return D.runKernel(na,o,r)}const Ba=F({min_:Xx});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yx(n,e){let t=N(n,"base","pow"),s=N(e,"exp","pow");[t,s]=st(t,s);const o={a:t,b:s};return D.runKernel(or,o)}const ds=F({pow_:Yx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function De(n,e){if((d1(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&d1(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Fa(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zx(n){const t={x:N(n,"x","sqrt","float32")};return D.runKernel(gr,t)}const At=F({sqrt_:Zx});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jx(n){const e=N(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const qe=F({square_:Jx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qx(n,e=null,t=!1){let s=N(n,"x","sum");s.dtype==="bool"&&(s=se(s,"int32"));const o={x:s},r={axis:e,keepDims:t};return D.runKernel(ba,o,r)}const ue=F({sum_:Qx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eb(n,e="euclidean",t=null,s=!1){n=N(n,"x","norm");const o=If(n,e,t);let r=o.shape;if(s){const i=ke(t,n.shape);r=lt(o.shape,i)}return L(o,r)}function If(n,e,t=null){if(n.rank===0)return _t(n);if(n.rank!==1&&t===null)return If(L(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ue(_t(n),t);if(e===1/0)return S1(_t(n),t);if(e===-1/0)return Ba(_t(n),t);if(e==="euclidean"||e===2)return At(ue(ds(_t(n),De(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return S1(ue(_t(n),t[0]),t[1]-1);if(e===1/0)return S1(ue(_t(n),t[1]),t[0]);if(e===-1/0)return Ba(ue(_t(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return At(ue(qe(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Va=F({norm_:eb});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(n,e=null,t=!1){return Va(n,"euclidean",e,t)}const nb=F({euclideanNorm_:tb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n){const t={x:N(n,"x","exp")};return D.runKernel(Uo,t)}const G1=F({exp_:sb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ob(n,e=0){const t=N(n,"x","expandDims","string_or_numeric");I(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},o={dim:e};return D.runKernel(Vi,s,o)}const Ht=F({expandDims_:ob});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(n){const t={x:N(n,"x","expm1")};return D.runKernel(Go,t)}const ib=F({expm1_:rb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ab(n,e){const t=N(n,"x","tile","string_or_numeric");I(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},o={reps:e};return D.runKernel(kr,s,o)}const N1=F({tile_:ab});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(n,e,t,s="float32"){e==null&&(e=n);const o=Ce([n,e],s),r=n<=e?n:e;for(let a=0;a<r;++a)o.set(1,a,a);const i=L(o.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return N1(Ht(i,0),[t[0],1,1]);if(t.length===2)return N1(Ht(Ht(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return N1(Ht(Ht(Ht(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const $f=F({eye_:lb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cb(n){const t={x:N(n,"x","floor","float32")};return D.runKernel(Ho,t)}const Wa=F({floor_:cb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ub(n,e,t=0,s=0){const o=N(n,"x","gather"),r=N(e,"indices","gather","int32"),i={x:o,indices:r},a={axis:t,batchDims:s};return D.runKernel(Ui,i,a)}const wu=F({gather_:ub});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(n,e){let t=N(n,"a","greater","string_or_numeric"),s=N(e,"b","greater","string_or_numeric");[t,s]=st(t,s),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(Gi,o)}const o1=F({greater_:hb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n,e){let t=N(n,"a","greaterEqual","string_or_numeric"),s=N(e,"b","greaterEqual","string_or_numeric");[t,s]=st(t,s),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(Ko,o)}const ps=F({greaterEqual_:db});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pb(n){const t={input:N(n,"input","imag")};return D.runKernel(Rc,t)}const ku=F({imag_:pb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fb(n){const t={x:N(n,"x","isFinite")};return D.runKernel(Xo,t)}const mb=F({isFinite_:fb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(n){const t={x:N(n,"x","isInf")};return D.runKernel(Yo,t)}const xb=F({isInf_:gb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n){const t={x:N(n,"x","isNaN")};return D.runKernel(Zo,t)}const yb=F({isNaN_:bb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n,e=.2){const s={x:N(n,"x","leakyRelu")},o={alpha:e};return D.runKernel(Hi,s,o)}const Cu=F({leakyRelu_:wb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kb(n,e){let t=N(n,"a","less","string_or_numeric"),s=N(e,"b","less","string_or_numeric");[t,s]=st(t,s),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(qi,o)}const Ua=F({less_:kb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cb(n,e){let t=N(n,"a","lessEqual","string_or_numeric"),s=N(e,"b","lessEqual","string_or_numeric");[t,s]=st(t,s),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(Ki,o)}const no=F({lessEqual_:Cb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ib(n,e=5,t=1,s=1,o=.5){const r=N(n,"x","localResponseNormalization");I(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),I(Vs(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=r,a=!1;r.rank===3&&(a=!0,i=L(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:i},c={depthRadius:e,bias:t,alpha:s,beta:o},u=D.runKernel(Zi,l,c);return a?L(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const $b=F({localResponseNormalization_:Ib});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vb(n){const t={x:N(n,"x","log","float32")};return D.runKernel(Jo,t)}const H1=F({log_:vb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(n){const t={x:N(n,"x","log1p")};return D.runKernel(Qo,t)}const vf=F({log1p_:Sb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nb(n,e){I(Jl(n),()=>"The f passed in variableGrads(f) must be a function"),I(e==null||Array.isArray(e)&&e.every(c=>c instanceof Aa),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in D.registeredVariables)e.push(D.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,o=e.length;e=e.filter(c=>c.trainable),I(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const r=!0,{value:i,grads:a}=D.gradients(n,e,null,r);I(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),I(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:i,grads:l}}function so(n){return D.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tb(n){const t={x:N(n,"x","neg")};return D.runKernel(oa,t)}const rt=F({neg_:Tb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(n){const t={x:N(n,"x","softplus")};return D.runKernel(mr,t)}const Lr=F({softplus_:Rb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eb(n){const e=N(n,"x","logSigmoid");return so(s=>({value:rt(Lr(rt(s))),gradFunc:i=>E(i,eo(rt(s)))}))(e)}const Db=F({logSigmoid_:Eb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(n,e){let t=N(n,"a","sub"),s=N(e,"b","sub");[t,s]=st(t,s);const o={a:t,b:s};return D.runKernel(br,o)}const pe=F({sub_:Ab});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lb(n,e=-1){const t=N(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return so((o,r)=>{const a=S1(o,e,!0),l=pe(o,a),c=pe(se(l,"float32"),H1(ue(G1(l),e,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,m=G1(p);return pe(h,E(ue(h,e,f),m))}}})(t)}const Sf=F({logSoftmax_:Lb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(n,e=null,t=!1){const s=N(n,"x","logSumExp"),o=ke(e,s.shape),r=S1(s,o,!0),i=pe(s,r),a=G1(i),l=ue(a,o),c=H1(l),u=Y(L(r,c.shape),c);if(t){const h=lt(u.shape,o);return L(u,h)}return u}const Nf=F({logSumExp_:Fb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ob(n,e){const t=N(n,"a","logicalAnd","bool"),s=N(e,"b","logicalAnd","bool");ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(ji,o)}const ln=F({logicalAnd_:Ob});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(n){const t={x:N(n,"x","logicalNot","bool")};return D.runKernel(Xi,t)}const Iu=F({logicalNot_:_b});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mb(n,e){const t=N(n,"a","logicalOr","bool"),s=N(e,"b","logicalOr","bool");ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(Yi,o)}const Tf=F({logicalOr_:Mb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pb(n,e){const t=N(n,"a","logicalXor","bool"),s=N(e,"b","logicalXor","bool");return ge(t.shape,s.shape),ln(Tf(n,e),Iu(ln(n,e)))}const zb=F({logicalXor_:Pb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bb(n,e,t,s,o){const r=N(n,"x","maxPool"),i=1;let a=r,l=!1;r.rank===3&&(l=!0,a=L(r,[1,r.shape[0],r.shape[1],r.shape[2]])),I(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),I(Dt(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Ut("maxPool",s,o);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o},h=D.runKernel(Qi,c,u);return l?L(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const $u=F({maxPool_:Bb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vb(n,e=[1,1,1],t,s,o,r="NDHWC"){const i=N(n,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),I(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Ut("maxPool3d",s,o);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:r},h=D.runKernel(ea,c,u);return l?L(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Wb=F({maxPool3d_:Vb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ub(n,e){let t=N(n,"a","maximum"),s=N(e,"b","maximum");[t,s]=st(t,s),t.dtype==="bool"&&(t=se(t,"int32"),s=se(s,"int32")),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(er,o)}const Nn=F({maximum_:Ub});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gb(n,e=null,t=!1){const o={x:N(n,"x","mean")},r={axis:e,keepDims:t};return D.runKernel(ta,o,r)}const ct=F({mean_:Gb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(n,e="float32"){if(sn(n),e==="complex64"){const s=wt(n,"float32"),o=wt(n,"float32");return os(s,o)}const t=Et(U(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(n,e="float32"){if(sn(n),e==="complex64"){const s=Tn(n,"float32"),o=wt(n,"float32");return os(s,o)}const t=ec(U(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hb(n,e){let t=N(n,"a","minimum"),s=N(e,"b","minimum");[t,s]=st(t,s),t.dtype==="bool"&&(t=se(t,"int32"),s=se(s,"int32")),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(tr,o)}const Fr=F({minimum_:Hb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(n,e,t){I(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=N(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");I(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const o=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)I(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),I(e[a][0]>=0&&e[a][0]<=s.shape[a]-o&&e[a][1]>=0&&e[a][1]<=s.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-o} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:t},i={x:s};return D.runKernel(sa,i,r)}const Kb=F({mirrorPad_:qb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jb(n,e){let t=N(n,"a","mod"),s=N(e,"b","mod");[t,s]=st(t,s);const o={a:t,b:s};return D.runKernel(nr,o)}const Xb=F({mod_:jb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(n,e=null,t=!1){n=N(n,"x","moments");const s=ke(e,n.shape),o=ct(n,s,t);let r=o.shape;t||(r=lt(o.shape,s));const i=qe(pe(se(n,"float32"),L(o,r))),a=ct(i,s,t);return{mean:o,variance:a}}const vu=F({moments_:Yb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zb(n,e){let t=N(n,"a","notEqual","string_or_numeric"),s=N(e,"b","notEqual","string_or_numeric");[t,s]=st(t,s),ge(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(ra,o)}const Ga=F({notEqual_:Zb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jb(n,e,t=1,s=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:N(n,"indices","oneHot","int32")},a={dtype:o,depth:e,onValue:t,offValue:s};return D.runKernel(aa,i,a)}const Rf=F({oneHot_:Jb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qb(n){const t={x:N(n,"x","onesLike")};return D.runKernel(ia,t)}const f1=F({onesLike_:Qb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ey(n,e,t=0){const s=N(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:t},r={x:s};return D.runKernel(ca,r,o)}const Su=F({pad_:ey});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ty(n,e,t){const s=N(n,"x","spaceToBatchND");I(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),I(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),I(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const o={x:s},r={blockShape:e,paddings:t};return D.runKernel(ya,o,r)}const Nu=F({spaceToBatchND_:ty});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ny(n,e,t,s,o,r,i){o==null&&(o=[1,1]),r==null&&(r=1),s===0&&(s="valid");const a=N(n,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(Dt(r,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`);const u=p1(l.shape,e,r,o,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=oy([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=sy([u.inHeight,u.inWidth],h,d),g=p?s:"valid",x=p?l:Nu(l,h,f),w=(t==="avg"?()=>pu(x,e,r,g,i):()=>$u(x,e,r,g,i))(),y=p?w:fu(w,h,m);return c?L(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function sy(n,e,t){const s=t.map(u=>u[0]),o=t.map(u=>u[1]),r=n.concat(s,o),i=e.map((u,h)=>(u-r[h]%u)%u),a=o.map((u,h)=>u+i[h]),l=e.map((u,h)=>[s[h],a[h]]),c=e.map((u,h)=>[0,i[h]]);return[l,c]}function oy(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),o=s.map(i=>Math.floor(i/2)),r=s.map((i,a)=>i-o[a]);return s.map((i,a)=>[o[a],r[a]])}const ry=F({pool_:ny});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iy(n,e){const t=N(n,"x","prelu"),s=N(e,"alpha","prelu"),o={x:t,alpha:s};return D.runKernel(ua,o)}const Tu=F({prelu_:iy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ay(n,e=null,t=!1){let s=N(n,"x","prod");s.dtype==="bool"&&(s=se(s,"int32"));const o={x:s},r={axis:e,keepDims:t};return D.runKernel(ha,o,r)}const ly=F({prod_:ay});var Ru={exports:{}};Ru.exports,function(n){(function(e,t,s){function o(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function i(l,c){var u=new o(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=i:this.alea=i})(Zn,n)}(Ru);var cy=Ru.exports,Eu={exports:{}};Eu.exports,function(n){(function(e,t,s){function o(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=i:this.xor128=i})(Zn,n)}(Eu);var uy=Eu.exports,Du={exports:{}};Du.exports,function(n){(function(e,t,s){function o(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=i:this.xorwow=i})(Zn,n)}(Du);var hy=Du.exports,Au={exports:{}};Au.exports,function(n){(function(e,t,s){function o(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=i:this.xorshift7=i})(Zn,n)}(Au);var dy=Au.exports,Lu={exports:{}};Lu.exports,function(n){(function(e,t,s){function o(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,m,g,x=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;u.w=g,u.X=x,u.i=f}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=i:this.xor4096=i})(Zn,n)}(Lu);var py=Lu.exports,Fu={exports:{}};Fu.exports,function(n){(function(e,t,s){function o(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var c=new o(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}t&&t.exports?t.exports=i:this.tychei=i})(Zn,n)}(Fu);var fy=Fu.exports,Ef={exports:{}},my={},gy=Object.freeze({__proto__:null,default:my}),xy=i6(gy);(function(n){(function(e,t,s){var o=256,r=6,i=52,a="random",l=s.pow(o,r),c=s.pow(2,i),u=c*2,h=o-1,d;function p(y,k,C){var $=[];k=k==!0?{entropy:!0}:k||{};var v=x(g(k.entropy?[y,w(t)]:y??b(),3),$),S=new f($),T=function(){for(var A=S.g(r),z=l,_=0;A<c;)A=(A+_)*o,z*=o,_=S.g(1);for(;A>=u;)A/=2,z/=2,_>>>=1;return(A+_)/z};return T.int32=function(){return S.g(4)|0},T.quick=function(){return S.g(4)/4294967296},T.double=T,x(w(S.S),t),(k.pass||C||function(A,z,_,B){return B&&(B.S&&m(B,S),A.state=function(){return m(S,{})}),_?(s[a]=A,z):A})(T,v,"global"in k?k.global:this==s,k.state)}function f(y){var k,C=y.length,$=this,v=0,S=$.i=$.j=0,T=$.S=[];for(C||(y=[C++]);v<o;)T[v]=v++;for(v=0;v<o;v++)T[v]=T[S=h&S+y[v%C]+(k=T[v])],T[S]=k;($.g=function(A){for(var z,_=0,B=$.i,M=$.j,V=$.S;A--;)z=V[B=h&B+1],_=_*o+V[h&(V[B]=V[M=h&M+z])+(V[M]=z)];return $.i=B,$.j=M,_})(o)}function m(y,k){return k.i=y.i,k.j=y.j,k.S=y.S.slice(),k}function g(y,k){var C=[],$=typeof y,v;if(k&&$=="object")for(v in y)try{C.push(g(y[v],k-1))}catch{}return C.length?C:$=="string"?y:y+"\0"}function x(y,k){for(var C=y+"",$,v=0;v<C.length;)k[h&v]=h&($^=k[h&v]*19)+C.charCodeAt(v++);return w(k)}function b(){try{var y;return d&&(y=d.randomBytes)?y=y(o):(y=new Uint8Array(o),(e.crypto||e.msCrypto).getRandomValues(y)),w(y)}catch{var k=e.navigator,C=k&&k.plugins;return[+new Date,e,C,e.screen,w(t)]}}function w(y){return String.fromCharCode.apply(0,y)}if(x(s.random(),t),n.exports){n.exports=p;try{d=xy}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:Zn,[],Math)})(Ef);var by=Ef.exports,yy=cy,wy=uy,ky=hy,Cy=dy,Iy=py,$y=fy,fs=by;fs.alea=yy,fs.xor128=wy,fs.xorwow=ky,fs.xorshift7=Cy,fs.xor4096=Iy,fs.tychei=$y;var Ou=fs;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Df{constructor(e,t,s,o,r){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=Ou.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let e,t,s=!1;for(;!s;){let o,r,i;do o=2*this.random()-1,r=2*this.random()-1,i=o*o+r*r;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*a,t=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class vy{constructor(e=0,t=1,s,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ou.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sy(n,e=0,t=1,s,o){if(sn(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new Df(e,t,s,!1,o),i=Ce(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const Ny=F({randomNormal_:Sy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ty(n,e=0,t=1,s="float32",o){sn(n);const r=Ce(n,s),i=new vy(e,t,null,o);for(let a=0;a<r.values.length;a++)r.values[a]=i.nextValue();return r.toTensor()}const Or=F({randomUniform_:Ty});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const o={start:n,stop:e,step:t,dtype:s};return D.runKernel(_c,{},o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ry(n){const t={input:N(n,"input","real")};return D.runKernel(Mc,t)}const Ha=F({real_:Ry});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ey(n){const t={x:N(n,"x","reciprocal")};return D.runKernel(rr,t)}const Dy=F({reciprocal_:Ey});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ay(n){const t={x:N(n,"x","relu")};return D.runKernel(ir,t)}const ms=F({relu_:Ay});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ly(n){const t={x:N(n,"x","relu6")};return D.runKernel(ar,t)}const Af=F({relu6_:Ly});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fy(n,e){const s={x:N(n,"x","reverse")},o={dims:e};return D.runKernel(ma,s,o)}const gs=F({reverse_:Fy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oy(n){const t={x:N(n,"x","round")};return D.runKernel(lr,t)}const Lf=F({round_:Oy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _y(n){const t={x:N(n,"x","rsqrt","float32")};return D.runKernel(cr,t)}const Ff=F({rsqrt_:_y});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function My(n){const t={x:N(n,"x","selu")};return D.runKernel(ur,t)}const Of=F({selu_:My});function Py(n,e,t,s,o,r=[1,1],i="NHWC"){const a=N(n,"x","separableConv2d"),l=N(e,"depthwiseFilter","separableConv2d"),c=N(t,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=L(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");I(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),I(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),I(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),I(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),I(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],p=l.shape[3];I(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=bu(u,l,s,o,i,r),g=hs(f,c,1,"valid",i);return h?L(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const _f=F({separableConv2d_:Py});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zy(n){const t={x:N(n,"x","sign")};return D.runKernel(pr,t)}const By=F({sign_:zy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vy(n){const t={x:N(n,"x","sin","float32")};return D.runKernel(hr,t)}const Mf=F({sin_:Vy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wy(n){const t={x:N(n,"x","sinh")};return D.runKernel(dr,t)}const Pf=F({sinh_:Wy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uy(n,e,t){const s=N(n,"x","slice1d");return I(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Be(s,[e],[t])}const _u=F({slice1d_:Uy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gy(n,e,t){const s=N(n,"x","slice2d");return I(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Be(s,e,t)}const zf=F({slice2d_:Gy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hy(n,e,t){const s=N(n,"x","slice3d");return I(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Be(s,e,t)}const Mu=F({slice3d_:Hy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qy(n,e,t){const s=N(n,"x","slice4d");return I(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Be(s,e,t)}const qa=F({slice4d_:qy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ky(n,e=-1){const t=N(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},o={dim:e};return D.runKernel(ka,s,o)}const Pu=F({softmax_:Ky});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jy(n){I(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(vc,e)}const Bf=F({fft_:jy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xy(n){I(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Tc,e)}const zu=F({ifft_:Xy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yy(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const o=L(n,[t,e]);s=zu(o)}else{const o=[t,2*(e-1)],r=L(Ha(n),[t,e]),i=L(ku(n),[t,e]),a=gs(Be(r,[0,1],[t,e-2]),1),l=E(gs(Be(i,[0,1],[t,e-2]),1),De(-1)),c=Gt([r,a],1),u=Gt([i,l],1),h=L(os(c,u),[o[0],o[1]]);s=zu(h)}if(s=Ha(s),n.rank===3&&n.shape[0]!==0){const o=s,r=n.shape[0];s=L(s,[r,s.shape[0]/r,s.shape[1]]),o.dispose()}return s}const Zy=F({irfft_:Yy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jy(n,e,t=0){const o={x:N(n,"x","split")},r={numOrSizeSplits:e,axis:t};return D.runKernel(wa,o,r)}const r1=F({split_:Jy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qy(n,e){I(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let o;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,o=Be(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,o=Gt([n,wt(f)],n.shape.length-1),t=e}else o=n;const r=ve(o),i=L(os(o,r),[s,t]),a=Bf(i),l=Math.floor(t/2)+1,c=Ha(a),u=ku(a),h=r1(c,[l,t-l],c.shape.length-1),d=r1(u,[l,t-l],u.shape.length-1),p=o.shape.slice();return p[o.shape.length-1]=l,L(os(h[0],d[0]),p)}const e8=F({rfft_:Qy});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n,e){let t=N(n,"a","squaredDifference"),s=N(e,"b","squaredDifference");[t,s]=st(t,s),ge(t.shape,s.shape);const o={a:t,b:s},r={};return D.runKernel(xr,o,r)}const n8=F({squaredDifference_:t8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s8(n,e){const t=N(n,"x","squeeze","string_or_numeric");return L(t,bn(t.shape,e).newShape)}const Mr=F({squeeze_:s8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(n,e=0){const t=Qp(n,"tensors","stack","string_or_numeric");I(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&I(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,o={axis:e};return D.runKernel(la,s,o)}const cn=F({stack_:o8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(n,e=0){const s={x:N(n,"x","step")},o={alpha:e};return D.runKernel(Cr,s,o)}const Pr=F({step_:r8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n,e,t,s,o=0,r=0,i=0,a=0,l=0){const u={x:N(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return D.runKernel(Wc,u,h)}const a8=F({stridedSlice_:i8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(n){const t={x:N(n,"x","tan","float32")};return D.runKernel(yr,t)}const c8=F({tan_:l8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(n,e){Gd(n);const t=La(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Fa(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zr(n,e,t){if(Gd(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=La(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Fa(n,e,s,t)}function Vf(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(r+` update.rank < ${o}. `);if(n.length<s+(t.rank-o))throw new Error(r+` Output shape length < ${s+(t.rank-o)}`);if(t.rank!==o+n.length-s)throw new Error(r+` update.rank != ${o+n.length-s}`);for(let i=0;i<o;++i)if(t.shape[i]!==e.shape[i])throw new Error(r+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-o;++i)if(t.shape[i+o]!==n[i+s])throw new Error(r+` updates.shape[${i+o}] (${t.shape[i+o]}) != shape[${i+o}] (${n[i+o]})`)}function u8(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Vf(t,e,n)}function xs(n,e,t){const s=e.shape.length,o=s>1?e.shape[s-1]:1,r=t.length;let i=1;for(let h=o;h<r;++h)i*=t[h];const a=o<1?1:o,l=U(e.shape)/a,c=[...le(t.slice(0,o)),1],u=U(t);return{sliceRank:o,numUpdates:l,sliceSize:i,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n,e=1,t=!0){const s=N(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);const r={x:s},i={k:e,sorted:t},[a,l]=D.runKernel(Uc,r,i);return{values:a,indices:l}}const d8=F({topk_:h8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(n,e=0,t=1,s,o){if(sn(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Df(e,t,s,!0,o),i=Ce(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const Wf=F({truncatedNormal_:p8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f8(n,e=0){const t=N(n,"x","unique","string_or_numeric");I(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},o={axis:e},[r,i]=D.runKernel(Hc,s,o);return{values:r,indices:i}}const m8=F({unique_:f8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(n,e,t){const s=N(n,"x","unsortedSegmentSum"),o=N(e,"segmentIds","unsortedSegmentSum","int32");I(Vs(t),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:o},i={numSegments:t};return D.runKernel(Ia,r,i)}const Uf=F({unsortedSegmentSum_:g8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x8(n,e=0){const t=N(n,"x","unstack","string_or_numeric");I(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},o={axis:e};return D.runKernel(Ca,s,o)}const bs=F({unstack_:x8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(n,e=!0,t,s){return D.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gf(n,e){const t=[];for(let r=0;r<e.length;r++)e[r]&&t.push(r);const s=Ce(n,"int32"),o=Ce([t.length,n.length],"int32");for(let r=0;r<t.length;r++){const i=s.indexToLoc(t[r]),a=r*n.length;o.values.set(i,a)}return o.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(n,e,t){const s=N(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),I(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{I(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const o={x:s},r={perm:e};return s.dtype==="complex64"?O(()=>{let i=Ha(s),a=ku(s);return i=D.runKernel(qs,{x:i},r),a=D.runKernel(qs,{x:a},r),t&&(a=rt(a)),os(i,a)}):D.runKernel(qs,o,r)}const Se=F({transpose_:y8});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w8(n,e){if(e==null)return n.shape.slice();if(Re(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n,e,t,s){const o=N(n,"x","dropout");if(I(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),I(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof ut?o.clone():o;const r=w8(o,t),i=1-e,a=he(Wa(Y(Or(r,0,1,"float32",s),i)),i);return E(o,a)}const C8=F({dropout_:k8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I8(n,e,t,s,o,r="NHWC",i){let a=n;n.rank===3&&(a=L(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=L(e,[1,e.shape[0],e.shape[1],e.shape[2]])),I(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),I(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),I(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];I(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),I(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),Ut("conv2dDerFilter",o,i);const h={x:a,dy:l},d={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,filterShape:t};return D.runKernel(dc,h,d)}const Bu=F({conv2DBackpropFilter_:I8});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return E(n,Pr(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Wu(n,e){let t=e;const s=ht(n.shape,e.shape);return s.length>0&&(t=ue(t,s)),L(t,n.shape)}function Uu(n,e,t,s){if(e==="linear")return n;if(e==="relu")return ms(n);if(e==="elu")return za(n);if(e==="relu6")return Af(n);if(e==="prelu")return Tu(n,t);if(e==="leakyrelu")return Cu(n,s);if(e==="sigmoid")return eo(n);throw new Error(`Unknown fused activation ${e}.`)}const Gu=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8({x:n,filter:e,strides:t,pad:s,dataFormat:o="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Gu(D.state.gradientDepth,l)===!1){I(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=hs(n,e,t,s,o,r,i);return a!=null&&(C=Y(C,a)),Uu(C,l,c,u)}const h=N(n,"x","conv2d","float32"),d=N(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=L(h,[1,h.shape[0],h.shape[1],h.shape[2]])),I(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),I(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Ut("fused conv2d",s,i);const m=o==="NHWC"?p.shape[3]:p.shape[1];I(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),I(Dt(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const g=It(p.shape,d.shape,t,r,s,i);let x;a!=null&&(x=N(a,"bias","fused conv2d"),[x]=st(x,h),o==="NHWC"?ge(g.outShape,x.shape):(I(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),I(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(c!=null){const C=c.shape;if(I(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)I(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{ge(C,g.outShape)}catch{const v=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(v)}b=N(c,"prelu weights","fused conv2d")}const w=(C,$)=>{I(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[v,S,T,A]=$,z=Vu(C,T,l);I(cs(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const _=mu(S.shape,z,v,t,s),B=Bu(S,z,v.shape,t,s),M=[_,B];if(A!=null){const V=Wu(A,z);M.push(V)}return M},y={x:p,filter:d,bias:x,preluActivationWeights:b},k={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:u};return a==null?so(($,v,S)=>{let T=D.runKernel(Sa,y,k);return S([v,$,T]),f&&(T=L(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:w}})(p,d):so(($,v,S,T)=>{let A=D.runKernel(Sa,y,k);return T([v,$,A,S]),f&&(A=L(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:w}})(p,d,x)}const v8=F({fusedConv2d_:$8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S8(n,e,t,s,o,r=[1,1],i){let a=n;n.rank===3&&(a=L(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:a,dy:l},u={strides:s,pad:o,dimRoundingMode:i,dilations:r,filterShape:t};return D.runKernel(yc,c,u)}const N8=F({depthwiseConv2dNativeBackpropFilter_:S8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(n,e,t,s,o,r=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=L(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:a,filter:t},u={strides:s,pad:o,dimRoundingMode:i,dilations:r,inputShape:n},h=D.runKernel(wc,c,u);return l?L(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const R8=F({depthwiseConv2dNativeBackpropInput_:T8});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:o,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Gu(D.state.gradientDepth,r)===!1){let A=Ee(n,e,t,s);return o!=null&&(A=Y(A,o)),Uu(A,r,i,a)}let l=N(n,"a","fused matMul"),c=N(e,"b","fused matMul");[l,c]=st(l,c);const u=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=U(f),x=U(m);I(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=ge(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),y=t?L(l,[g,u,d]):L(l,[g,d,u]),k=s?L(c,[x,p,h]):L(c,[x,h,p]);let C;o!=null&&(C=N(o,"bias","fused matMul"),[C]=st(C,l),ge(w,C.shape));let $;i!=null&&($=N(i,"prelu weights","fused matMul"));const v=(A,z)=>{const[_,B,M,V]=z,H=Vu(L(A,M.shape),M,r);let G,q;if(!t&&!s?(G=Ee(H,B,!1,!0),q=Ee(_,H,!0,!1)):!t&&s?(G=Ee(H,B,!1,!1),q=Ee(H,_,!0,!1)):t&&!s?(G=Ee(B,H,!1,!0),q=Ee(_,H,!1,!1)):(G=Ee(B,H,!0,!0),q=Ee(H,_,!0,!0)),o!=null){const j=Wu(V,H);return[G,q,j]}else return[G,q]},S={a:y,b:k,bias:C,preluActivationWeights:$},T={transposeA:t,transposeB:s,activation:r,leakyreluAlpha:a};return o==null?so((z,_,B)=>{const M=D.runKernel(va,S,T);return B([z,_,M]),{value:L(M,w),gradFunc:v}})(y,k):so((z,_,B,M)=>{const V=D.runKernel(va,S,T);return M([z,_,V,B]),{value:L(V,w),gradFunc:v}})(y,k,C)}const Hf=F({fusedMatMul_:E8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n,e,t,s,o="bilinear",r=0){const i=N(n,"image","cropAndResize"),a=N(e,"boxes","cropAndResize","float32"),l=N(t,"boxInd","cropAndResize","int32"),c=a.shape[0];I(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),I(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),I(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),I(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),I(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),I(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const u={image:i,boxes:a,boxInd:l},h={method:o,extrapolationValue:r,cropSize:s};return D.runKernel(gc,u,h)}const A8=F({cropAndResize_:D8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(n){const e=N(n,"image","flipLeftRight","float32");I(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(Nc,t,{})}const F8=F({flipLeftRight_:L8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(n){const e=N(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];I(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),I(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,N1(e,o)}const _8=F({grayscaleToRGB_:O8});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(n){const e=N(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];I(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),I(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const o=e.dtype,r=se(e,"float32"),i=Jt([.2989,.587,.114]);let a;switch(e.rank){case 2:a=Ar("ij,j->i",r,i);break;case 3:a=Ar("ijk,k->ij",r,i);break;case 4:a=Ar("ijkl,l->ijk",r,i);break;case 5:a=Ar("ijklm,m->ijkl",r,i);break;case 6:a=Ar("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Ht(a,-1),se(a,o)}const P8=F({rgbToGrayscale_:M8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(n,e,t=0,s=.5){const o=N(n,"image","rotateWithOffset","float32");I(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const r={image:o},i={radians:e,fillValue:t,center:s};return D.runKernel(qc,r,i)}const B8=F({rotateWithOffset_:z8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(n,e,t,s,o,r){s==null&&(s=.5),o==null&&(o=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=n.shape[0];return t=Math.min(t,i),I(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),I(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),I(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),I(e.rank===1,()=>"scores must be a 1D tensor"),I(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),I(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const r=N(n,"boxes","nonMaxSuppression","float32"),i=N(e,"scores","nonMaxSuppression","float32"),a=oo(r,i,t,s,o);t=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:o};return D.runKernel(Lc,{boxes:r,scores:i},l)}const W8=F({nonMaxSuppression_:V8});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n,e,t){const s=G8(n,e,t),o=s<0?-(s+1):s;n.splice(o,0,e)}function G8(n,e,t){return q8(n,e,t||H8)}function H8(n,e){return n>e?1:n<e?-1:0}function q8(n,e,t){let s=0,o=n.length,r=0,i=!1;for(;s<o;){r=s+(o-s>>>1);const a=t(e,n[r]);a>0?s=r+1:(o=r,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hu(n,e,t,s,o){return ju(n,e,t,s,o,0)}function qu(n,e,t,s,o,r){return ju(n,e,t,s,o,0,!1,r,!0)}function Ku(n,e,t,s,o,r){return ju(n,e,t,s,o,r,!0)}function ju(n,e,t,s,o,r,i=!1,a=!1,l=!1){const c=[];for(let g=0;g<e.length;g++)e[g]>o&&c.push({score:e[g],boxIndex:g,suppressBeginIndex:0});c.sort(qf);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<t&&c.length>0;){const g=c.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<o)break;let y=!1;for(let k=h.length-1;k>=w;--k){const C=K8(n,b,h[k]);if(C>=s){y=!0;break}if(g.score=g.score*j8(s,u,C),g.score<=o)break}g.suppressBeginIndex=h.length,y||(g.score===x?(h.push(b),d.push(g.score)):g.score>o&&U8(c,g,qf))}const p=h.length,f=t-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function K8(n,e,t){const s=n.subarray(e*4,e*4+4),o=n.subarray(t*4,t*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(o[0],o[2]),u=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),d=Math.max(o[1],o[3]),p=(a-r)*(l-i),f=(h-c)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(r,c),g=Math.max(i,u),x=Math.min(a,h),b=Math.min(l,d),w=Math.max(x-m,0)*Math.max(b-g,0);return w/(p+f-w)}function j8(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function qf(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function X8(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const r=N(n,"boxes","nonMaxSuppressionAsync"),i=N(e,"scores","nonMaxSuppressionAsync"),a=oo(r,i,t,s,o);t=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const l=await Promise.all([r.data(),i.data()]),c=l[0],u=l[1],{selectedIndices:h}=Hu(c,u,t,s,o);return r!==n&&r.dispose(),i!==e&&i.dispose(),Jt(h,"int32")}const Y8=X8;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=N(n,"boxes","nonMaxSuppression"),a=N(e,"scores","nonMaxSuppression"),l=oo(i,a,t,s,o,r);t=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:i,scores:a},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:r},h=D.runKernel(Oc,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const J8=F({nonMaxSuppressionWithScore_:Z8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Q8(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=N(n,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),l=oo(i,a,t,s,o,r);t=l.maxOutputSize,s=l.iouThreshold,o=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([i.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=Ku(u,h,t,s,o,r);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Jt(d,"int32"),selectedScores:Jt(p)}}const ew=Q8;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tw(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=N(n,"boxes","nonMaxSuppression"),a=N(e,"scores","nonMaxSuppression"),l=oo(i,a,t,s,o,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:a},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},f=D.runKernel(Fc,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const nw=F({nonMaxSuppressionPadded_:tw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sw(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=N(n,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),l=oo(i,a,t,s,o,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:m}=qu(d,p,c,u,h,r);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Jt(f,"int32"),validOutputs:De(m,"int32")}}const ow=sw;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rw(n,e,t=!1,s=!1){const o=N(n,"images","resizeBilinear");I(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),I(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),I(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:r},l={alignCorners:t,halfPixelCenters:s,size:e},c=D.runKernel(fa,a,l);return i?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Kf=F({resizeBilinear_:rw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iw(n,e,t=!1,s=!1){const o=N(n,"images","resizeNearestNeighbor");I(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),I(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),I(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),I(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=L(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:r},l={alignCorners:t,halfPixelCenters:s,size:e},c=D.runKernel(pa,a,l);return i?L(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const jf=F({resizeNearestNeighbor_:iw});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aw(n,e="binary",t=!1,s=.5){const o=N(n,"image","threshold"),r=.2989,i=.587,a=.114,l=o.shape[0]*o.shape[1];let c=E(Jt([s]),255),u,h,d,p;if(I(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),I(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),I(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),I(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[u,h,d]=r1(o,[1,1,1],-1);const g=E(u,r),x=E(h,i),b=E(d,a);p=Y(Y(g,x),b)}else p=n;if(e==="otsu"){const g=ix(se(Lf(p),"int32"),Sr([]),256);c=lw(g,l)}const f=t?no(p,c):o1(p,c);return se(E(f,255),"int32")}function lw(n,e){let t=Jt([-1]),s=Jt([0]),o=Jt([0]),r,i,a,l,c,u;for(let h=0;h<n.size-1;h++){r=Be(n,0,h+1),i=Be(n,h+1),c=he(ue(r),e),u=he(ue(i),e);const d=ue(E(r,_r(0,r.size)));a=he(d,ue(r));const p=Pa(i.shape,r.size),f=Y(_r(0,i.size),p),m=E(i,f);l=he(ue(m),ue(i));const g=pe(a,l),x=pe(a,l),b=E(c,u);o=E(E(b,g),x);const w=o1(o,s);s=Mt(w,o,s),t=Mt(w,Jt([h]),t)}return t}const cw=F({threshold_:aw});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(n,e,t="nearest",s="constant",o=0,r){const i=N(n,"image","transform","float32"),a=N(e,"transforms","transform","float32");I(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),I(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),I(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:i,transforms:a},c={interpolation:t,fillMode:s,fillValue:o,outputShape:r};return D.runKernel(Gc,l,c)}const hw=F({transform_:uw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dw(n,e,t){const s=N(n,"a","bandPart");I(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const o=s.shape,[r,i]=s.shape.slice(-2);let a,l;typeof e=="number"?(I(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),I(e<=r,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`),a=N(e<0?r:e,"numLower","bandPart")):(I(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Mt(Ua(e,0),r,Fr(e,r))),typeof t=="number"?(I(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),I(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),l=N(t<0?i:t,"numUpper","bandPart")):(I(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Mt(Ua(t,0),i,Fr(t,i)));const c=L(_r(0,r,1,"int32"),[-1,1]),u=_r(0,i,1,"int32"),h=pe(c,u),d=ln(no(h,a),ps(h,rt(l))),p=wt([r,i],s.dtype);return L(cn(bs(L(s,[-1,r,i])).map(f=>Mt(d,f,p))),o)}const pw=F({bandPart_:dw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fw(n){let e;if(Array.isArray(n)){e=!1,I(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=n[0].shape[0];for(let r=1;r<n.length;++r)I(n[r].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${o})`)}else e=!0,n=r1(n,n.shape[0],0).map(o=>Mr(o,[0]));I(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let o=0;o<n.length;++o)t.push(D.tidy(()=>{let r=s[o];if(o>0)for(let i=0;i<o;++i){const a=E(ue(E(t[i],r)),t[i]);r=pe(r,a)}return he(r,Va(r,"euclidean"))}));return e?cn(t,0):t}const mw=F({gramSchmidt_:fw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gw(n,e=!1){if(I(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Xf(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=bs(L(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),o=[],r=[];s.forEach(l=>{const[c,u]=Xf(l,e);o.push(c),r.push(u)});const i=L(cn(o,0),n.shape),a=L(cn(r,0),n.shape);return[i,a]}}function Xf(n,e=!1){return D.tidy(()=>{I(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let o=$f(t),r=ls(n);const i=zr([[1]],[1,1]);let a=ls(i);const l=t>=s?s:t;for(let c=0;c<l;++c){const u=r,h=a,d=o;[a,r,o]=D.tidy(()=>{const p=Be(r,[c,c],[t-c,1]),f=Va(p),m=Be(r,[c,c],[1,1]),g=Mt(o1(m,0),zr([[-1]]),zr([[1]])),x=pe(m,E(g,f)),b=he(p,x);b.shape[0]===1?a=ls(i):a=Gt([i,Be(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const w=rt(he(Ee(g,x),f)),y=Be(r,[c,0],[t-c,s]),k=E(w,a),C=Se(a);if(c===0)r=pe(y,Ee(k,Ee(C,y)));else{const S=pe(y,Ee(k,Ee(C,y)));r=Gt([Be(r,[0,0],[c,s]),S],0)}const $=Se(k),v=Be(o,[0,c],[t,o.shape[1]-c]);if(c===0)o=pe(v,Ee(Ee(v,a),$));else{const S=pe(v,Ee(Ee(v,a),$));o=Gt([Be(o,[0,0],[t,c]),S],1)}return[a,r,o]}),ye([u,h,d])}return!e&&t>s&&(o=Be(o,[0,0],[t,s]),r=Be(r,[0,0],[s,s])),[o,r]})}const xw=F({qr_:gw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const un={flipLeftRight:F8,grayscaleToRGB:_8,resizeNearestNeighbor:jf,resizeBilinear:Kf,rgbToGrayscale:P8,rotateWithOffset:B8,cropAndResize:A8,nonMaxSuppression:W8,nonMaxSuppressionAsync:Y8,nonMaxSuppressionWithScore:J8,nonMaxSuppressionWithScoreAsync:ew,nonMaxSuppressionPadded:nw,nonMaxSuppressionPaddedAsync:ow,threshold:cw,transform:hw},bw={bandPart:pw,gramSchmidt:mw,qr:xw};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yw=new Map,ww=new Map;class ro{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class m1{constructor(){this.classNameMap={}}static getMap(){return m1.instance==null&&(m1.instance=new m1),m1.instance}static register(e){m1.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function K(n,e,t){I(n.className!=null,()=>"Class being registered does not have the static className property defined."),I(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),I(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,o=e+">"+s;return m1.register(n),yw.set(o,n),ww.set(n,o),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rn extends ro{minimize(e,t=!1,s){const{value:o,grads:r}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(i)}else this.applyGradients(r);return ye(r),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Nb(e,t)}dispose(){this.iterations_!=null&&ye(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:De(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Rn,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yf extends Rn{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accum_grad`,variable:O(()=>ve(r).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${s}/accum_var`,variable:O(()=>ve(r).variable(i))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[o].variable,c=this.accumulatedUpdates[o].variable;O(()=>{const u=Y(E(l,this.rho),E(qe(a),1-this.rho)),h=E(he(At(Y(c,this.epsilon)),At(Y(l,this.epsilon))),a),d=Y(E(c,this.rho),E(qe(h),1-this.rho));l.assign(u),c.assign(d);const p=Y(E(h,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ye(this.accumulatedGrads.map(e=>e.variable)),ye(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zf extends Rn{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accumulator`,variable:O(()=>Pa(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[o].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[o].variable;O(()=>{const l=Y(a,qe(i));a.assign(l);const c=Y(E(he(i,At(Y(l,D.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ye(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jf extends Rn{static get className(){return"Adam"}constructor(e,t,s,o=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],O(()=>{this.accBeta1=De(t).variable(),this.accBeta2=De(s).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);O(()=>{const s=pe(1,this.accBeta1),o=pe(1,this.accBeta2);t.forEach((r,i)=>{const a=D.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:O(()=>ve(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:O(()=>ve(a).variable(l))});const c=Array.isArray(e)?e[i].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=Y(E(u,this.beta1),E(c,1-this.beta1)),p=Y(E(h,this.beta2),E(qe(c),1-this.beta2)),f=he(d,s),m=he(p,o);u.assign(d),h.assign(p);const g=Y(E(he(f,Y(At(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(E(this.accBeta1,this.beta1)),this.accBeta2.assign(E(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ye(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ye(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),O(()=>{this.accBeta1.assign(ds(this.beta1,this.iterations_+1)),this.accBeta2.assign(ds(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qf extends Rn{static get className(){return"Adamax"}constructor(e,t,s,o=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],O(()=>{this.iteration=De(0).variable(),this.accBeta1=De(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);O(()=>{const s=pe(1,this.accBeta1),o=he(-this.learningRate,Y(E(this.iteration,this.decay),1));t.forEach((r,i)=>{const a=D.registeredVariables[r],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:ve(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:ve(a).variable(l)});const c=Array.isArray(e)?e[i].tensor:e[r];if(c==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=Y(E(u,this.beta1),E(c,1-this.beta1)),p=E(h,this.beta2),f=_t(c),m=Nn(p,f);u.assign(d),h.assign(m);const g=Y(E(he(o,s),he(d,Y(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(E(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ye(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ye(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xu extends Rn{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=Array.isArray(e)?e[o].tensor:e[s];if(r==null)return;const i=D.registeredVariables[s];O(()=>{const a=Y(E(this.c,r),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=V1(De(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e2 extends Xu{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=De(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${s}/momentum`,variable:O(()=>ve(r).variable(!1))});const i=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[s];a!=null&&O(()=>{let l;const c=Y(E(this.m,i),a);this.useNesterov?l=Y(E(this.c,Y(a,E(c,this.m))),r):l=Y(E(this.c,c),r),i.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ye(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t2 extends Rn{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,o=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${s}/rms`,variable:O(()=>ve(r).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${s}/momentum`,variable:O(()=>ve(r).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${s}/mg`,variable:O(()=>ve(r).variable(i))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[o].variable,c=this.accumulatedMoments[o].variable;O(()=>{const u=Y(E(l,this.decay),E(qe(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[o].variable,d=Y(E(h,this.decay),E(a,1-this.decay)),p=he(E(a,this.learningRate),At(pe(u,Y(qe(d),this.epsilon)))),f=Y(E(c,this.momentum),p);l.assign(u),h.assign(d),c.assign(f);const m=pe(r,f);r.assign(m)}else{const h=Y(E(l,this.decay),E(qe(a),1-this.decay)),d=Y(E(c,this.momentum),he(E(a,this.learningRate),At(Y(h,this.epsilon))));l.assign(h),c.assign(d);const p=pe(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ye(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ye(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ye(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kw=[Yf,Zf,Jf,Qf,e2,t2,Xu];function Cw(){for(const n of kw)K(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let o=0;const r=l=>(l.then(c=>{const u=t+ ++o/n.length*(s-t);return e(u),c}),l);function i(l){I(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){I(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),I(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),I(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Iw(n,e){e==null&&(e={});const t=e.fetchFunc==null?P().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await n2(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(a):await n2(a,e.onProgress,.5,1)}function $w(n,e){var t;const s=e.fetchFunc==null?P().platform.fetch:e.fetchFunc;let o=0,r;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;o<n.length;){r||(r=(await s(n[o],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:c}=await r.read();if(l){o++,r=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,o/n.length);continue}i.enqueue(c);return}i.close()}})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vw="application/octet-stream",Sw="application/json";class Yu{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(I(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=P().platform.fetch,I(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&I(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=V6(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(o)],{type:Sw}),"model.json"),e.weightData!=null){const i=In.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:vw}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:ru(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,o=t.weightsManifest;if(s==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return U6(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=of(e.weightsManifest),o=()=>$w(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:o})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,o]=Nw(t),r=this.weightPathPrefix||s,i=[],a=[];for(const l of e)for(const c of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):i.push(r+c+o);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),s=of(e),o=await Iw(t,this.loadOptions);return[s,o]}}Yu.URL_SCHEME_REGEX=/^https?:\/\//;function Nw(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),o=t>e?n.substring(t):"";return[s+"/",o]}function s2(n){return n.match(Yu.URL_SCHEME_REGEX)!=null}const o2=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>s2(s)):t=s2(n),t)return r2(n,e)}return null};bt.registerSaveRouter(o2),bt.registerLoadRouter(o2);function r2(n,e){return new Yu(n,e)}function Tw(n,e){return r2(n,e)}function Zu(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(U(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const o=e.shape,r=o[o.length-1];let i=1;for(let h=0;h<o.length-1;++h)i*=o[h];const a=n.shape,l=o.slice();l.pop();let c=1;for(let h=r;h<t;++h)c*=a[h],l.push(a[h]);const u=[...le(n.shape).map(h=>h/c),1].slice(0,r);return[l,i,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ju=-2,Rw=-1;function Qu(n,e,t){const s=n.shape.length;I(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),I(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let o=0;o<s;++o)I(e[o]+t[o]<=n.shape[o],()=>`Error in slice${s}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${n.shape[o]})`)}function Ew(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function eh(n,e,t){const s=[];for(let o=0;o<n.length;o++)s[o]=Math.ceil((e[o]-n[o])/t[o]);return s}function i2(n,e,t,s){const o=[...n];for(let r=o.length;r<s.length;r++)o.push(1);for(let r=0;r<t;r++)r===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function a2(n,e,t){return t<=n?t:t-(e-1)}function l2(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function Dw(n,e,t,s,o,r,i,a,l){const c=n.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const p=e[0],f=t+1;u=c2(i,p,f,s,n),h=u2(a,p,f,o,n),d=i2(r,p,f,n)}else for(let p=0;p<c;p++)u[p]=d2(i,s,r,n,p,l),h[p]=p2(a,o,r,n,p,l),d[p]=h2(r,p,l);return{begin:u,end:h,strides:d}}function c2(n,e,t,s,o){const r=[...o],i=l2(t,e);for(let a=0;a<r.length;a++)if(i.indexOf(a)>-1)r[a]=0;else{const l=a2(e,t,a);let c=s[l];n&1<<l&&(c=0),r[a]=c}return r}function u2(n,e,t,s,o){const r=[...o],i=l2(t,e);for(let a=0;a<r.length;a++)if(i.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=a2(e,t,a);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=o[a];r[a]<0&&(r[a]+=l),r[a]=Yn(0,r[a],o[a])}return r}function h2(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function d2(n,e,t,s,o,r){let i=e[o];const a=t[o]||1;(n&1<<o||r&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[o];return i<0&&(i+=l),i=Yn(0,i,l-1),i}function p2(n,e,t,s,o,r){let i=e[o];const a=t[o]||1;(n&1<<o||r&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[o];return i<0&&(i+=l),a>0?i=Yn(0,i,l):i=Yn(-1,i,l-1),i}function th(n,e,t){let s=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){s=o;break}for(let o=s+1;o<t.length;o++)if(e[o]>0||t[o]!==n[o])return!1;return!0}function nh(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Ka(n,e,t){let s;const o=n.shape.length;typeof e=="number"?s=[e,...new Array(o-1).fill(0)]:e.length<o?s=e.concat(new Array(o-e.length).fill(0)):s=e.slice(),s.forEach(i=>{I(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(o).fill(-1):typeof t=="number"?r=[t,...new Array(o-1).fill(-1)]:t.length<o?r=t.concat(new Array(o-t.length).fill(-1)):r=t,r=r.map((i,a)=>i>=0?i:(I(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,r]}function sh(n,e,t,s,o,r,i,a,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)u&&1<<w&a&&h.numAddAxisAfterEllipsis++,1<<w&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Aw(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let w=0;w<n.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const y=!!(d.shrinkAxisMask&1<<w),k=n[w];if(k===-1){g.push(y?1:-1);continue}const C=[d.beginMask&1<<w,d.endMask&1<<w],$=[d.strides[w]>0?0:-1,d.strides[w]>0?k:k-1];if(y&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const v=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(y){const z=d.begin[w]<0?k+d.begin[w]:d.begin[w];if(d.begin[w]=z,d.end[w]=d.begin[w]+1,z<0||z>=k)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=f2(d.begin[w],0,d.strides[w],k,C,$),d.end[w]=f2(d.end[w],1,d.strides[w],k,C,$);const A=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===k;p=p&&A,f=f&&(w===0&&d.strides[w]===1||A)}else p=p&&d.strides[w]===1&&v,f=f&&(w===0&&d.strides[w]===1||v);let S,T=!1;if(d.beginValid&&d.endValid?(S=d.end[w]-d.begin[w],T=!0):y?(S=1,T=!0):v&&k>=0&&(d.strides[w]<0?S=-k:S=k,T=!0),T){let A;S===0||S<0!=d.strides[w]<0?A=0:A=Math.trunc(S/d.strides[w])+(S%d.strides[w]!==0?1:0),g.push(A)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const y=d.finalShapeGatherIndices[w];y>=0?x.push(g[y]):y===Ju&&x.push(1)}return{finalShapeSparse:x.filter((w,y)=>d.finalShapeGatherIndices[y]!==Ju),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Aw(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const o=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Ju),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(Rw),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function f2(n,e,t,s,o,r){if(o[e])return t>0?r[e]:r[e+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}var Lw=Object.freeze({__proto__:null,assertParamsValid:Qu,computeFlatOffset:nh,computeOutShape:eh,getNormalizedAxes:Dw,isSliceContinous:th,maskToAxes:Ew,parseSliceParams:Ka,sliceInfo:sh,startForAxis:d2,startIndicesWithElidedDims:c2,stopForAxis:p2,stopIndicesWithElidedDims:u2,stridesForAxis:h2,stridesWithElidedDims:i2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fw{static sgd(e){return new Xu(e)}static momentum(e,t,s=!1){return new e2(e,t,s)}static rmsprop(e,t=.9,s=0,o=null,r=!1){return new t2(e,t,s,o,r)}static adam(e=.001,t=.9,s=.999,o=null){return new Jf(e,t,s,o)}static adadelta(e=.001,t=.95,s=null){return new Yf(e,t,s)}static adamax(e=.002,t=.9,s=.999,o=null,r=0){return new Qf(e,t,s,o,r)}static adagrad(e,t=.1){return new Zf(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=Fw;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ow=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function m2(){return new Promise(n=>Ow(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oh(n,e){const t=n[0].length;n.forEach((o,r)=>{I(o.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),I(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((o,r)=>{for(let i=0;i<t;i++)I(i===e||o[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${r}] (${o}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function q1(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var T1;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(T1||(T1={}));function g2(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let o=1;o<t.length;++o){const r=t[o],i=s[s.length-t.length+o],a=s[i];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+n}] = ${r} but shape[${o+n}] = ${a}`)}else s[i]=r}return s}function x2(n){const e={FIRST_DIM_SIZE:T1.FIRST_DIM_SIZE,VALUE_ROWIDS:T1.VALUE_ROWIDS,ROW_LENGTHS:T1.ROW_LENGTHS,ROW_SPLITS:T1.ROW_SPLITS,ROW_LIMITS:T1.ROW_LIMITS,ROW_STARTS:T1.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function b2(n){return n.length===0?0:n[0]===T1.FIRST_DIM_SIZE?n.length-1:n.length}function y2(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let o=0;o<Math.min(t,s-1);++o){const r=n[o],i=e[o+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-n.length}] = ${r} but ragged tensor input.flatValues.shape[${o-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rh=30;function ja(n){return n<=rh?n:Ql(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ih(n,e,t){const s=t*(typeof n=="number"?n:n[0]),o=e*(typeof n=="number"?n:n[1]);return[s,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(n,e,t,s=!0){let o=[];if(s)o=o.concat(e.slice(0)),o.push(n[0]/t),o=o.concat(n.slice(1));else{o=o.concat(n[0]);const r=e.length;for(let i=0;i<r;++i)o=o.concat([n[i+1]/e[i],e[i]]);o=o.concat(n.slice(r+1))}return o}function Vr(n,e,t=!0){const s=[];if(t){s.push(e);for(let o=e+1;o<n;++o)o<=2*e?(s.push(o),s.push(o-(e+1))):s.push(o)}else{const o=[],r=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?r.push(i):o.push(i);s.push(...o),s.push(0),s.push(...r)}return s}function Wr(n,e,t,s=!0){const o=[];s?o.push(n[0]/t):o.push(n[0]*t);for(let r=1;r<n.length;++r)r<=e.length?s?o.push(e[r-1]*n[r]):o.push(n[r]/e[r-1]):o.push(n[r]);return o}function ah(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function lh(n,e,t){const s=n.slice(0,1);for(let o=0;o<t;++o)s.push(n[o+1]-e[o][0]-e[o][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xa=1.7580993408473768,Ya=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ch=.3275911,uh=.254829592,hh=-.284496736,dh=1.421413741,ph=-1.453152027,fh=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function w2(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function k2(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=0;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function C2(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=2;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function mh(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function I2(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function $2(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let o=0;o<Math.ceil(n/2);o++){const r=(e?2:-2)*Math.PI*(o/n);t[o]=Math.cos(r),s[o]=Math.sin(r)}return{real:t,imag:s}}function v2(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),o=Math.cos(s),r=Math.sin(s);return{real:o,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gh="->",_w=/->/g,S2=",",N2="...";function xh(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(_w,"").length)/gh.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${gh}").`);const[s,o]=n.split(gh);I(s.indexOf(N2)===-1,()=>`The ellipsis notation ("${N2}") is not supported yet.`);const r=s.split(S2),i=r.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<o.length;++d){const p=o[d];if(!r.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==S2&&a.push(p)}const l=new Array(r.length);for(let d=0;d<i;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<r[d].length;++p)l[d].push(a.indexOf(r[d][p]))}const c=a.length,u=o.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function bh(n,e){let t=new Array(n);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;const s=[];for(let o=0;o<n;++o)t[o]===-1&&s.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:s}}function yh(n,e,t){const s=new Array(n);for(let o=0;o<t.length;++o){const r=t[o].shape;for(let i=0;i<e[o].length;++i)s[e[o][i]]===void 0?s[e[o][i]]=r[i]:I(s[e[o][i]]===r[i],()=>`Expected dimension ${s[e[o][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function wh(n,e){const t=n,s=[];let o=0;n.length===0&&t.push(-1),o=n.length+1;for(let i=0;i<o;++i)s.push([]);const r=[];for(let i=0;i<t.length;++i){const a=t[i],l=Mw(e,a);for(const c of l)r.indexOf(c)===-1&&(s[i].push(c),r.push(c))}return{path:t,steps:s}}function kh(n){return n.every((e,t)=>e===t)}function Mw(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function Ch(n,e,t=0){let s=[];if(typeof e=="number")I(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const o=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);I(o<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[r]=n.shape[t]-i}I(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function R2(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function E2(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function A2(n,e){return`size ${n} must be non-negative, not ${e}`}function L2(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function F2(n,e){const t=U(n),s=U(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function O2(n,e){const t=U(n),s=U(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ih(){return"segment ids must be >= 0"}function _2(){return"segment ids are not increasing"}function M2(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function P2(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z2(n,e){let t=!1,s;for(n<=rh?(s=n,t=!0):s=Ql(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=Ql(n,s+1);return s}function B2(n,e,t){const s=[],o=n.length;for(let r=0;r<o;r++)r!==e?s.push(n[r]):s.push(t);return s}function $h(n,e,t,s){const o=e.shape.length,r=n.shape.length;if(s!==0&&(s<-o||s>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${s}`);if(s<0&&(s+=o),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=n.shape[t],a=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<o;h++)a.push(e.shape[h]);for(let h=t+1;h<r;h++)a.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:i,outputShape:a}}var Pw=Object.freeze({__proto__:null,collectGatherOpShapeInfo:$h,computeOutShape:B2,segOpComputeOptimalWindowSize:z2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(n){try{return n.map(e=>Cn(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function V2(n){return n.map(e=>kn(e))}var zw=Object.freeze({__proto__:null,ERF_A1:uh,ERF_A2:hh,ERF_A3:dh,ERF_A4:ph,ERF_A5:fh,ERF_P:ch,PARALLELIZE_THRESHOLD:rh,get RowPartitionType(){return T1},SELU_SCALE:Ya,SELU_SCALEALPHA:Xa,applyActivation:Uu,assertAndGetBroadcastShape:ge,assertAxesAreInnerMostDims:$t,assertParamsConsistent:oh,assignToTypedArray:I2,axesAreInnerMostDims:yu,calculateShapes:xs,checkEinsumDimSizes:yh,checkPadOnDimRoundingMode:Ut,combineLocations:Cf,combineRaggedTensorToTensorShapes:g2,complexWithEvenIndex:k2,complexWithOddIndex:C2,computeConv2DInfo:It,computeConv3DInfo:vn,computeDefaultPad:hu,computeDilation2DInfo:Tr,computeOptimalWindowSize:ja,computeOutAndReduceShapes:yt,computeOutShape:q1,computePool2DInfo:p1,computePool3DInfo:rn,convertConv2DDataFormat:an,decodeEinsumEquation:xh,eitherStridesOrDilationsAreOne:Dt,expandShapeToKeepDim:lt,exponent:v2,exponents:$2,fromStringArrayToUint8:V2,fromUint8ToStringArray:dn,getAxesPermutation:Ze,getBroadcastDims:to,getComplexWithIndex:mh,getEinsumComputePath:wh,getEinsumPermutation:bh,getFusedBiasGradient:Wu,getFusedDyActivation:Vu,getImageCenter:ih,getInnerMostAxes:ot,getPermuted:Vr,getRaggedRank:b2,getReductionAxes:ht,getReshaped:Br,getReshapedPermuted:Wr,getRowPartitionTypesHelper:x2,getSliceBeginCoords:ah,getSliceSize:lh,getSparseFillEmptyRowsIndicesDenseShapeMismatch:T2,getSparseFillEmptyRowsNegativeIndexErrorMessage:R2,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:E2,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:L2,getSparseReshapeInputOutputMismatchErrorMessage:O2,getSparseReshapeInputOutputMultipleErrorMessage:F2,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:D2,getSparseReshapeNegativeOutputDimErrorMessage:A2,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:P2,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Ih,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:_2,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:M2,getUndoAxesPermutation:Sn,isIdentityPermutation:kh,log:s6,mergeRealAndImagArrays:hn,prepareAndValidate:Zu,prepareSplitSize:Ch,segment_util:Pw,shouldFuse:Gu,slice_util:Lw,splitRealAndImagArrays:w2,stridesOrDilationsArePositive:us,tupleValuesAreOne:cs,upcastType:Zt,validateDefaultValueShape:y2,validateInput:u8,validateUpdateShape:Vf,warn:n1});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Cw();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W2={kernelName:vi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(n,Pr(se(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bw={kernelName:To,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=qe(se(t,"float32")),o=At(pe(De(1),s));return rt(he(n,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vw={kernelName:Ro,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=At(pe(qe(se(t,"float32")),1));return he(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ww={kernelName:Hs,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=ge(t.shape,s.shape);return{a:()=>{let a=n;const l=ht(t.shape,o);return l.length>0&&(a=ue(a,l)),L(a,t.shape)},b:()=>{let a=n;const l=ht(s.shape,o);return l.length>0&&(a=ue(a,l)),L(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uw={kernelName:oc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,o)=>{t[o]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gw={kernelName:Si,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ve(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hw={kernelName:Ni,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ve(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw={kernelName:Eo,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,At(pe(De(1),qe(se(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kw={kernelName:Do,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=At(Y(De(1),qe(se(t,"float32"))));return he(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=ge(t.shape,s.shape);return{a:()=>{const a=Y(qe(t),qe(s));let l=E(n,he(s,a));const c=ht(t.shape,o);return c.length>0&&(l=ue(l,c)),L(l,t.shape)},b:()=>{const a=Y(qe(t),qe(s));let l=rt(E(n,he(t,a)));const c=ht(s.shape,o);return c.length>0&&(l=ue(l,c)),L(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xw={kernelName:Ao,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,Y(qe(se(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw={kernelName:Lo,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,pe(De(1),qe(se(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(n,e,t,s,o,r){const i=N(n,"dy","avgPool3dGrad"),a=N(e,"input","avgPool3dGrad");let l=i,c=a,u=!1;a.rank===4&&(u=!0,l=L(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),I(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),I(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Ut("avgPool3dGrad",o,r);const h={dy:l,input:c},d={filterSize:t,strides:s,pad:o,dimRoundingMode:r},p=D.runKernel(lc,h,d);return u?L(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Jw=F({avgPool3dGrad_:Zw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qw={kernelName:Ri,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:r,pad:i,dimRoundingMode:a}=t;return{x:()=>Jw(n,s,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n,e,t,s,o){const r=N(n,"dy","avgPoolGrad"),i=N(e,"input","avgPoolGrad");I(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let a=i,l=r,c=!1;i.rank===3&&(c=!0,a=L(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=L(r,[1,r.shape[0],r.shape[1],r.shape[2]])),I(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),I(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:t,strides:s,pad:o},d=D.runKernel(ac,u,h);return c?L(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const t9=F({avgPoolGrad_:e9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9={kernelName:Ti,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:r,pad:i}=t;return{x:()=>t9(n,s,o,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9={kernelName:Ei,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,o]=e,{transposeA:r,transposeB:i}=t;return!r&&!i?{a:()=>Ee(n,o,!1,!0),b:()=>Ee(s,n,!0,!1)}:!r&&i?{a:()=>Ee(n,o,!1,!1),b:()=>Ee(n,s,!0,!1)}:r&&!i?{a:()=>Ee(o,n,!1,!0),b:()=>Ee(s,n,!1,!1)}:{a:()=>Ee(o,n,!0,!0),b:()=>Ee(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9={kernelName:Di,gradFunc:(n,e,t)=>{const{blockShape:s,crops:o}=t;return{x:()=>Nu(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r9={kernelName:Q5,gradFunc:(n,e,t)=>{const s=t,o=s.inputShape,r=s.shape,i=Array.from(r);for(let l=o.length-1;l>=0;l--)if(o[l]===r[l])i[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>ue(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i9={kernelName:Oo,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9={kernelName:_o,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9={kernelName:Mo,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:o,clipValueMax:r}=t;return{x:()=>Mt(ln(ps(s,o),no(s,r)),n,ve(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9={kernelName:Ai,inputsToSave:["x"],gradFunc:W2.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u9={kernelName:Li,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:o}=t,r=ke(o,e[0].shape)[0],i=s.map(l=>l[r]);return r1(n,i,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h9={kernelName:Fi,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{dilations:r,strides:i,pad:a,dataFormat:l}=t;return I(cs(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>mu(s.shape,n,o,i,a,l),filter:()=>Bu(s,n,o.shape,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9={kernelName:Oi,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{strides:r,pad:i,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>hs(n,o,r,i,a,1,l),filter:()=>Bu(n,s,o.shape,r,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(n,e,t,s,o){let r=n;n.rank===4&&(r=L(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=L(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),I(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),I(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),I(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),I(r.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${t[3]}.`),I(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:r,dy:i},l={strides:s,pad:o,filterShape:t};return D.runKernel(pc,a,l)}const f9=F({conv3DBackpropFilter_:p9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m9={kernelName:_i,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:r}=t;I(cs(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>xf(i.shape,n,a,o,r),filter:()=>f9(i,n,a.shape,o,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9={kernelName:Po,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(rt(Mf(se(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9={kernelName:zo,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(Pf(se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b9={kernelName:Mi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o,exclusive:r,reverse:i}=t;return{x:()=>{const a=Ze([o],s.rank);let l=yf(n,o,r,!i);return a!=null&&(l=Se(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9={kernelName:Pi,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:r,dimRoundingMode:i}=t,a=s??[1,1];I(cs(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=e;return I(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),I(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),I(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),I(Dt(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),Ut("depthwiseConv2d",r,i),{x:()=>R8(l.shape,n,c,o,r,a,i),filter:()=>N8(l,n,c.shape,o,r,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w9={kernelName:zi,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,r={x:s,filter:o,dy:n},i={x:s,filter:o,dy:n};return{x:()=>D.runKernel(kc,r,t),filter:()=>D.runKernel(Cc,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9={kernelName:Vo,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>D.runKernel($c,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9={kernelName:Wo,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=E(G1(rt(qe(t))),2/Math.sqrt(Math.PI));return{x:()=>E(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I9={kernelName:Uo,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9={kernelName:Vi,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>L(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v9={kernelName:Go,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(n,G1(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9={kernelName:Ho,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N9={kernelName:qo,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=ge(t.shape,s.shape);return{a:()=>{const a=he(n,se(s,"float32")),l=ht(t.shape,o);return l.length>0?L(ue(a,l),t.shape):a},b:()=>{let a=E(n,se(t,"float32"));const l=ht(s.shape,o);l.length>0&&(a=L(ue(a,l),s.shape));const c=qe(s);return rt(he(a,se(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9={kernelName:Wi,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[o,r,i,a]=e,l=a??De(1),c=ht(r.shape,o.shape),u=[];if(r.rank===1){for(let y=0;y<o.shape.length-1;++y)u.push(o.shape[y]);u.push(1)}const h=pe(o,r),d=E(n,l),p=Ff(Y(i,De(s))),f=E(E(E(p,p),p),De(-.5));return{x:()=>r.rank===1?L(E(E(n,N1(L(p,[1,1,1,r.shape[0]]),u)),l),o.shape):L(E(E(n,p),l),o.shape),mean:()=>{let y=E(E(p,De(-1)),d);return r.rank===1&&(y=ue(y,c)),L(y,r.shape)},variance:()=>{let y=E(E(f,h),d);return r.rank===1&&(y=ue(y,c)),L(y,r.shape)},scale:()=>{const y=E(h,p);let k=E(n,y);return r.rank===1&&(k=ue(k,c)),L(k,r.shape)},offset:()=>{let y=n;return r.rank===1&&(y=ue(y,c)),L(y,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R9={kernelName:Ui,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,o]=e,{axis:r,batchDims:i}=t,a=ke(r,s.shape)[0],l=(c,u,h)=>()=>{const d=c.shape,p=u.size,f=d.slice(0,a),m=f.length,g=d.slice(r,d.length).slice(1),x=g.length,b=U2(0,m),w=U2(m+1,m+1+x),y=G2([f,[p],g]),k=L(h,y),C=L(u,[p]),$=G2([[m],b,w]),v=Se(k,$);let S=Uf(v,C,c.shape[a]);const T=Sn($);return S=Se(S,T),S};if(i===1){const c=s.shape[0],u=s.split(c,0);return{x:()=>cn(u.map((p,f)=>l(p,o.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>o}}else return{x:l(s,o,n),indices:()=>o}}};function U2(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function G2(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E9={kernelName:Ko,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>ve(t),b:()=>ve(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9={kernelName:jo,gradFunc:n=>({x:()=>se(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A9={kernelName:Xo,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L9={kernelName:Yo,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F9={kernelName:Zo,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O9={kernelName:Hi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:o}=t,r=o1(s,0);return{x:()=>Mt(r,n,E(n,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _9={kernelName:Qo,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,Y(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M9={kernelName:Jo,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,se(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9={kernelName:t6,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;return{logits:()=>{const i=G1(s);return pe(n,E(ue(n,o,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(n,e,t,s=5,o=1,r=1,i=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:o,alpha:r,beta:i};return D.runKernel(Ec,a,l)}const B9=F({localResponseNormalizationBackprop_:z9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9={kernelName:Zi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{depthRadius:r,bias:i,alpha:a,beta:l}=t;return{x:()=>B9(s,o,n,r,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,e,t,s){return e.rank<t.rank&&(e=L(e,lt(e.shape,s))),n.rank<t.rank&&(n=L(n,lt(n.shape,s))),{x:()=>E(n,se(U1(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q2={kernelName:Ji,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:o}=s,r=e[0],i=e[1],a=ke(o,r.shape),l=H2(n,i,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9={kernelName:er,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>E(n,se(ps(t,s),"float32")),b:()=>E(n,se(Ua(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U9(n,e,t,s,o,r,i){const a=N(n,"dy","maxPool3dGrad"),l=N(e,"input","maxPool3dGrad"),c=N(t,"output","maxPool3dGrad");let u=a,h=l,d=c,p=!1;l.rank===4&&(p=!0,u=L(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=L(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=L(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),I(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),I(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),I(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Ut("maxPool3dGrad",r,i);const f={dy:u,input:h,output:d},m={filterSize:s,strides:o,pad:r,dimRoundingMode:i},g=D.runKernel(Ac,f,m);return p?L(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const G9=F({maxPool3dGrad_:U9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H9={kernelName:ea,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=t;return{x:()=>G9(n,s,o,r,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q9(n,e,t,s,o,r,i){const a=N(n,"dy","maxPoolGrad"),l=N(e,"input","maxPoolGrad"),c=N(t,"output","maxPoolGrad");I(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),I(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),I(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Ut("maxPoolGrad",r,i);const u={dy:a,input:l,output:c},h={filterSize:s,strides:o,pad:r,dimRoundingMode:i};return D.runKernel(Dc,u,h)}const K9=F({maxPoolGrad_:q9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j9={kernelName:Qi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:r,strides:i,pad:a}=t;return{x:()=>K9(n,s,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X9={kernelName:ta,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t,r=ke(o,s.shape),a=yt(s.shape,r)[1],l=U(a);return{x:()=>{const u=s.shape.slice();r.forEach(p=>{u[p]=1});const h=L(n,u);return he(E(h,Tn(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y9={kernelName:na,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:o}=s,[r,i]=e,a=ke(o,r.shape),l=H2(n,i,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9={kernelName:tr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>E(n,se(no(t,s),"float32")),b:()=>E(n,se(o1(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J9={kernelName:sa,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,r=o.map(i=>i[0]);return{x:()=>Be(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q9={kernelName:nr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=ge(t.shape,s.shape);return{a:()=>{const a=ht(t.shape,o);return a.length>0?L(ue(n,a),t.shape):n},b:()=>{const a=E(n,rt(Wa(he(t,s)))),l=ht(s.shape,o);return l.length>0?L(ue(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ek={kernelName:sr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=ge(t.shape,s.shape);return{a:()=>{const a=E(n,se(s,"float32")),l=ht(t.shape,o);return l.length>0?L(ue(a,l),t.shape):a},b:()=>{const a=E(n,se(t,"float32")),l=ht(s.shape,o);return l.length>0?L(ue(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tk={kernelName:oa,gradFunc:n=>({x:()=>rt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nk={kernelName:aa,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>wt(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sk={kernelName:ia,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ok={kernelName:la,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return bs(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K2={kernelName:ca,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,r=o.map(i=>i[0]);return{x:()=>Be(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk={kernelName:or,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,o]=e,r=t,i=s,a=ge(r.shape,i.shape);return{a:()=>{const u=se(i,"float32");let h=E(n,E(u,ds(r,pe(u,De(1)))));const d=ht(r.shape,a);return d.length>0&&(h=ue(h,d)),L(h,r.shape)},b:()=>{const u=o1(r,0),h=Mt(u,H1(r),ve(r));let d=E(n,E(o,h));const p=ht(i.shape,a);return p.length>0&&(d=ue(d,p)),L(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ik={kernelName:ua,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,o=o1(t,0);return{x:()=>Mt(o,n,E(n,s)),alpha:()=>{let r=Mt(o,ve(n),E(n,t));const i=ht(s.shape,n.shape);return i.length>0&&(r=ue(r,i)),L(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n,e,t){const s=n.shape.slice();s[t]=1;const o=L(e,s),r=xu(n,t,!0,!1),i=xu(n,t,!0,!0),a=E(r,i);return E(o,a)}function lk(n,e,t){const s=n.shape.length,o=s-t.length,r=Ze(t,s);let i=n;r!=null&&(i=Se(n,r));const a=i.shape.slice(),c=a.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);a.push(c);const u=i.reshape(a);let h=ak(u,e,o);if(h=h.reshape(i.shape),r!=null){const d=Sn(r);h=Se(h,d)}return h}const ck={kernelName:ha,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;let r=[];return o==null?r=s.shape.map((i,a)=>a):typeof o=="number"?r=[o]:r=o,{x:()=>lk(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uk={kernelName:Bo,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=ge(t.shape,s.shape);return{a:()=>{const a=he(n,se(s,"float32")),l=ht(t.shape,o);return l.length>0?L(ue(a,l),t.shape):a},b:()=>{let a=E(n,se(t,"float32"));const l=ht(s.shape,o);l.length>0&&(a=L(ue(a,l),s.shape));const c=qe(s);return rt(he(a,se(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hk={kernelName:rr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,rt(qe(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk={kernelName:ar,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=E(no(t,6),Pr(t));return{x:()=>E(n,se(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pk={kernelName:ir,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(n,se(Pr(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk={kernelName:da,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>L(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mk={kernelName:fa,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>D.runKernel(zc,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gk={kernelName:pa,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>D.runKernel(Pc,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk={kernelName:ma,gradFunc:(n,e,t)=>{const{dims:s}=t,o=ke(s,n.shape);return{x:()=>gs(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk={kernelName:lr,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk={kernelName:cr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(he(n,E(ds(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk={kernelName:ga,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>se(ve(t),"float32"),t:()=>E(n,se(t,n.dtype)),e:()=>E(n,se(Iu(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk={kernelName:ur,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=o1(t,De(0)),o=De(Xa),r=De(Ya),i=E(n,r),a=E(E(n,o),G1(se(t,"float32")));return Mt(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck={kernelName:fr,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(n,E(t,pe(De(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik={kernelName:pr,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k={kernelName:hr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(gu(se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk={kernelName:dr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(bf(se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk={kernelName:xa,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:o,size:r}=t,i=s.shape,[a,l]=Ka(s,o,r),c=[];for(let u=0;u<n.rank;u++)c.push([a[u],i[u]-a[u]-l[u]]);return{x:()=>Su(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk={kernelName:ka,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:o}=t,r=!0,i=E(n,s);return{logits:()=>pe(i,E(ue(i,[o],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk={kernelName:mr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(n,eo(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j2={kernelName:ya,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:o}=t;return{x:()=>fu(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X2={kernelName:wa,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>Gt(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rk={kernelName:gr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,E(At(se(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek={kernelName:Bc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(n,E(se(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dk={kernelName:xr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=De(2);return{a:()=>E(n,E(o,pe(t,s))),b:()=>E(n,E(o,pe(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ak={kernelName:Cr,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lk={kernelName:br,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=ge(t.shape,s.shape);return{a:()=>{let a=n;const l=ht(t.shape,o);return l.length>0&&(a=ue(a,l)),L(a,t.shape)},b:()=>{let a=n;const l=ht(s.shape,o);return l.length>0&&(a=ue(a,l)),L(rt(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fk={kernelName:ba,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,o=s.shape.slice(),{axis:r}=t;ke(r,s.shape).forEach(c=>{o[c]=1});const a=L(n,o),l=E(a,Tn(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ok={kernelName:yr,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>he(n,qe(gu(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _k={kernelName:wr,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>E(pe(De(1),qe(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mk={kernelName:kr,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:o}=t;return{x:()=>{let i=ve(s);if(s.rank===1)for(let a=0;a<o[0];++a)i=Y(i,Be(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)i=Y(i,Be(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)i=Y(i,Be(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)for(let u=0;u<o[3];++u)i=Y(i,Be(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk={kernelName:qs,gradFunc:(n,e,t)=>{const s=t,{perm:o}=s,r=Sn(o);return{x:()=>Se(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk={kernelName:Ca,gradFunc:(n,e,t)=>{const s=t,{axis:o}=s;return{value:()=>cn(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bk={kernelName:Ia,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Vk(n,t)}}};function Vk(n,e){const t=Nn(e,ve(e)),s=wu(n,t);let o=ps(e,De(0,"int32"));const r=s.rank-o.rank;for(let a=0;a<r;++a)o=Ht(o,a+1);o=ln(o,Tn(s.shape,"bool"));const i=ve(s);return Mt(o,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wk={kernelName:$a,gradFunc:n=>({x:()=>ve(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uk=[W2,Bw,Vw,Ww,Uw,Gw,Hw,qw,Kw,jw,Xw,Yw,Qw,n9,s9,o9,r9,i9,a9,l9,c9,u9,d9,h9,m9,g9,x9,b9,y9,w9,uk,k9,C9,I9,$9,v9,N9,S9,T9,R9,E9,D9,A9,L9,F9,O9,_9,M9,P9,V9,q2,q2,W9,H9,j9,X9,Y9,Z9,J9,Q9,ek,tk,nk,sk,ok,K2,K2,rk,ik,ck,hk,dk,pk,fk,mk,gk,xk,bk,yk,wk,kk,Ck,Ik,$k,vk,Sk,Nk,Tk,j2,j2,X2,X2,Rk,Dk,Ek,Ak,Lk,Fk,Ok,_k,Mk,Pk,zk,Bk,Wk];for(const n of Uk)o6(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.abs=function(){return this.throwIfDisposed(),_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.acos=function(){return this.throwIfDisposed(),y7(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.acosh=function(){return this.throwIfDisposed(),k7(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.add=function(n){return this.throwIfDisposed(),Y(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.all=function(n,e){return this.throwIfDisposed(),ff(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.any=function(n,e){return this.throwIfDisposed(),uu(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.argMax=function(n){return this.throwIfDisposed(),Nr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.argMin=function(n){return this.throwIfDisposed(),S7(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.asScalar=function(){return this.throwIfDisposed(),I(this.size===1,()=>"The array must have only 1 element."),L(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.asType=function(n){return this.throwIfDisposed(),se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.as1D=function(){return this.throwIfDisposed(),L(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.as2D=function(n,e){return this.throwIfDisposed(),L(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),L(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),L(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.as5D=function(n,e,t,s,o){return this.throwIfDisposed(),L(this,[n,e,t,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.asin=function(){return this.throwIfDisposed(),T7(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.asinh=function(){return this.throwIfDisposed(),E7(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.atan=function(){return this.throwIfDisposed(),A7(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.atan2=function(n){return this.throwIfDisposed(),F7(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.atanh=function(){return this.throwIfDisposed(),_7(this)},W().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),pu(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),fu(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.batchNorm=function(n,e,t,s,o){return this.throwIfDisposed(),Ma(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Dr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.cast=function(n){return this.throwIfDisposed(),se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.ceil=function(){return this.throwIfDisposed(),cx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),s1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof ut&&(n=[n]),Gt([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.conv1d=function(n,e,t,s,o,r){return this.throwIfDisposed(),mf(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.conv2dTranspose=function(n,e,t,s,o){return this.throwIfDisposed(),gf(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.conv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),hs(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.cos=function(){return this.throwIfDisposed(),gu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.cosh=function(){return this.throwIfDisposed(),bf(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),xu(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),yf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),Fx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.depthwiseConv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),bu(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.dilation2d=function(n,e,t,s,o){return this.throwIfDisposed(),Mx(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.divNoNan=function(n){return this.throwIfDisposed(),Wx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.div=function(n){return this.throwIfDisposed(),he(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.dot=function(n){return this.throwIfDisposed(),Gx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.elu=function(){return this.throwIfDisposed(),za(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.equal=function(n){return this.throwIfDisposed(),U1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.erf=function(){return this.throwIfDisposed(),kf(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),nb(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.exp=function(){return this.throwIfDisposed(),G1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.expandDims=function(n){return this.throwIfDisposed(),Ht(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.expm1=function(){return this.throwIfDisposed(),ib(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.fft=function(){return this.throwIfDisposed(),Bf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.flatten=function(){return this.throwIfDisposed(),L(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.floor=function(){return this.throwIfDisposed(),Wa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.floorDiv=function(n){return this.throwIfDisposed(),pf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.gather=function(n,e,t){return this.throwIfDisposed(),wu(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ps(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.greater=function(n){return this.throwIfDisposed(),o1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.ifft=function(){return this.throwIfDisposed(),zu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.irfft=function(){return this.throwIfDisposed(),Zy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.isFinite=function(){return this.throwIfDisposed(),mb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.isInf=function(){return this.throwIfDisposed(),xb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.isNaN=function(){return this.throwIfDisposed(),yb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Cu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.lessEqual=function(n){return this.throwIfDisposed(),no(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.less=function(n){return this.throwIfDisposed(),Ua(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),$b(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.logSigmoid=function(){return this.throwIfDisposed(),Db(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Sf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Nf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.log=function(){return this.throwIfDisposed(),H1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.log1p=function(){return this.throwIfDisposed(),vf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.logicalAnd=function(n){return this.throwIfDisposed(),ln(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.logicalNot=function(){return this.throwIfDisposed(),Iu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.logicalOr=function(n){return this.throwIfDisposed(),Tf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.logicalXor=function(n){return this.throwIfDisposed(),zb(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Ee(this,n,e,t)},W().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),$u(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.max=function(n,e){return this.throwIfDisposed(),S1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.maximum=function(n){return this.throwIfDisposed(),Nn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.mean=function(n,e){return this.throwIfDisposed(),ct(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.min=function(n,e){return this.throwIfDisposed(),Ba(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.minimum=function(n){return this.throwIfDisposed(),Fr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),Kb(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.mod=function(n){return this.throwIfDisposed(),Xb(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.mul=function(n){return this.throwIfDisposed(),E(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.neg=function(){return this.throwIfDisposed(),rt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Va(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.notEqual=function(n){return this.throwIfDisposed(),Ga(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Rf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.onesLike=function(){return this.throwIfDisposed(),f1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.pad=function(n,e){return this.throwIfDisposed(),Su(this,n,e)},W().prototype.pool=function(n,e,t,s,o,r){return this.throwIfDisposed(),ry(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.pow=function(n){return this.throwIfDisposed(),ds(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.prelu=function(n){return this.throwIfDisposed(),Tu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.prod=function(n,e){return this.throwIfDisposed(),ly(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.reciprocal=function(){return this.throwIfDisposed(),Dy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.relu=function(){return this.throwIfDisposed(),ms(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.relu6=function(){return this.throwIfDisposed(),Af(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.reshapeAs=function(n){return this.throwIfDisposed(),L(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.reshape=function(n){return this.throwIfDisposed(),L(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),Kf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),jf(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.reverse=function(n){return this.throwIfDisposed(),gs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.rfft=function(){return this.throwIfDisposed(),e8(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.round=function(){return this.throwIfDisposed(),Lf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.rsqrt=function(){return this.throwIfDisposed(),Ff(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.selu=function(){return this.throwIfDisposed(),Of(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.separableConv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),_f(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.sigmoid=function(){return this.throwIfDisposed(),eo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.sign=function(){return this.throwIfDisposed(),By(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.sin=function(){return this.throwIfDisposed(),Mf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.sinh=function(){return this.throwIfDisposed(),Pf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.slice=function(n,e){return this.throwIfDisposed(),Be(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.softmax=function(n){return this.throwIfDisposed(),Pu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.softplus=function(){return this.throwIfDisposed(),Lr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Nu(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.split=function(n,e){return this.throwIfDisposed(),r1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.sqrt=function(){return this.throwIfDisposed(),At(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.square=function(){return this.throwIfDisposed(),qe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.squaredDifference=function(n){return this.throwIfDisposed(),n8(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.squeeze=function(n){return this.throwIfDisposed(),Mr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof ut?[this,n]:[this,...n];return cn(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.step=function(n){return this.throwIfDisposed(),Pr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.stridedSlice=function(n,e,t,s,o,r,i,a){return this.throwIfDisposed(),a8(this,n,e,t,s,o,r,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.sub=function(n){return this.throwIfDisposed(),pe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.sum=function(n,e){return this.throwIfDisposed(),ue(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.tan=function(){return this.throwIfDisposed(),c8(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.tanh=function(){return this.throwIfDisposed(),_a(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.tile=function(n){return this.throwIfDisposed(),N1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.toBool=function(){return this.throwIfDisposed(),se(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.toFloat=function(){return this.throwIfDisposed(),se(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.toInt=function(){return this.throwIfDisposed(),se(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.topk=function(n,e){return this.throwIfDisposed(),d8(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.transpose=function(n){return this.throwIfDisposed(),Se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.unique=function(n){return this.throwIfDisposed(),m8(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Uf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.unstack=function(n){return this.throwIfDisposed(),bs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.where=function(n,e){return this.throwIfDisposed(),Mt(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */W().prototype.zerosLike=function(){return this.throwIfDisposed(),ve(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class K1 extends Error{constructor(e){super(e),Object.setPrototypeOf(this,K1.prototype)}}class g1 extends Error{constructor(e){super(e),Object.setPrototypeOf(this,g1.prototype)}}class R extends Error{constructor(e){super(e),Object.setPrototypeOf(this,R.prototype)}}class xe extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xe.prototype)}}class vh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vh.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Y2{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ys(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function j1(n,e){if(!n)throw new vh(e)}function Z2(n,e){let t=0;for(const s of n)s===e&&t++;return t}function qt(n){return n.length===1?n[0]:n}function Ae(n){return Array.isArray(n)?n:[n]}function pn(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function ws(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let x1={};function Sh(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Nh(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Nh(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Nh(s))}}}function Ur(n,e={},t={},s="object",o=!1){if(typeof n=="string"){const r=n;let i;if(r in t)i=t[r];else if(r in x1)i=x1[r];else if(i=e[r],i==null)throw new R(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new R(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let a,l;if(i in t?[a,l]=t[i]:i in x1?[a,l]=x1.className:i in e&&([a,l]=e[i]),a==null)throw new R(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(x1))c[p]=x1[p];for(const p of Object.keys(t))c[p]=t[p];const u=r.config;u.customObjects=c;const h=Object.assign({},x1);for(const p of Object.keys(t))x1[p]=t[p];Nh(r.config);const d=l(a,r.config,t,o);return x1=Object.assign({},h),d}else{const c=Object.assign({},x1);for(const h of Object.keys(t))x1[h]=t[h];const u=new a(r.config);return x1=Object.assign({},c),u}}}function Gk(n,e){return n<e?-1:n>e?1:0}function Za(n,e){return-1*Gk(n,e)}function En(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function Hk(n){if(n==null)throw new R(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function ks(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new R(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Th(n,e,t=0,s=1/0){return j1(t>=0),j1(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(o=>typeof o===e)}function kt(n,e){Array.isArray(n)?(I(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>kt(t,`element ${s+1} of ${e}`))):I(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${J2(n)}.`)}function J2(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>J2(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function qk(n,e,t){let s=t!=null?t():Vt(),o;return(...i)=>{const a=t!=null?t():Vt();return a-s<e||(s=a,o=n(...i)),o}}function Q2(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Kk=0;function em(){return Kk++}const Ja={};function Qa(n=""){return n in Ja||(Ja[n]=0),Ja[n]+=1,n+Ja[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const jk=["channelsFirst","channelsLast"],Xk=["nearest","bilinear"],Yk=["valid","same","causal"],Zk=["max","avg"],Jk=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ao=new Map;function it(n){ks(jk,"DataFormat",n)}function Qk(n){ks(Xk,"InterpolationFormat",n)}function i1(n){ks(Yk,"PaddingMode",n)}function tm(n){ks(Zk,"PoolMode",n)}const Gr=[],nm="/";function Cs(n,e){Gr.push(n);try{const t=e();return Gr.pop(),t}catch(t){throw Gr.pop(),t}}function eC(){return Gr.length===0?"":Gr.join(nm)+nm}function sm(n){if(!rm(n))throw new Error("Not a valid tensor name: '"+n+"'");return eC()+n}function om(n){if(!rm(n))throw new Error("Not a valid tensor name: '"+n+"'");ao.has(n)||ao.set(n,0);const e=ao.get(n);if(ao.set(n,ao.get(n)+1),e>0){const t=`${n}_${e}`;return ao.set(t,1),t}else return n}const tC=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function rm(n){return!!n.match(tC)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nC(n){return n===parseInt(n.toString(),10)}function Dn(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let o=e;o<t;++o)s*=n[o];return s}function lo(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function An(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function R1(n,e){if(e<n)throw new R(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Rh;function dt(){return Rh==null&&(Rh=L6().epsilon()),Rh}function E1(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function X1(n,e){return se(n,e)}function Hr(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),L(n,t)}function sC(n,e){return O(()=>{if(n.shape.length!==2)throw new R(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Hr(n,1);return Ah(t,[1,e,1])})}function oC(n){const e=[Dn(n.shape)];return L(n,e)}function rC(n){if(n.rank<=1)throw new R(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Dn(n.shape,1)];return L(n,e)}function Is(n,e,t){return O(()=>{switch(n.rank){case 1:return _u(n,e,t);case 2:return zf(n,[e,0],[t,n.shape[1]]);case 3:return Mu(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return qa(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Be(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Be(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new R(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Eh(n,e,t){return O(()=>{switch(n.rank){case 1:return _u(n,e,t);case 2:return zf(n,[0,e],[n.shape[0],t]);case 3:return Mu(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return qa(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new R(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function el(n,e,t,s){return O(()=>{switch(n.rank){case 1:return _u(n,e,t);case 2:switch(s){case 1:return Is(n,e,t);case 2:return Eh(n,e,t);default:throw new R(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Is(n,e,t);case 2:return Mu(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Eh(n,e,t);default:throw new R(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Is(n,e,t);case 2:return qa(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return qa(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Eh(n,e,t);default:throw new R(`The axis is not within the rank of the tensor ${s}`)}default:throw new R(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Dh(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),Gt(n,e)}function im(n,e){switch(n.rank){case 1:return dx([n,e]);case 2:return fx([n,e],0);case 3:return gx([n,e],0);case 4:return bx([n,e],0);default:throw new R(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Ah(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new R(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return N1(n,e)}function tl(n,e=0,t=1,s,o){return Ny(n,e,t,s,o)}function Y1(n,e,t,s){if(n.rank<2||e.rank<2)throw new xe(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const o=n.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(o!==r)throw new xe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return Hf({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Lh(n.rank,s,E1()):null,activation:t});{const o=n.shape.slice(),r=o.pop();n=L(n,[-1,r]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),c=[...i,a],u=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=L(Se(e,u),[l,-1]);const h=[...o,...c];return L(Hf({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Lh(n.rank,s,E1()):null,activation:t}),h)}}function am(n,e,t){return O(()=>(Array.isArray(e)?e=Jt(e,"int32"):e=se(e,"int32"),wu(n,e,t)))}function qr(n){return E(n,n)}function Lh(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new R(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?L(e,[1,s[0],1,1,1]):L(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?L(e,[1,1,1,1,s[0]]):L(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?L(e,[1,s[0],1,1]):L(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?L(e,[1,1,1,s[0]]):L(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?L(e,[1,s[0],1]):L(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?L(e,[1,1,s[0]]):L(e,[1].concat(s))}else if(n<3)return e;throw new R(`Unsupported input rank by biasAdd: ${e.rank}`)}function D1(n,e,t){return O(()=>(t==null&&(t=E1()),it(t),Y(n,Lh(n.rank,e,t))))}function iC(n,e=1){if(e!==1)throw new xe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return za(n)}function aC(n){return O(()=>he(n,Y(_t(n),1)))}function lm(n,e,t,s){return O(()=>C8(n,e,t,s))}function lC(n){return O(()=>{const e=Y(.5,E(.2,n));return s1(e,0,1)})}function Kr(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cC=["fanIn","fanOut","fanAvg"],uC=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hC(n){ks(cC,"FanMode",n)}function dC(n){ks(uC,"Distribution",n)}class b1 extends ro{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class cm extends b1{apply(e,t){return wt(e,t)}}cm.className="Zeros",K(cm);class Fh extends b1{apply(e,t){return Tn(e,t)}}Fh.className="Ones",K(Fh);class um extends b1{constructor(e){if(super(),typeof e!="object")throw new R(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new R(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return O(()=>E(De(this.value),Tn(e,t)))}getConfig(){return{value:this.value}}}um.className="Constant",K(um);class hm extends b1{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Or(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}hm.className="RandomUniform",K(hm);class dm extends b1{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xe(`randomNormal does not support dType ${t}.`);return tl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}dm.className="RandomNormal",K(dm);class pm extends b1{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xe(`truncatedNormal does not support dType ${t}.`);return Wf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}pm.className="TruncatedNormal",K(pm);class fm extends b1{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return O(()=>{if(e.length!==2||e[0]!==e[1])throw new R("Identity matrix initializer can only be used for 2D square matrices.");return E(this.gain,$f(e[0]))})}getConfig(){return{gain:this.gain}}}fm.className="Identity",K(fm);function pC(n,e="channelsLast"){let t,s;if(it(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const o=Dn(n,2);t=n[1]*o,s=n[0]*o}else if(e==="channelsLast"){const o=Dn(n,0,n.length-2);t=n[n.length-2]*o,s=n[n.length-1]*o}}else{const o=Dn(n);t=Math.sqrt(o),s=Math.sqrt(o)}return[t,s]}class Qt extends b1{constructor(e){if(super(),e.scale<0)throw new R(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,hC(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,dC(this.distribution),this.seed=e.seed}apply(e,t){const s=pC(e),o=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(o+r)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xe(`${this.getClassName()} does not support dType ${t}.`);return Wf(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return Or(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Qt.className="VarianceScaling",K(Qt);class Oh extends Qt{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Qt.className}}Oh.className="GlorotUniform",K(Oh);class _h extends Qt{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Qt.className}}_h.className="GlorotNormal",K(_h);class Mh extends Qt{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Qt.className}}Mh.className="HeNormal",K(Mh);class Ph extends Qt{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Qt.className}}Ph.className="HeUniform",K(Ph);class zh extends Qt{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Qt.className}}zh.className="LeCunNormal",K(zh);class Bh extends Qt{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Qt.className}}Bh.className="LeCunUniform",K(Bh);class mm extends b1{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return O(()=>{if(e.length<2)throw new xe("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=U(e.slice(0,-1)),o=e[e.length-1],r=s*o;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(o,s),Math.min(o,s)],a=tl(i,0,1,t,this.seed),l=bw.qr(a,!1);let c=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(o,s)*Math.min(o,s)],[Math.min(o,s)+1]);return c=E(c,h.sign()),s<o&&(c=c.transpose()),E(De(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}mm.className="Orthogonal",K(mm);const gm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function xm(n,e={}){return Ur(n,m1.getMap().classNameMap,e,"initializer")}function Je(n){return Sh(n)}function Ke(n){if(typeof n=="string"){const e=n in gm?gm[n]:n;if(e==="GlorotNormal")return new _h;if(e==="GlorotUniform")return new Oh;if(e==="HeNormal")return new Mh;if(e==="HeUniform")return new Ph;if(e==="LeCunNormal")return new zh;if(e==="LeCunUniform")return new Bh;{const t={};return t.className=e,t.config={},xm(t)}}else return n instanceof b1?n:xm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vh(n){return Array.isArray(n)&&Array.isArray(n[0])}function nl(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function me(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new R(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Te(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new R(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sl(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,o)=>s*o);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const bm="Variable";class fC{constructor(e,t="float32",s=bm,o=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=em(),s=s??bm,this.originalName=sm(s),this.name=om(this.originalName),this.trainable_=o,this.constraint=r,this.val=b8(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),mC(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function mC(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Wh(n){return n.map(e=>e.read())}function Uh(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Z1{constructor(e,t,s,o,r,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=o,this.callArgs=r,this.outputTensorIndex=a,this.id=em(),i!=null&&(this.originalName=sm(i),this.name=om(this.originalName)),this.rank=t.length}}let gC=0;class ol{constructor(e,t){this.callArgs=t,this.id=gC++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let xC=0;class Ie extends ro{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=xC++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=pn(s)+"_"+Qa(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new g1(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new R(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return qt(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return qt(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new K1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new K1(`Layer ${this.name} is not connected, no input to return.`);return qt(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new K1(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new K1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return qt(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Ae(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Ae(this.inputSpec);if(t.length!==s.length)throw new R(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let o=0;o<t.length;o++){const r=t[o],i=s[o];if(i==null)continue;const a=r.rank;if(i.ndim!=null&&a!==i.ndim)throw new R(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new R(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new R(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new R(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const l=r.shape;for(const c in i.axes){const u=Number(c),h=i.axes[c],d=u>=0?l[u]:l[l.length+u];if(h!=null&&[h,null].indexOf(d)===-1)throw new R(`Input ${o} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${h} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){const c=i.shape[l],u=r.shape[l];if(c!=null&&u!=null&&c!==u)throw new R(`Input ${o} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Ae(e),o=wC(e),r=kC(e);if(o===r)throw new R("Arguments to apply() must be all SymbolicTensors or all Tensors");return Cs(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of Ae(e))i.push(a.shape);this.build(qt(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);const a=Ae(i),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(i=qt(l),this.activityRegularizer!=null)throw new xe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=bC(e),a=this.computeOutputShape(i);let l;const c=yC(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new Z1(c,u,this,Ae(e),t,this.name,h)):l=new Z1(c,a,this,Ae(e),t,this.name),this.addInboundNode(e,l,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new xe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,o)=>{s!=null&&e[o]!=null&&e[o]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new K1(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new K1(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new g1(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return sl(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Wh(e?this.trainableWeights:this.weights)}setWeights(e){O(()=>{const t=this.weights;if(t.length!==e.length)throw new R(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],o=Wh(t);for(let r=0;r<o.length;++r){const i=o[r],a=t[r],l=e[r];if(!Re(i.shape,l.shape))throw new R(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}Uh(s)})}addWeight(e,t,s,o,r,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new R(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(o=l!=null?l():Ke("zeros"));const c=o.apply(t,s),u=new fC(c,s,e,i,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Ae(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const o=this.computeMask(e,s),r=Ae(t),i=Ae(o);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let a=0;a<r.length;a++)r[a].kerasMask=i[a]}addInboundNode(e,t,s,o,r,i,a=null){const l=Ae(e);t=Ae(t),s=Ae(s),o=Ae(o),r=nl(r),i=nl(i);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new ol({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:o,inputShapes:r,outputShapes:i},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function bC(n){n=Ae(n);const e=[];for(const t of n)e.push(t.shape);return qt(e)}function yC(n){return"float32"}function ym(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const o=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],a=s.inboundLayers[r],l=s.nodeIndices[r],c=ym(i,a,l);for(const u of c)o.indexOf(u)===-1&&o.push(u)}return o}}}function wC(n){let e=!0;for(const t of Ae(n))if(!(t instanceof Z1)){e=!1;break}return e}function kC(n){let e=!0;for(const t of Ae(n))if(t instanceof Z1){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jr extends Ie{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Qa("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new R("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new R("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new R("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const o=new Z1(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new ol({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new R(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}jr.className="InputLayer",K(jr);function CC(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new R("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new jr({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function IC(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return se(e,n.dtype)}catch{throw new R(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Ln{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ln)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=IC(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new R(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Z1){if(this.id2Value[e.id]==null)throw new R(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new R(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Z1){if(this.id2Value[e.id]==null)throw new R(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new R(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ye(this.id2Mask)}}const rl=new Y2,il=new Y2;function $C(n){rl!=null&&rl.setMaxEntries(n),il!=null&&il.setMaxEntries(n)}function Xr(n,e,t,s){const o=t==null?!1:t.training,r=Array.isArray(n),i=r?n:[n],a=i.map(f=>f.name),l=[],c=e.names();for(const f of a)c.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);const u=a.join(",")+"|"+e.names().sort().join(",");let h=rl.get(u),d;if(h==null){const f=vC(i,e);h=f.sorted,d=f.recipientCounts,rl.put(u,h),il.put(u,d)}d={},o||Object.assign(d,il.get(u));const p=new Ln(e);for(let f=0;f<h.length;++f){const m=h[f],g=m.sourceLayer;if(g instanceof jr)continue;const x=[],b=[],w=[];let y=!1;for(const S of m.inputs){const T=p.getValue(S),A=p.getMask(S);x.push(T),b.push(A),A!=null&&(y=!0),o||(d[S.name]--,d[S.name]===0&&!e.hasKey(S)&&a.indexOf(S.name)===-1&&!T.isDisposed&&S.sourceLayer.stateful!==!0&&w.push(T))}y&&(t=t||{},t.mask=b[0]);const k=Ae(g.apply(x,t));let C=null;g.supportsMasking&&(C=g.computeMask(x,b));const $=NC(m),v=Array.isArray($)?$:[$];for(let S=0;S<v.length;++S){p.hasKey(v[S])||p.add(v[S],k[S],Array.isArray(C)?C[0]:C);const T=a.indexOf(v[S].name);T!==-1&&(l[T]=k[S])}o||ye(w)}return p.disposeMasks(),r?l:l[0]}function vC(n,e){I(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const o=wm(n[0],e);t=o.sorted,s=o.recipientMap}else{const o=new Set;for(const r of n){const{sorted:i,recipientMap:a}=wm(r,e);for(const l of i)o.has(l.name)||(t.push(l),o.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:t,recipientCounts:SC(s)}}function SC(n){const e={};for(const t in n)e[t]=n[t].size;return e}function wm(n,e){const t=new Set,s=[],o={};for(const a of e.names())t.add(a);const r=[],i=[];for(r.push(n);r.length>0;){const a=r[r.length-1];if(t.has(a.name)){r.pop();continue}const l=i[i.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),s.push(a),t.add(a.name),l&&i.pop();else{i.push(r.length-1);for(const c of a.inputs)o[c.name]==null&&(o[c.name]=new Set),o[c.name].add(a.name),!t.has(c.name)&&r.push(c)}}return{sorted:s,recipientMap:o}}function NC(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const o of n.sourceLayer.inboundNodes[s].outputTensors)if(o.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */P().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,$C);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gh(n,e){return O(()=>At(ue(E(n,n),e,!0)))}class Yr extends ro{getConfig(){return{}}}class km extends Yr{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return O(()=>{const t=Gh(e,this.axis),s=s1(t,0,this.maxValue);return E(e,he(s,Y(dt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}km.className="MaxNorm",K(km);class Cm extends Yr{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return O(()=>he(e,Y(dt(),Gh(e,this.axis))))}getConfig(){return{axis:this.axis}}}Cm.className="UnitNorm",K(Cm);class Im extends Yr{apply(e){return ms(e)}}Im.className="NonNeg",K(Im);class $m extends Yr{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return O(()=>{const t=Gh(e,this.axis),s=Y(E(this.rate,s1(t,this.minValue,this.maxValue)),E(1-this.rate,t));return E(e,he(s,Y(dt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}$m.className="MinMaxNorm",K($m);const vm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ft(n){return Sh(n)}function Sm(n,e={}){return Ur(n,m1.getMap().classNameMap,e,"constraint")}function mt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in vm?vm[n]:n,config:{}};return Sm(t)}else return n instanceof Yr?n:Sm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function $s(n){if(n==null)return;const e=[],t=[],s=[];for(const o in n){const r=n[o];if(typeof r!="number"){const i=r;e.push(i.data()),t.push(o),s.push(i)}}if(e.length>0){const o=await Promise.all(e);for(let r=0;r<o.length;++r)n[t[r]]=o[r][0];ye(s)}}function Nm(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Tm;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Tm||(Tm={}));const TC=125;class Zr{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class RC{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class EC extends Zr{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const o in t){const r=t[o];if(typeof r=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+r*s;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;const a=O(()=>Y(this.totals[o],E(r,s)));this.totals[o]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:O(()=>{const o=E(he(1,this.seen),this.totals[s]);t[s]=o,this.totals[s].dispose(),V1(t[s])}))}}class DC extends Zr{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const r in this.history){const i=this.history[r];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),t.push(r),s.push(a)}}const o=await Promise.all(e);for(let r=0;r<o.length;++r)this.history[t[r]][s[r]].dispose(),this.history[t[r]][s[r]]=o[r][0]}}class AC extends Zr{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||m2,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=TC),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Zl(this.yieldEvery)&&(this.maybeWait=qk(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const o=[];this.yield!=null&&(await $s(s),o.push(this.yield(e,t,s))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await $s(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await $s(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await $s(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await $s(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Zl(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await $s(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await $s(e),await this.trainEnd(e))}}function Rm(n,e){return n==null&&(n={}),n instanceof Zr?[n]:Array.isArray(n)&&n[0]instanceof Zr?n:Ae(n).map(s=>new AC(s,e))}class y1{constructor(){}static registerCallbackConstructor(e,t){I(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),y1.checkForDuplicate(t),y1.constructors[e]==null&&(y1.constructors[e]=[]),y1.constructors[e].push(t)}static checkForDuplicate(e){for(const t in y1.constructors)y1.constructors[+t].forEach(o=>{if(o===e)throw new R("Duplicate callback constructor.")})}static clear(){y1.constructors={}}static createCallbacks(e){const t=[];for(const s in y1.constructors){const o=+s;e>=o&&t.push(...y1.constructors[o])}return t.map(s=>new s)}}y1.constructors={};function Em(n,e,t,s,o,r,i,a,l){const c=new DC,u=[new EC,...y1.createCallbacks(e)];n!=null&&u.push(...n),u.push(c);const h=new RC(u);return h.setParams({epochs:t,initialEpoch:s,samples:o,steps:r,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function J1(n,e={},t=!1){return Ur(n,m1.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function al(n,e){return O(()=>{n.dtype!=="float32"&&(n=se(n,"float32"));const t=ue(qr(n),e,!0),s=Pa(t.shape,dt()),o=At(Nn(t,s));return he(n,o)})}function ll(n,e){return O(()=>ct(qr(pe(e,n)),-1))}function Hh(n,e){return O(()=>ct(_t(pe(e,n)),-1))}function qh(n,e){return O(()=>{const t=pe(n,e),s=s1(_t(n),dt(),Number.MAX_VALUE),o=_t(he(t,s));return E(100,ct(o,-1))})}function LC(n,e){return O(()=>{const t=s1(e,dt(),Number.MAX_VALUE),s=H1(Y(1,t)),o=s1(n,dt(),Number.MAX_VALUE),r=H1(Y(1,o));return ct(qr(pe(s,r)),-1)})}function FC(n,e){return O(()=>{const t=Nn(0,pe(1,E(n,e)));return ct(qr(t),-1)})}function OC(n,e){return O(()=>{const t=Nn(0,pe(1,E(n,e)));return ct(t,-1)})}function _C(n,e){return O(()=>{const t=ue(E(n,e),-1),s=S1(E(pe(1,n),e),-1);return Nn(0,Y(1,pe(s,t)))})}function MC(n,e){return O(()=>{const t=Math.log(2),s=pe(e,n),o=pe(Y(s,Lr(E(-2,s))),t);return ct(o,-1)})}function Jr(n,e,t=!1){return O(()=>{if(t)e=Pu(e);else{const s=ue(e,e.shape.length-1,!0);e=he(e,s)}return e=s1(e,dt(),1-dt()),rt(ue(E(se(n,"float32"),H1(e)),e.shape.length-1))})}function cl(n,e,t=!1){return O(()=>{const s=se(Wa(oC(n)),"int32");e=s1(e,dt(),1-dt());const o=e.shape,r=L(Rf(s,o[o.length-1]),o);return Jr(r,e,t)})}function PC(n,e){if(!Re(n.shape,e.shape))throw new R(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return O(()=>{const t=ms(e),s=rt(_t(e));return Y(pe(t,E(e,n)),vf(G1(s)))})}function ul(n,e){return O(()=>{let t;return t=s1(e,dt(),1-dt()),t=H1(he(t,pe(1,t))),ct(PC(n,t),-1)})}function zC(n,e){return O(()=>{const t=s1(n,dt(),1),s=s1(e,dt(),1);return ue(E(n,H1(he(t,s))),-1)})}function BC(n,e){return O(()=>{const t=H1(Y(dt(),e));return ct(pe(e,E(n,t)),-1)})}function Dm(n,e){return O(()=>{const t=al(n,-1),s=al(e,-1),o=E(t,s);return rt(ue(o,-1))})}const hl={meanSquaredError:ll,meanAbsoluteError:Hh,meanAbsolutePercentageError:qh,meanSquaredLogarithmicError:LC,squaredHinge:FC,hinge:OC,categoricalHinge:_C,logcosh:MC,categoricalCrossentropy:Jr,sparseCategoricalCrossentropy:cl,binaryCrossentropy:ul,kullbackLeiblerDivergence:zC,poisson:BC,cosineProximity:Dm};function Kh(n){if(typeof n=="string"){if(n in hl)return hl[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new R(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Am(n,e){return O(()=>{const t=E(.5,f1(e)),s=X1(o1(e,t),n.dtype);return ct(U1(n,s),-1)})}function Lm(n,e){return O(()=>X1(U1(Nr(n,-1),Nr(e,-1)),"float32"))}function VC(n,e){return O(()=>se(ue(ln(U1(n,1),U1(e,1))),"float32"))}function WC(n,e){return O(()=>se(ue(ln(U1(n,0),U1(e,1))),"float32"))}function UC(n,e){return O(()=>{const t=VC(n,e),s=WC(n,e),o=Y(t,s);return se(Mt(o1(o,0),he(t,o),0),"float32")})}function GC(n,e){return ul(n,e)}function HC(n,e){return n.rank===e.rank&&(n=Mr(n,[n.rank-1])),e=Nr(e,-1),e.dtype!==n.dtype&&(e=se(e,n.dtype)),se(U1(n,e),"float32")}const qC=ll,KC=ll,jC=Hh,XC=Hh,YC=qh,ZC=qh,Fm=Jr,JC=Dm,Om=cl,dl={binaryAccuracy:Am,categoricalAccuracy:Lm,precision:UC,categoricalCrossentropy:Fm,sparseCategoricalCrossentropy:Om,mse:qC,MSE:KC,mae:jC,MAE:XC,mape:YC,MAPE:ZC,cosine:JC};function QC(n){if(typeof n=="string"&&n in dl)return dl[n];if(typeof n!="string"&&n!=null)return n;throw new R(`Unknown metric ${n}`)}function pl(n){if(j1(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(hl))if(hl[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(dl))if(dl[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function eI(n){const e={Adagrad:()=>io.adagrad(.01),Adadelta:()=>io.adadelta(1,.95,dt()),Adam:()=>io.adam(.001,.9,.999,dt()),Adamax:()=>io.adamax(.002,.9,.999,dt(),0),RMSProp:()=>io.rmsprop(.001,.9,0,dt()),SGD:()=>io.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new R(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const _m=1*1024*1024;function Mm(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!jh(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>_m&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${_m}.`)}}function jh(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!jh(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!jh(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tI(n,e,t,s=console.log){const o=sI(n),r=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(u=>Math.floor(e*u)));let i;if(!o){r.push("Receives inputs"),i=[];for(const u in n.nodesByDepth)i.push(...n.nodesByDepth[u])}s("_".repeat(e)),fl(r,t,s),s("=".repeat(e));const a=n.layers;for(let u=0;u<a.length;++u)o?oI(a[u],t,s):rI(a[u],t,i,s),s((u===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=nI(n),c=sl(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function nI(n){let e;return n.collectedTrainableWeights!=null?e=sl(n.collectedTrainableWeights):e=sl(n.trainableWeights),e}function sI(n){let e=!0;const t=[],s=[];for(const o in n.nodesByDepth)t.push(n.nodesByDepth[o]);for(const o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}s.push(...o)}if(e)for(const o of n.layers){let r=!1;for(const i of o.inboundNodes)if(s.indexOf(i)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function fl(n,e,t=console.log){let s="";for(let o=0;o<n.length;++o)o>0&&(s=s.slice(0,s.length-1)+" "),s+=n[o],s=s.slice(0,e[o]),s+=" ".repeat(e[o]-s.length);t(s)}function oI(n,e,t){let s,o;try{o=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),a=[`${r} (${i})`,o,s,n.countParams().toString()];fl(a,e,t)}function rI(n,e,t,s){let o,r;try{r=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{o=JSON.stringify(n.outputShape)}catch{o="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),c=i.length===0?"":i[0],u=[`${a} (${l})`,r,o,n.countParams().toString(),c];fl(u,e,s);for(let h=1;h<i.length;++h)fl(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pm(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function ml(n,e){if(n===null)return null;if(typeof n=="string")return ws(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];Pm(e,o,r)?t.push(r):t.push(ml(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s];if(s==="name"&&typeof o=="string")t[s]=o;else{const r=ws(s);t[r]=ml(o,r)}}return t}}function Xh(n,e){if(n==null)return null;if(typeof n=="string")return pn(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];Pm(e,o,r)?t.push(r):t.push(Xh(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s],r=pn(s);(s==="name"||s==="className")&&typeof o=="string"?t[r]=o:t[r]=Xh(o,s)}return t}}/** @license See the LICENSE file. */const zm="4.20.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const iI=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class A1 extends Ie{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=Qa(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],En(this.inputs).length!==this.inputs.length)throw new R(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);En(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.sourceLayer,y=b.nodeIndex,k=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(k)}for(const b of this.inputs){const w=b.sourceLayer,y=b.nodeIndex,k=b.tensorIndex;j1(y===0,"input layer has >1 nodes"),j1(k===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const w=this.inputLayers[b];if(!(w instanceof jr))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const t={},s={},o={},r={},i={},a=[],l=(b,w,y,k,C,$)=>{(k==null||C==null||$==null)&&(k=b.sourceLayer,C=b.nodeIndex,$=b.tensorIndex);const v=k.inboundNodes[C];if(y.indexOf(v)!==-1)throw new g1(`The tensor ${b.name} at layer "${k.name}" is part of a cycle.`);if(w.indexOf(v)!==-1)return;this.containerNodes.add(A1.nodeKey(k,C)),k.id in i||(i[k.id]=Object.keys(i).length),y.indexOf(v)===-1&&y.push(v);const S=v.inboundLayers.length;for(let T=0;T<S;T++){const A=v.inputTensors[T],z=v.inboundLayers[T],_=v.nodeIndices[T],B=v.tensorIndices[T];l(A,w,y,z,_,B)}for(w.push(v);y.indexOf(v)>=0;)y.splice(y.indexOf(v),1);a.push(v)},c=[],u=[];for(const b of this.outputs)l(b,c,u);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in t||(t[b.id]=0);let w=t[b.id];const y=o[b.outboundLayer.id]==null?0:o[b.outboundLayer.id];w=Math.max(w,y),o[b.outboundLayer.id]=w,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=w;for(let k=0;k<b.inboundLayers.length;k++){const C=b.inboundLayers[k],$=b.nodeIndices[k],v=C.inboundNodes[$],S=t[v.id]==null?0:t[v.id];t[v.id]=Math.max(w+1,S),s[v.id]=v}}const d={};for(const b in t){const w=t[b];w in d||(d[w]=[]),d[w].push(s[b])}const p={};for(const b in o){const w=o[b];w in p||(p[w]=[]),p[w].push(r[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(Za);this.layers=[];for(const b of f){const w=p[b];w.sort((y,k)=>{const C=i[y.id],$=i[k.id];return C<$?-1:C>$?1:0});for(const y of w)y instanceof A1&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=p,f=Object.keys(d).map(b=>parseInt(b,10)).sort(Za);const m=this.inputs.slice(),g=[];for(const b of f)for(const w of d[b]){const y=w.outboundLayer;if(y!=null){for(const k of w.inputTensors)if(m.indexOf(k)===-1)throw new g1(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${y.name}". The following previous layers were accessed without issue: ${g}`);for(const k of w.outputTensors)m.push(k);g.push(y.name)}}this.nodesByDepth=d;const x=this.layers.map(b=>b.name);for(const b of x){const w=x.filter(y=>y===b).length;if(w!==1)throw new g1(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new ol({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new R("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let o=0;const r=iI(e);r&&this.parseWeights(e);for(const a of this.layers)for(const[l,c]of a.weights.entries()){const u=r?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(s[u]!=null)throw new R(`Duplicate weight name: ${u}`);s[u]=c,o++}const i=[];for(const a in e){let l=a;if(s[a]==null){const c=a.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[l]!=null)i.push([s[l],e[a]]);else if(t)throw new R(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new R(`${a.length} of ${o} weights are not set: ${a}`)}Uh(i)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),o=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!o.includes(i)).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${zm}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Xh(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return O(()=>{e=Ae(e);const s=new Ln;for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o]);return Xr(this.outputs,s,t)})}computeMask(e,t){return O(()=>{e=Ae(e);let s;return t==null?s=ys(null,e.length):s=Ae(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=nl(e);if(t.length!==this.inputLayers.length)throw new R(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],c=t[a],u=l.name+"_0_0";s[u]=c}const o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Za);if(o.length>1)for(const a of o){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const h=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],x=c.nodeIndices[m],b=c.tensorIndices[m],w=`${g.name}_${x}_${b}`,y=s[w];h.push(y)}const d=u.computeOutputShape(qt(h)),p=nl(d),f=u.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const r=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;i.push(h)}for(let a=0;a<i.length;a++){const l=i[a];j1(l in s),r.push(s[l])}return qt(r)}runInternalGraph(e,t){t==null&&(t=ys(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=e[l],h=t[l];s[c.id]=[u,h]}const o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Za);for(const l of o){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,x,b,w;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[y,k]=f[0];m.mask==null&&(m.mask=k),b=Ae(h.call(y,m)),w=Ae(h.computeMask(y,k)),g=[y],x=[k]}else g=f.map(y=>y[0]),x=f.map(y=>y[1]),m.mask==null&&(m.mask=x),b=Ae(h.call(g,m)),w=Ae(h.computeMask(g,x));if(h.activityRegularizer)throw new xe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<p.length;++y){const k=p[y],C=b[y],$=w[y];s[k.id]=[C,$]}}}}const r=[],i=[],a=[];for(const l of this.outputs){j1(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];a.push(c.shape),r.push(c),i.push(u)}return[r,i,a]}buildNodeConversionMap(e){const t={};let s;for(const o of this.layers){s=o instanceof A1?1:0;for(let r=0;r<o.inboundNodes.length;r++){const i=A1.nodeKey(o,r);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new R("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new R(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new R(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return O(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const o=A1.nodeKey(t,s);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),c=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=A1.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],b=d.nodeIndices[g],w=d.tensorIndices[g],y=A1.nodeKey(x,b);let k=t[y];k==null&&(k=0),m.push([x.name,k,w,f])}c.push(m)}}}const u={};u.name=i.name,u.className=a,u.config=l,u.inboundNodes=c,s.push(u)}e.layers=s;const o=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],c=A1.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[i];o.push([a.name,u,h])}e.inputLayers=o;const r=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=A1.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[i];r.push([a.name,u,h])}return e.outputLayers=r,e}static fromConfig(e,t,s={},o=!1){const r={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function l(g,x){const b=[];let w;for(const y of x){const k=y[0],C=y[1],$=y[2];if(w=y[3]==null?{}:y[3],!(k in r)){a(g,x);return}const v=r[k];if(v.inboundNodes.length<=C){a(g,x);return}const S=v.inboundNodes[C];b.push(S.outputTensors[$])}b.length>0&&g.apply(qt(b),w)}function c(g){const x=g.name,b=J1(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(o),r[x]=b,g.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new R(`Corrupted configuration, expected array for nodeData: ${y}`);a(b,y)})}const u=t.name,h=t.layers;for(const g of h)c(g);for(;!Hk(i);)for(const g of h){const x=r[g.name];if(x.name in i){const b=i[x.name];delete i[x.name];for(const w of b)l(x,w)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const x=g[0],b=g[1],w=g[2];j1(x in r);const k=r[x].inboundNodes[b].outputTensors;d.push(k[w])}const m=t.outputLayers;for(const g of m){const x=g[0],b=g[1],w=g[2];j1(x in r);const k=r[x].inboundNodes[b].outputTensors;p.push(k[w])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new R("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){O(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aI(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(o=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const o=[];return e.forEach(r=>{r in n?o.push(n[r]):o.push(null)}),o}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function Bm(n,e){return aI(n,e,"classWeight")}async function Vm(n,e,t,s){if(t!=null){const o=O(()=>{if(n.shape.length===1)return ls(n);if(n.shape.length===2){if(n.shape[1]>1)return Nr(n,1);if(n.shape[1]===1)return L(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await o.data());ye(o);const i=[];return r.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),Jt(i,"float32")}else return null}function lI(n,e){return E(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cI=32;function Wm(n,e){let t,s;const o=e;t=o.xs,s=o.ys,I(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=Um("input",n.inputNames,t),i=Um("output",n.outputNames,s),a=r[0].shape[0];I(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),I(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<r.length;l++)I(r[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)I(i[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function Um(n,e,t){if(t instanceof ut)return[t];if(Array.isArray(t))return I(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const o of e){if(t[o]==null)throw new R(`The feature data generated by the dataset lacks the required ${n} key '${o}'.`);s.push(t[o])}return s}}function uI(n){if(n.length===3)throw new xe("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function hI(n,e,t){const s=t.batchesPerEpoch!=null;if(I(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),I(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),I(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),I(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),I(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const o=t.validationData!=null;let r,i;if(o)if(Gm(t.validationData))I(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=uI(t.validationData);r=g.xs,i=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;o?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();const u=Rm(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=Em(u,h,t.epochs,null,null,dI(e,t),null,o,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let x=0,b=0;for(s||(m=await e.iterator());!s||x<t.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:y,ys:k}=Wm(n,w.value),C={};C.batch=b,C.size=y[0].shape[0],await d.onBatchBegin(b,C);const $=[];if(t.classWeight!=null){const T=Bm(t.classWeight,n.outputNames);for(let A=0;A<T.length;++A)$.push(await Vm(k[A],null,T[A]))}const v=y.concat(k).concat($),S=a(v);ye(v);for(let T=0;T<l.length;++T){const A=l[T],z=S[T];C[A]=z,V1(z)}await d.onBatchEnd(b,C),Nm(C),b++,x++}if(s?x>=t.batchesPerEpoch:w.done){if(o){let y;Gm(t.validationData)?y=Ae(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):y=Ae(n.evaluate(r,i,{batchSize:t.validationBatchSize==null?cI:t.validationBatchSize,verbose:0}));for(let k=0;k<n.metricsNames.length;++k)g[`val_${n.metricsNames[k]}`]=y[k]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function dI(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function Gm(n){return typeof n.iterator=="function"}function pI(n){return typeof n.next=="function"}async function fI(n,e,t){t=t||{};const s=t.batches!=null,o=n.testFunction;let r=[];if(t.verbose>0)throw new xe("Verbose mode is not implemented yet.");I(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=pI(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const c=await i.next();if(r=O(()=>{if(c.value){const{xs:u,ys:h}=Wm(n,c.value),d=u.concat(h),p=O(()=>o(d));if(ye(d),l===0)for(let m=0;m<p.length;++m)r.push(De(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=r[m];r[m]=O(()=>Y(r[m],E(f,g))),l>0&&ye(x)}ye(p),a+=f,++l}return r}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=he(r[c],a),ye(u)}return qt(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yh(n){I(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Qr(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Is(s,e,t-e)):Is(n,e,t-e)}function Zh(n,e){return O(()=>n==null?null:Array.isArray(n)?n.map(t=>Zh(t,e)):am(n,e.dtype==="int32"?e:se(e,"int32")))}function Jh(n,e){const t=[];let s=0,o=null;for(;s<n;)o=s+e,o>=n&&(o=n),t.push([s,o]),s=o;return t}function Hm(n){const e=[];n instanceof ut&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Hr(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function L1(n,e){if(n==null)return;const t=[];if(e instanceof ut)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(const o in e){const r=e[o];t.push(r.id)}const s=[];if(n instanceof ut)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(o=>{t.indexOf(o.id)===-1&&s.push(o)});else if(n!=null)for(const o in n){const r=n[o];t.indexOf(r.id)===-1&&s.push(r)}s.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mI(n){return n instanceof ut}function Qh(n){return Array.isArray(n)}function qm(n){return!mI(n)&&!Qh(n)}function Km(n,e,t,s=!0,o=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(Qh(n)&&n.length>0)i=!0;else if(qm(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new R(`Error when checking model ${o} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let r;if(qm(n)){n=n,r=[];for(const i of e){if(n[i]==null)throw new R(`No data provided for "${i}". Need data for each key in: ${e}`);r.push(n[i])}}else if(Qh(n)){if(n=n,n.length!==e.length)throw new R(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,e.length>1)throw new R(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=Hm(r),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=r[i];if(a.shape.length!==t[i].length)throw new R(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[i][l];if(u!=null&&u>=0&&c!==u)throw new R(`${o} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function gI(n,e,t){const s=En(n.map(r=>r.shape[0]));s.sort();const o=En(e.map(r=>r.shape[0]));if(o.sort(),s.length>1)throw new R(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(o.length>1)throw new R(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&o.length>0&&!Re(s,o))throw new R(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${o[0]} target sample(s).`)}function xI(n,e,t){const s=[ll,ul,Jr];for(let o=0;o<n.length;++o){const r=n[o],i=e[o],a=t[o];if(i!=null){if(i===Jr&&r.shape[r.shape.length-1]===1)throw new R(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new R(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function jm(n,e,t,s=!0,o=""){let r;if(Array.isArray(n)){if(n.length!==e.length)throw new R(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(e.length>1)throw new R(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=r[i];if(a.shape.length!==t[i].length)throw new R(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[i][l];if(u!=null&&u!==c)throw new R(`Error when checking ${o}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function bI(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const o of e){let r=t.hasOwnProperty(o)?t[o]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const yI="layers-model";class co extends A1{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new R("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");tI(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=eI(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Rn))throw new R("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new R(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(Kh(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new R(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>Kh(a))}else{const i=Kh(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Cs("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const o=bI(e.metrics,this.outputNames),r=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};Cs("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=o[i];(c=>{const u="";let h,d,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===ul?["accuracy","acc"].indexOf(f)!==-1?d=Am:["crossentropy","ce"].indexOf(f)!==-1&&(d=GC):this.lossFunctions[i]===cl?["accuracy","acc"].indexOf(f)!==-1?d=HC:["crossentropy","ce"].indexOf(f)!==-1&&(d=Om):["accuracy","acc"].indexOf(f)!==-1?d=Lm:["crossentropy","ce"].indexOf(f)!==-1&&(d=Fm);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=u+x}else p=QC(f),h=u+pl(f);let m;Cs(h,()=>{m=p}),r(i,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const o=s.batchSize==null?32:s.batchSize;Yh(o);const i=this.standardizeUserDataXY(e,t,!0,o);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,o,s.verbose,s.steps);return qt(c)}finally{L1(i[0],e),L1(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),fI(this,e,t)}checkNumSamples(e,t,s,o="steps"){let r;if(s!=null){if(r=null,t!=null)throw new R(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new R(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new R("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),o=s?t:[t],r=this.retrieveSymbolicTensors(o),i=new Ln;if(e instanceof ut&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new R(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new R(`No value is provided for the model's input ${l.name}`);i.add(l,c)}const a=Xr(r,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=ys(null,e.length);let s=e.length;for(const o of this.layers){const r=Array.isArray(o.output)?o.output:[o.output],i=r.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(t[a]=r[l],s--),s===0)break}if(s===0)break}if(s>0){const o=[];throw t.forEach((r,i)=>{r==null&&o.push(e[i])}),new R(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,s=!1){return O(()=>{const o=this.checkNumSamples(e);if(s)throw new xe("Verbose predictLoop() is not implemented yet.");const r=Jh(o,t),i=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)O(()=>{const c=r[a][0],u=r[a][1],h=Qr(e,c,u),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new Ln(d);return Xr(this.outputs,p)}).forEach((c,u)=>i[u].push(c));return qt(i.map(a=>Gt(a,0)))})}predict(e,t={}){const s=Hm(e);jm(s,this.inputNames,this.feedInputShapes,!1);try{const o=t.batchSize==null?32:t.batchSize;return Yh(o),this.predictLoop(s,o)}finally{L1(s,e)}}predictOnBatch(e){jm(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,o){if(this.optimizer_==null)throw new g1("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===cl?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(e=Km(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Km(t,this.feedOutputNames,r,!1,"target"),gI(e,t),xI(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new R(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,o,r=!0,i){const[a,l]=this.standardizeUserDataXY(e,t,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(o!=null){const u=Bm(o,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await Vm(l[h],null,u[h]))}return[a,l,c]}testLoop(e,t,s,o=0,r){return O(()=>{const i=this.checkNumSamples(t,s,r,"steps"),a=[];if(o>0)throw new xe("Verbose mode is not implemented yet.");if(r!=null)throw new xe("steps mode in testLoop() is not implemented yet");{const l=Jh(i,s),c=Jt(R1(0,i));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],p=Is(c,h,d-h),f=Zh(t,p),m=e(f);if(u===0)for(let g=0;g<m.length;++g)a.push(De(0));for(let g=0;g<m.length;++g){const x=m[g];a[g]=Y(a[g],E(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=he(a[u],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const o=e[s];let r=o;if(Z2(e,o)>1){const i=Z2(e.slice(0,s),o);r+=`_${i}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new Ln(h),p=Xr(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(o[m],p[m]);r[m]!=null&&(x=lI(x,r[m]));const b=ct(x);t.push(b),m===0?f=x:f=Y(f,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const x=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=ct(x(o[b],p[b]))}V1(g),i.push(g)}return f=ct(f),this.calculateLosses().forEach(m=>{f=Y(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>O(()=>{const t=[];let s;const o=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:o[c]});const a=new Ln(i),l=Xr(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=ct(u(r[c],l[c]));c===0?s=h:s=Y(s,h),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=ct(u(r[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,r,i,a,l,c,u,h,d;try{const p=s.batchSize==null?32:s.batchSize;Yh(p);const m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);o=m[0],r=m[1],d=m[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new xe("validationData including sample weights is not supported yet."):new R(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const T=await this.standardizeUserData(l,c,null,null,!0,p);u=T[0],h=T[1],x=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const S=Math.floor(o[0].shape[0]*(1-s.validationSplit)),T=o[0].shape[0];u=Qr(o,S,T),i=o,o=Qr(o,0,S),h=Qr(r,S,T),a=r,r=Qr(r,0,S),x=u.concat(h)}else s.validationSteps!=null&&(g=!0);const b=o.concat(r).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let k,C;g?(this.makeTestFunction(),k=this.testFunction,C=y.slice().concat(y.map(S=>"val_"+S))):(k=null,x=[],C=y.slice());const $=Rm(s.callbacks,s.yieldEvery);return await this.fitLoop(w,b,y,p,s.epochs,s.verbose,$,k,x,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,L1(o,e),L1(r,t),L1(i,e),L1(a,t),L1(u,l),L1(h,c),d!=null&&ye(d)}}async fitLoop(e,t,s,o,r,i,a,l,c,u,h,d,p,f){o==null&&(o=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new R("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,o,p,"steps_per_epoch");let x;g!=null&&(x=R1(0,g)),i==null&&(i=1);const{callbackList:b,history:w}=Em(a,i,r,d,g,p,o,m,h);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let y=d;y<r;++y){await b.onEpochBegin(y);const k={};if(p!=null)throw new xe("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new xe("batch shuffling is not implemneted yet");u&&B5(x);const C=Jt(x),$=Jh(g,o);for(let v=0;v<$.length;++v){const S={};if(await b.onBatchBegin(v,S),O(()=>{const T=$[v][0],A=$[v][1],z=Is(C,T,A-T);S.batch=v,S.size=A-T;const _=Zh(t,z),B=e(_);for(let M=0;M<s.length;++M){const V=s[M],H=B[M];S[V]=H,V1(H)}if(v===$.length-1&&m){const M=this.testLoop(l,c,o);for(let V=0;V<s.length;++V){const H=s[V],G=M[V];V1(G),k["val_"+H]=G}}}),await b.onBatchEnd(v,S),Nm(S),this.stopTraining_)break}C.dispose()}if(await b.onEpochEnd(y,k),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return hI(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),o=s[0],r=s[1],a=this.makeTrainFunction()(o.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return ye(a),L1(s[0],e),L1(s[1],t),qt(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,o=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<o.length;++i)s&&!o[i].trainable||t.push({name:o[i].originalName,tensor:r[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=ef().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ef().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=pn(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>pn(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const o of t)if(typeof s[o]=="string")e[o]=pn(s[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[pn(pl(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>pn(pl(e)));{const e={};for(const t in this.metrics)e[t]=pn(pl(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ml(e.optimizer_config),s=J1(t);let o;if(typeof e.loss=="string")o=ws(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(i=>ws(i));else if(e.loss!=null){o={};for(const i in e.loss)o[i]=ws(e.loss[i])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(i=>ws(i));else if(e.metrics!=null){r={};for(const i in e.metrics)r[i]=ws(e.metrics[i])}this.compile({loss:o,metrics:r,optimizer:s})}async save(e,t){if(typeof e=="string"){const c=j6(e);if(c.length===0)throw new R(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new R(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new R("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await nf(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:yI,generatedBy:`TensorFlow.js tfjs-layers v${zm}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await nf(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=B6([s.data,u])}return this.userDefinedMetadata!=null&&(Mm(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){Mm(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}co.className="Model",K(co);class Xm extends co{}Xm.className="Functional",K(Xm);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ym(n,e){if(e==null&&(e={}),typeof n=="string"){const t=X6(n,e);if(t.length===0)t.push(Tw(n,e));else if(t.length>1)throw new R(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return wI(n,void 0,e)}async function wI(n,e,t){if(t==null&&(t={}),n.load==null)throw new R("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let o=s.modelTopology;o.model_config!=null&&(o=o.model_config);const r=t.strict==null?!0:t.strict,i=s.weightData!=null&&s.weightSpecs!=null&&r,a=J1(ml(o),e,i),l=s.trainingConfig;if(l!=null&&a.loadTrainingConfig(l),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new R("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:u}=kI(s.weightData,s.weightSpecs);a.loadWeights(c,r),a.optimizer!=null&&u.length>0&&await a.optimizer.setWeights(u),ye(c),ye(u.map(h=>h.tensor))}return a}function kI(n,e){const t=F6(n,e),s={},o=[];return e.forEach(r=>{r.group==="optimizer"?o.push({name:r.name,tensor:t[r.name]}):s[r.name]=t[r.name]}),{modelWeights:s,optimizerWeights:o}}class ei extends co{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Qa("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new R(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof ei||e instanceof co;let s;if(t){if(s=e,s.outputs.length!==1)throw new R("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new R("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new R("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=CC({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new R(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new R("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ym(this.outputs[0])}this.inboundNodes=[],new ol({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ys(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Te(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new co({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new g1("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new g1("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new g1("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new g1("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},o=!1){let r,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new R("Legacy serialization format not supported yet.");r=t}else I(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof ei))throw new xe(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=J1(l,void 0,o);o&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(e){if(this.model==null)throw new R("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new R("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}ei.className="Sequential",K(ei);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Lt=class extends ro{getConfig(){return{}}};class Zm extends Lt{apply(e,t=1){return iC(e,t)}}Zm.className="elu",K(Zm);class Jm extends Lt{apply(e){return Of(e)}}Jm.className="selu",K(Jm);class Qm extends Lt{apply(e){return ms(e)}}Qm.className="relu",K(Qm);class e3 extends Lt{apply(e){return O(()=>Fr(6,ms(e)))}}e3.className="relu6",K(e3);class t3 extends Lt{apply(e){return e}}t3.className="linear",K(t3);class n3 extends Lt{apply(e){return eo(e)}}n3.className="sigmoid",K(n3);class s3 extends Lt{apply(e){return lC(e)}}s3.className="hardSigmoid",K(s3);class o3 extends Lt{apply(e){return Lr(e)}}o3.className="softplus",K(o3);class r3 extends Lt{apply(e){return aC(e)}}r3.className="softsign",K(r3);class i3 extends Lt{apply(e){return _a(e)}}i3.className="tanh",K(i3);let ed=class extends Lt{apply(e,t=-1){return Pu(e,t)}};ed.className="softmax",K(ed);class a3 extends Lt{apply(e,t=-1){return Sf(e,t)}}a3.className="logSoftmax",K(a3);class l3 extends Lt{apply(e){return O(()=>O(()=>{const t=Math.sqrt(2),s=E(.5,Y(1,kf(he(e,t))));return E(e,s)}))}}l3.className="gelu",K(l3);class c3 extends Lt{apply(e){return O(()=>E(.5,E(e,Y(1,_a(E(At(he(2,Math.PI)),Y(e,E(.044715,ds(e,3)))))))))}}c3.className="gelu_new",K(c3);class u3 extends Lt{apply(e){return O(()=>E(e,_a(Lr(e))))}}u3.className="mish",K(u3);class h3 extends Lt{apply(e,t=1){return O(()=>E(eo(E(e,t)),e))}}h3.className="swish",K(h3);function Fn(n){return n.getClassName()}function td(n,e={}){return Ur(n,m1.getMap().classNameMap,e,"activation")}function On(n){if(n==null){const e={};return e.className="linear",e.config={},td(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},td(e)}else return n instanceof Lt?n:td(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CI(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class d3 extends ro{}class p3 extends d3{constructor(e){super(),CI(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return O(()=>{let t=wt([1]);return this.hasL1&&(t=Y(t,ue(E(this.l1,_t(e))))),this.hasL2&&(t=Y(t,ue(E(this.l2,qr(e))))),L(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}p3.className="L1L2",K(p3);const f3={l1l2:"L1L2"};function Pe(n){return Sh(n)}function m3(n,e={}){return Ur(n,m1.getMap().classNameMap,e,"regularizer")}function je(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in f3?f3[n]:n,config:{}};return m3(t)}else return n instanceof d3?n:m3(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class g3 extends Ie{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=me(e);let s=ms(e);return this.maxValue!=null&&(s=s1(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}g3.className="ReLU",K(g3);class x3 extends Ie{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=me(e);return Cu(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}x3.className="LeakyReLU",K(x3);class b3 extends Ie{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ke(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=je(e.alphaRegularizer),this.alphaConstraint=mt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new R(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Te(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)s[o]=e[o];this.inputSpec=[new pt({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=me(e),Tu(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Je(this.alphaInitializer),alphaRegularizer:Pe(this.alphaRegularizer),alphaConstraint:ft(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}b3.className="PReLU",K(b3);let y3=class extends Ie{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new xe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=me(e);return za(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};y3.className="ELU",K(y3);class w3 extends Ie{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=me(e);return E(s,se(o1(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}w3.className="ThresholdedReLU",K(w3);class k3 extends Ie{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new ed().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return O(()=>{let s=me(e);const o=t.mask;if(o!=null){const r=E(pe(Tn(s.shape),se(o,s.dtype)),De(-1e9));s=Y(s,r)}return this.axis instanceof Array?this.axis.length>1?G1(pe(s,Nf(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}k3.className="Softmax",K(k3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uo(n,e,t){if(typeof n=="number")return ys(n,e);if(n.length!==e)throw new R(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const o=n[s];if(!nC(o))throw new R(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${o}`)}return n}function F1(n,e,t,s,o=1){if(n==null)return n;const r=e+(e-1)*(o-1);let i;return t==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function Q1(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+An([t-e,0]);else if(s==="same")n=n*e;else throw new R(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nd(n,e){return O(()=>(it(e),e==="channelsFirst"?Se(n,[0,2,3,1]):n))}function C3(n,e){return O(()=>(it(e),e==="channelsFirst"?Se(n,[0,2,3,4,1]):n))}function II(n,e,t,s=1,o="valid",r,i=1){return O(()=>{if(r==null&&(r=E1()),it(r),n.shape.length!==3)throw new R(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new R(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new R(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(n=Se(n,[0,2,1])),o==="causal")throw new xe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=mf(n,e,s,o==="same"?"same":"valid","NWC",i);return t!=null&&(a=D1(a,t)),a})}function I3(n,e,t,s=[1,1],o="valid",r,i,a=null){return O(()=>{if(r==null&&(r=E1()),it(r),n.rank!==3&&n.rank!==4)throw new R(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new R(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=nd(n,r);if(o==="causal")throw new xe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=v8({x:l,filter:e,strides:s,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),r==="channelsFirst"&&(l=Se(l,[0,3,1,2])),l})}function $I(n,e,t,s=[1,1,1],o="valid",r,i){return O(()=>{if(r==null&&(r=E1()),it(r),n.rank!==4&&n.rank!==5)throw new R(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new R(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=C3(n,r);if(o==="causal")throw new xe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=$x(a,e,s,o==="same"?"same":"valid","NDHWC",i),t!=null&&(a=D1(a,t)),r==="channelsFirst"&&(a=Se(a,[0,4,1,2,3])),a})}class gl extends Ie{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",gl.verifyArgs(t),this.rank=e,kt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new xe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=uo(t.kernelSize,e,"kernelSize"),this.strides=uo(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,i1(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,it(this.dataFormat),this.activation=On(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Ke(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=mt(t.biasConstraint),this.biasRegularizer=je(t.biasRegularizer),this.activityRegularizer=je(t.activityRegularizer),this.dilationRate=uo(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new R(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new R(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new R(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(j1("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Th(e.kernelSize,"number",1,3))throw new R(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Fn(this.activation),useBias:this.useBias,biasInitializer:Je(this.biasInitializer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),biasConstraint:ft(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class ho extends gl{constructor(e,t){super(e,t),this.kernel=null,ho.verifyArgs(t),this.filters=t.filters,kt(this.filters,"filters"),this.kernelInitializer=Ke(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=mt(t.kernelConstraint),this.kernelRegularizer=je(t.kernelRegularizer)}build(e){e=Te(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new R(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],o=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return O(()=>{e=me(e);let s;const o=this.bias==null?null:this.bias.read(),r=Q2(this.activation.getClassName());if(r!=null&&this.rank===2)s=I3(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=II(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=I3(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=$I(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new xe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Te(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const i=F1(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(i)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){const e={filters:this.filters,kernelInitializer:Je(this.kernelInitializer),kernelRegularizer:Pe(this.kernelRegularizer),kernelConstraint:ft(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new R(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ti extends ho{constructor(e){super(2,e),ti.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Th(e.kernelSize,"number",1,2))throw new R(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ti.className="Conv2D",K(ti);class ni extends ho{constructor(e){super(3,e),ni.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new R(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ni.className="Conv3D",K(ni);class $3 extends ti{constructor(e){if(super(e),this.inputSpec=[new pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new R(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Te(e),e.length!==4)throw new R("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new R("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pt({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return O(()=>{let s=me(e);if(s.shape.length!==4)throw new R(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=o[i],c=o[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=Q1(l,d,u,this.padding),m=Q1(c,p,h,this.padding),g=[r,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Se(s,[0,2,3,1]));let x=gf(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Se(x,[0,3,1,2])),this.bias!=null&&(x=D1(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=Te(e);const t=e.slice();let s,o,r;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3):(s=3,o=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[o]=Q1(t[o],l,i,this.padding),t[r]=Q1(t[r],c,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}$3.className="Conv2DTranspose",K($3);class v3 extends ni{constructor(e){if(super(e),this.inputSpec=[new pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new R(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Te(e),e.length!==5)throw new R("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new R("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pt({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return O(()=>{let s=me(e);if(s.shape.length!==5)throw new R(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const c=o[l],u=o[i],h=o[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],b=Q1(c,m,d,this.padding),w=Q1(u,g,p,this.padding),y=Q1(h,x,f,this.padding),k=[r,b,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=Se(s,[0,2,3,4,1]));let C=Nx(s,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Se(C,[0,4,1,2,3])),this.bias!==null&&(C=D1(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(e){e=Te(e);const t=e.slice();let s,o,r,i;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3,i=4):(s=4,o=1,r=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[o]=Q1(t[o],u,a,this.padding),t[r]=Q1(t[r],h,l,this.padding),t[i]=Q1(t[i],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}v3.className="Conv3DTranspose",K(v3);class S3 extends ho{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new R("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new R("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new R(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ke(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=je(t.depthwiseRegularizer),this.depthwiseConstraint=mt(t.depthwiseConstraint),this.pointwiseInitializer=Ke(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=je(t.pointwiseRegularizer),this.pointwiseConstraint=mt(t.pointwiseConstraint)}build(e){if(e=Te(e),e.length<this.rank+2)throw new R(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new R(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],o=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new pt({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return O(()=>{e=me(e);let s;if(this.rank===1)throw new xe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Se(e,[0,2,3,1])),s=_f(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=D1(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Se(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Je(this.depthwiseInitializer),e.pointwiseInitializer=Je(this.pointwiseInitializer),e.depthwiseRegularizer=Pe(this.depthwiseRegularizer),e.pointwiseRegularizer=Pe(this.pointwiseRegularizer),e.depthwiseConstraint=ft(this.depthwiseConstraint),e.pointwiseConstraint=ft(this.pointwiseConstraint),e}}S3.className="SeparableConv";class N3 extends S3{constructor(e){super(2,e)}}N3.className="SeparableConv2D",K(N3);class xl extends ho{constructor(e){super(1,e),xl.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Th(e.kernelSize,"number",1,1))throw new R(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}xl.className="Conv1D",K(xl);class T3 extends Ie{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return O(()=>{if(e=me(e),this.dataFormat==="channelsLast"){const s=el(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return el(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=el(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return el(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}T3.className="Cropping2D",K(T3);class R3 extends Ie{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Qk(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return O(()=>{let s=me(e);const o=s.shape;if(this.dataFormat==="channelsFirst"){s=Se(s,[0,2,3,1]);const r=this.size[0]*o[2],i=this.size[1]*o[3],a=this.interpolation==="nearest"?un.resizeNearestNeighbor(s,[r,i]):un.resizeBilinear(s,[r,i]);return Se(a,[0,3,1,2])}else{const r=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?un.resizeNearestNeighbor(s,[r,i]):un.resizeBilinear(s,[r,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}R3.className="UpSampling2D",K(R3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vI(n,e,t=[1,1],s="valid",o,r){return O(()=>{o==null&&(o=E1()),it(o);let i=nd(n,o);if(n.rank!==4)throw new R(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new R(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=bu(i,e,t,s==="same"?"same":"valid","NHWC",r),o==="channelsFirst"&&(i=Se(i,[0,3,1,2])),i})}class E3 extends gl{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ke(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=mt(e.depthwiseConstraint),this.depthwiseRegularizer=je(e.depthwiseRegularizer)}build(e){if(e=Te(e),e.length<4)throw new R(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new R(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],o=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return O(()=>{e=me(e);let s=vI(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=D1(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Te(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=F1(t,this.kernelSize[0],this.padding,this.strides[0]),i=F1(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,r,i]:[e[0],r,i,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Je(this.depthwiseInitializer),e.depthwiseRegularizer=Pe(this.depthwiseRegularizer),e.depthwiseConstraint=ft(this.depthwiseRegularizer),e}}E3.className="DepthwiseConv2D",K(E3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function D3(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new R("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function o(r){return r==null||Array.isArray(r)?r:[r]}return e=o(e),t=o(t),{inputs:n,initialState:e,constants:t}}function A3(n,e,t,s=!1,o,r,i=!1,a=!1){return O(()=>{const l=e.shape.length;if(l<3)throw new R(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(R1(2,l));e=Se(e,c),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=se(se(o,"bool"),"float32"),o.rank===l-1&&(o=Ht(o,-1)),o=Se(o,c)),s&&(e=gs(e,0),o!=null&&(o=gs(o,0)));const u=[];let h,d=t;const p=e.shape[0],f=bs(e);let m;o!=null&&(m=bs(o));for(let x=0;x<p;++x){const b=f[x],w=O(()=>n(b,d));if(o==null)h=w[0],d=w[1];else{const y=O(()=>{const k=m[x],C=pe(f1(k),k),$=Y(E(w[0],k),E(d[0],C)),v=d.map((S,T)=>Y(E(w[1][T],k),E(S,C)));return{output:$,newStates:v}});h=y.output,d=y.newStates}a&&u.push(h)}let g;return a&&(g=cn(u,1)),[h,g,d]})}class _n extends Ie{constructor(e){super(e);let t;if(e.cell==null)throw new R("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new rd({cells:e.cell}):t=e.cell,t.stateSize==null)throw new R("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return R1(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Vh(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let o;if(this.returnSequences?o=[e[0],e[1],s]:o=[e[0],s],this.returnState){const r=[];for(const i of t)r.push([e[0],i]);return[o].concat(r)}else return o}computeMask(e,t){return O(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const o=this.states.map(r=>null);return[s].concat(o)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new xe("Constants support is not implemented in RNN yet.");Vh(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new pt({shape:[t,null,...s]});const o=[e[0]].concat(e.slice(2));this.cell.build(o);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Re(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new R(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new pt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){O(()=>{if(!this.stateful)throw new K1("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new R("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>wt([s,o])):this.states_=[wt([s,this.cell.stateSize])];else if(e==null)ye(this.states_),this.keptStates!=null&&(ye(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>wt([s,o])):this.states_[0]=wt([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new R(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ye(this.states_);for(let o=0;o<this.states_.length;++o){const r=e[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[s,i];if(!Re(r.shape,a))throw new R(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[o]=r}}this.states_=this.states_.map(o=>V1(o.clone()))})}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=D3(e,s,o,this.numConstants);e=r.inputs,s=r.initialState,o=r.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new pt({shape:c.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(t.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof Z1){const c=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return O(()=>{const s=t==null?null:t.mask,o=t==null?null:t.training;let r=t==null?null:t.initialState;e=me(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new R(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:o},c=A3((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,o);const p=this.returnSequences?h:u;return this.returnState?[p].concat(d):p})}getInitialState(e){return O(()=>{let t=wt(e.shape);return t=ue(t,[1,2]),t=Hr(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Ah(t,[1,s]):t):this.cell.stateSize>1?[Ah(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===_n.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const o=t.cell,r=J1(o,s);return new e(Object.assign(t,{cell:r}))}}_n.className="RNN",K(_n);class bl extends Ie{}class sd extends bl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,kt(this.units,"units"),this.activation=On(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ke(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ke(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ke(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=je(e.kernelRegularizer),this.recurrentRegularizer=je(e.recurrentRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.kernelConstraint=mt(e.kernelConstraint),this.recurrentConstraint=mt(e.recurrentConstraint),this.biasConstraint=mt(e.biasConstraint),this.dropout=lo([1,An([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lo([1,An([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Te(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return O(()=>{if(e=e,e.length!==2)throw new R(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mn({ones:()=>f1(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mn({ones:()=>f1(s),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?r=Y1(E(e,i),this.kernel.read()):r=Y1(e,this.kernel.read()),this.bias!=null&&(r=D1(r,this.bias.read())),a!=null&&(s=E(s,a));let l=Y(r,Y1(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Fn(this.activation),useBias:this.useBias,kernelInitializer:Je(this.kernelInitializer),recurrentInitializer:Je(this.recurrentInitializer),biasInitializer:Je(this.biasInitializer),kernelRegularizer:Pe(this.kernelRegularizer),recurrentRegularizer:Pe(this.recurrentRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),recurrentConstraint:ft(this.recurrentConstraint),biasConstraint:ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}sd.className="SimpleRNNCell",K(sd);class L3 extends _n{constructor(e){e.cell=new sd(e),super(e)}call(e,t){return O(()=>{this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return new e(t)}}L3.className="SimpleRNN",K(L3);class od extends bl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new R("GRUCell does not support reset_after parameter set to true.");this.units=e.units,kt(this.units,"units"),this.activation=On(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=On(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ke(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ke(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ke(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=je(e.kernelRegularizer),this.recurrentRegularizer=je(e.recurrentRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.kernelConstraint=mt(e.kernelConstraint),this.recurrentConstraint=mt(e.recurrentConstraint),this.biasConstraint=mt(e.biasConstraint),this.dropout=lo([1,An([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lo([1,An([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Te(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return O(()=>{if(e=e,e.length!==2)throw new R(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mn({ones:()=>f1(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mn({ones:()=>f1(o),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(e=E(e,r[0]));let u=Y1(e,this.kernel.read());this.useBias&&(u=D1(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=E(o,i[0]));const h=this.recurrentKernel.read(),[d,p]=r1(h,[2*this.units,this.units],h.rank-1),f=Y1(o,d),[m,g,x]=r1(u,3,u.rank-1),[b,w]=r1(f,2,f.rank-1);a=this.recurrentActivation.apply(Y(m,b)),l=this.recurrentActivation.apply(Y(g,w));const y=Y1(E(l,o),p);c=this.activation.apply(Y(x,y));const k=Y(E(a,o),E(Y(1,rt(a)),c));return[k,k]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Fn(this.activation),recurrentActivation:Fn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Je(this.kernelInitializer),recurrentInitializer:Je(this.recurrentInitializer),biasInitializer:Je(this.biasInitializer),kernelRegularizer:Pe(this.kernelRegularizer),recurrentRegularizer:Pe(this.recurrentRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),recurrentConstraint:ft(this.recurrentConstraint),biasConstraint:ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}od.className="GRUCell",K(od);class F3 extends _n{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new od(e),super(e)}call(e,t){return O(()=>{this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}F3.className="GRU",K(F3);class yl extends bl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,kt(this.units,"units"),this.activation=On(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=On(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Ke(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ke(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ke(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=je(e.kernelRegularizer),this.recurrentRegularizer=je(e.recurrentRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.kernelConstraint=mt(e.kernelConstraint),this.recurrentConstraint=mt(e.recurrentConstraint),this.biasConstraint=mt(e.biasConstraint),this.dropout=lo([1,An([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lo([1,An([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Te(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;o=new(t=class extends b1{apply(l,c){const u=r.apply([i]),h=new Fh().apply([i]),d=r.apply([i*2]);return im(im(u,h),d)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return O(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new R(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mn({ones:()=>f1(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mn({ones:()=>f1(o),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(e=E(e,i[0]));let d=Y1(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=E(o,a[0])),d=Y(d,Y1(o,this.recurrentKernel.read())),this.useBias&&(d=D1(d,this.bias.read()));const[p,f,m,g]=r1(d,4,d.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),u=Y(E(c,r),E(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=E(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Fn(this.activation),recurrentActivation:Fn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Je(this.kernelInitializer),recurrentInitializer:Je(this.recurrentInitializer),biasInitializer:Je(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Pe(this.kernelRegularizer),recurrentRegularizer:Pe(this.recurrentRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),recurrentConstraint:ft(this.recurrentConstraint),biasConstraint:ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}yl.className="LSTMCell",K(yl);class O3 extends _n{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yl(e),super(e)}call(e,t){return O(()=>{this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}O3.className="LSTM",K(O3);class rd extends bl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return O(()=>{e=e;let s=e.slice(1);const o=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(s.splice(0,a.stateSize.length)):o.push(s.splice(0,1));o.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=o[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,t),r.push(i.slice(1))}s=[];for(const a of r.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){Vh(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,o)=>{Cs(`RNNCell_${o}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),o={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),o)}static fromConfig(e,t,s={}){const o=[];for(const r of t.cells)o.push(J1(r,s));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Wh(e)}setWeights(e){const t=[];for(const s of this.cells){const o=s.weights.length,r=e.splice(o);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],r[i]])}Uh(t)}}rd.className="StackedRNNCells",K(rd);function Mn(n){const{ones:e,rate:t,training:s=!1,count:o=1,dropoutFunc:r}=n,i=()=>r!=null?r(e(),t):lm(e(),t),a=()=>Kr(i,e,s);return!o||o<=1?V1(a().clone()):Array(o).fill(void 0).map(a).map(c=>V1(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var SI=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,s=Object.getOwnPropertySymbols(n);o<s.length;o++)e.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(n,s[o])&&(t[s[o]]=n[s[o]]);return t};class _3 extends _n{constructor(e){if(e.unroll)throw new xe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new pt({ndim:5})]}call(e,t){return O(()=>{if(this.cell.dropoutMask!=null&&(ye(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ye(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new R("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return O(()=>{const{stateSize:t}=this.cell,s=e.shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)],i=wt(r);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){O(()=>{if(!this.stateful)throw new K1("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)];if(s[0]==null)throw new R("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wt(r)):this.states_=[wt(r)];else if(e==null)ye(this.states_),this.keptStates!=null&&(ye(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wt(r)):this.states_[0]=wt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new R(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ye(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],c=r;if(!Re(l.shape,c))throw new R(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>V1(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:o,padding:r,strides:i,dilationRate:a}=this.cell,l=t==="channelsFirst",c=e[l?3:2],u=e[l?4:3],h=F1(c,o[0],r,i[0],a[0]),d=F1(u,o[1],r,i[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}_3.className="ConvRNN2D";class id extends yl{constructor(e){const{filters:t,kernelSize:s,strides:o,padding:r,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,kt(this.filters,"filters"),this.kernelSize=uo(s,2,"kernelSize"),this.kernelSize.forEach(l=>kt(l,"kernelSize")),this.strides=uo(o||1,2,"strides"),this.strides.forEach(l=>kt(l,"strides")),this.padding=r||"valid",i1(this.padding),this.dataFormat=i||"channelsLast",it(this.dataFormat),this.dilationRate=uo(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>kt(l,"dilationRate"))}build(e){var t;e=Te(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new R(`The channel dimension of the input should be defined. Found ${e[s]}`);const o=e[s],r=4,i=this.kernelSize.concat([o,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(t=class extends b1{apply(d,p){const f=c.apply([u]),m=Tn([u]),g=c.apply([u*2]);return Dh([f,m,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return O(()=>{if(e.length!==3)throw new R(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,o=e[0],r=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Mn({ones:()=>f1(o),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(j,X,J)=>!X||!X[J]?j:E(X[J],j);let u=c(o,l,0),h=c(o,l,1),d=c(o,l,2),p=c(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Mn({ones:()=>f1(r),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(r,f,0),g=c(r,f,1),x=c(r,f,2),b=c(r,f,3);const w=3,[y,k,C,$]=r1(this.kernel.read(),a,w),[v,S,T,A]=this.useBias?r1(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),h=this.inputConv(h,k,S,this.padding),d=this.inputConv(d,C,T,this.padding),p=this.inputConv(p,$,A,this.padding);const[z,_,B,M]=r1(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,z),g=this.recurrentConv(g,_),x=this.recurrentConv(x,B),b=this.recurrentConv(b,M);const V=this.recurrentActivation.apply(Y(u,m)),H=this.recurrentActivation.apply(Y(h,g)),G=Y(E(H,i),E(V,this.activation.apply(Y(d,x)))),q=E(this.recurrentActivation.apply(Y(p,b)),this.activation.apply(G));return[q,q,G]})}getConfig(){const e=super.getConfig(),t=SI(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,o){const r=hs(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?D1(r,s,this.dataFormat):r}recurrentConv(e,t){return hs(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}id.className="ConvLSTM2DCell",K(id);class M3 extends _3{constructor(e){const t=new id(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}M3.className="ConvLSTM2D",K(M3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ad extends Ie{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let o=0;o<this.noiseShape.length;++o)s.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return s}call(e,t){return O(()=>{this.invokeCallHook(e,t);const s=me(e);if(0<this.rate&&this.rate<1){const o=t.training==null?!1:t.training,r=this.getNoiseShape(s);return Kr(()=>lm(s,this.rate,r,this.seed),()=>s,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ad.className="Dropout",K(ad);class P3 extends ad{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}P3.className="SpatialDropout1D",K(P3);class z3 extends Ie{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,kt(this.units,"units"),this.activation=On(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Ke(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ke(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=mt(e.kernelConstraint),this.biasConstraint=mt(e.biasConstraint),this.kernelRegularizer=je(e.kernelRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.activityRegularizer=je(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Te(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Te(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return O(()=>{this.invokeCallHook(e,t);const s=me(e),o=Q2(this.activation.getClassName());let r;return o!=null?r=Y1(s,this.kernel.read(),o,this.bias?this.bias.read():null):(r=Y1(s,this.kernel.read()),this.bias!=null&&(r=D1(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:Fn(this.activation),useBias:this.useBias,kernelInitializer:Je(this.kernelInitializer),biasInitializer:Je(this.biasInitializer),kernelRegularizer:Pe(this.kernelRegularizer),biasRegularizer:Pe(this.biasRegularizer),activityRegularizer:Pe(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),biasConstraint:ft(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}z3.className="Dense",K(z3);class B3 extends Ie{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Te(e);for(const t of e.slice(1))if(t==null)throw new R(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Dn(e,1)]}call(e,t){return O(()=>{this.invokeCallHook(e,t);let s=me(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const o=[0];for(let r=2;r<s.rank;++r)o.push(r);o.push(1),s=Se(s,o)}return rC(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}B3.className="Flatten",K(B3);class V3 extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.activation=On(e.activation)}call(e,t){return O(()=>{this.invokeCallHook(e,t);const s=me(e);return this.activation.apply(s)})}getConfig(){const e={activation:Fn(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}V3.className="Activation",K(V3);class W3 extends Ie{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return O(()=>(e=me(e),sC(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}W3.className="RepeatVector",K(W3);class U3 extends Ie{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",o=t.slice();let r=1,i=null;for(let l=0;l<o.length;++l){const c=o[l];if(this.isUnknown(c))if(i===null)i=l;else throw new R("Can only specifiy one unknown dimension.");else r*=c}const a=Dn(e);if(i!==null){if(r===0||a%r!==0)throw new R(s);o[i]=a/r}else if(a!==r)throw new R(s);return o}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return O(()=>{this.invokeCallHook(e,t);const s=me(e),o=s.shape,r=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return L(s,r)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}U3.className="Reshape",K(U3);class G3 extends Ie{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=R1(1,e.dims.length+1);if(!Re(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Te(e);const t=e.slice();return this.dims.forEach((s,o)=>{t[o+1]=e[s]}),t}call(e,t){return Se(me(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}G3.className="Permute",K(G3);class H3 extends Ie{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=me(e);return uu(Ga(s,this.maskValue),-1)}call(e,t){return O(()=>{this.invokeCallHook(e,t);const s=me(e),i=uu(Ga(s,this.maskValue),-1,!0);return E(s,se(i,s.dtype))})}}H3.className="Masking",K(H3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class q3 extends Ie{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ae(e.inputLength))}this.inputDim=e.inputDim,kt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,kt(this.outputDim,"outputDim"),this.embeddingsInitializer=Ke(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=je(e.embeddingsRegularizer),this.activityRegularizer=je(e.activityRegularizer),this.embeddingsConstraint=mt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return O(()=>this.maskZero?(e=me(e),Ga(e,ve(e))):null)}computeOutputShape(e){if(e=Te(e),this.inputLength==null)return[...e,this.outputDim];const t=Ae(this.inputLength);if(t.length!==e.length-1)throw new R(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let o=0;o<t.length;++o){const r=t[o],i=e[o+1];if(r!=null&&i!=null&&r!==i)throw new R(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return O(()=>{this.invokeCallHook(e,t);let s=me(e);s.dtype!=="int32"&&(s=X1(s,"int32"));const o=am(this.embeddings.read(),L(s,[s.size]));return L(o,Te(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Je(this.embeddingsInitializer),embeddingsRegularizer:Pe(this.embeddingsRegularizer),activityRegularizer:Pe(this.activityRegularizer),embeddingsConstraint:ft(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}q3.className="Embedding",K(q3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vs extends Ie{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){const r=e[e.length-t.length+o],i=t[o];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new R("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Te(e)]),e=e,e.length<2)throw new R(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=En(t),t.length>1)throw new R(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const o=e.map(r=>r.length);e.indexOf(null)===-1&&En(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return O(()=>{if(e=e,this.reshapeRequired){const s=[],o=e.map(r=>r.rank);if(o.indexOf(null)===-1){const r=An(o);for(let i of e){const a=i.rank;for(let l=0;l<r-a;++l)i=Hr(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const l of e){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let p=L(l,[h].concat(Dn(u.slice(1))));p=Se(p,[1,0]),p=L(p,d),s.push(p),r=!0}else if(c>1){const u=R1(1,c).concat([0]);s.push(Se(l,u)),r=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(r){if(a==null){const l=i.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));i=L(Se(L(i,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(R1(0,a-1));i=Se(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){const r=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let s=[];for(const o of e)o!=null&&o[0]!==null&&s.push(o[0]);return s=En(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return O(()=>{if(t==null)return null;if(!Array.isArray(t))throw new R("`mask` should be an Array");if(!Array.isArray(e))throw new R("`inputs` should be an Array");if(t.length!==e.length)throw new R(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Ht(o,0));let s=t[0];for(let o=1;o<t.length-1;++o)s=ln(s,t[o]);return s})}}class K3 extends vs{constructor(e){super(e)}mergeFunction(e){return O(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Y(t,e[s]);return t})}}K3.className="Add",K(K3);class j3 extends vs{constructor(e){super(e)}mergeFunction(e){return O(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=E(t,e[s]);return t})}}j3.className="Multiply",K(j3);class X3 extends vs{constructor(e){super(e)}mergeFunction(e){return O(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Y(t,e[s]);return E(1/e.length,t)})}}X3.className="Average",K(X3);class Y3 extends vs{constructor(e){super(e)}mergeFunction(e){return O(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Nn(t,e[s]);return t})}}Y3.className="Maximum",K(Y3);class Z3 extends vs{constructor(e){super(e)}mergeFunction(e){return O(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Fr(t,e[s]);return t})}}Z3.className="Minimum",K(Z3);class J3 extends vs{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new R("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const o of e)if(o!=null){t=!1;break}if(t)return;const s=[];for(let o=0;o<e.length;++o){const r=e[o].slice();r.splice(this.axis,1);let i=!1;for(const a of s)if(Re(a,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new R("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return O(()=>Dh(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new R("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),o=this.axis<0?s.length+this.axis:this.axis;for(const r of t.slice(1)){if(s[o]==null||r[o]==null){s[o]=null;break}s[o]+=r[o]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new R("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new R("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new R(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return O(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const o=[];for(let i=0;i<e.length;++i)t[i]==null?o.push(se(f1(e[i]),"bool")):t[i].rank<e[i].rank?o.push(Ht(t[i],-1)):o.push(t[i]);const r=Gt(o,this.axis);return ff(r,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}J3.className="Concatenate",K(J3);function si(n,e){for(;n<0;)n+=e;return n}function NI(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new xe("batchDot is not implemented for tensors of 4D or higher rank yet");if(I(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),I(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new xe("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,o=e.shape.length;t==null&&(t=[s-1,o-2]);const r=t;return O(()=>{let i;if(s>o){i=s-o;const l=[];for(let c=0;c<i;++c)l.push(1);e=L(e,e.shape.concat(l))}else if(o>s){i=o-s;const l=[];for(let c=0;c<i;++c)l.push(1);n=L(n,n.shape.concat(l))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)r[0]===r[1]?a=ue(E(n,e),r[0]):a=ue(E(Se(n,[1,0]),e),r[1]);else{const l=r[0]!==n.shape.length-1,c=r[1]===e.shape.length-1;a=Ee(n,e,l,c)}if(i>0){let l;s>o?l=s+o-3:l=s-1;const c=[];for(let u=l;u<l+i;++u)c.push(u);a=Mr(a,c)}return a.shape.length===1&&(a=Ht(a,1)),a})}class Q3 extends vs{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){I(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new xe("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);if(t[o[0]]!==s[o[1]])throw new R(`Dimension incompatibility: ${t[o[0]]} !== ${s[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new R(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((r,i)=>si(r,e[i].shape.length)):o=[si(this.axes,t.shape.length),si(this.axes,s.shape.length)],this.normalize&&(t=al(t,o[0]),s=al(s,o[1])),NI(t,s,o)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[si(this.axes,e.length),si(this.axes,t.length)],s}computeOutputShape(e){I(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new xe("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);t.splice(o[0],1),s.splice(o[1],1),s.splice(0,1);const r=t.concat(s);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Q3.className="Dot",K(Q3);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class eg extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return O(()=>{this.invokeCallHook(e,t);const s=me(e);return Kr(()=>Y(tl(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}eg.className="GaussianNoise",K(eg);class tg extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return O(()=>{this.invokeCallHook(e,t);const s=me(e);return this.rate>0&&this.rate<1?Kr(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return E(s,tl(s.shape,1,r))},()=>s,t.training||!1):s})}}tg.className="GaussianDropout",K(tg);class ng extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||me(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return O(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Kr(()=>{const r=me(e),l=-1.6732632423543772*1.0507009873554805;let c=ps(Or(s),this.rate);c=X1(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=Y(E(r,c),E(Y(c,-1),l));return Y(E(d,u),h)},()=>me(e),t.training||!1)}return e})}}ng.className="AlphaDropout",K(ng);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oi(n,e,t,s,o,r=.001){let i;if(n.rank===2)i=ex(n,e,t,s,o,r);else if(n.rank===3)i=nx(n,e,t,s,o,r);else if(n.rank===4)i=ox(n,e,t,s,o,r);else throw new xe(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function TI(n,e,t,s,o=.001){return O(()=>{const r=vu(n,s),i=r.mean,a=r.variance;return[oi(n,i,a,t,e,o),i,a]})}function RI(n,e,t,s,o=.001){return O(()=>{const r=vu(n,s),i=r.mean,a=r.variance,l=[];for(const f of R1(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const c=L(i,l),u=L(a,l),h=e==null?null:L(e,l),d=t==null?null:L(t,l);return[oi(n,c,u,d,h,o),i,a]})}function EI(n,e,t,s,o=.001){return Re(s.slice().sort(),R1(0,n.rank-1))?TI(n,e,t,s,o):RI(n,e,t,s,o)}class sg extends Ie{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ke(e.betaInitializer||"zeros"),this.gammaInitializer=Ke(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ke(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ke(e.movingVarianceInitializer||"ones"),this.betaConstraint=mt(e.betaConstraint),this.gammaConstraint=mt(e.gammaConstraint),this.betaRegularizer=je(e.betaRegularizer),this.gammaRegularizer=je(e.gammaRegularizer)}build(e){e=Te(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new R(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new pt({ndim:e.length,axes:{[t]:s}})];const o=[s];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return O(()=>{const s=t.training==null?!1:t.training,o=me(e),r=o.shape,i=r.length,a=R1(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const c=ys(1,i);c[l]=r[l];const u=a.slice();u.sort();const h=!Re(u,R1(0,i).slice(0,i-1)),d=()=>{if(h){const b=L(this.movingMean.read(),c),w=L(this.movingVariance.read(),c),y=this.center?L(this.beta.read(),c):null,k=this.scale?L(this.gamma.read(),c):null;return oi(o,b,w,y,k,this.epsilon)}else return oi(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=EI(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,w,y)=>{O(()=>{const k=1-y,C=b.read(),$=E(pe(C,w),k);b.write(pe(C,$))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Je(this.betaInitializer),gammaInitializer:Je(this.gammaInitializer),movingMeanInitializer:Je(this.movingMeanInitializer),movingVarianceInitializer:Je(this.movingVarianceInitializer),betaRegularizer:Pe(this.betaRegularizer),gammaRegularizer:Pe(this.gammaRegularizer),betaConstraint:ft(this.betaConstraint),gammaConstraint:ft(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}sg.className="BatchNormalization",K(sg);class og extends Ie{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Ke(e.betaInitializer||"zeros"),this.gammaInitializer=Ke(e.gammaInitializer||"ones"),this.betaRegularizer=je(e.betaRegularizer),this.gammaRegularizer=je(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Te(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==En(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),o=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){const s=me(e),o=s.shape,r=o.length;return O(()=>{let{mean:a,variance:l}=vu(s,this.axis,!0);const c=ys(1,r);for(const m of this.axis)c[m]=o[m];const u=m=>m!=null&&m.shape.length!==r?L(m,c):m;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const p=[],f=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(p.push(o[m]),f.push(1)):(p.push(1),f.push(o[m]));return a=N1(a,p),l=N1(l,p),h!=null&&(h=N1(h,f)),d!=null&&(d=N1(d,f)),oi(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Je(this.betaInitializer),gammaInitializer:Je(this.gammaInitializer),betaRegularizer:Pe(this.betaRegularizer),gammaRegularizer:Pe(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}og.className="LayerNormalization",K(og);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DI(n,e,t){return O(()=>{if(n.rank!==4)throw new R(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new R("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=E1()),t!=="channelsLast"&&t!=="channelsFirst")throw new R(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Su(n,s)})}class rg extends Ie{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?E1():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new R(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new R(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new R(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new pt({ndim:4})]}computeOutputShape(e){e=Te(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return O(()=>DI(me(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}rg.className="ZeroPadding2D",K(rg);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wl(n,e,t,s,o,r){return O(()=>{it(o),tm(r),i1(s),t==null&&(t=[1,1]),s==null&&(s="valid"),o==null&&(o=E1()),r==null&&(r="max"),n=nd(n,o);let i;const a=s==="same"?"same":"valid";return r==="max"?i=$u(n,e,t,a):i=pu(n,e,t,a),o==="channelsFirst"&&(i=Se(i,[0,3,1,2])),i})}function ig(n,e,t,s,o,r){return O(()=>{it(o),tm(r),i1(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),o==null&&(o=E1()),r==null&&(r="max"),n=C3(n,o);let i;const a=s==="same"?"same":"valid";return r==="max"?i=Wb(n,e,t,a):i=G7(n,e,t,a),o==="channelsFirst"&&(i=Se(i,[0,4,1,2,3])),i})}class ag extends Ie{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new R(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(kt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new R(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,i1(this.padding),this.inputSpec=[new pt({ndim:3})]}computeOutputShape(e){e=Te(e);const t=F1(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return O(()=>{this.invokeCallHook(e,t),e=Hr(me(e),2);const s=this.poolingFunction(me(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Mr(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class lg extends ag{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return it(r),i1(o),wl(e,t,s,o,r,"max")}}lg.className="MaxPooling1D",K(lg);class cg extends ag{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return it(r),i1(o),wl(e,t,s,o,r,"avg")}}cg.className="AveragePooling1D",K(cg);class ug extends Ie{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new R(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];kt(this.poolSize,"poolSize"),kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),i1(this.padding),this.inputSpec=[new pt({ndim:4})]}computeOutputShape(e){e=Te(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=F1(t,this.poolSize[0],this.padding,this.strides[0]),s=F1(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return O(()=>(this.invokeCallHook(e,t),this.poolingFunction(me(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class hg extends ug{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return it(r),i1(o),wl(e,t,s,o,r,"max")}}hg.className="MaxPooling2D",K(hg);class dg extends ug{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return it(r),i1(o),wl(e,t,s,o,r,"avg")}}dg.className="AveragePooling2D",K(dg);class pg extends Ie{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new R(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];kt(this.poolSize,"poolSize"),kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),i1(this.padding),this.inputSpec=[new pt({ndim:5})]}computeOutputShape(e){e=Te(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=F1(t,this.poolSize[0],this.padding,this.strides[0]),s=F1(s,this.poolSize[1],this.padding,this.strides[1]),o=F1(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,o]:[e[0],t,s,o,e[4]]}call(e,t){return O(()=>(this.invokeCallHook(e,t),this.poolingFunction(me(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class fg extends pg{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return it(r),i1(o),ig(e,t,s,o,r,"max")}}fg.className="MaxPooling3D",K(fg);class mg extends pg{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return it(r),i1(o),ig(e,t,s,o,r,"avg")}}mg.className="AveragePooling3D",K(mg);class gg extends Ie{constructor(e){super(e),this.inputSpec=[new pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xe}}class xg extends gg{constructor(e){super(e||{})}call(e,t){return O(()=>{const s=me(e);return ct(s,1)})}}xg.className="GlobalAveragePooling1D",K(xg);class bg extends gg{constructor(e){super(e||{})}call(e,t){return O(()=>{const s=me(e);return S1(s,1)})}}bg.className="GlobalMaxPooling1D",K(bg);class yg extends Ie{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),this.inputSpec=[new pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xe}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class wg extends yg{call(e,t){return O(()=>{const s=me(e);return this.dataFormat==="channelsLast"?ct(s,[1,2]):ct(s,[2,3])})}}wg.className="GlobalAveragePooling2D",K(wg);class kg extends yg{call(e,t){return O(()=>{const s=me(e);return this.dataFormat==="channelsLast"?S1(s,[1,2]):S1(s,[2,3])})}}kg.className="GlobalMaxPooling2D",K(kg);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Cg extends Ie{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const o=t.layer,r=J1(o,s);delete t.layer;const i={layer:r};return Object.assign(i,t),new e(i)}}class Ig extends Cg{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Te(e),e.length<3)throw new R(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Te(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),o=e[1];return[s[0],o].concat(s.slice(1))}call(e,t){return O(()=>(e=me(e),A3((i,a)=>[me(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}Ig.className="TimeDistributed",K(Ig);function AI(n){ks(Jk,"BidirectionalMergeMode",n)}const LI="concat";class $g extends Cg{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=J1(s),t.goBackwards=t.goBackwards!==!0;const o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=J1(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?LI:e.mergeMode,AI(this.mergeMode),e.weights)throw new xe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,o,r;return this.returnState&&(r=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,o=[s]):this.mergeMode==null?o=[s,s.slice()]:o=[s],this.returnState?this.mergeMode==null?o.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):qt(o)}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=D3(e,s,o,this.numConstants);if(e=r.inputs,s=r.initialState,o=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&o==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new R("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const u=s.map(h=>new pt({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(o!=null)throw new xe("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Z1;for(const c of i)if(c instanceof Z1!==l)throw new R("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return O(()=>{const s=t.initialState;let o,r;if(s==null)o=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(r.slice(1))),o=o[0],r=r[0]),this.returnSequences&&(r=gs(r,1));let a;return this.mergeMode==="concat"?a=Dh([o,r]):this.mergeMode==="sum"?a=Y(o,r):this.mergeMode==="ave"?a=E(.5,Y(o,r)):this.mergeMode==="mul"?a=E(o,r):this.mergeMode==null&&(a=[o,r]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Cs(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Cs(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=J1(t.layer);if(delete t.layer,t.numConstants!=null)throw new xe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=t;return o.layer=s,new e(o)}}$g.className="Bidirectional",K($g);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vg extends Ie{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return O(()=>(e=me(e),e.dtype!=="float32"&&(e=X1(e,"float32")),Y(E(e,this.scale),this.offset)))}}vg.className="Rescaling",K(vg);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:FI,cropAndResize:OI}=un;class Sg extends Ie{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,o,r,i,a,l){return O(()=>{let c,u=!1;const h=t/i,d=s/a,p=(o+t)/i,f=(r+s)/a,m=[h,d,p,f],g=[];e.rank===3?(u=!0,c=cn([e])):c=e;for(let k=0;k<c.shape[0];k++)g.push(m);const x=Sr(g,[g.length,4]),b=_r(0,g.length,1,"int32"),y=OI(c,x,b,[o,r],"nearest");return X1(u?me(bs(y)):y,l)})}upsize(e,t,s,o){return O(()=>{const r=FI(e,[t,s]);return X1(r,o)})}call(e,t){return O(()=>{const s=me(e),o=s.dtype,r=s.shape,i=r[r.length-3],a=r[r.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,i,a,o):this.upsize(e,this.height,this.width,o)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Te(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}Sg.className="CenterCrop",K(Sg);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _I(n,e,t,s){let o=me(n);if(o.dtype!=="int32"&&(o=X1(o,"int32")),e==="int")return o;const r=o.shape;if(o.rank===0&&(o=Ht(o,-1)),e==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=Ht(o,-1)),o.rank>2)throw new R(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${o.rank}.`);const i=["multiHot","oneHot"].includes(e),a=o;let l;if(typeof s<"u"&&e==="count"?l=wf(a,s,t,i):l=wf(a,[],t,i),e!=="tfIdf")return l;if(s)return E(l,s);throw new R("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ng extends Ie{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Te(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return O(()=>{e=me(e),e.dtype!=="int32"&&(e=X1(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new R(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=me(t.countWeights)}const o=S1(e),r=Ba(e),i=o1(this.numTokens,o).bufferSync().get(0),a=ps(r,0).bufferSync().get(0);if(!(i&&a))throw new R(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return _I(e,this.outputMode,this.numTokens,s)})}}Ng.className="CategoryEncoding",K(Ng);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MI=["bilinear","nearest"],Tg=new Set(MI);class Rg extends Ie{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(Tg.has(e.interpolation))this.interpolation=e.interpolation;else throw new R(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Te(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return O(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return un.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return un.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Tg]} are supported`)})}}Rg.className="Resizing",K(Rg);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Eg{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}Eg.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dg extends Ie{constructor(e){super(e),this.randomGenerator=new Eg(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Dg.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const PI=["bilinear","nearest"],Ag=new Set(PI);class Lg extends Dg{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new R(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new R(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new R(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Ag.has(s))this.interpolation=s;else throw new R(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Te(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return O(()=>{const s=me(e);this.imgHeight=s.shape[s.shape.length-3];const o=s.shape[s.shape.length-2];this.widthFactor=Or([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*o;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return un.resizeBilinear(e,i);case"nearest":return un.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Ag]} are supported`)}})}}Lg.className="RandomWidth",K(Lg);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */P().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Fg;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Fg||(Fg={}));var Og;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Og||(Og={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var _g;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(_g||(_g={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&I(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI=Gf;class kl extends Kl{nextDataId(){return kl.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ud(this,B1())}write(e,t,s){this.firstUse&&(this.firstUse=!1,P().get("IS_NODE")&&n1(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:s,refCount:1}),o}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&No(s[0])){const r=s.map(i=>kn(i));o=this.write(r,e,t)}else o=this.write(s,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,o,r){this.data.set(e,{values:t,dtype:o,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const o=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return hn(o,r)}return q5(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>Cn(o));return Ce(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,t)}makeOutput(e,t,s){return B1().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Vt();return e(),{kernelMs:Vt()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ie([e],"where");const t=this.readSync(e.dataId);return zI(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}kl.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mg(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const BI={kernelName:vi,backendName:"cpu",kernelFunc:n=>{const{x:e}=n.inputs,t=n.backend;ie(e,"abs");let s=new Float32Array(U(e.shape));const o=t.data.get(e.dataId).values;return s=Mg(o),t.makeOutput(s,e.shape,e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(n){return(e,t,s,o,r)=>{const i=ge(e,t),a=i.length,l=le(i),c=U(i),u=Rt(r,c),h=e.length,d=t.length,p=le(e),f=le(t),m=to(e,i),g=to(t,i);if(m.length+g.length===0)for(let x=0;x<u.length;++x)u[x]=n(s[x%s.length],o[x%o.length]);else for(let x=0;x<u.length;++x){const b=Gs(x,a,l),w=b.slice(-h);m.forEach($=>w[$]=0);const y=z1(w,h,p),k=b.slice(-d);g.forEach($=>k[$]=0);const C=z1(k,d,f);u[x]=n(s[y],o[C])}return[u,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e1(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,r=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",r),imag:t.makeTensorInfo(o.shape,"float32",i)},a}const VI={kernelName:hc,backendName:"cpu",kernelFunc:e1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(n,e,t="float32"){if(t==="complex64"){const o=Cl(n,e,"float32"),r=Cl(n,e,"float32");return e1({inputs:{real:o,imag:r},backend:n})}const s=Et(U(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const WI={kernelName:jo,backendName:"cpu",kernelFunc:en};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.real,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const UI={kernelName:Mc,backendName:"cpu",kernelFunc:Ss};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pg(n,e,t,s){if(s==="int32"){const o=Int32Array.from(n);return[e,"int32",o]}if(s==="bool"){const o=ns([0],t),[r,i]=at((a,l)=>a!==l?1:0)(e,[],n,o,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function Pn(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return en({inputs:{x:o},backend:t});const u=Cl(t,o.shape,o.dtype),h=Pn({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),d=e1({inputs:{real:h,imag:u},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),d}if(o.dtype==="complex64"){const u=Ss({inputs:{input:o},backend:t}),h=Pn({inputs:{x:u},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(u),h}if(!Kd(o.dtype,r)){const u=en({inputs:{x:o},backend:t});return{dataId:u.dataId,shape:u.shape,dtype:r}}const i=t.data.get(o.dataId).values,[a,l,c]=Pg(i,o.shape,o.dtype,r);return t.makeTensorInfo(a,l,c)}const GI={kernelName:Oo,backendName:"cpu",kernelFunc:Pn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gt(n,e,t,s){return t==null?({inputs:o,backend:r})=>{const{a:i,b:a}=o,l=r;ie([i,a],n);const c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,h=i.dtype==="string"?dn(c):c,d=i.dtype==="string"?dn(u):u,p=s||i.dtype,[f,m]=e(i.shape,a.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:o,backend:r})=>{const{a:i,b:a}=o,l=r;if(i.dtype==="complex64"||a.dtype==="complex64"){const c=Pn({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Pn({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(x.dataId).values,y=l.data.get(b.dataId).values,[k,C,$]=t(i.shape,a.shape,p,f,w,y),v=l.makeTensorInfo($,"float32",k),S=l.makeTensorInfo($,"float32",C),T=e1({inputs:{real:v,imag:S},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(S),T}else{const c=l.data.get(i.dataId).values,u=l.data.get(a.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,a.shape,c,u,h);return l.makeTensorInfo(p,h,d)}}}function ld(n){return(e,t,s,o,r,i)=>{const a=ge(e,t),l=U(a),c=a.length,u=le(a),h=Rt("float32",l),d=Rt("float32",l),p=to(e,a),f=to(t,a),m=hn(s,o),g=hn(r,i),x=e.length,b=le(e),w=t.length,y=le(t);if(p.length+f.length===0)for(let k=0;k<h.length;k++){const C=k%m.length,$=k%g.length,v=n(m[C*2],m[C*2+1],g[$*2],g[$*2+1]);h[k]=v.real,d[k]=v.imag}else for(let k=0;k<h.length;k++){const C=Gs(k,c,u),$=C.slice(-x);p.forEach(z=>$[z]=0);const v=z1($,x,b),S=C.slice(-w);f.forEach(z=>S[z]=0);const T=z1(S,w,y),A=n(m[v*2],m[v*2+1],g[T*2],g[T*2+1]);h[k]=A.real,d[k]=A.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zg=at((n,e)=>n+e),HI=ld((n,e,t,s)=>({real:n+t,imag:e+s})),po=gt(Hs,zg,HI),qI={kernelName:Hs,backendName:"cpu",kernelFunc:po};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cd(n,e,t,s,o){const r=U(s),i=Et(o,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(r>0?i[l]+=e[a]:i[l]+=1)}return i}function Bg(n,e,t,s=!1){const o=n.shape[0],r=n.shape[1],i=Ce([o,t],e.dtype);for(let a=0;a<o;a++)for(let l=0;l<r;l++){const c=n.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?i.set(1,a,c):e.size>0?i.set(i.get(a,c)+e.get(a,l),a,c):i.set(i.get(a,c)+1,a,c))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vg=at((n,e)=>n&e),KI=gt(uc,Vg),jI={kernelName:uc,backendName:"cpu",kernelFunc:KI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n){return(e,t,s)=>{const o=nt(t,e.length);for(let r=0;r<e.length;++r)o[r]=n(e[r],s);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(n,e,t){const s=tn(e);return zn(n,s,t)}function zn(n,e,t){return({inputs:s,attrs:o,backend:r})=>{const{x:i}=s;ie(i,n);const a=r,l=a.data.get(i.dataId).values;let c;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=dn(l)}else c=l;const u=t||i.dtype,h=e(c,u,o);return a.makeTensorInfo(i.shape,u,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wg=tn(n=>Math.ceil(n)),XI=zn(_o,Wg),YI={kernelName:_o,backendName:"cpu",kernelFunc:XI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ug(n,e,t,s){const o=nt(t,U(e));if(s&&t!=="string"){let r=0;n.forEach(i=>{const a=U(i.shape);o.set(i.vals,r),r+=a})}else{let r=0;n.forEach(i=>{const a=t==="string"?dn(i.vals):i.vals;let l=0;for(let c=0;c<i.shape[0];++c){const u=c*e[1]+r;for(let h=0;h<i.shape[1];++h)o[u+h]=a[l++]}r+=i.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gg=at((n,e)=>n===e?1:0),Hg=gt(Bi,Gg,null,"bool"),ZI={kernelName:Bi,backendName:"cpu",kernelFunc:Hg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qg=tn(n=>Math.exp(n)),Kg=zn(Uo,qg,"float32"),JI={kernelName:Uo,backendName:"cpu",kernelFunc:Kg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jg=tn(n=>Math.expm1(n)),QI=zn(Go,jg),e$={kernelName:Go,backendName:"cpu",kernelFunc:QI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xg=tn(n=>Math.floor(n)),t$=zn(Ho,Xg),n$={kernelName:Ho,backendName:"cpu",kernelFunc:t$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yg=at((n,e)=>Math.floor(n/e)),s$=gt(qo,Yg,null,"int32"),o$={kernelName:qo,backendName:"cpu",kernelFunc:s$};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zg(n,e,t,s,o,r,i,a,l){const c=Ce([s,r],t);for(let u=0;u<s;u++){const h=[];let d=0;for(let p=0;p<o;p++){const f=n[u*o+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<r;p++)c.values[u*r+p]=e.get(...e.indexToLoc(d*r+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jg(n,e,t){const s=Ce(t,n.dtype);for(let o=0;o<s.size;++o){const i=s.indexToLoc(o).slice(),a=i[0],l=i[2],c=e.locToIndex([a,l]);i[2]=e.values[c];const u=n.locToIndex(i);0<=u&&u<n.values.length&&(s.values[o]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qg=at((n,e)=>n>e?1:0),r$=gt(Gi,Qg,null,"bool"),i$={kernelName:Gi,backendName:"cpu",kernelFunc:r$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e0=at((n,e)=>n>=e?1:0),a$=gt(Ko,e0,null,"bool"),l$={kernelName:Ko,backendName:"cpu",kernelFunc:a$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t0=at((n,e)=>n<e?1:0),c$=gt(qi,t0,null,"bool"),u$={kernelName:qi,backendName:"cpu",kernelFunc:c$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n0=at((n,e)=>n<=e?1:0),h$=gt(Ki,n0,null,"bool"),d$={kernelName:Ki,backendName:"cpu",kernelFunc:h$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s0(n,e,t){const s=(e-n)/(t-1),o=Et(t,"float32");o[0]=n;for(let r=1;r<o.length;r++)o[r]=o[r-1]+s;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o0=tn(n=>Math.log(n)),p$=zn(Jo,o0),f$={kernelName:Jo,backendName:"cpu",kernelFunc:p$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0(n,e,t,s){const o=Rt(s,U(t));for(let r=0;r<o.length;++r){const i=r*e;let a=n[i];for(let l=0;l<e;++l){const c=n[i+l];(Number.isNaN(c)||c>a)&&(a=c)}o[r]=a}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i0=at((n,e)=>Math.max(n,e)),m$=gt(er,i0),g$={kernelName:er,backendName:"cpu",kernelFunc:m$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a0=at((n,e)=>Math.min(n,e)),x$=gt(tr,a0),b$={kernelName:tr,backendName:"cpu",kernelFunc:x$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ud=at((n,e)=>n*e),y$=ld((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Il=gt(sr,ud,y$),w$={kernelName:sr,backendName:"cpu",kernelFunc:Il};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0(n,e,t){const s=wn(-1,t);return ud([],e,s,n,t)}function k$(n){const{inputs:e,backend:t}=n,{x:s}=e;ie(s,"neg");const o=t.data.get(s.dataId).values,[r,i]=l0(o,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,r)}const C$={kernelName:oa,backendName:"cpu",kernelFunc:k$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c0=at((n,e)=>n!==e?1:0),I$=gt(ra,c0,null,"bool"),$$={kernelName:ra,backendName:"cpu",kernelFunc:I$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hd(n,e,t,s,o){const r=e.length,i=U(e),a=le(e),l=le(o),c=Rt(t,U(o));for(let u=0;u<i;++u){const h=Gs(u,r,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=z1(d,r,l);c[p]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(n){const{inputs:e,attrs:t,backend:s}=n,{x:o}=e,{perm:r}=t;ie(o,"transpose");const i=o.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=o.shape[r[h]];const l=s.data.get(o.dataId).values,c=hd(l,o.shape,o.dtype,r,a);return{dataId:s.write(c,a,o.dtype),shape:a,dtype:o.dtype}}const v$={kernelName:qs,backendName:"cpu",kernelFunc:Kt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u0(n,e,t,s){const[o,r]=yt(n,s),i=Zt(e,"int32"),a=Et(U(o),i),l=U(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=t[u+d];a[c]=h}return{outVals:a,outShape:o,outDtype:i}}function S$(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;ie(o,"prod");const a=o.shape.length,l=ke(r,o.shape),c=Ze(l,a);let u=l,h=o;const d=[];c!=null&&(h=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),d.push(h),u=ot(u.length,a));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=u0(h.shape,h.dtype,p,u);let x=m;return i&&(x=lt(m,l)),d.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(x,g,f)}const N$={kernelName:ha,backendName:"cpu",kernelFunc:S$};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(n,e,t){n.forEach((s,o)=>{if(s<0||s>=t){const r=Gs(o,e.length,le(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${t})`)}})}function R$(n,e){for(let t=0;t<n.length;++t){const s=n[t],o=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>o)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function E$(n,e,t,s){const o=[];let r=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);R$(t,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const u=e[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<n.length;++c){let u=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[u];for(let x=u;x<h;++x)a[f].push(p[x+1]+g)}u=p[u],h=p[h]}h!==u&&(o.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:o,numValues:r}}function D$(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,o=nt("int32",s);e.push(o),n[t].forEach((r,i)=>o[i]=r)}return e}function h0(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function A$(n,e,t,s,o,r){const i=h0(e,2)[1],a=h0(r,2)[1];let l=0;for(const c of t)for(let u=c[0];u<c[1];++u){for(let h=0;h<s;++h)o[l*a+h]=n[u*i+h];++l}}function L$(n,e,t,s,o){const r=e.slice();r[0]=o;const i=nt(t,U(r)),a=n.length,l=a===0?0:a/e[0];return A$(n,e,s,l,i,r),[i,r]}function d0(n,e,t,s,o,r,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(T$(r,i,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:h,numValues:d}=E$(r,i,n,c),p=D$(u),f=L$(t,s,o,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p0=2147483647;function f0(n,e,t,s,o,r,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=o.length===0,c=i.length===0,u=[];a||u.push(e[0]),l||u.push(o[0]),c||u.push(i[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=nt("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=a?n[0]:n[g],b=l?s[0]:s[g],w=c?r[0]:r[g];if(w===0)throw new Error("Requires delta != 0");let y;if(w>0&&b<x||w<0&&b>x)y=0;else if(y=Math.ceil(Math.abs((b-x)/w)),y>p0)throw new Error(`Requires ((limit - start) / delta) <= ${p0}`);d[g+1]=d[g]+y}const p=d[h],f=nt(t,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let b=a?n[0]:n[g];const w=c?r[0]:r[g];for(let y=0;y<x;++y)f[m++]=b,b+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var w1=T1;class $l{constructor(e,t,s,o,r,i,a,l,c,u){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=o,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=x2(u),this.raggedRank=b2(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===w1.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===w1.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case w1.VALUE_ROWIDS:return $l.getMaxWidthValueRowID(t);case w1.ROW_SPLITS:return $l.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${w1[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let o=0;o<t-1;++o){const r=e[o+1]-e[o];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,o=e[0],r=0;for(let i=1;i<t;++i){const a=e[i];a!==o&&(o=a,r=Math.max(i-s,r),s=i)}return Math.max(t-s,r)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return g0(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;y2(s,t);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=g2(this.raggedRank,o,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const o=Math.min(e,s),r=[];let i=0;for(let a=0;a<o;++a,i+=t)r.push(i);for(let a=o;a<e;++a)r.push(-1);return I(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,s,o){const r=e.length,i=[];for(let a=0;a<r-1;++a){const l=e[a+1]-e[a];let c=Math.min(o,l),u=t[a];u===-1&&(c=0);for(let h=0;h<c;++h)i.push(u),u+=s;for(let h=0;h<l-c;++h)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,o){const r=e.length,i=[];if(r===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];i.push(c);for(let u=1;u<r;++u){const h=e[u];if(h===l)c>=0&&(++a,a<o?c+=s:c=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}i.push(c)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,o){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case w1.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,s,o);case w1.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,s,o);default:throw new Error(`Unsupported partition type: ${w1[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case w1.FIRST_DIM_SIZE:return e[0];case w1.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case w1.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${w1[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let l=o.length-2;l>=0;--l)o[l]=o[l+1]*s[l+1];const r=g0(s,!1),i=nt(this.valuesDType,U(r));if(o[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,o[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,o[c],s[c]);this.setOutput(this.raggedRank,l,i,r)}return[r,i]}setOutput(e,t,s,o){if(s.length===0)return;const r=this.values,i=s;let a=o.slice();a=a.slice(e+1);const l=U(a),c=t.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const f=this.defaultValueShape;O(()=>{const m=L(u,f);u=Dr(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=c;++f){let m=f<c?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=r.subarray(h*l),x=i.subarray(d*l),b=(p-d)*l;m0(x,g,b)}if(f>=c){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=i.slice(p*l);m0(g,u,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function m0(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function g0(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function x0(n,e,t,s,o,r,i,a,l,c){return new $l(n,e,t,s,o,r,i,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0(n,e,t,s){const o=n===e,r=n<e&&t<0,i=e<n&&t>1;if(o||r||i)return Et(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=Et(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y0=tn(n=>1/Math.sqrt(n)),F$=zn(cr,y0),O$={kernelName:cr,backendName:"cpu",kernelFunc:F$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(n,e,t,s,o,r,i,a,l,c){const u=[s/o,o],h=n.values,d=e.values;if(s===0)return Ce(t,e.dtype);const p=l instanceof Ct?l:Ce(u,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<r;f++){const m=[];let g=0;for(let x=0;x<i;x++){const b=h[f*i+x];m.push(b),g+=b*a[x]}if(g<0||g>=s/o)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let x=0;x<o;x++)c?p.values[g*o+x]+=d[f*o+x]:p.values[g*o+x]=e.rank===0?d[0]:d[f*o+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _$=tn(n=>1/(1+Math.exp(-n))),w0=Le(fr,n=>1/(1+Math.exp(-n))),M$={kernelName:fr,backendName:"cpu",kernelFunc:w0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k0(n,e,t,s,o){const r=th(s,e,t),i=U(t),a=le(s);if(r){const h=nh(e,a);return o==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const l=o==="string"?dn(n):n,c=Ce(s,o,l),u=Ce(t,o);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),p=d.map((f,m)=>f+e[m]);u.set(c.get(...p),...d)}return o==="string"?V2(u.values):u.values}function Ts(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,size:i}=s;ie(o,"slice");const[a,l]=Ka(o,r,i);Qu(o,a,l);const c=t.data.get(o.dataId).values,u=k0(c,a,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,u)}const P$={kernelName:xa,backendName:"cpu",kernelFunc:Ts};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0(n,e,t,s,o,r,i){const a=e[0],l=r[0],c=new Array(l),u=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(T2(a));const g=nt(t,0),x=nt(o,0);return[g,[0,h],x,c,u]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const x=n[g*h];if(x<0)throw new Error(R2(g,x));if(x>=l)throw new Error(E2(g,x,l));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<l;++g){const x=f[g]===0;c[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,x=s;for(let b=0;b<a;++b)u[b]=b;return[g,[a,h],x,c,u]}else{const g=f[l-1],x=nt(t,g*h),b=nt(o,g),w=new Array(l).fill(0);for(let y=0;y<a;++y){const k=n[y*h],C=w[k],$=(k===0?0:f[k-1])+C;w[k]++;for(let v=0;v<h;++v)x[$*h+v]=n[y*h+v];b[$]=s[y],u[y]=$}for(let y=0;y<l;++y)if(w[y]===0){const C=y===0?0:f[y-1];x[C*h+0]=y;for(let $=1;$<h;++$)x[C*h+$]=0;b[C]=i}return[x,[g,h],b,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I0(n,e,t,s,o){const r=U(s),i=e[0],a=o.length,l=[];let c=1,u=-1;for(let g=0;g<a;++g){const x=o[g];if(x===-1){if(u!==-1)throw new Error(D2(u,g));u=g,l.push(1)}else{if(x<0)throw new Error(A2(g,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(L2());const g=Math.trunc(r/c);if(c*g!==r)throw new Error(F2(s,l));l[u]=g}if(U(l)!==r)throw new Error(O2(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=nt(t,i*a);for(let g=0;g<i;++g){let x=0;for(let b=0;b<d;++b)x+=n[g*d+b]*p[b];for(let b=0;b<a;++b)m[g*a+b]=Math.trunc(x/f[b]),x%=f[b]}return[m,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dd(n,e,t,s,o,r=!1,i=0){const a=s.length,l=[e[0],n.length/e[0]],c=l[1],h=a>0?o[a-1]+1:0;if(h<0)throw new Error(Ih());const d=e.slice();d[0]=h;const p=d.reduce((w,y)=>w*y,1),f=nt(t,p);if(a===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(Ih());let m=0,g=1,x=0,b=o[m];for(;;){let w=0;if(g<a){if(w=o[g],b===w){++g;continue}if(b>=w)throw new Error(_2())}if(b<0||b>=h)throw new Error(M2(b,h));b>x&&f.fill(i,x*c,b*c);for(let y=m;y<g;++y){const k=s[y];if(k<0||k>=l[0])throw new Error(P2(y,s[y],l[0]));for(let C=0;C<c;C++)f[b*c+C]+=n[k*c+C]}if(r)for(let y=0;y<c;y++)f[b*c+y]/=g-m;if(m=g,++g,x=b+1,b=w,g>a)break}return x<h&&f.fill(i,x*c,h*c),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z$=tn(n=>Math.sqrt(n)),B$=Le(gr,n=>Math.sqrt(n)),V$={kernelName:gr,backendName:"cpu",kernelFunc:B$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $0=at((n,e)=>{const t=n-e;return t*t}),W$=gt(xr,$0),U$={kernelName:xr,backendName:"cpu",kernelFunc:W$};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v0=tn((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:o}=e;return n.replace(new RegExp(t,s?"g":""),o)}),G$=zn(Vc,v0),H$={kernelName:Vc,backendName:"cpu",kernelFunc:G$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S0(n,e,t,s){const o=Ce(n,e.dtype);for(let r=0;r<o.size;r++){const i=o.indexToLoc(r),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*t[l]+s[l];o.set(e.get(...a),...i)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q${constructor(e,t,s,o,r,i){this.separator=kn(e),this.nGramWidths=t,this.leftPad=kn(s),this.rightPad=kn(o),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,o,r,i){for(let a=0;a<r;++a){const l=this.getPadWidth(i),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=i-(c+u),d=t+(c>0?0:a-l);let p=0;p+=c*this.leftPad.length;for(let b=0;b<h;++b)p+=e[d+b].length;p+=u*this.rightPad.length;const f=c+u+h-1;p+=f*this.separator.length,s[o+a]=new Uint8Array(p);const m=s[o+a];let g=0;const x=b=>b.forEach(w=>m[g++]=w);for(let b=0;b<c;++b)x(this.leftPad),x(this.separator);for(let b=0;b<h-1;++b)x(e[d+b]),x(this.separator);if(h>0){x(e[d+h-1]);for(let b=0;b<u;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<u-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const s=e.length,o=t.length;if(o>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<o;++c){let u=t[c]>=l;if(u=u&&t[c]<=s,!u)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${s}]`);l=t[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const r=o-1,i=nt("int32",o);if(s===0||o===0){const l=new Array(s);for(let c=0;c<=r;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=r;++l){const c=t[l]-t[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),i[l]=i[l-1]+u}const a=new Array(i[r]);for(let l=0;l<r;++l){const c=t[l];let u=i[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,c,a,u,p,h),u+=p}),this.preserveShort&&u===i[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,c,a,u,1,d)}}return[a,i]}}function N0(n,e,t,s,o,r,i,a){return new q$(t,s,o,r,i,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n,e,t,s){if(!n.length)return;if(e.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(e.length===1){const r=e[0];let i=n.indexOf(r);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(r)}(!t||n.length!==0)&&s.push(n);return}let o=0;for(let r=0;r<n.length+1;r++)if(r===n.length||e.indexOf(n[r])!==-1){const i=n.subarray(o,r);(!t||i.length!==0)&&s.push(i),o=r+1}}function T0(n,e,t){const s=n.length,o=[];let r=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const p=o.length;K$(n[d],e,t,o);const f=o.length-p;a[d]=f,r+=f,i=Math.max(i,f)}const l=nt("int32",r*2),c=new Array(r),u=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,c[h]=o[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R0(n,e){const t=nt("int32",n.length);for(let s=0;s<n.length;++s)t[s]=p6(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E0=at((n,e)=>n-e),j$=ld((n,e,t,s)=>({real:n-t,imag:e-s})),pd=gt(br,E0,j$),X$={kernelName:br,backendName:"cpu",kernelFunc:pd};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0(n,e){const t=new Array(n.rank);for(let o=0;o<t.length;o++)t[o]=n.shape[o]*e[o];const s=Ce(t,n.dtype);for(let o=0;o<s.values.length;++o){const r=s.indexToLoc(o),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=r[l]%n.shape[l];const a=n.locToIndex(i);s.values[o]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ri=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function A0(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*u/a+h)),p=Math.min(s,Math.floor(e+(a-l)*u/a+h));A0(n,e,d,p)}const o=n[e];let r=t,i=s;for(Bs(n,t,e),ri(n[s],o)>0&&Bs(n,t,s);r<i;){for(Bs(n,r,i),r++,i--;ri(n[r],o)<0;)r=r+1;for(;ri(n[i],o)>0;)i=i-1}ri(n[t],o)===0?Bs(n,t,i):(i=i+1,Bs(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function L0(n,e,t,s,o){const r=e[e.length-1],[i,a]=[n.length/r,r],l=Rt(t,i*s),c=Rt("int32",i*s);for(let h=0;h<i;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((b,w)=>f[w]={value:b,index:w}),s<f.length&&(A0(f,s),f=f.slice(0,s)),o&&f.sort(ri);const m=h*s,g=l.subarray(m,m+s),x=c.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,x[b]=f[b].index}const u=e.slice();return u[u.length-1]=s,[Ce(u,t,l),Ce(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F0(n,e,t,s){const o=ke(e,t)[0],r=[1,t[0],1];for(let f=0;f<o;f++)r[0]*=t[f];r[1]=t[o];for(let f=o+1;f<t.length;f++)r[2]*=t[f];const i=new Map,a=new Int32Array(t[o]),l=new Ct(r,s,n),c=[],u=r[0]===1&&r[2]===1;for(let f=0;f<t[o];f++){let m;if(u)m=n[f].toString();else{const x=[];for(let b=0;b<r[0];b++)for(let w=0;w<r[2];w++)x.push(l.get(b,f,w));m=x.join(",")}const g=i.get(m);if(g!=null)a[f]=g;else{const x=i.size;i.set(m,x),a[f]=x,c.push(f)}}const h=r.slice();h[1]=i.size;const d=new Ct(h,s);c.forEach((f,m)=>{for(let g=0;g<r[0];g++)for(let x=0;x<r[2];x++)d.set(l.get(g,f,x),g,m,x)});const p=t.slice();return p[o]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Y$=Object.freeze({__proto__:null,addImpl:zg,bincountImpl:cd,bincountReduceImpl:Bg,bitwiseAndImpl:Vg,castImpl:Pg,ceilImpl:Wg,concatImpl:Ug,equalImpl:Gg,expImpl:qg,expm1Impl:jg,floorDivImpl:Yg,floorImpl:Xg,gatherNdImpl:Zg,gatherV2Impl:Jg,greaterEqualImpl:e0,greaterImpl:Qg,lessEqualImpl:n0,lessImpl:t0,linSpaceImpl:s0,logImpl:o0,maxImpl:r0,maximumImpl:i0,minimumImpl:a0,multiplyImpl:ud,negImpl:l0,notEqualImpl:c0,prodImpl:u0,raggedGatherImpl:d0,raggedRangeImpl:f0,raggedTensorToTensorImpl:x0,rangeImpl:b0,rsqrtImpl:y0,scatterImpl:Ns,sigmoidImpl:_$,simpleAbsImpl:Mg,sliceImpl:k0,sparseFillEmptyRowsImpl:C0,sparseReshapeImpl:I0,sparseSegmentReductionImpl:dd,sqrtImpl:z$,squaredDifferenceImpl:$0,staticRegexReplaceImpl:v0,stridedSliceImpl:S0,stringNGramsImpl:N0,stringSplitImpl:T0,stringToHashBucketFastImpl:R0,subImpl:E0,tileImpl:D0,topKImpl:L0,transposeImpl:hd,uniqueImpl:F0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */tf("cpu",()=>new kl,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O0=Le(Vo,n=>n>=0?n:Math.exp(n)-1),Z$={kernelName:Vo,backendName:"cpu",kernelFunc:O0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _0(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:r}=s;ie([o],"leakyRelu");const i=U(o.shape),a=t.data.get(o.dataId).values,l=Rt("float32",i);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return t.makeTensorInfo(o.shape,"float32",l)}const J$={kernelName:Hi,backendName:"cpu",kernelFunc:_0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q$=at((n,e)=>n<0?e*n:n);function M0(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e;ie([s,o],"prelu");const r=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,[a,l]=Q$(s.shape,o.shape,r,i,"float32");return t.makeTensorInfo(l,"float32",a)}const ev={kernelName:ua,backendName:"cpu",kernelFunc:M0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P0=Le(ir,n=>Math.max(0,n)),tv={kernelName:ir,backendName:"cpu",kernelFunc:P0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z0=Le(ar,n=>Math.min(Math.max(0,n),6)),nv={kernelName:ar,backendName:"cpu",kernelFunc:z0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vl(n,e,t,s,o){if(t==="linear")return en({inputs:{x:e},backend:n});if(t==="relu")return P0({inputs:{x:e},backend:n});if(t==="elu")return O0({inputs:{x:e},backend:n});if(t==="relu6")return z0({inputs:{x:e},backend:n});if(t==="prelu")return M0({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return _0({inputs:{x:e},backend:n,attrs:{alpha:o}});if(t==="sigmoid")return w0({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:r}=s,i=U(o.shape),a=qd(r,i),l=U(a);I(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);const c=t.data.get(o.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}const sv={kernelName:da,backendName:"cpu",kernelFunc:Ve};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B0(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r}=e,{transposeA:i,transposeB:a}=s;ie([o,r],"matMul");const l=o.shape.length,c=r.shape.length,u=i?o.shape[l-2]:o.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=i?o.shape[l-1]:o.shape[l-2],p=a?r.shape[c-2]:r.shape[c-1],f=o.shape.slice(0,-2),m=r.shape.slice(0,-2),g=U(f),x=U(m),w=ge(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);I(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${i} and transposeB=${a} must match.`);const y=i?[g,u,d]:[g,d,u],k=a?[x,p,h]:[x,h,p],C=Ve({inputs:{x:o},backend:t,attrs:{shape:y}}),$=Ve({inputs:{x:r},backend:t,attrs:{shape:k}}),v=i?C.shape[1]:C.shape[2],S=i?C.shape[2]:C.shape[1],T=a?$.shape[1]:$.shape[2],A=Math.max(g,x),z=t.data.get(C.dataId).values,_=t.data.get($.dataId).values,B=le(C.shape),M=le($.shape),[V,H,G]=i?[B[0],1,B[1]]:[B[0],B[1],1],[q,j,X]=a?[1,M[1],M[0]]:[M[1],1,M[0]],J=S*T,Z=Ce([A,S,T],C.dtype),ne=Z.values,Q=t.blockSize;for(let re=0;re<A;re++){const ce=re%g,fe=re%x;for(let de=0;de<S;de+=Q){const be=Math.min(de+Q,S);for(let we=0;we<T;we+=Q){const Fe=Math.min(we+Q,T);for(let We=0;We<v;We+=Q){const tt=Math.min(We+Q,v);for(let Ue=de;Ue<be;Ue++)for(let Me=we;Me<Fe;Me++){let Qe=0;for(let Ye=We;Ye<tt;Ye++){const gn=z[ce*V+Ue*H+Ye*G],Tt=_[Ye*q+Me*j+fe*X];Qe+=gn*Tt}ne[re*J+(Ue*T+Me)]+=Qe}}}}}return t.disposeIntermediateTensorInfo(C),t.disposeIntermediateTensorInfo($),t.makeTensorInfo(w,Z.dtype,Z.values)}const ov={kernelName:Ei,backendName:"cpu",kernelFunc:B0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rv(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=B0({inputs:{a:o,b:r},attrs:{transposeA:l,transposeB:c},backend:t}),i&&(p=po({inputs:{a:d,b:i},backend:t}),m.push(d),d=p),u&&(f=vl(t,d,u,a,h),m.push(d),d=f);for(const x of m)t.disposeIntermediateTensorInfo(x);return d}const iv={kernelName:va,backendName:"cpu",kernelFunc:rv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const av=Le(To,n=>Math.acos(n)),lv={kernelName:To,backendName:"cpu",kernelFunc:av};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=Le(Ro,n=>Math.acosh(n)),uv={kernelName:Ro,backendName:"cpu",kernelFunc:cv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(n){const{inputs:e,backend:t}=n,s=e;ie(e,"addN");const o=s.map(a=>t.data.get(a.dataId).values),r=Ce(s[0].shape,s[0].dtype),i=r.values;for(let a=0;a<s.length;a++){const l=o[a];for(let c=0;c<i.length;c++)i[c]+=l[c]}return t.makeTensorInfo(r.shape,r.dtype,r.values)}const dv={kernelName:oc,backendName:"cpu",kernelFunc:hv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;ie(o,"all");const a=ke(r,o.shape);let l=a;const c=Ze(l,o.shape.length);let u=o;c!=null&&(u=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),l=ot(l.length,o.shape.length)),$t("all",l,u.shape.length);const[h,d]=yt(u.shape,l),p=U(d),f=Et(U(h),u.dtype),m=t.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const k=m[b+y];w=w&&k}f[x]=w}c!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const x=lt(h,a),b=Ve({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}const fv={kernelName:rc,backendName:"cpu",kernelFunc:pv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;ie(o,"any");const a=ke(r,o.shape);let l=a;const c=Ze(l,o.shape.length);let u=o;c!=null&&(u=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),l=ot(l.length,o.shape.length)),$t("any",l,u.shape.length);const[h,d]=yt(u.shape,l),p=U(d),f=Et(U(h),u.dtype),m=t.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const k=m[b+y];w=w||k}f[x]=w}c!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const x=lt(h,a),b=Ve({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}const gv={kernelName:ic,backendName:"cpu",kernelFunc:mv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;ie(o,"argMax");let i=ke(r,o.shape);const a=Ze(i,o.shape.length);let l=o;const c=[];a!=null&&(l=Kt({inputs:{x:o},backend:t,attrs:{perm:a}}),c.push(l),i=ot(i.length,l.shape.length)),i=[i[0]],$t("argMax",i,l.shape.length);const[u,h]=yt(l.shape,i),d=U(u),p=Et(d,"int32"),f=U(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const k=m[x+y];k>b&&(b=k,w=y)}p[g]=w}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const bv={kernelName:Si,backendName:"cpu",kernelFunc:xv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;ie(o,"argMin");let i=ke(r,o.shape);const a=Ze(i,o.shape.length);let l=o;const c=[];a!=null&&(l=Kt({inputs:{x:o},backend:t,attrs:{perm:a}}),c.push(l),i=ot(i.length,l.shape.length)),i=[i[0]],$t("argMin",i,l.shape.length);const[u,h]=yt(l.shape,i),d=U(u),p=Et(d,"int32"),f=U(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const k=m[x+y];k<b&&(b=k,w=y)}p[g]=w}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const wv={kernelName:Ni,backendName:"cpu",kernelFunc:yv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kv=Le(Eo,n=>Math.asin(n)),Cv={kernelName:Eo,backendName:"cpu",kernelFunc:kv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iv=Le(Do,n=>Math.asinh(n)),$v={kernelName:Do,backendName:"cpu",kernelFunc:Iv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vv=Le(Ao,n=>Math.atan(n)),Sv={kernelName:Ao,backendName:"cpu",kernelFunc:vv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nv=at((n,e)=>Math.atan2(n,e)),Tv=gt(Fo,Nv),Rv={kernelName:Fo,backendName:"cpu",kernelFunc:Tv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ev=Le(Lo,n=>Math.atanh(n)),Dv={kernelName:Lo,backendName:"cpu",kernelFunc:Ev};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(n,e,t,s,o,r){const i=o.strideHeight,a=o.strideWidth,l=o.dilationHeight,c=o.dilationWidth,u=o.effectiveFilterHeight,h=o.effectiveFilterWidth,d=o.padInfo.top,p=o.padInfo.left,f=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ce(o.outShape,t),g=m.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],b=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let y=0;y<o.batchSize;++y){const k=y*x,C=y*s[0];for(let $=0;$<o.inChannels;++$)for(let v=0;v<o.outHeight;++v){const S=v*i-d,T=Math.max(0,S),A=Math.min(o.inHeight,u+S),z=k+v*b;for(let _=0;_<o.outWidth;++_){const B=_*a-p,M=Math.max(0,B),V=Math.min(o.inWidth,h+B);let H=f,G=0,q=0;for(let X=T;X<A;X+=l){const J=C+X*s[1];for(let Z=M;Z<V;Z+=c){const ne=J+Z*s[2],Q=n[ne+$];r==="max"&&Q>H?H=Q:r==="avg"&&(G+=Q,q++)}if(isNaN(H))break}const j=z+_*w+$;g[j]=r==="avg"?G/q:H}}}return m}function V0(n,e,t,s,o=!1,r=!1){const i=Ce(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ce(e,t,n);for(let g=0;g<s.batchSize;++g)for(let x=0;x<s.inChannels;++x)for(let b=0;b<s.outHeight;++b){const w=b*a-p;let y=w;for(;y<0;)y+=c;const k=Math.min(s.inHeight,h+w);for(let C=0;C<s.outWidth;++C){const $=C*l-f;let v=$;for(;v<0;)v+=u;const S=Math.min(s.inWidth,d+$);let T=Number.NEGATIVE_INFINITY,A=-1;for(let z=y;z<k;z+=c){const _=z-w;for(let B=v;B<S;B+=u){const M=B-$,V=m.get(g,z,B,x);V>T&&(T=V,o?A=r?((g*s.inHeight+z)*s.inWidth+B)*s.inChannels+x:(z*s.inWidth+B)*s.inChannels+x:A=_*d+M)}}i.set(A,g,b,C,x)}}return i}function W0(n,e,t,s,o,r){const i=o.strideDepth,a=o.strideHeight,l=o.strideWidth,c=o.dilationDepth,u=o.dilationHeight,h=o.dilationWidth,d=o.effectiveFilterDepth,p=o.effectiveFilterHeight,f=o.effectiveFilterWidth,m=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ce(o.outShape,t),y=w.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],C=o.outShape[2]*o.outShape[3]*o.outShape[4],$=o.outShape[3]*o.outShape[4],v=o.outShape[4];for(let S=0;S<o.batchSize;++S){const T=S*k,A=S*s[0];for(let z=0;z<o.inChannels;++z)for(let _=0;_<o.outDepth;++_){const B=_*i-m;let M=B;for(;M<0;)M+=c;const V=Math.min(o.inDepth,d+B),H=T+_*C;for(let G=0;G<o.outHeight;++G){const q=G*a-g;let j=q;for(;j<0;)j+=u;const X=Math.min(o.inHeight,p+q),J=H+G*$;for(let Z=0;Z<o.outWidth;++Z){const ne=Z*l-x;let Q=ne;for(;Q<0;)Q+=h;const re=Math.min(o.inWidth,f+ne),ce=J+Z*v;let fe=b,de=0,be=0;for(let Fe=M;Fe<V;Fe+=c){const We=A+Fe*s[1];for(let tt=j;tt<X;tt+=u){const Ue=We+tt*s[2];for(let Me=Q;Me<re;Me+=h){const Qe=Ue+Me*s[3],Ye=n[Qe+z];if(r==="max"&&Ye>fe?fe=Ye:r==="avg"&&(de+=Ye,be++),isNaN(fe))break}if(isNaN(fe))break}if(isNaN(fe))break}const we=ce+z;y[we]=r==="avg"?de/Math.max(be,1):fe}}}}return w}function Av(n,e){const t=Ce(e.outShape,"int32"),s=e.strideDepth,o=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const b=x*s-d;let w=b;for(;w<0;)w+=i;const y=Math.min(e.inDepth,c+b);for(let k=0;k<e.outHeight;++k){const C=k*o-p;let $=C;for(;$<0;)$+=a;const v=Math.min(e.inHeight,u+C);for(let S=0;S<e.outWidth;++S){const T=S*r-f;let A=T;for(;A<0;)A+=l;const z=Math.min(e.inWidth,h+T);let _=Number.NEGATIVE_INFINITY,B=-1;for(let M=w;M<y;M+=i){const V=M-b;for(let H=$;H<v;H+=a){const G=H-C;for(let q=A;q<z;q+=l){const j=q-T,X=n.get(m,M,H,q,g);X>=_&&(_=X,B=V*u*h+G*u+j)}}}t.set(B,m,x,k,S,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;ie(o,"avgPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;I(Dt(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=p1(o.shape,r,i,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))h=en({inputs:{x:o},backend:t});else{const d=t.data.get(o.dataId).values,p=le(o.shape),f=fd(d,o.shape,o.dtype,p,u,"avg");h=t.makeTensorInfo(u.outShape,o.dtype,f.values)}return h}const Fv={kernelName:Ti,backendName:"cpu",kernelFunc:Lv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;ie(o,"avgPool3d");const u=rn(o.shape,r,i,1,a,l,c),h=t.data.get(o.dataId).values,d=W0(h,o.shape,o.dtype,le(o.shape),u,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const _v={kernelName:Ri,backendName:"cpu",kernelFunc:Ov};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mv(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;ie([o,r],"avgPool3DGrad");const u=rn(r.shape,i,a,1,l,c),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,x=u.dilationDepth,b=u.dilationHeight,w=u.dilationWidth,y=u.effectiveFilterDepth,k=u.effectiveFilterHeight,C=u.effectiveFilterWidth,$=y-1-u.padInfo.front,v=C-1-u.padInfo.left,S=k-1-u.padInfo.top,T=Ce(r.shape,"float32"),A=1/(f*m*g),z=t.bufferSync(o);for(let _=0;_<u.batchSize;++_)for(let B=0;B<u.inChannels;++B)for(let M=0;M<u.inDepth;++M)for(let V=0;V<u.inHeight;++V)for(let H=0;H<u.inWidth;++H){const G=M-$,q=V-S,j=H-v;let X=0;for(let J=0;J<y;J+=x){const Z=(G+J)/h;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let ne=0;ne<k;ne+=b){const Q=(q+ne)/d;if(!(Q<0||Q>=u.outHeight||Math.floor(Q)!==Q))for(let re=0;re<C;re+=w){const ce=(j+re)/p;if(ce<0||ce>=u.outWidth||Math.floor(ce)!==ce)continue;const fe=z.get(_,Z,Q,ce,B);X+=fe}}}T.set(X*A,_,M,V,H,B)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const Pv={kernelName:lc,backendName:"cpu",kernelFunc:Mv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zv(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r;ie([o,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=p1(i.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,x=u.effectiveFilterHeight,b=u.effectiveFilterWidth,w=b-1-u.padInfo.left,y=x-1-u.padInfo.top,k=Ce(i.shape,"float32"),C=1/(p*f),$=t.data.get(o.dataId).values,v=Ce(o.shape,"float32",$);for(let S=0;S<u.batchSize;++S)for(let T=0;T<u.inChannels;++T)for(let A=0;A<u.inHeight;++A)for(let z=0;z<u.inWidth;++z){const _=A-y,B=z-w;let M=0;for(let V=0;V<x;V+=m){const H=(_+V)/h;if(!(H<0||H>=u.outHeight||Math.floor(H)!==H))for(let G=0;G<b;G+=g){const q=(B+G)/d;if(q<0||q>=u.outWidth||Math.floor(q)!==q)continue;const j=v.get(S,H,q,T);M+=j}}k.set(M*C,S,A,z,T)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const Bv={kernelName:ac,backendName:"cpu",kernelFunc:zv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,scale:r,offset:i,mean:a,variance:l}=e;I(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ie([o,a,l,r,i],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(l.dataId).values,p=r?t.data.get(r.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,x=p.length,b=d.length,w=h.length;let y=0,k=0,C=0,$=0;for(let v=0;v<u.length;++v)m[v]=f[y++]+(u[v]-h[k++])*p[C++]/Math.sqrt(d[$++]+c),y>=g&&(y=0),k>=w&&(k=0),C>=x&&(C=0),$>=b&&($=0);return t.makeTensorInfo(o.shape,o.dtype,m)}const Wv={kernelName:Wi,backendName:"cpu",kernelFunc:Vv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,crops:i}=s;ie([o],"batchToSpaceND");const a=r.reduce((x,b)=>x*b),l=Br(o.shape,r,a),c=Vr(l.length,r.length),u=Wr(o.shape,r,a),h=ah(i,r.length),d=lh(u,i,r.length),p=Ve({inputs:{x:o},backend:t,attrs:{shape:l}}),f=Kt({inputs:{x:p},backend:t,attrs:{perm:c}}),m=Ve({inputs:{x:f},backend:t,attrs:{shape:u}}),g=Ts({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const Gv={kernelName:Di,backendName:"cpu",kernelFunc:Uv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i}=s,a=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,c=cd(a,l,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,c)}const qv={kernelName:cc,backendName:"cpu",kernelFunc:Hv};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kv(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,r=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,a=ge(Array.from(r),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const jv={kernelName:Qd,backendName:"cpu",kernelFunc:Kv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xv=Le(Mo,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),Yv={kernelName:Mo,backendName:"cpu",kernelFunc:Xv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zv={kernelName:Ai,backendName:"cpu",kernelFunc:n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(U(e.shape)),o=t.data.get(e.dataId),r=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];s[c]=Math.hypot(u,h)}return t.makeOutput(s,e.shape,"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fo(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.imag,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const Jv={kernelName:Rc,backendName:"cpu",kernelFunc:fo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,r=ke(o,e[0].shape)[0],i=e.map(m=>m.shape);oh(i,r);let a=q1(e.map(m=>m.shape),r);if(U(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>U(m.shape)>0);if(l.length===1)return en({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const m=l.map(y=>Ss({inputs:{input:y},backend:t})),g=l.map(y=>fo({inputs:{input:y},backend:t})),x=mo({inputs:m,backend:t,attrs:{axis:r}}),b=mo({inputs:g,backend:t,attrs:{axis:r}}),w=e1({inputs:{real:x,imag:b},backend:t});return m.forEach(y=>t.disposeIntermediateTensorInfo(y)),g.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),w}const c=l.map(m=>{const x=[-1,U(m.shape.slice(r))];return Ve({inputs:{x:m},backend:t,attrs:{shape:x}})}),u=c.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=q1(c.map(m=>m.shape),1);const h=c[0].shape[0]===1,d=Ug(u,a,e[0].dtype,h),p=q1(l.map(m=>m.shape),r),f=t.makeTensorInfo(p,e[0].dtype,d);return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const Qv={kernelName:Li,backendName:"cpu",kernelFunc:mo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;ie([o,r],"conv2d");const h=an(l),d=It(o.shape,r.shape,i,c,a,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,b=d.padInfo.top,w=d.dataFormat==="channelsLast",y=new Ct(d.outShape,o.dtype),k=le(o.shape),C=le(r.shape),$=k[0],v=w?k[1]:k[2],S=w?k[2]:1,T=w?1:k[1],A=y.strides[0],z=w?y.strides[1]:y.strides[2],_=w?y.strides[2]:1,B=w?1:y.strides[1],M=t.data.get(o.dataId).values,V=t.data.get(r.dataId).values,H=y.values;for(let G=0;G<d.batchSize;++G){const q=G*$,j=G*A;for(let X=0;X<d.outHeight;++X){const J=j+X*z,Z=X*d.strideHeight-b;for(let ne=0;ne<p;++ne){const Q=Z+ne*m;if(Q<0||Q>=d.inHeight)continue;const re=ne*C[0],ce=q+Q*v;for(let fe=0;fe<d.outWidth;++fe){const de=J+fe*_,be=fe*d.strideWidth-x;for(let we=0;we<f;++we){const Fe=be+we*g;if(Fe<0||Fe>=d.inWidth)continue;const We=re+we*C[1],tt=ce+Fe*S;let Ue=We;for(let Me=0;Me<d.inChannels;++Me){const Qe=M[tt+Me*T];for(let Ye=0;Ye<d.outChannels;++Ye)H[de+Ye*B]+=Qe*V[Ue+Ye];Ue+=d.outChannels}}}}}}return t.makeTensorInfo(y.shape,y.dtype,H)}const eS={kernelName:Fi,backendName:"cpu",kernelFunc:U0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;ie([o,r],"conv2dBackpropFilter");const h=an(l),d=It(o.shape,u,i,1,a,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",b=new Ct(d.filterShape,"float32"),w=d.padInfo.left,y=d.padInfo.top,k=t.data.get(o.dataId).values,C=t.data.get(r.dataId).values,$=new Ct(o.shape,o.dtype,k),v=new Ct(r.shape,r.dtype,C);for(let S=0;S<m;++S){const T=Math.max(0,Math.ceil((y-S)/p)),A=Math.min(d.outHeight,(d.inHeight+y-S)/p);for(let z=0;z<g;++z){const _=Math.max(0,Math.ceil((w-z)/f)),B=Math.min(d.outWidth,(d.inWidth+w-z)/f);for(let M=0;M<d.inChannels;++M)for(let V=0;V<d.outChannels;++V){let H=0;for(let G=0;G<d.batchSize;++G)for(let q=T;q<A;++q){const j=S+q*p-y;for(let X=_;X<B;++X){const J=z+X*f-w;x?H+=$.get(G,j,J,M)*v.get(G,q,X,V):H+=$.get(G,M,j,J)*v.get(G,V,q,X)}}b.set(H,S,z,M,V)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const nS={kernelName:dc,backendName:"cpu",kernelFunc:tS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sS(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;ie([o,r],"conv2dBackpropInput");const h=le(r.shape),d=le(o.shape);let p=an(c);const f=It(i,r.shape,a,1,l,u,!1,p),m=new Ct(f.inShape,"float32"),g=m.values,x=t.data.get(o.dataId).values,b=t.data.get(r.dataId).values,[w,y,k]=h,{batchSize:C,filterHeight:$,filterWidth:v,inChannels:S,inHeight:T,inWidth:A,outChannels:z,outHeight:_,outWidth:B,strideHeight:M,strideWidth:V}=f;p=f.dataFormat;const H=$-1-f.padInfo.top,G=v-1-f.padInfo.left,q=p==="channelsLast",j=m.strides[0],X=q?m.strides[1]:m.strides[2],J=q?m.strides[2]:1,Z=q?1:m.strides[1],ne=d[0],Q=q?d[1]:d[2],re=q?d[2]:1,ce=q?1:d[1];for(let fe=0;fe<C;++fe)for(let de=0;de<S;++de)for(let be=0;be<T;++be){const we=be-H,Fe=Math.max(0,Math.ceil(we/M)),We=Math.min(_,($+we)/M);for(let tt=0;tt<A;++tt){const Ue=tt-G,Me=Math.max(0,Math.ceil(Ue/V)),Qe=Math.min(B,(v+Ue)/V);let Ye=0;for(let Tt=Fe;Tt<We;++Tt){const Un=Tt*M-we;for(let l1=Me;l1<Qe;++l1){const Ps=l1*V-Ue,_1=ne*fe+Q*Tt+re*l1,xn=w*($-1-Un)+y*(v-1-Ps)+k*de;for(let Gn=0;Gn<z;++Gn){const Hn=x[_1+ce*Gn],qn=b[xn+Gn];Ye+=Hn*qn}}}const gn=j*fe+X*be+J*tt+Z*de;g[gn]=Ye}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const oS={kernelName:Oi,backendName:"cpu",kernelFunc:sS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l}=s;ie([o,r],"conv3d");const c=vn(o.shape,r.shape,i,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,x=g.front,b=g.left,w=g.top,y=new Ct(c.outShape,o.dtype),k=t.data.get(o.dataId).values,C=t.data.get(r.dataId).values,$=y.values,v=le(o.shape),S=le(r.shape);for(let T=0;T<c.batchSize;++T){const A=T*v[0],z=T*y.strides[0];for(let _=0;_<c.outDepth;++_){const B=z+_*y.strides[1],M=_*c.strideDepth-x;for(let V=0;V<u;++V){const H=M+V*p;if(H<0||H>=c.inDepth)continue;const G=V*S[0],q=A+H*v[1];for(let j=0;j<c.outHeight;++j){const X=B+j*y.strides[2],J=j*c.strideHeight-w;for(let Z=0;Z<h;++Z){const ne=J+Z*f;if(ne<0||ne>=c.inHeight)continue;const Q=G+Z*S[1],re=q+ne*v[2];for(let ce=0;ce<c.outWidth;++ce){const fe=X+ce*c.outChannels,de=ce*c.strideWidth-b;for(let be=0;be<d;++be){const we=de+be*m;if(we<0||we>=c.inWidth)continue;const Fe=Q+be*S[2],We=re+we*c.inChannels;let tt=Fe;for(let Ue=0;Ue<c.inChannels;++Ue){const Me=k[We+Ue];for(let Qe=0;Qe<c.outChannels;++Qe)$[fe+Qe]+=Me*C[tt+Qe];tt+=c.outChannels}}}}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const iS={kernelName:_i,backendName:"cpu",kernelFunc:rS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,filterShape:l}=s;ie([o,r],"conv3dBackpropFilterV2");const c=le(o.shape),u=le(r.shape),h=vn(o.shape,l,i,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,b=new Ct(h.filterShape,"float32"),w=b.values,[y,k,C,$]=b.strides,v=t.data.get(r.dataId).values,[S,T,A,z]=u,_=t.data.get(o.dataId).values,[B,M,V,H]=c,G=h.padInfo.front,q=h.padInfo.left,j=h.padInfo.top;for(let X=0;X<m;++X){const J=Math.max(0,Math.ceil((G-X)/d)),Z=Math.min(h.outDepth,(h.inDepth+G-X)/d),ne=X*y;for(let Q=0;Q<g;++Q){const re=Math.max(0,Math.ceil((j-Q)/p)),ce=Math.min(h.outHeight,(h.inHeight+j-Q)/p),fe=Q*k+ne;for(let de=0;de<x;++de){const be=Math.max(0,Math.ceil((q-de)/f)),we=Math.min(h.outWidth,(h.inWidth+q-de)/f),Fe=de*C+fe;for(let We=0;We<h.inChannels;++We){const tt=We*$+Fe;for(let Ue=0;Ue<h.outChannels;++Ue){let Me=0;for(let Qe=0;Qe<h.batchSize;++Qe){const Ye=Qe*B,gn=Qe*S;for(let Tt=J;Tt<Z;++Tt){const l1=(X+Tt*d-G)*M+Ye,Ps=Tt*T+gn;for(let _1=re;_1<ce;++_1){const Gn=(Q+_1*p-j)*V+l1,Hn=_1*A+Ps;for(let qn=be;qn<we;++qn){const Bd=(de+qn*f-q)*H+Gn,Vd=qn*z+Hn;Me+=_[Bd+We]*v[Vd+Ue]}}}}w[tt+Ue]=Me}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const lS={kernelName:pc,backendName:"cpu",kernelFunc:aS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{pad:i,strides:a,inputShape:l}=s;ie([o],"conv3dBackpropInputV2");const c=le(o.shape),u=le(r.shape),h=vn(l,r.shape,a,1,i),d=new Ct(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,b=t.data.get(o.dataId).values,[w,y,k,C]=c,$=t.data.get(r.dataId).values,[v,S,T,A]=u,{batchSize:z,filterDepth:_,filterHeight:B,filterWidth:M,inChannels:V,inDepth:H,inHeight:G,inWidth:q,outChannels:j,outDepth:X,outHeight:J,outWidth:Z,strideDepth:ne,strideHeight:Q,strideWidth:re}=h,ce=_-1-h.padInfo.front,fe=B-1-h.padInfo.top,de=M-1-h.padInfo.left;for(let be=0;be<z;++be)for(let we=0;we<V;++we)for(let Fe=0;Fe<H;++Fe){const We=Fe-ce,tt=Math.max(0,Math.ceil(We/ne)),Ue=Math.min(X,(_+We)/ne);for(let Me=0;Me<G;++Me){const Qe=Me-fe,Ye=Math.max(0,Math.ceil(Qe/Q)),gn=Math.min(J,(B+Qe)/Q);for(let Tt=0;Tt<q;++Tt){const Un=Tt-de,l1=Math.max(0,Math.ceil(Un/re)),Ps=Math.min(Z,(M+Un)/re);let _1=0;for(let xn=tt;xn<Ue;++xn){const Gn=xn*ne-We;for(let Hn=Ye;Hn<gn;++Hn){const qn=Hn*Q-Qe;for(let ki=l1;ki<Ps;++ki){const Bd=ki*re-Un,Vd=w*be+y*xn+k*Hn+C*ki,$V=v*(_-1-Gn)+S*(B-1-qn)+T*(M-1-Bd)+A*we;for(let ql=0;ql<j;++ql){const vV=b[Vd+ql],SV=$[$V+ql];_1+=vV*SV}}}}p[f*be+m*Fe+g*Me+x*Tt+we]=_1}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const uS={kernelName:fc,backendName:"cpu",kernelFunc:cS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hS=Le(Po,n=>Math.cos(n)),dS={kernelName:Po,backendName:"cpu",kernelFunc:hS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pS=Le(zo,n=>Math.cosh(n)),fS={kernelName:zo,backendName:"cpu",kernelFunc:pS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:r,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,[u,h,d,p]=o.shape,f=r.shape[0],[m,g]=a,x=Ce([f,m,g,p],"float32"),b=t.data.get(r.dataId).values,w=t.data.get(i.dataId).values,y=t.data.get(o.dataId).values,k=le(o.shape),C=le(x.shape);for(let $=0;$<f;$++){const v=$*4,S=b[v],T=b[v+1],A=b[v+2],z=b[v+3],_=w[$];if(_>=u)continue;const B=m>1?(A-S)*(h-1)/(m-1):0,M=g>1?(z-T)*(d-1)/(g-1):0;for(let V=0;V<m;V++){const H=m>1?S*(h-1)+V*B:.5*(S+A)*(h-1);if(H<0||H>h-1){for(let G=0;G<g;G++)for(let q=0;q<p;q++){const j=q+G*C[2]+V*C[1]+$*C[0];x.values[j]=c}continue}if(l==="bilinear"){const G=Math.floor(H),q=Math.ceil(H),j=H-G;for(let X=0;X<g;X++){const J=g>1?T*(d-1)+X*M:.5*(T+z)*(d-1);if(J<0||J>d-1){for(let re=0;re<p;re++){const ce=re+X*C[2]+V*C[1]+$*C[0];x.values[ce]=c}continue}const Z=Math.floor(J),ne=Math.ceil(J),Q=J-Z;for(let re=0;re<p;re++){let ce=re+Z*k[2]+G*k[1]+_*k[0];const fe=y[ce];ce=re+ne*k[2]+G*k[1]+_*k[0];const de=y[ce];ce=re+Z*k[2]+q*k[1]+_*k[0];const be=y[ce];ce=re+ne*k[2]+q*k[1]+_*k[0];const we=y[ce],Fe=fe+(de-fe)*Q,We=be+(we-be)*Q;ce=re+X*C[2]+V*C[1]+$*C[0],x.values[ce]=Fe+(We-Fe)*j}}}else for(let G=0;G<g;++G){const q=g>1?T*(d-1)+G*M:.5*(T+z)*(d-1);if(q<0||q>d-1){for(let J=0;J<p;J++){const Z=J+G*C[2]+V*C[1]+$*C[0];x.values[Z]=c}continue}const j=Math.round(q),X=Math.round(H);for(let J=0;J<p;J++){const Z=J+j*k[2]+X*k[1]+_*k[0],ne=J+G*C[2]+V*C[1]+$*C[0];x.values[ne]=y[Z]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const gS={kernelName:gc,backendName:"cpu",kernelFunc:mS};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;ie(o,"cumprod");const l=Ze([r],o.shape.length);let c=o;l!=null&&(c=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}));const u=ot(1,o.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Zt(c.dtype,"int32"),d=ec(U(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=i?1:p[w];else{const y=m(x,b-1);d[w]=i?p[y]*d[y]:p[w]*d[y]}}const g=t.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Sn(l),b=Kt({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),b}return g}const bS={kernelName:mc,backendName:"cpu",kernelFunc:xS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;ie(o,"cumsum");const l=Ze([r],o.shape.length);let c=o;l!=null&&(c=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}));const u=ot(1,o.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Zt(c.dtype,"int32"),d=Et(U(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=i?0:p[w];else{const y=m(x,b-1);d[w]=i?p[y]+d[y]:p[w]+d[y]}}const g=t.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Sn(l),b=Kt({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),b}return g}const wS={kernelName:Mi,backendName:"cpu",kernelFunc:yS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i,binaryOutput:a}=s;if(o.shape.length===1){const l=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,u=cd(l,c,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,u)}else if(o.shape.length===2){const l=t.bufferSync(o),c=t.bufferSync(r),u=Bg(l,c,i,a);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const CS={kernelName:xc,backendName:"cpu",kernelFunc:kS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:r,dataFormat:i}=s;I(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=o.shape[0],l=o.shape[1],c=o.shape[2],u=o.shape[3],h=l*r,d=c*r,p=u/(r*r),f=t.data.get(o.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let x=0;x<a;++x)for(let b=0;b<h;++b){const w=Math.floor(b/r),y=b%r;for(let k=0;k<d;++k){const C=Math.floor(k/r),$=k%r,v=(y*r+$)*p;for(let S=0;S<p;++S){const A=S+v+u*(C+c*(w+l*x));m[g++]=f[A]}}}return t.makeTensorInfo([a,h,d,p],o.dtype,m)}const $S={kernelName:bc,backendName:"cpu",kernelFunc:IS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G0(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;ie([o,r],"depthwiseConv2DNative");const u=le(o.shape),h=le(r.shape);let d=l;d==null&&(d=[1,1]),I(Dt(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=It(o.shape,r.shape,i,d,a,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:b}=p,w=b.left,y=b.top,k=p.outChannels/p.inChannels,C=new Ct(p.outShape,o.dtype),$=t.data.get(o.dataId).values,v=t.data.get(r.dataId).values,S=C.values;for(let T=0;T<p.batchSize;++T){const A=T*u[0],z=T*C.strides[0];for(let _=0;_<p.outHeight;++_){const B=z+_*C.strides[1],M=_*p.strideHeight-y;for(let V=0;V<f;++V){const H=M+V*g;if(H<0||H>=p.inHeight)continue;const G=V*h[0],q=A+H*u[1];for(let j=0;j<p.outWidth;++j){const X=B+j*C.strides[2],J=j*p.strideWidth-w;for(let Z=0;Z<m;++Z){const ne=J+Z*x;if(ne<0||ne>=p.inWidth)continue;const Q=G+Z*h[1],re=q+ne*p.inChannels;let ce=X,fe=Q;for(let de=0;de<p.inChannels;++de){const be=$[re+de];for(let we=0;we<k;++we)S[ce+we]+=be*v[fe+we];ce+=k,fe+=k}}}}}}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const vS={kernelName:Pi,backendName:"cpu",kernelFunc:G0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;ie([o,r],"depthwiseConv2dNativeBackpropFilter");const h=It(o.shape,u,i,a,l,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ct(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,w=h.outChannels/h.inChannels,y=t.data.get(o.dataId).values,k=new Ct(o.shape,o.dtype,y),C=t.data.get(r.dataId).values,$=new Ct(r.shape,r.dtype,C);for(let v=0;v<f;++v){const S=Math.max(0,Math.ceil((b-v)/d)),T=Math.min(h.outHeight,(h.inHeight+b-v)/d);for(let A=0;A<m;++A){const z=Math.max(0,Math.ceil((x-A)/p)),_=Math.min(h.outWidth,(h.inWidth+x-A)/p);for(let B=0;B<h.outChannels;++B){const M=Math.trunc(B/w),V=B%w;let H=0;for(let G=0;G<h.batchSize;++G)for(let q=S;q<T;++q){const j=v+q*d-b;for(let X=z;X<_;++X){const J=A+X*p-x;H+=k.get(G,j,J,M)*$.get(G,q,X,B)}}g.set(H,v,A,M,V)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const NS={kernelName:yc,backendName:"cpu",kernelFunc:SS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;ie([o,r],"depthwiseConv2DNativeBackpropInput");const h=le(o.shape),d=le(r.shape),p=It(u,r.shape,i,a,l,c,!0),f=new Ct(p.inShape,"float32"),m=f.values,[g,x,b]=f.strides,w=t.data.get(o.dataId).values,[y,k,C]=h,$=t.data.get(r.dataId).values,[v,S,T]=d,{batchSize:A,filterHeight:z,filterWidth:_,inChannels:B,inHeight:M,inWidth:V,outChannels:H,outHeight:G,outWidth:q,strideHeight:j,strideWidth:X}=p,J=z-1-p.padInfo.top,Z=_-1-p.padInfo.left,ne=H/B;for(let Q=0;Q<A;++Q)for(let re=0;re<B;++re)for(let ce=0;ce<M;++ce){const fe=ce-J,de=Math.max(0,Math.ceil(fe/j)),be=Math.min(G,(z+fe)/j);for(let we=0;we<V;++we){const Fe=we-Z,We=Math.max(0,Math.ceil(Fe/X)),tt=Math.min(q,(_+Fe)/X);let Ue=0;for(let Me=de;Me<be;++Me){const Qe=Me*j-fe;for(let Ye=We;Ye<tt;++Ye){const gn=Ye*X-Fe,Tt=y*Q+k*Me+C*Ye,Un=v*(z-1-Qe)+S*(_-1-gn)+T*re;for(let l1=0;l1<ne;++l1){const Ps=re*ne+l1,_1=w[Tt+Ps],xn=$[Un+l1];Ue+=_1*xn}}}m[g*Q+x*ce+b*we+re]=Ue}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const RS={kernelName:wc,backendName:"cpu",kernelFunc:TS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n){const{inputs:e,backend:t}=n,{x:s}=e,o=U(s.shape),r=t.data.get(s.dataId).values,i=Ce([o,o],s.dtype),a=i.values;for(let c=0;c<r.length;c++)a[c*o+c]=r[c];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,i.dtype,i.values)}const DS={kernelName:ep,backendName:"cpu",kernelFunc:ES};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AS={kernelName:zi,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o}=n,{strides:r,pad:i,dilations:a}=t,l=e,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(o.dataId).values,d=o.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:y,strideWidth:k,filterHeight:C,filterWidth:$,dilationHeight:v,dilationWidth:S,outShape:T}=Tr(s.shape,o.shape,r,i,"NHWC",a),A=U(T),z=T.length,_=nt(s.dtype,A);for(let M=0;M<p;++M)for(let V=0;V<x;++V){const H=V*y-w.top;for(let G=0;G<b;++G){const q=G*k-w.left;for(let j=0;j<g;++j){let X=Number.MIN_SAFE_INTEGER;for(let Z=0;Z<C;++Z){const ne=H+Z*v;if(ne>=0&&ne<f)for(let Q=0;Q<$;++Q){const re=q+Q*S;if(re>=0&&re<m){const ce=z1([M,ne,re,j],u,le(s.shape)),fe=z1([Z,Q,j],d,le(o.shape)),de=c[ce]+h[fe];de>X&&(X=de)}}}const J=z1([M,V,G,j],z,le(T));_[J]=X}}}return{dataId:l.write(ns(_,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS={kernelName:Cc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:r}=n,{strides:i,pad:a,dilations:l}=t,c=e,u=I1(s.shape,c.data.get(s.dataId).values),h=I1(o.shape,c.data.get(o.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:k,filterWidth:C,dilationHeight:$,dilationWidth:v,outShape:S}=Tr(s.shape,o.shape,i,a,"NHWC",l);I(r.rank===S.length,()=>`Error in ${Cc}, dy must have the same rank as output ${S.length}, but got ${r.rank}`);const T=I1(S,c.data.get(r.dataId).values),A=Xd(o.shape,o.dtype);for(let _=0;_<d;++_)for(let B=0;B<g;++B){const M=B*w-b.top;for(let V=0;V<x;++V){const H=V*y-b.left;for(let G=0;G<m;++G){let q=Number.MIN_SAFE_INTEGER,j=0,X=0;for(let J=0;J<k;++J){const Z=M+J*$;if(Z>=0&&Z<p)for(let ne=0;ne<C;++ne){const Q=H+ne*v;if(Q>=0&&Q<f){const re=u[_][Z][Q][G]+h[J][ne][G];re>q&&(q=re,j=J,X=ne)}}}A[j][X][G]+=T[_][B][V][G]}}}return{dataId:c.write(ns(A,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS={kernelName:kc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:r}=n,{strides:i,pad:a,dilations:l}=t,c=e,u=I1(s.shape,c.data.get(s.dataId).values),h=I1(o.shape,c.data.get(o.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:k,filterWidth:C,dilationHeight:$,dilationWidth:v,outShape:S}=Tr(s.shape,o.shape,i,a,"NHWC",l);I(r.rank===S.length,()=>`Error in ${kc}, dy must have the same rank as output ${S.length}, but got ${r.rank}`);const T=I1(S,c.data.get(r.dataId).values),A=Xd(s.shape,s.dtype);for(let _=0;_<d;++_)for(let B=0;B<g;++B){const M=B*w-b.top;for(let V=0;V<x;++V){const H=V*y-b.left;for(let G=0;G<m;++G){let q=Number.MIN_SAFE_INTEGER,j=M<0?0:M,X=H<0?0:H;for(let J=0;J<k;++J){const Z=M+J*$;if(Z>=0&&Z<p)for(let ne=0;ne<C;++ne){const Q=H+ne*v;if(Q>=0&&Q<f){const re=u[_][Z][Q][G]+h[J][ne][G];re>q&&(q=re,j=Z,X=Q)}}}A[_][j][X][G]+=T[_][B][V][G]}}}return{dataId:c.write(ns(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n){const{inputs:e,backend:t,attrs:s}=n,{image:o}=e,{canvas:r,options:i}=s,{contextOptions:a,imageOptions:l}=i||{},c=(l==null?void 0:l.alpha)||1,u=(a==null?void 0:a.contextType)||"2d";if(u!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=r.getContext(u,(a==null?void 0:a.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${u} type.`);const[d,p]=o.shape.slice(0,2),f=o.shape.length===2?1:o.shape[2],m=t.data.get(o.dataId).values,g=o.dtype==="float32"?255:1,x=new Uint8ClampedArray(p*d*4);for(let w=0;w<d*p;++w){const y=[0,0,0,255*c];for(let C=0;C<f;C++){const $=m[w*f+C];if(o.dtype==="float32"){if($<0||$>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${$}.`)}else if(o.dtype==="int32"&&($<0||$>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${$}.`);f===1?(y[0]=$*g,y[1]=$*g,y[2]=$*g):y[C]=$*g}const k=w*4;x[k+0]=Math.round(y[0]),x[k+1]=Math.round(y[1]),x[k+2]=Math.round(y[2]),x[k+3]=Math.round(y[3])}r.width=p,r.height=d;const b=new ImageData(x,p,d);return h.putImageData(b,0,0),o}const _S={kernelName:e6,backendName:"cpu",kernelFunc:OS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ii(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;ie(o,"sum");let a;o.dtype==="bool"?a=Pn({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):a=en({inputs:{x:o},backend:t});const l=a.shape.length,c=ke(r,a.shape),u=Ze(c,l);let h=c,d=a;u!=null&&(d=Kt({inputs:{x:a},backend:t,attrs:{perm:u}}),h=ot(h.length,l)),$t("sum",h,d.shape.length);const[p,f]=yt(d.shape,h),m=Zt(d.dtype,"int32");let g=Cl(t,p,m);const x=U(f),b=t.data.get(g.dataId).values,w=t.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const k=y*x;let C=0;for(let $=0;$<x;++$)C+=w[k+$];b[y]=C}if(i){const y=lt(g.shape,c),k=g;g=Ve({inputs:{x:g},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(a),u!=null&&t.disposeIntermediateTensorInfo(d),g}const MS={kernelName:ba,backendName:"cpu",kernelFunc:ii};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,r=e,{allDims:i,summedDims:a,idDims:l}=xh(o,r.length);yh(i.length,l,r);const{path:c,steps:u}=wh(a,l),h=u.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:b}=bh(p,l[g]);let w;kh(x)?w=r[g]:(w=Kt({inputs:{x:r[g]},backend:t,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let k=0;k<b.length;++k)y.splice(b[k],0,1);Re(w.shape,y)||(w=Ve({inputs:{x:w},backend:t,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=Il({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=ii({inputs:{x:d},backend:t,attrs:{axis:c[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const zS={kernelName:Ic,backendName:"cpu",kernelFunc:PS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n){const{inputs:e,backend:t}=n,{dy:s,y:o}=e;ie([s,o],"eluGrad");const r=new Float32Array(U(o.shape)),i=t.data.get(o.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const c=i[l];c>=0?r[l]=a[l]:r[l]=a[l]*(c+1)}return t.makeTensorInfo(o.shape,"float32",r)}const VS={kernelName:$c,backendName:"cpu",kernelFunc:BS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WS=ch,US=uh,GS=hh,HS=dh,qS=ph,KS=fh,jS=Le(Wo,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+WS*t);return e*(1-((((KS*s+qS)*s+HS)*s+GS)*s+US)*s*Math.exp(-t*t))}),XS={kernelName:Wo,backendName:"cpu",kernelFunc:jS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sl(n){const{inputs:e,backend:t,attrs:s}=n,{input:o}=e,{dim:r}=s,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(I(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),Ve({inputs:{x:o},backend:t,attrs:{shape:a}})}const YS={kernelName:Vi,backendName:"cpu",kernelFunc:Sl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZS=at((n,e)=>n/e),md=gt(Bo,ZS),gd={kernelName:Bo,backendName:"cpu",kernelFunc:md};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n,e,t){const s=n.shape,o=s[0],r=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[o,r],u=U(c),h=Rt("float32",u),d=Rt("float32",u);for(let g=0;g<o;g++){const x=Ts({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,r]}}),b=Ts({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,r]}}),w=e1({inputs:{real:x,imag:b},backend:t}),{real:y,imag:k}=JS(w,e,t),C=hn(y,k);for(let $=0;$<r;$++){const v=mh(C,$);h[g*r+$]=v.real,d[g*r+$]=v.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w)}const p=t.makeTensorInfo(c,"float32",h),f=t.makeTensorInfo(c,"float32",d),m=e1({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function JS(n,e,t){const s=U(n.shape),o=t.data.get(n.dataId),r=t.data.get(o.complexTensorInfos.real.dataId).values,i=t.data.get(o.complexTensorInfos.imag.dataId).values;if(QS(s)){const a=xd(r,i,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",a.real),u=t.makeTensorInfo(l,"float32",a.imag),h=t.makeTensorInfo([],"float32",wn(s,"float32")),d=en({inputs:{x:h},backend:t}),p=gd.kernelFunc({inputs:{a:c,b:h},backend:t}),f=gd.kernelFunc({inputs:{a:u,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=hn(r,i),l=eN(a,s,e);return w2(l)}}function QS(n){return(n&n-1)===0}function xd(n,e,t,s,o){if(t===1)return{real:n,imag:e};const r=hn(n,e),i=t/2,a=k2(r),l=a.real,c=a.imag,u=[l.length],h=o.makeTensorInfo(u,"float32",l),d=o.makeTensorInfo(u,"float32",c),p=e1({inputs:{real:h,imag:d},backend:o}),f=C2(r),m=f.real,g=f.imag,x=[m.length],b=o.makeTensorInfo(x,"float32",m),w=o.makeTensorInfo(x,"float32",g),y=e1({inputs:{real:b,imag:w},backend:o}),k=xd(l,c,i,s,o),C=k.real,$=k.imag,v=[C.length],S=o.makeTensorInfo(v,"float32",C),T=o.makeTensorInfo(v,"float32",$),A=e1({inputs:{real:S,imag:T},backend:o}),z=xd(m,g,i,s,o),_=z.real,B=z.imag,M=[_.length],V=o.makeTensorInfo(M,"float32",_),H=o.makeTensorInfo(M,"float32",B),G=e1({inputs:{real:V,imag:H},backend:o}),q=$2(t,s),j=[q.real.length],X=o.makeTensorInfo(j,"float32",q.real),J=o.makeTensorInfo(j,"float32",q.imag),Z=e1({inputs:{real:X,imag:J},backend:o}),ne=Il({inputs:{a:Z,b:G},backend:o}),Q=po({inputs:{a:A,b:ne},backend:o}),re=pd({inputs:{a:A,b:ne},backend:o}),ce=Ss({inputs:{input:Q},backend:o}),fe=Ss({inputs:{input:re},backend:o}),de=fo({inputs:{input:Q},backend:o}),be=fo({inputs:{input:re},backend:o}),we=mo({inputs:[ce,fe],backend:o,attrs:{axis:0}}),Fe=mo({inputs:[de,be],backend:o,attrs:{axis:0}}),We=o.data.get(we.dataId).values,tt=o.data.get(Fe.dataId).values;return o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(S),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(A),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(ne),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(re),o.disposeIntermediateTensorInfo(ce),o.disposeIntermediateTensorInfo(de),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(be),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(Fe),{real:We,imag:tt}}function eN(n,e,t){const s=new Float32Array(e*2);for(let o=0;o<e;o++){let r=0,i=0;for(let a=0;a<e;a++){const l=v2(o*a,e,t),c=mh(n,a);r+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}t&&(r/=e,i/=e),I2(s,r,i,o)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n){const{inputs:e,backend:t}=n,{input:s}=e,o=U(s.shape),r=s.shape[s.shape.length-1],i=o/r,a=Ve({inputs:{x:s},backend:t,attrs:{shape:[i,r]}}),l=H0(a,!1,t),c=Ve({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const nN={kernelName:vc,backendName:"cpu",kernelFunc:tN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bd(n){const{backend:e,attrs:t}=n,{shape:s,value:o,dtype:r}=t,i=r||Us(o),a=nt(i,U(s));return oN(a,o,i),e.makeTensorInfo(s,i,a)}const sN={kernelName:Sc,backendName:"cpu",kernelFunc:bd};function oN(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN={kernelName:Nc,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,o=t,r=Rt(s.dtype,U(s.shape)),[i,a,l,c]=s.shape,u=o.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*a*c;for(let f=0;f<a;f++){const m=f*(l*c);for(let g=0;g<l;g++){const x=g*c;for(let b=0;b<c;b++){const w=Math.round(l-g-1),y=p+m+x+b;let k=u[y];if(w>=0&&w<l){const C=w*c,$=p+m+C+b;k=u[$]}r[y]=k}}}}return{dataId:o.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=U0({inputs:{x:o,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const x=Ve({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=po({inputs:{a:m,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else m=po({inputs:{a:m,b:i},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(u==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=Ve({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=vl(t,m,p,x,f),t.disposeIntermediateTensorInfo(x)}else m=vl(t,m,p,a,f);t.disposeIntermediateTensorInfo(g)}return m}const aN={kernelName:Sa,backendName:"cpu",kernelFunc:iN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=G0({inputs:{x:o,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;m=po({inputs:{a:m,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=vl(t,m,p,a,f),t.disposeIntermediateTensorInfo(g)}return m}const cN={kernelName:yp,backendName:"cpu",kernelFunc:lN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,r=U(s.shape),i=o.shape,a=i[i.length-1],[l,c,u,h]=Zu(s,o);if(c===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(o.dataId).values,p=t.bufferSync(s),f=Zg(d,p,s.dtype,c,a,u,h,s.shape,r);return t.makeTensorInfo(l,s.dtype,f.values)}const hN={kernelName:tp,backendName:"cpu",kernelFunc:uN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:r}=e,{axis:i,batchDims:a}=s;ie([o,r],"gatherV2");const l=ke(i,o.shape)[0],c=t.data.get(r.dataId).values,u=o.shape[l];for(let y=0;y<c.length;++y){const k=c[y];I(k<=u-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=U(r.shape),p=$h(o,r,l,h),f=Ve({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Ve({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=t.bufferSync(m),b=t.bufferSync(f),w=Jg(b,x,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,w.dtype,w.values)}const pN={kernelName:Ui,backendName:"cpu",kernelFunc:dN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(n){const{inputs:e,backend:t}=n,{input:s}=e,o=U(s.shape),r=s.shape[s.shape.length-1],i=o/r,a=Ve({inputs:{x:s},backend:t,attrs:{shape:[i,r]}}),l=H0(a,!0,t),c=Ve({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const mN={kernelName:Tc,backendName:"cpu",kernelFunc:fN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gN=Le(Xo,n=>Number.isFinite(n)?1:0,"bool"),xN={kernelName:Xo,backendName:"cpu",kernelFunc:gN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN=Le(Yo,n=>Math.abs(n)===1/0?1:0,"bool"),yN={kernelName:Yo,backendName:"cpu",kernelFunc:bN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wN=Le(Zo,n=>Number.isNaN(n)?1:0,"bool"),kN={kernelName:Zo,backendName:"cpu",kernelFunc:wN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:r}=t,i=s0(s,o,r);return e.makeTensorInfo([i.length],"float32",i)}const IN={kernelName:np,backendName:"cpu",kernelFunc:CN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N=Le(Qo,n=>Math.log1p(n)),vN={kernelName:Qo,backendName:"cpu",kernelFunc:$N};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SN=at((n,e)=>n&&e),NN=gt(ji,SN,null,"bool"),TN={kernelName:ji,backendName:"cpu",kernelFunc:NN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN=Le(Xi,n=>n?0:1,"bool"),EN={kernelName:Xi,backendName:"cpu",kernelFunc:RN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DN=at((n,e)=>n||e),AN=gt(Yi,DN,null,"bool"),LN={kernelName:Yi,backendName:"cpu",kernelFunc:AN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:r,bias:i,alpha:a,beta:l}=s;ie(o,"LRN");const c=o.shape[3],u=c-1,h=t.data.get(o.dataId).values,d=U(o.shape),p=new Float32Array(d);function f(m){const g=m%c;let x=m-g+Math.max(0,g-r);const b=m-g+Math.min(g+r,u);let w=0;for(;x<=b;x++){const y=h[x];w+=y*y}return w}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(i+a*g,-l);p[m]=x}return t.makeTensorInfo(o.shape,o.dtype,p)}const ON={kernelName:Zi,backendName:"cpu",kernelFunc:FN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,y:r,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s;ie(i,"LRNGrad");const h=U(i.shape),d=i.shape[3],p=t.data.get(i.dataId).values,f=t.data.get(o.dataId).values,m=t.data.get(r.dataId).values,g=new Float32Array(h),x=h;for(let b=0;b<x;b++){const w=b%d,y=b-w+Math.max(0,w-a),k=b-w+Math.min(d,w+a+1);let C=0;for(let $=y;$<k;$++)C+=Math.pow(f[$],2);C=c*C+l;for(let $=y;$<k;$++){let v=-2*c*u*f[$]*m[b]/C;b===$&&(v+=Math.pow(C,-u)),v*=p[b],g[$]+=v}}return t.makeTensorInfo(i.shape,o.dtype,g)}const MN={kernelName:Ec,backendName:"cpu",kernelFunc:_N};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q0(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:r,keepDims:i}=s,a=t;let l=o.shape;const c=l.length,u=ke(r,l);let h=u;const d=Ze(h,c);let p=a.data.get(o.dataId).values;if(d!=null){const y=new Array(c);for(let k=0;k<y.length;k++)y[k]=l[d[k]];p=hd(p,l,o.dtype,d,y),h=ot(h.length,c),l=y}ie(o,"max"),$t("max",h,c);const[f,m]=yt(l,h),g=U(m),x=r0(p,g,f,o.dtype),b=a.write(x,f,o.dtype);let w=f;return i&&(w=lt(f,u)),{dataId:b,shape:w,dtype:o.dtype}}const PN={kernelName:Ji,backendName:"cpu",kernelFunc:q0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;ie(o,"maxPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;I(Dt(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=p1(o.shape,r,i,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))h=en({inputs:{x:o},backend:t});else{const d=t.data.get(o.dataId).values,p=le(o.shape),f=fd(d,o.shape,o.dtype,p,u,"max");h=t.makeTensorInfo(u.outShape,o.dtype,f.values)}return h}const BN={kernelName:Qi,backendName:"cpu",kernelFunc:zN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;ie(o,"maxPool3d");const u=rn(o.shape,r,i,1,a,l,c),h=t.data.get(o.dataId).values,d=W0(h,o.shape,o.dtype,le(o.shape),u,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const WN={kernelName:ea,backendName:"cpu",kernelFunc:VN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;ie([o,r],"maxPool3DGrad");const u=rn(r.shape,i,a,1,l,c),h=t.bufferSync(r),d=Av(h,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,x=u.dilationHeight,b=u.dilationWidth,w=u.effectiveFilterDepth,y=u.effectiveFilterHeight,k=u.effectiveFilterWidth,C=w-1-u.padInfo.front,$=k-1-u.padInfo.left,v=y-1-u.padInfo.top,S=Ce(r.shape,"float32"),T=t.bufferSync(o);for(let A=0;A<u.batchSize;++A)for(let z=0;z<u.inChannels;++z)for(let _=0;_<u.inDepth;++_)for(let B=0;B<u.inHeight;++B)for(let M=0;M<u.inWidth;++M){const V=_-C,H=B-v,G=M-$;let q=0;for(let j=0;j<w;j+=g){const X=(V+j)/p;if(!(X<0||X>=u.outDepth||Math.floor(X)!==X))for(let J=0;J<y;J+=x){const Z=(H+J)/f;if(!(Z<0||Z>=u.outHeight||Math.floor(Z)!==Z))for(let ne=0;ne<k;ne+=b){const Q=(G+ne)/m;if(Q<0||Q>=u.outWidth||Math.floor(Q)!==Q)continue;const re=w*y*k-1-d.get(A,X,Z,Q,z),ce=j*y*k+J*k+ne,fe=re===ce?1:0;if(fe===0)continue;const de=T.get(A,X,Z,Q,z);q+=de*fe}}}S.set(q,A,_,B,M,z)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const GN={kernelName:Ac,backendName:"cpu",kernelFunc:UN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r,output:i}=e,a=r;ie([r,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=p1(a.shape,l,c,1,u,h),p=t.data.get(a.dataId).values,f=Ce(d.outShape,a.dtype,V0(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,y=d.effectiveFilterWidth,k=y-1-d.padInfo.left,C=w-1-d.padInfo.top,$=Ce(a.shape,"float32"),v=t.data.get(o.dataId).values,S=Ce(o.shape,"float32",v);for(let T=0;T<d.batchSize;++T)for(let A=0;A<d.inChannels;++A)for(let z=0;z<d.inHeight;++z)for(let _=0;_<d.inWidth;++_){const B=z-C,M=_-k;let V=0;for(let H=0;H<w;H+=x){const G=(B+H)/m;if(!(G<0||G>=d.outHeight||Math.floor(G)!==G))for(let q=0;q<y;q+=b){const j=(M+q)/g;if(j<0||j>=d.outWidth||Math.floor(j)!==j)continue;const X=w*y-1-f.get(T,G,j,A),J=H*y+q,Z=X===J?1:0;if(Z===0)continue;const ne=S.get(T,G,j,A);V+=ne*Z}}$.set(V,T,z,_,A)}return t.makeTensorInfo($.shape,$.dtype,$.values)}const qN={kernelName:Dc,backendName:"cpu",kernelFunc:HN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,e,t,s,o){const r=le(e),i=fd(n,e,t,r,o,"max"),a=V0(n,e,t,o,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN={kernelName:sp,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:r,pad:i,includeBatchInIndex:a}=e,l=t;ie(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=p1(s.shape,o,r,[1,1],i),[h,d]=KN(c,s.shape,s.dtype,a,u),p=l.write(h,u.outShape,s.dtype),f=l.write(d,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=ke(r,o.shape),c=yt(o.shape,a)[1],u=U(c),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=Pn({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=md({inputs:{a:p,b:d},backend:t});h.push(f);const m=ii({inputs:{x:f},backend:t,attrs:{axis:r,keepDims:i}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const YN={kernelName:ta,backendName:"cpu",kernelFunc:XN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;ie(o,"min");const a=ke(r,o.shape);let l=a;const c=Ze(l,o.shape.length);let u=o;c!=null&&(u=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),l=ot(l.length,o.shape.length)),$t("min",l,u.shape.length);const[h,d]=yt(u.shape,l),p=U(d),f=Et(U(h),u.dtype),m=t.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const k=m[b+y];(Number.isNaN(k)||k<w)&&(w=k)}f[x]=w}c!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const x=lt(h,a),b=Ve({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}const JN={kernelName:na,backendName:"cpu",kernelFunc:ZN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,mode:i}=s;ie(o,"mirrorPad");const a=r.map((w,y)=>w[0]+o.shape[y]+w[1]),l=r.map(w=>w[0]),c=r.map((w,y)=>w[0]+o.shape[y]),u=i==="reflect"?0:1,h=t.data.get(o.dataId).values,d=o.shape.length,p=le(o.shape),f=U(a),m=a.length,g=le(a),x=Rt(o.dtype,f);for(let w=0;w<f;w++){let y=Gs(w,m,g);for(let C=0;C<m;C++)y[C]<l[C]?y[C]=l[C]*2-y[C]-u:y[C]>=c[C]&&(y[C]=(c[C]-1)*2-y[C]+u);y=y.map((C,$)=>C-l[$]);const k=z1(y,d,p);x[w]=h[k]}return{dataId:t.write(x,a,o.dtype),shape:a,dtype:o.dtype}}const eT={kernelName:sa,backendName:"cpu",kernelFunc:QN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT=at((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),nT=gt(nr,tT),sT={kernelName:nr,backendName:"cpu",kernelFunc:nT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K0(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:r}=s,i=o.shape.length;let a=r;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=ke([a],o.shape),c=q0({inputs:{x:o},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),u=lt(c.shape,l),h=Ve({inputs:{x:c},backend:t,attrs:{shape:u}}),d=pd({inputs:{a:o,b:h},backend:t}),p=Kg({inputs:{x:d},backend:t}),f=ii({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),m=Ve({inputs:{x:f},backend:t,attrs:{shape:u}}),g=md({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const oT={kernelName:ka,backendName:"cpu",kernelFunc:K0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:r,seed:i,normalized:a}=s;ie(o,"multinomial");const l=a?o:K0({inputs:{logits:o},backend:t,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=t.data.get(l.dataId).values,d=[c,r],p=Et(U(d),"int32");for(let f=0;f<c;++f){const m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const x=Ou.alea(i.toString()),b=f*r;for(let w=0;w<r;++w){const y=x();p[b+w]=g.length;for(let k=0;k<g.length;k++)if(y<g[k]){p[b+w]=k;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const iT={kernelName:op,backendName:"cpu",kernelFunc:rT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aT=Hu;function lT(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;ie(o,"NonMaxSuppression");const c=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,{selectedIndices:h}=aT(c,u,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const cT={kernelName:Lc,backendName:"cpu",kernelFunc:lT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uT=qu;function hT(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;ie(o,"NonMaxSuppressionPadded");const u=t.data.get(o.dataId).values,h=t.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=uT(u,h,i,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const dT={kernelName:Fc,backendName:"cpu",kernelFunc:hT};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT=Ku;function fT(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;ie(o,"NonMaxSuppressionWithScore");const u=t.data.get(o.dataId).values,h=t.data.get(r.dataId).values,d=i,p=a,f=l,m=c,{selectedIndices:g,selectedScores:x}=pT(u,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const mT={kernelName:Oc,backendName:"cpu",kernelFunc:fT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:r,depth:i,onValue:a,offValue:l}=s;ie(o,"oneHot");const c=U(o.shape),u=new Float32Array(c*i);u.fill(l);const h=t.data.get(o.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<i&&(u[d*i+h[d]]=a);return t.makeTensorInfo([...o.shape,i],r,u)}const xT={kernelName:aa,backendName:"cpu",kernelFunc:gT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nl(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ss({inputs:{input:s},backend:t}),r=Nl({inputs:{x:o},backend:t}),i=fo({inputs:{input:s},backend:t}),a=Nl({inputs:{x:i},backend:t}),l=e1({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return bd({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const bT={kernelName:$a,backendName:"cpu",kernelFunc:Nl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Ss({inputs:{input:s},backend:t}),r=j0({inputs:{x:o},backend:t}),i=fo({inputs:{input:s},backend:t}),a=Nl({inputs:{x:i},backend:t}),l=e1({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return bd({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const yT={kernelName:ia,backendName:"cpu",kernelFunc:j0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return Sl({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,i=e[0].dtype;e.forEach(u=>{Xl(r,u.shape,"All tensors passed to stack must have matching shapes"),I(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=Sl({inputs:{input:u},backend:t,attrs:{dim:o}});return a.push(h),h}),c=mo({inputs:l,backend:t,attrs:{axis:o}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const wT={kernelName:la,backendName:"cpu",kernelFunc:X0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,constantValue:i}=s;ie(o,"pad");const a=r.map((b,w)=>b[0]+o.shape[w]+b[1]),l=r.map(b=>b[0]),c=t.data.get(o.dataId).values,u=U(o.shape),h=o.shape.length,d=le(o.shape),p=U(a),f=a.length,m=le(a),g=Rt(o.dtype,p);i!==0&&g.fill(i);for(let b=0;b<u;b++){const y=Gs(b,h,d).map((C,$)=>C+l[$]),k=z1(y,f,m);g[k]=c[b]}return{dataId:t.write(g,a,o.dtype),shape:a,dtype:o.dtype}}const Y0={kernelName:ca,backendName:"cpu",kernelFunc:kT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CT=at((n,e)=>Math.pow(n,e)),IT=gt(or,CT),$T={kernelName:or,backendName:"cpu",kernelFunc:IT};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vT(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:r,indices:i}=e,a=o.map(g=>t.data.get(g.dataId).values),l=o.map(g=>g.shape),c=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values,[h,d,p]=d0(a,l,c,r.shape,r.dtype,u,i.shape),f=h.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,r.dtype,d);return f.concat([m])}const ST={kernelName:rp,backendName:"cpu",kernelFunc:vT};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:r}=e,i=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,[c,u]=f0(i,s.shape,s.dtype,a,o.shape,l,r.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const TT={kernelName:ip,backendName:"cpu",kernelFunc:NT};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:r,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,d=a.map(g=>t.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=x0(c,o.shape,u,r.shape,r.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,r.dtype,m)}const ET={kernelName:ap,backendName:"cpu",kernelFunc:RT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n){const{backend:e,attrs:t}=n,{start:s,stop:o,dtype:r,step:i}=t,a=b0(s,o,i,r);return e.makeTensorInfo([a.length],r,a)}const AT={kernelName:_c,backendName:"cpu",kernelFunc:DT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LT=Le(rr,n=>1/n),FT={kernelName:rr,backendName:"cpu",kernelFunc:LT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s;ie(o,"resizeBilinear");const l=le(o.shape),[c,u]=a,[h,d,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(U([h,c,u,f])),x=[r&&c>1?d-1:d,r&&u>1?p-1:p],b=[r&&c>1?c-1:c,r&&u>1?u-1:u];let w=0;const y=x[0]/b[0],k=x[1]/b[1];for(let C=0;C<h;C++)for(let $=0;$<c;$++){let v;i?v=y*($+.5)-.5:v=y*$;const S=Math.max(0,Math.floor(v)),T=v-S,A=Math.min(d-1,Math.ceil(v)),z=C*l[0]+S*l[1],_=C*l[0]+A*l[1];for(let B=0;B<u;B++){let M;i?M=k*(B+.5)-.5:M=k*B;const V=Math.max(0,Math.floor(M)),H=M-V,G=Math.min(p-1,Math.ceil(M)),q=z+V*l[2],j=_+V*l[2],X=z+G*l[2],J=_+G*l[2];for(let Z=0;Z<f;Z++){const ne=m[q+Z],Q=m[j+Z],re=m[X+Z],ce=m[J+Z],fe=ne+(re-ne)*H,de=Q+(ce-Q)*H,be=fe+(de-fe)*T;g[w++]=be}}}return t.makeTensorInfo([h,c,u,f],"float32",g)}const _T={kernelName:fa,backendName:"cpu",kernelFunc:OT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s;ie([r,o],"resizeBilinearGrad");const a=le(o.shape),[l,c,u,h]=o.shape,[,d,p]=r.shape,f=new Float32Array(l*c*u*h),m=[i&&d>1?c-1:c,i&&p>1?u-1:u],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],x=m[0]/g[0],b=m[1]/g[1],w=t.data.get(r.dataId).values;let y=0;for(let k=0;k<l;k++){const C=k*a[0];for(let $=0;$<d;$++){const v=$*x,S=Math.floor(v),T=Math.min(Math.ceil(v),c-1),A=C+S*a[1],z=C+T*a[1],_=v-S,B=1-_;for(let M=0;M<p;M++){const V=M*b,H=Math.floor(V),G=Math.min(Math.ceil(V),u-1),q=V-H,j=1-q,X=A+H*a[2],J=A+G*a[2],Z=z+H*a[2],ne=z+G*a[2],Q=B*j,re=B*q,ce=_*j,fe=_*q;for(let de=0;de<h;de++){const be=w[y++];f[X+de]+=be*Q,f[J+de]+=be*re,f[Z+de]+=be*ce,f[ne+de]+=be*fe}}}}return t.makeTensorInfo([l,u,c,h],"float32",f)}const PT={kernelName:zc,backendName:"cpu",kernelFunc:MT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s;ie(o,"resizeNearestNeighbor");const l=le(o.shape),[c,u]=a,[h,d,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(h*c*u*f),x=[r&&c>1?d-1:d,r&&u>1?p-1:p],b=[r&&c>1?c-1:c,r&&u>1?u-1:u],w=x[0]/b[0],y=x[1]/b[1];let k=0;for(let C=0;C<h;C++){const $=C*l[0];for(let v=0;v<c;v++){const S=i?w*(v+.5):w*v;let T=Math.min(d-1,r?Math.round(S):Math.floor(S));i&&(T=Math.max(0,T));const A=$+T*l[1];for(let z=0;z<u;z++){const _=i?y*(z+.5):y*z;let B=Math.min(p-1,r?Math.round(_):Math.floor(_));i&&(B=Math.max(0,B));const M=A+B*l[2];for(let V=0;V<f;V++){const H=m[M+V];g[k++]=H}}}}return t.makeTensorInfo([h,c,u,f],o.dtype,g)}const BT={kernelName:pa,backendName:"cpu",kernelFunc:zT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s;ie([r,o],"resizeNearestNeighborGrad");const a=le(o.shape),l=le(r.shape),[c,u,h,d]=o.shape,[,p,f]=r.shape,m=new Float32Array(c*u*h*d),g=t.data.get(r.dataId).values,x=[i&&p>1?u-1:u,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],w=x[0]/b[0],y=x[1]/b[1],k=1/w,C=1/y,$=Math.ceil(k)*2+2,v=Math.ceil(C)*2+2;for(let S=0;S<c;S++){const T=S*a[0];for(let A=0;A<u;A++){const z=T+A*a[1],_=Math.floor(A*k),B=Math.floor(_-$/2);for(let M=0;M<h;M++){const V=z+M*a[2],H=Math.floor(M*C),G=Math.floor(H-v/2);for(let q=0;q<d;q++){let j=0;for(let X=0;X<$;X++){const J=X+B;if(J<0||J>=p)continue;const Z=T+J*l[1],ne=J*w,Q=Math.min(u-1,i?Math.round(ne):Math.floor(ne));if(A===Q)for(let re=0;re<v;re++){const ce=re+G;if(ce<0||ce>=f)continue;const fe=Z+ce*l[2],de=ce*y,be=Math.min(h-1,i?Math.round(de):Math.floor(de));M===be&&(j+=g[fe+q])}}m[V+q]=j}}}}return t.makeTensorInfo(o.shape,o.dtype,m)}const WT={kernelName:Pc,backendName:"cpu",kernelFunc:VT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:r}=s;ie(o,"reverse");const i=o.shape.length,a=ke(r,o.shape);if(i===0)return en({inputs:{x:o},backend:t});const l=new Ct(o.shape,o.dtype),c=t.bufferSync(o);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(p=>d[p]=o.shape[p]-1-d[p]),l.set(c.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const GT={kernelName:ma,backendName:"cpu",kernelFunc:UT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HT={kernelName:qc,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:r,center:i}=e,a=t,l=Rt(s.dtype,U(s.shape)),[c,u,h,d]=s.shape,[p,f]=ih(i,u,h),m=255,g=Math.sin(o),x=Math.cos(o),b=a.data.get(s.dataId).values;for(let y=0;y<c;y++){const k=y*h*u*d;for(let C=0;C<u;C++){const $=C*(h*d);for(let v=0;v<h;v++){const S=v*d;for(let T=0;T<d;T++){const A=[c,C,v,T],z=A[2],_=A[1];let B=(z-p)*x-(_-f)*g,M=(z-p)*g+(_-f)*x;B=Math.round(B+p),M=Math.round(M+f);let V=r;if(typeof r!="number"&&(T===3?V=m:V=r[T]),B>=0&&B<h&&M>=0&&M<u){const G=M*(h*d),q=B*d,j=k+G+q+T;V=b[j]}const H=k+$+S+T;l[H]=V}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qT=Le(lr,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),KT={kernelName:lr,backendName:"cpu",kernelFunc:qT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:r}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=xs(r,o,i),d=!0,p=t.bufferSync(o),f=t.bufferSync(r),m=Ns(p,f,i,h,c,l,a,u,0,d);return t.makeTensorInfo(i,m.dtype,m.values)}const XT={kernelName:lp,backendName:"cpu",kernelFunc:jT};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<e?t=o+1:s=o;return s}function ZT(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<=e?t=o+1:s=o;return s}function JT(n,e,t,s,o,r){const i=nt("int32",t*o);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),c=a*o;for(let u=0;u<o;++u)i[c+u]=r==="left"?YT(l,e[u+c]):ZT(l,e[u+c])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:r}=e,{side:i}=s,a=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,c=JT(a,l,o.shape[0],o.shape[1],r.shape[1],i);return t.makeTensorInfo(r.shape,"int32",c)}const eR={kernelName:up,backendName:"cpu",kernelFunc:QT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:r}=e;ie([s,o,r],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,u=Zt(o.dtype,r.dtype),h=Et(U(o.shape),u);let d=0;const p=i===0||i>1||o.shape.length===1?1:U(o.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=l[f]:h[d++]=c[f];return t.makeTensorInfo(o.shape,u,h)}const nR={kernelName:ga,backendName:"cpu",kernelFunc:tR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR=Xa,oR=Ya,rR=Le(ur,n=>n>=0?oR*n:sR*(Math.exp(n)-1)),iR={kernelName:ur,backendName:"cpu",kernelFunc:rR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR=Le(pr,n=>n<0?-1:n>0?1:0),lR={kernelName:pr,backendName:"cpu",kernelFunc:aR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR=Le(hr,n=>Math.sin(n)),uR={kernelName:hr,backendName:"cpu",kernelFunc:cR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR=Le(dr,n=>Math.sinh(n)),dR={kernelName:dr,backendName:"cpu",kernelFunc:hR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z0=Math.log(11920928955078125e-23)+2,pR=Le(mr,n=>{const e=n>-Z0,t=n<Z0,s=Math.exp(n);let o;return t?o=s:e?o=n:o=Math.log(1+s),o}),fR={kernelName:mr,backendName:"cpu",kernelFunc:pR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,paddings:i}=s;ie([o],"spaceToBatchND");const a=U(r),l=[[0,0]];l.push(...i);for(let C=1+r.length;C<o.shape.length;++C)l.push([0,0]);const c=Y0.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),u=Br(c.shape,r,a,!1),h=Vr(u.length,r.length,!1),d=Wr(c.shape,r,a,!1),m=Ve({inputs:{x:c},backend:t,attrs:{shape:u}}),b=Kt({inputs:{x:m},backend:t,attrs:{perm:h}}),k=Ve({inputs:{x:b},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),k}const gR={kernelName:ya,backendName:"cpu",kernelFunc:mR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values[0],[h,d,p,f,m]=C0(a,s.shape,s.dtype,l,o.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const bR={kernelName:hp,backendName:"cpu",kernelFunc:xR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(t.data.get(o.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(r.dataId).values),[c,u,h]=I0(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const wR={kernelName:dp,backendName:"cpu",kernelFunc:yR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,[c,u]=dd(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const CR={kernelName:pp,backendName:"cpu",kernelFunc:kR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,[c,u]=dd(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const $R={kernelName:fp,backendName:"cpu",kernelFunc:IR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=xs(r,o,a),p=!1,f=t.bufferSync(o);let m;switch(r.dtype){case"bool":{const g=t.bufferSync(r),x=!!t.data.get(i.dataId).values[0];m=Ns(f,g,a,d,u,c,l,h,x,p);break}case"float32":{const g=t.bufferSync(r),x=t.data.get(i.dataId).values[0];m=Ns(f,g,a,d,u,c,l,h,x,p);break}case"int32":{const g=t.bufferSync(r),x=t.data.get(i.dataId).values[0];m=Ns(f,g,a,d,u,c,l,h,x,p);break}case"string":{const g=t.bufferSync(r),x=Cn(t.data.get(i.dataId).values[0]);m=Ns(f,g,a,d,u,c,l,h,x,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return t.makeTensorInfo(a,m.dtype,m.values)}const SR={kernelName:mp,backendName:"cpu",kernelFunc:vR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:r,axis:i}=s,a=ke(i,o.shape)[0],l=Ch(o,r,a),c=new Array(o.shape.length).fill(0),u=o.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const p=Ts({inputs:{x:o},backend:t,attrs:{begin:c,size:d}});return c[a]+=h,p})}const TR={kernelName:wa,backendName:"cpu",kernelFunc:NR};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR={kernelName:Bc,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;ie(t,"square");const o=s.data.get(t.dataId).values,r=new Float32Array(o.length);for(let a=0;a<o.length;++a){const l=o[a];r[a]=l*l}return{dataId:s.write(r,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER=Le(Cr,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),DR={kernelName:Cr,backendName:"cpu",kernelFunc:ER};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;ie(o,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=sh(o.shape,r,i,a,l,c,u,h,d);let k;if(m)k=Ve({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||x){I(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const C=eh(b,w,y),$=Ts({inputs:{x:o},backend:t,attrs:{begin:b,size:C}});k=Ve({inputs:{x:$},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo($)}else{const C=t.bufferSync(o),$=S0(p,C,y,b);k=t.makeTensorInfo(f,$.dtype,$.values)}return k}const LR={kernelName:Wc,backendName:"cpu",kernelFunc:AR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.data.get(u.dataId).values,p=t.data.get(h.dataId).values,[f,m]=N0(d,p,o,r,i,a,l,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const OR={kernelName:gp,backendName:"cpu",kernelFunc:FR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values[0],[c,u,h]=T0(a,l,o),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const MR={kernelName:xp,backendName:"cpu",kernelFunc:_R};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(r.dataId).values,a=R0(i,o);return t.makeTensorInfo(r.shape,"int32",a)}const zR={kernelName:bp,backendName:"cpu",kernelFunc:PR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BR=Le(yr,n=>Math.tan(n)),VR={kernelName:yr,backendName:"cpu",kernelFunc:BR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WR=Le(wr,n=>Math.tanh(n)),UR={kernelName:wr,backendName:"cpu",kernelFunc:WR};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n){const{inputs:e,backend:t}=n,{tensor:s,indices:o,updates:r}=e,{sliceRank:i,numUpdates:a,sliceSize:l,strides:c,outputSize:u}=xs(r,o,s.shape),h=!1,d=t.bufferSync(o),p=t.bufferSync(r),f=t.bufferSync(s),m=Ns(d,p,s.shape,u,l,a,i,c,f,h);return t.makeTensorInfo(s.shape,m.dtype,m.values)}const HR={kernelName:cp,backendName:"cpu",kernelFunc:GR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:r}=s;ie(o,"tile");const i=D0(t.bufferSync(o),r);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const KR={kernelName:kr,backendName:"cpu",kernelFunc:qR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:r,sorted:i}=s;ie(o,"topk");const a=t.data.get(o.dataId).values,[l,c]=L0(a,o.shape,o.dtype,r,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const XR={kernelName:Uc,backendName:"cpu",kernelFunc:jR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n){const{inputs:e,attrs:t,backend:s}=n,{image:o,transforms:r}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=t,[u,h,d,p]=o.shape,[f,m]=c??[h,d],g=[u,f,m,p],x=le(o.shape),b=x[0],w=x[1],y=x[2],k=le(g),C=k[0],$=k[1],v=k[2],S=Rt(o.dtype,U(g));S.fill(l);const T=s.data.get(o.dataId).values,A=s.data.get(r.dataId).values;for(let _=0;_<u;++_){const B=r.shape[0]===1?A:A.subarray(_*8,_*8+8);for(let M=0;M<f;++M)for(let V=0;V<m;++V)for(let H=0;H<p;++H){let G;const q=B[6]*V+B[7]*M+1;if(q===0)continue;const j=(B[0]*V+B[1]*M+B[2])/q,X=(B[3]*V+B[4]*M+B[5])/q,J=J0(j,d,a),Z=J0(X,h,a);switch(i){case"nearest":G=nE(T,h,d,b,w,y,_,Z,J,H,l);break;case"bilinear":G=sE(T,h,d,b,w,y,_,Z,J,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ne=_*C+M*$+V*v+H;S[ne]=G}return s.makeTensorInfo(g,o.dtype,S)}return{dataId:s.write(S,g,o.dtype),shape:o.shape,dtype:o.dtype}}const ZR={kernelName:Gc,backendName:"cpu",kernelFunc:YR};function J0(n,e,t){switch(t){case"reflect":return JR(n,e);case"wrap":return QR(n,e);case"nearest":return tE(n,e);case"constant":default:return eE(n)}}function JR(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Yn(0,t,e-1)}function QR(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Yn(0,t,e-1)}function eE(n,e){return n}function tE(n,e){return Yn(0,n,e-1)}function ai(n,e,t,s,o,r,i,a,l,c,u){const h=i*s+a*o+l*r+c;return 0<=a&&a<e&&0<=l&&l<t?n[h]:u}function nE(n,e,t,s,o,r,i,a,l,c,u){const h=Math.round(a),d=Math.round(l);return ai(n,e,t,s,o,r,i,h,d,c,u)}function sE(n,e,t,s,o,r,i,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*ai(n,e,t,s,o,r,i,h,d,c,u)+(l-d)*ai(n,e,t,s,o,r,i,h,f,c,u),g=(f-l)*ai(n,e,t,s,o,r,i,p,d,c,u)+(l-d)*ai(n,e,t,s,o,r,i,p,f,c,u);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:r}=e;ie(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=F0(i,o,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const rE={kernelName:Hc,backendName:"cpu",kernelFunc:oE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o.shape.length,a=o.shape[r],l=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==r&&(l[c++]=o.shape[p]);const u=new Array(i).fill(0),h=o.shape.slice();h[r]=1;const d=new Array(a);for(let p=0;p<d.length;p++){u[r]=p;const f=Ts({inputs:{x:o},backend:t,attrs:{begin:u,size:h}});d[p]=Ve({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return d}const aE={kernelName:Ca,backendName:"cpu",kernelFunc:iE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:r}=e,{numSegments:i}=s;ie(o,"unsortedSegmentSum");const a=o.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let f=0;f<h;++f){const m=Sl({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,u.push(m)}for(let f=0;f<i;++f){const m=wn(f,"int32"),g=t.makeTensorInfo([],"int32",m),x=Hg({inputs:{a:g,b:d},backend:t}),b=Pn({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=Il({inputs:{a:b,b:o},backend:t}),y=ii({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});c.push(y),u.push(g),u.push(x),u.push(b),u.push(w),u.push(y)}const p=X0({inputs:c,backend:t,attrs:{axis:0}});return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const cE={kernelName:Ia,backendName:"cpu",kernelFunc:lE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uE=[iv,BI,lv,uv,qI,dv,fv,gv,bv,wv,Cv,$v,Sv,Rv,Dv,Fv,_v,Pv,Bv,ov,Wv,Gv,qv,jI,jv,GI,YI,Yv,VI,Zv,Qv,eS,nS,oS,iS,lS,uS,dS,fS,gS,bS,wS,CS,$S,vS,NS,RS,DS,AS,LS,FS,_S,zS,Z$,VS,ZI,XS,JI,YS,e$,nN,sN,rN,n$,o$,aN,cN,hN,pN,i$,l$,WI,mN,Jv,xN,yN,kN,J$,u$,d$,IN,f$,vN,TN,EN,LN,ON,MN,PN,g$,BN,WN,GN,qN,jN,YN,JN,b$,eT,sT,iT,w$,C$,cT,dT,mT,$$,xT,yT,wT,Y0,$T,ev,N$,ST,TT,ET,AT,UI,gd,FT,tv,nv,sv,_T,PT,BT,WT,GT,HT,KT,O$,XT,eR,nR,iR,M$,lR,uR,dR,P$,oT,fR,gR,bR,wR,CR,$R,SR,TR,V$,RR,U$,H$,DR,LR,OR,MR,zR,X$,MS,VR,UR,HR,KR,XR,ZR,v$,rE,aE,cE,bT];for(const n of uE)Ip(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rs={},Tl={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function hE(n,e){Rs[n]=e}function O1(n,e){if(!(n in Rs)||e!=null){const s=pE(n,e);if(s!==null)Rs[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Rs[n];return t==null||t.isContextLost()?(delete Rs[n],O1(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Rs[n])}function dE(n){if(!P().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function pE(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??dE(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Rs[n]},!1),P().getBool("SOFTWARE_WEBGL_ENABLED")&&(Tl.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Tl)||t.getContext("experimental-webgl",Tl):t.getContext("webgl2",Tl)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var li;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(li||(li={}));var a1;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(a1||(a1={}));var vt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(vt||(vt={}));function ci(n,e){return[e,n]}function fE(n,e){return n*e}function Rl(n){const e=U(n),t=Math.ceil(e/4);return Yl(t)}function go(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function mE(n,e){const[t,s]=go(n,e);return t*s*4}function yd(n,e){const t=n;let s,o,r,i,a,l,c,u,h,d;return P().getNumber("WEBGL_VERSION")===2?(s=t.R32F,o=t.R16F,r=t.RGBA16F,i=t.RGBA32F,a=t.RED,c=4,u=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,o=n.RGBA,r=n.RGBA,i=t.RGBA,a=n.RGBA,c=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oe(n,e){const t=e();return P().getBool("DEBUG")&&gE(n),t}function gE(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+wE(n,e))}const xE=596e-10,bE=65504;function yE(n){return!!(P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||xE<Math.abs(n)&&Math.abs(n)<bE)}function wE(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function El(n,e){return fn(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function kE(n,e){const t=fn(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(oe(n,()=>n.shaderSource(t,e)),oe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function CE(n,e){const t=fn(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(oe(n,()=>n.shaderSource(t,e)),oe(n,()=>n.compileShader(t)),P().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw Q0(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const IE=/ERROR: [0-9]+:([0-9]+):/g;function Q0(n,e){const t=IE.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],o=n.split(`
`),r=o.length.toString().length+2,i=o.map((h,d)=>Ws((d+1).toString(),r)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const l=i.slice(0,s-1),c=i.slice(s-1,s),u=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Ws(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function $E(n){return fn(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function vE(n,e){if(oe(n,()=>n.linkProgram(e)),!P().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function wd(n,e){if(oe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function SE(n,e){const t=fn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return oe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),oe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function NE(n,e){const t=fn(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return oe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),oe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function TE(n){return fn(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function RE(n,e){const t=P().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+o+".")}}function EE(n){return fn(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function e4(n,e,t,s,o,r,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(oe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),oe(n,()=>n.vertexAttribPointer(a,o,n.FLOAT,!1,r,i)),oe(n,()=>n.enableVertexAttribArray(a)),!0)}function DE(n,e,t){_E(n,t),oe(n,()=>n.activeTexture(n.TEXTURE0+t)),oe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function AE(n,e,t){return fn(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function LE(n,e,t){return n.getUniformLocation(e,t)}function FE(n,e,t,s){oe(n,()=>DE(n,e,s)),oe(n,()=>n.uniform1i(t,s))}function kd(n,e,t){oe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),oe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function t4(n,e){oe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),oe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Dl(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+OE(n,e))}function OE(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function fn(n,e,t){const s=oe(n,()=>e());if(s==null)throw new Error(t);return s}function _E(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function xo(n,e=2){return U(n.slice(0,n.length-e))}function bo(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Al(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[xo(n),...bo(n)]),e}function ME(n,e=!1){let t=P().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=P().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&P().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?jl(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=bn(n).newShape);let o=U(n),r=null;n.length<=1&&o<=t?r=[1,o]:n.length===2&&n[0]<=t&&n[1]<=t?r=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(r=[n[0],n[1]*n[2]*n[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||i)if(e){const a=xo(n);let l=2,c=2;n.length&&([l,c]=bo(n)),o=a*(l/2)*(c/2),r=Yl(o).map(u=>u*2)}else r=Yl(o);return r}function Ll(n){return n%2===0}function Fl(n,e){if(n=n.slice(-2),e=e.slice(-2),Re(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Ll(t)&&Ll(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Ll(n[0])&&Ll(e[0])}let Cd,Id;function PE(n){if(Cd==null){const e=O1(n);Cd=e.getParameter(e.MAX_TEXTURE_SIZE)}return Cd}function zE(n){if(Id==null){const e=O1(n);Id=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Id)}function BE(n){if(n===0)return 0;let e;const t=O1(n);return k1(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:k1(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function k1(n,e){return n.getExtension(e)!=null}function n4(n){try{if(O1(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function VE(n){if(n===0)return!1;const e=O1(n);if(n===1){if(!k1(e,"OES_texture_float"))return!1}else if(!k1(e,"EXT_color_buffer_float"))return!1;return $d(e)}function WE(n){if(n===0)return!1;const e=O1(n);if(n===1){if(!k1(e,"OES_texture_float")||!k1(e,"WEBGL_color_buffer_float"))return!1}else{if(k1(e,"EXT_color_buffer_float"))return $d(e);const s="EXT_color_buffer_half_float";if(k1(e,s)){const o=e.getExtension(s);return UE(e,o)}return!1}return $d(e)}function $d(n){const e=yd(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),i}function UE(n,e){const t=yd(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function GE(n){return n!==2?!1:O1(n).fenceSync!=null}function ui(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&I(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ae=P();ae.registerFlag("HAS_WEBGL",()=>ae.getNumber("WEBGL_VERSION")>0),ae.registerFlag("WEBGL_VERSION",()=>n4(2)?2:n4(1)?1:0),ae.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),ae.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ae.get("WEBGL_VERSION")===2),ae.registerFlag("WEBGL_CPU_FORWARD",()=>!0),ae.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),ae.registerFlag("WEBGL_PACK",()=>ae.getBool("HAS_WEBGL")),ae.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_CLIP",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_REDUCE",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_LAZILY_UNPACK",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_CONV_IM2COL",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ae.getBool("WEBGL_PACK")),ae.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>PE(ae.getNumber("WEBGL_VERSION"))),ae.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>zE(ae.getNumber("WEBGL_VERSION"))),ae.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ae.getNumber("WEBGL_VERSION");return n===0?0:BE(n)}),ae.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ae.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Xp()),ae.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>VE(ae.getNumber("WEBGL_VERSION"))),ae.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ae.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ae.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),ae.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>WE(ae.getNumber("WEBGL_VERSION"))),ae.registerFlag("WEBGL_FENCE_API_ENABLED",()=>GE(ae.getNumber("WEBGL_VERSION"))),ae.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ae.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),ae.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),ae.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Xp()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),ae.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),ae.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),ae.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),ae.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),ae.registerFlag("WEBGL_EXP_CONV",()=>!1),ae.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ae.getBool("IS_TEST")),ae.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),ae.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),ae.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),ae.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(){let n,e,t,s,o,r,i,a,l,c;return P().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",o="texture",r="outputColor",i="out vec4 outputColor;",a=P().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",o="texture2D",r="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:o,output:r,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(n,e,t="index"){const s=le(e);return s.map((o,r)=>{const i=`int ${n[r]} = ${t} / ${o}`,a=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * ${o}`:`index -= ${n[r]} * ${o}`;return`${i}; ${a};`}).join("")}function Ol(n,e,t="index"){const s=le(e);return s.map((o,r)=>{const i=`int ${n[r]} = ${t} / outShapeStrides[${r}]`,a=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${a};`}).join("")}function HE(n,e){const t=n.length,s=n.map(r=>`${e}[${r}]`),o=new Array(t-1);o[t-2]=s[t-1];for(let r=t-3;r>=0;--r)o[r]=`(${o[r+1]} * ${s[r+1]})`;return o}function qE(n,e,t="index"){const s=n.map((r,i)=>i),o=HE(s,e);return o.map((r,i)=>{const a=`int ${n[i]} = ${t} / ${o[i]}`,l=i===o.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${o[i]}`:`index -= ${n[i]} * ${o[i]}`;return`${a}; ${l};`}).join("")}function vd(n){const e=le(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Sd(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const s4=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:o4}=zw;function KE(n,e,t){const s=[];if(n.forEach(p=>{const f=U(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=Nd(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const o=s.join(`
`),r=n.map(p=>jE(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Pt(),l=ZE(a);let c,u,h=eD(a);return e.isPacked?(c=XE(e.logicalShape,i,t.enableShapeUniforms),u=QE(a)):(c=YE(e.logicalShape,i,t.enableShapeUniforms),u=JE(a)),t.packedInputs&&(h+=oD),[h,l,u,o,c,r,t.userCode].join(`
`)}function yo(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return gD(n,e);case 1:return bD(n,e);case 2:return wD(n,e);case 3:return CD(n,e);case 4:return $D(n,e);case 5:return vD(n);case 6:return SD(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function r4(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return mD(n);case 1:return xD(n,e);case 2:return yD(n,e);case 3:return kD(n,e);default:return ID(n,e)}}function jE(n,e,t=!1,s){let o="";t?o+=r4(n,s):o+=yo(n,s);const r=n.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(t?o+=ND(n,e):o+=TD(n,e)),o}function XE(n,e,t){switch(n.length){case 0:return i4();case 1:return rD(n,e,t);case 2:return pD(n,e,t);case 3:return aD(n,e,t);default:return cD(n,e,t)}}function YE(n,e,t){switch(n.length){case 0:return i4();case 1:return iD(n,e,t);case 2:return fD(n,e,t);case 3:return lD(n,e,t);case 4:return uD(n,e,t);case 5:return hD(n,e);case 6:return dD(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function ZE(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function JE(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function QE(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function eD(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${tD}
    ${nD}
    ${sD}
  `}const tD=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nD=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,sD=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,oD=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function i4(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function rD(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function iD(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function aD(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[2]/2),r=o*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function lD(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ol(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Es(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function cD(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[n.length-1]/2),r=o*Math.ceil(n[n.length-2]/2);let i=r,a="",l="b, r, c";for(let c=2;c<n.length-1;c++)i*=n[n.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${n.length}(${l});
    }
  `}function uD(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ol(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Es(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function hD(n,e){const t=Es(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function dD(n,e){const t=Es(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function pD(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Re(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const o=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function fD(n,e,t){return Re(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Ds(n){return`offset${n}`}function mD(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Pt();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function gD(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[o,r]=n.shapeInfo.texShape;if(o===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Ds(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function xD(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=n.shapeInfo.texShape,r=Pt();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function bD(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${wo(n)}
      }
    `;const o=n.shapeInfo.texShape,r=o[0],i=o[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Ds(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function yD(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],a=r[1],l=Pt();if(r!=null&&Re(t,r))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function wD(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Re(t,r)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=r[0],p=r[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=bn(t),l=i;if(l.length<t.length){const d=ko(n,l),p=["row","col"];return`
      ${yo(d,e)}
      float ${o}(int row, int col) {
        return ${o}(${Co(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${wo(n)}
      }
    `;const c=r[0],u=r[1],h=Ds(s);return u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function kD(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=ko(n,d),m=["b","row","col"];return`
        ${r4(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Co(m,p)});
        }
      `}const a=Pt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],c=i[1],u=Math.ceil(t[2]/2),h=u*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function CD(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[1]*t[2],i=t[2],{newShape:a,keptDims:l}=bn(t),c=a;if(c.length<t.length){const m=ko(n,c),g=["row","col","depth"];return`
        ${yo(m,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Co(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${wo(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],p=n.shapeInfo.flatOffset;if(d===r&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Ds(s);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function ID(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Pt();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[i-1]/2);let d=h*Math.ceil(r[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=r[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${o.texture2D}(${t}, uv);
    }
  `}function $D(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[3],i=t[2]*r,a=t[1]*i,{newShape:l,keptDims:c}=bn(t);if(l.length<t.length){const b=ko(n,l),w=["row","col","depth","depth2"];return`
      ${yo(b,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Co(w,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${r}, 1)));
        ${wo(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&u==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&u==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=Ds(s);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function vD(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],r=e[3]*o,i=e[2]*r,a=e[1]*i,{newShape:l,keptDims:c}=bn(e);if(l.length<e.length){const m=ko(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${yo(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Co(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${r}, ${o})) +
          depth3;
        ${wo(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===o&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Ds(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${r} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function SD(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:r}=bn(e);if(o.length<e.length){const g=ko(n,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${yo(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Co(x,r)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,c=e[2]*l,u=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${wo(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Ds(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function wo(n){const e=n.name,t=U(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function ND(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=o4(n.shapeInfo.logicalShape,e.logicalShape),l=_e(i),c=i-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":i<2&&a.length>=1?u="coords = 0;":u=a.map(b=>`coords.${h[b+c]} = 0;`).join(`
`);let d="";i<2&&r>0?d="coords":d=n.shapeInfo.logicalShape.map((b,w)=>`coords.${h[w+c]}`).join(", ");let p="return outputValue;";const m=U(n.shapeInfo.logicalShape)===1,x=U(e.logicalShape)===1;if(r===1&&!m&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const b=r-2,w=r-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function TD(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",r=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&Re(i,r))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=_e(l),u=o4(n.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${o}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function _e(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Nd(n,e,t){const{newShape:s,keptDims:o}=bn(e),r=e.length,i=n&&r===3&&e[0]===1,a=i?e.slice(1):s,l=!n&&r>1&&!Re(e,t)&&s.length<r||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:o}}function ko(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Co(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(n,e,t,s){const o=t.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=o.map(u=>u.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=KE(o,i,e),l=CE(n.gl,a),c=n.createProgram(l);return P().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:i},a4(n,e,c)))}function a4(n,e,t){const s=[],o=[];let r,i,a,l=null,c=null;c=n.getUniformLocation(t,"NAN",!1),P().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const u=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,u),offset:n.getUniformLocation(t,`offset${h}`,u)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,u),d.texShape=n.getUniformLocation(t,`${h}TexShape`,u)),s.push(d)}if(e.enableShapeUniforms&&(r=n.getUniformLocation(t,"outShape",u),a=n.getUniformLocation(t,"outShapeStrides",u),i=n.getUniformLocation(t,"outTexShape",u)),e.customUniforms)for(const h of e.customUniforms)o.push(n.getUniformLocation(t,h.name,u));return{variablesLocations:s,customUniformLocations:o,infLoc:l,nanLoc:c,outShapeLocation:r,outShapeStridesLocation:a,outTexShapeLocation:i}}function l4(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const o=t.logicalShape,r=e[s],i=r.shape;if(!Re(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,l=r.isUniform?null:r.texData.texShape;if(!Re(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function ED(n,e,t,s,o){e.program.enableShapeUniforms||(l4(e.inShapeInfos,t),l4([e.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),P().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const c=t[l],{uniform:u,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=Nd(e.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),u!=null){if(c.isUniform){if(U(c.shape)<2)n.gl.uniform1f(u,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(u,f)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,u,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=le(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&o)for(let l=0;l<e.program.customUniforms.length;++l){const c=e.program.customUniforms[l],u=e.customUniformLocations[l],h=o[l];if(c.type==="float")n.gl.uniform1fv(u,h);else if(c.type==="vec2")n.gl.uniform2fv(u,h);else if(c.type==="vec3")n.gl.uniform3fv(u,h);else if(c.type==="vec4")n.gl.uniform4fv(u,h);else if(c.type==="int")n.gl.uniform1iv(u,h);else if(c.type==="ivec2")n.gl.uniform2iv(u,h);else if(c.type==="ivec3")n.gl.uniform3iv(u,h);else if(c.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function DD(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=Nd(n.packedInputs,i.shape,l);let d="",p="",f="";if(u.length===1&&n.packedInputs){const k=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${k[0]>1}_${k[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const k=le(u);f=`${k[0]===l[1]}_${k[k.length-1]===l[1]}`}const m=i.shape.length,g=u.length===2&&Re(i.shape,l),x=U(i.shape)===1,b=to(i.shape,t.shape),w=!n.packedInputs&&m===t.shape.length&&Re(l,t.texData.texShape),y=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${c?h:""}_${u.length}_${x}_${b}_${g}_${d}_${p}_${f}_${y}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const o=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+o+`${P().getNumber("WEBGL_VERSION")}`,r}function Ft(n){return P().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=li.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Pt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ol(["r","c","d"],e):Es(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=li.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Pt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ol(["r","c","d"],e):Es(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FD{constructor(e){this.variableNames=["A"],this.outTexUsage=a1.DOWNLOAD;const t=Pt();this.outputShape=e,this.userCode=`
      ${s4}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=a1.DOWNLOAD;const t=Pt();this.outputShape=e,this.userCode=`
      ${s4}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _D={R:0,G:1,B:2,A:3};class c4{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=Pt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const l=s[a];i+=`
          if(offset == ${a}) {
            result = values[${_D[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Sd():vd(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${i}
        }
        ${o.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MD{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Pt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);let o="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Sd():vd(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(n){const e=Pt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return kE(n,t)}function zD(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return SE(n,e)}function BD(n){const e=new Uint16Array([0,1,2,2,1,3]);return NE(n,e)}function hi(n,e,t,s,o,r){RE(e,t);const i=TE(n),a=n.TEXTURE_2D;return oe(n,()=>n.bindTexture(a,i)),oe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),oe(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),oe(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),oe(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),P().getNumber("WEBGL_VERSION")===1?oe(n,()=>n.texImage2D(a,0,s,e,t,0,o,r,null)):oe(n,()=>n.texStorage2D(a,1,s,e,t)),oe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function u4(n){return n.internalFormatFloat}function VD(n,e,t,s){const[o,r]=ci(e,t);return hi(n,o,r,u4(s),s.textureFormatFloat,n.FLOAT)}function h4(n){return n.internalFormatHalfFloat}function WD(n,e,t,s){const[o,r]=ci(e,t);return hi(n,o,r,h4(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function d4(n){return n.downloadTextureFormat}function UD(n,e,t,s){const[o,r]=ci(e,t);return hi(n,o,r,d4(s),n.RGBA,n.UNSIGNED_BYTE)}function p4(n){return n.internalFormatPackedFloat}function GD(n,e,t,s){const[o,r]=go(e,t);return hi(n,o,r,p4(s),n.RGBA,n.FLOAT)}function f4(n){return n.internalFormatPackedHalfFloat}function HD(n,e,t,s){const[o,r]=go(e,t);return hi(n,o,r,f4(s),n.RGBA,s.textureTypeHalfFloat)}function qD(n,e,t){return oe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),e4(n,e,"clipSpacePos",t,3,20,0)&&e4(n,e,"uv",t,2,20,12)}function KD(n,e,t,s,o,r){oe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,l;o instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,l=r.internalFormatPackedFloat),i.set(o),P().getNumber("WEBGL_VERSION")===2?oe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):oe(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,i)),oe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function jD(n,e,t){oe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?P().getNumber("WEBGL_VERSION")===2?oe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):oe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):P().getNumber("WEBGL_VERSION")===2?oe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):oe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),oe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function XD(n,e,t,s){const o=n.createBuffer();oe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,o));const a=4*4*e*t;return oe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),oe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),oe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),o}function YD(n,e,t){const s=n,o=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,o),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),o}function ZD(n,e,t,s){const[o,r]=ci(e,t),i=4,a=new Uint8Array(fE(e*t,i));return oe(n,()=>n.readPixels(0,0,o,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function JD(n,e,t,s,o,r,i,a){const l=n,c=new Float32Array(mE(r,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function QD(n,e,t){const s=new Float32Array(e*t*4);return oe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Td{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=P().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,hE(t,e)):this.gl=O1(t),e=this.gl,P().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>oe(r,()=>r.createVertexArray()),this.bindVertexArray=i=>oe(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>oe(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>oe(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>oe(e,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>oe(e,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>oe(e,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>oe(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),P().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=El(this.gl,r),k1(this.gl,i))this.textureHalfFloatExtension=El(this.gl,i);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),k1(this.gl,o))this.colorBufferHalfFloatExtension=El(this.gl,o);else if(P().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",k1(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(k1(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=zD(this.gl),this.indexBuffer=BD(this.gl),this.framebuffer=EE(this.gl),this.textureConfig=yd(this.gl,this.textureHalfFloatExtension)}get debug(){return P().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;oe(e,()=>e.finish()),oe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),oe(e,()=>e.deleteFramebuffer(this.framebuffer)),oe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),oe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),oe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),VD(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),WD(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),UD(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jD(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,o){this.throwIfDisposed(),KD(this.gl,e,t,s,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),HD(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),GD(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(t4(this.gl,this.framebuffer),this.outputTexture=null),oe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>ZD(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,o,r,i){return JD(this.gl,e,t,s,o,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return YD(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const o=XD(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(P().getBool("WEBGL_FENCE_API_ENABLED")){const o=e,r=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=o.clientWaitSync(r,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=r}else P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>QD(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=PD(t));const s=$E(t);oe(t,()=>t.attachShader(s,this.vertexShader)),oe(t,()=>t.attachShader(s,e)),vE(t,s);const o=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&wd(t,o),o}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;oe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),qD(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(oe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&wd(this.gl,this.program),oe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?AE(this.gl,e,t):LE(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),oe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),FE(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[o,r]=go(t,s);this.setOutputMatrixTextureDriver(e,o,r)}setOutputMatrixWriteRegion(e,t,s,o){this.setOutputMatrixWriteRegionDriver(s,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,s,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&wd(this.gl,this.program),Dl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}oe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),oe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=El(this.gl,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(o.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Hd(()=>this.disposed||this.isQueryAvailable(e,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),o=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=eA(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in P().platform&&(s=P().platform.setTimeoutCustom.bind(P().platform)),Hd(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kd(this.gl,e,this.framebuffer),this.debug&&Dl(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(kd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Dl(this.gl)):t4(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const o=this.gl;kd(o,e,this.framebuffer),this.debug&&Dl(o),this.outputTexture=e,oe(o,()=>o.viewport(0,0,t,s)),oe(o,()=>o.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,o){this.throwIfDisposed(),oe(this.gl,()=>this.gl.scissor(e,t,s,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function eA(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:tA,bincountImpl:m4,bincountReduceImpl:nA,bitwiseAndImpl:sA,castImpl:oA,ceilImpl:rA,concatImpl:iA,equalImpl:aA,expImpl:lA,expm1Impl:cA,floorImpl:uA,gatherNdImpl:hA,gatherV2Impl:dA,greaterImpl:pA,greaterEqualImpl:fA,lessImpl:mA,lessEqualImpl:gA,linSpaceImpl:xA,logImpl:bA,maxImpl:yA,maximumImpl:wA,minimumImpl:kA,multiplyImpl:CA,negImpl:IA,notEqualImpl:$A,prodImpl:vA,raggedGatherImpl:SA,raggedRangeImpl:NA,raggedTensorToTensorImpl:TA,rangeImpl:RA,rsqrtImpl:EA,scatterImpl:DA,sigmoidImpl:AA,simpleAbsImpl:g4,sliceImpl:LA,sparseFillEmptyRowsImpl:FA,sparseReshapeImpl:OA,sparseSegmentReductionImpl:x4,sqrtImpl:_A,staticRegexReplaceImpl:MA,stridedSliceImpl:PA,stringNGramsImpl:zA,stringSplitImpl:BA,stringToHashBucketFastImpl:VA,subImpl:WA,tileImpl:UA,topKImpl:GA,transposeImpl:Rd,uniqueImpl:HA}=Y$;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function zt(n,e){return e===1?[n]:b4(n,e)}function qA(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KA{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Ft(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=zt("rc",this.rank),s=_e(this.rank),o=this.getOutOfBoundsCondition(t),r=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let o=0;o<=1;o++){let r=`${s===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${e[e.length-1-i]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y4{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);let s="";for(let o=0;o<4;o++){let r="thisRC = rc;";o%2===1&&(r+="thisRC.z += 1;"),o>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${jA(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Sd():vd(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function jA(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?qE(["r","c","d"],"inputShape"):Es(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XA{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const o=k4(t,s),r=C4(e,o,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=w4(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[r].pop();return this.usedTextures[r].push(l),l}let a;return o===vt.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===vt.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===vt.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===vt.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===vt.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,o){if(this.freeTextures==null)return;const r=k4(s,o),i=C4(t,r,o);i in this.freeTextures||(this.freeTextures[i]=[]);const a=w4(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=P().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[i],u=c&&c.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function YA(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function w4(n,e,t,s,o){const r=ZA(e,s);let i;if(o){const[l,c]=go(n[0],n[1]);i=l*c}else{const[l,c]=ci(n[0],n[1]);i=l*c}const a=YA(t,r);return i*a}function ZA(n,e){switch(n){case vt.PACKED_2X2_FLOAT32:return p4(e);case vt.PACKED_2X2_FLOAT16:return f4(e);case vt.UNPACKED_FLOAT32:return u4(e);case vt.UNPACKED_FLOAT16:return h4(e);case vt.PACKED_4X1_UNSIGNED_BYTE:return d4(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function JA(n){return P().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?vt.PACKED_2X2_FLOAT32:vt.UNPACKED_FLOAT32:n?vt.PACKED_2X2_FLOAT16:vt.UNPACKED_FLOAT16}function k4(n,e){if(n===a1.UPLOAD)return vt.PACKED_2X2_FLOAT32;if(n===a1.RENDER||n==null)return JA(e);if(n===a1.DOWNLOAD||n===a1.PIXELS)return vt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function C4(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const C1="if (isnan(x)) return x;",QA="return x;",I4="return abs(x);",eL="return (x >= 0.0) ? x : (exp(x) - 1.0);",tL=C1+`
  return (x < 0.0) ? 0.0 : x;
`,nL=C1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Bn="return x;",sL="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL="return x;",rL=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,iL=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,aL=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,lL="return 1.0 / (1.0 + exp(-1.0 * x));";class Vn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);const t=e.length,s=zt("rc",t),o=_e(t),r=qA(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL=Gf,hL=1e-7,dL=1e-4,_l={};function pL(n){return n in _l||(_l[n]={}),_l[n]}const fL=P().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),mL=600;function gL(){return P().global.screen==null?1024:P().global.screen.height*P().global.screen.width*window.devicePixelRatio*mL/1024/1024}class Ml extends Kl{nextDataId(){return Ml.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!P().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Td)t=e;else{const s=O1(P().getNumber("WEBGL_VERSION"),e);t=new Td(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=O1(P().getNumber("WEBGL_VERSION"));t=new Td(s),this.binaryCache=pL(P().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new XA(this.gpgpu),this.numMBBeforeWarning=gL(),this.texData=new Ud(this,B1())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,o,r,i){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[o,r]},l.texShape=[o,r];const c=Al(t),u=new c4(c,!1,i),h=this.runWebGLProgram(u,[a],s,[[o,r]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((P().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||P().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:s,values:e,usage:a1.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,o,r){if(P().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:o,values:t,usage:a1.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:o,complexTensorInfos:r,slice:i,shape:a,isPacked:l}=t;if(i!=null){let d;l?d=new Vn(a,Bn):d=new nn(a,Bn);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:o}],o),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=Vt());let h;if(o==="complex64"){const d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);h=hn(d,p)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Vt()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:o,slice:r,dtype:i,complexTensorInfos:a,isPacked:l}=t;if(r!=null){let f;l?f=new Vn(o,Bn):f=new nn(o,Bn);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(P().getBool("DEBUG")&&!P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&P().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(i!=="complex64"&&P().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const f=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...Rl(o))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=hn(m,g)}else if(c==null)h=this.getValuesFromTexture(e);else{const f=U(o);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const f=this.gpgpu.gl;oe(f,()=>f.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&B1().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:o,shape:r,slice:i,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new Vn(r,Bn):p=new nn(r,Bn);const f=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:a}],a),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),h=B1().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>Cn(o));return Ce(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!yE(s))throw P().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:o}=this.texData.get(e),r=U(t);if(P().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Rl(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),f}const i=P().getBool("WEBGL_PACK")&&o===!0,a=i?Al(t):t,l=i?new OD(a):new FD(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=ss(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=ss(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=V5(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:i[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Vt(),endMs:null}}endTimer(e){return P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Vt(),e)}async getQueryTime(e){if(P().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:o,usage:r,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(t,o,r,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=fL){return P().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&U(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){n1("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return uL(e.shape,t)}packedUnaryOp(e,t,s){const o=new Vn(e.shape,t),r=this.compileAndRun(o,[e],s);return B1().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const o=g4(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(P().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,I4,e.dtype);const t=new nn(e.shape,I4),s=this.compileAndRun(t,[e]);return B1().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&No(s[0])){const r=s.map(i=>kn(i));o=this.write(r,e,t)}else o=this.write(s,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,s){return B1().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new cL(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new KA(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[xo(e.shape),...bo(e.shape)],o={dtype:e.dtype,shape:s,dataId:e.dataId},r=[xo(t),...bo(t)],i=new y4(r,s),a=!0,l=[s],c=this.runWebGLProgram(i,[o],e.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:o,shape:r,dtype:i}=s;if(t!=null){const d=U(r),p=t[0]*t[1]*4;I(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Al(r);let l;o?l=new LD(a):l=new AD(a);const c=!0,u=[t??Rl(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,u,c,t);return{dtype:i,shape:r,dataId:h.dataId}}runWebGLProgram(e,t,s,o,r=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===li.DENSE){const x=i??Rl(e.outputShape);l.texShape=x.map(b=>b*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),U(a.shape)===0)return l.values=Rt(a.dtype,0),a;const c=[],u=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!e.packedInputs&&U(x.shape)<=P().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!e.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!Fl(b.shape,x.shape)){const w=x,y=x.shape;x.shape=b.shape,x=this.packedReshape(x,y),c.push(x),b=this.texData.get(x.dataId),w.shape=y}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=DD(e,u,h),p=this.getAndSaveBinary(d,()=>RD(this.gpgpu,e,u,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),P().get("ENGINE_COMPILE_ONLY")||ED(this.gpgpu,p,u,h,o),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=P().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=Vt();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!P().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(e,t,s,o,r=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,o,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(P().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=O(()=>{if(!P().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=P().getBool("DEBUG");P().set("DEBUG",!1);const t=this.abs(De(1e-8)).dataSync()[0];if(P().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?hL:dL}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:o,values:r,texture:i,usage:a,isPacked:l}=t;if(i!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Vt());let h=t.texShape;if(h==null&&(h=ME(s,l),t.texShape=h),r!=null){const d=Al(s);let p,f=h[1],m=h[0];const g=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!g)&&([f,m]=go(h[0],h[1])),l?p=new MD(d,g):p=new c4(d,g);const x=g?[m,f]:h,b=this.makeTensorInfo(x,o),w=this.texData.get(b.dataId);g?w.usage=a1.PIXELS:w.usage=a1.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,r);const y=[[m,f]],C=this.runWebGLProgram(p,[b],o,y,!0),$=this.texData.get(C.dataId);t.texShape=$.texShape,t.isPacked=$.isPacked,t.usage=$.usage,P().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(t.texture=$.texture,t.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=Vt()-u)}else{const d=this.acquireTexture(h,a,o,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:o}=s;return t!=null&&(s.values=xL(t,o)),s.values}acquireTexture(e,t,s,o){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*$i(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await m2(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Q0(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:o,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:l}=a4(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=o,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:o,height:r,width:i,channels:a}=e,l=B1().backend;if(!l.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(o,t,s,r,i,a);return B1().makeTensorFromDataId(c,t,s,l)}}Ml.nextDataId=0;function xL(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yp()&&tf("webgl",()=>new Ml,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ed=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class As{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=ge(t,s),this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ls=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Io{constructor(e,t,s,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ge(t,s);const r=this.outputShape.length;this.enableShapeUniforms=Ft(r);let i="";if(o)if(r===0||U(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${_e(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=zt("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const bL={kernelName:jo,backendName:"webgl",kernelFunc:t1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,r=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(r.dataId),a=t1({inputs:{x:s},backend:t}),l=t1({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:l},r}const yL={kernelName:hc,backendName:"webgl",kernelFunc:Wn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4="return (a < 0.) ? b * a : a;",v4=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function wL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:r}=s,i=t.makeTensorInfo([],"float32",wn(r,"float32")),a=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Io(v4,o.shape,i.shape):new As($4,o.shape,i.shape),l=t.runWebGLProgram(a,[o,i],"float32");return t.disposeIntermediateTensorInfo(i),l}const kL={kernelName:Hi,backendName:"webgl",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4="return (a < 0.) ? b * a : a;",N4=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function CL(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e,r=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Io(N4,s.shape,o.shape):new As(S4,s.shape,o.shape);return t.runWebGLProgram(r,[s,o],"float32")}const IL={kernelName:ua,backendName:"webgl",kernelFunc:CL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o="if (isnan(x)) return x;";function Ne({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:o,backend:r})=>{const{x:i}=o,a=r,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const h=a.texData.get(i.dataId),d=t(h.values,l);return a.makeTensorInfo(i.shape,l,d)}const c=P().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return c?u=new Vn(i.shape,e):u=new nn(i.shape,n),a.runWebGLProgram(u,[i],l)}}function St({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:r}){return({inputs:i,backend:a})=>{const{a:l,b:c}=i,u=a;if(s&&l.dtype==="complex64"){const f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[y,k]=w,C={dataId:y.dataId,dtype:y.dtype,shape:l.shape},$={dataId:k.dataId,dtype:k.dtype,shape:c.shape},v=new As(n,l.shape,c.shape);return u.runWebGLProgram(v,[C,$],Zt(y.dtype,k.dtype))}),b=Wn({inputs:{real:g,imag:x},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(x),b}const h=r||Zt(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&o!=null){const f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?dn(f):f,x=l.dtype==="string"?dn(m):m,[b,w]=o(l.shape,c.shape,g,x,h),y=u.makeTensorInfo(w,h),k=u.texData.get(y.dataId);return k.values=b,y}const d=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Io(e,l.shape,c.shape,t):p=new As(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],h)}}function di(n,e=!1){if(n==="linear")return e?oL:QA;if(n==="relu")return e?iL:tL;if(n==="elu")return e?rL:eL;if(n==="relu6")return e?aL:nL;if(n==="prelu")return e?N4:S4;if(n==="leakyrelu")return e?v4:$4;if(n==="sigmoid")return e?lL:sL;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T4{constructor(e,t,s,o=!1,r=!1,i=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Ft(this.outputShape.length);const u=o?e[1]:e[2],h=Math.ceil(u/2),d=o?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",y="rc.x";e[0]<t[0]?w=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${y};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class E4{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ge(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4="return a * b;";function Dd(n){const{inputs:e,backend:t}=n,{a:s,b:o}=e,r=Zt(s.dtype,o.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(o.dataId),c=new E4(R4.REAL,s.shape,o.shape),u=new E4(R4.IMAG,s.shape,o.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=Wn({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,o])){const a=t.texData.get(s.dataId),l=t.texData.get(o.dataId),[c,u]=CA(s.shape,o.shape,a.values,l.values,r),h=t.makeTensorInfo(u,r),d=t.texData.get(h.dataId);return d.values=c,h}let i;return P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Io(D4,s.shape,o.shape):i=new As(D4,s.shape,o.shape),t.runWebGLProgram(i,[s,o],r)}const $L={kernelName:sr,backendName:"webgl",kernelFunc:Dd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n,e,t){const s=[xo(n.shape),...bo(n.shape)],o={dtype:n.dtype,shape:s,dataId:n.dataId},r=[xo(e),...bo(e)],i=new y4(r,s),a=!0,l=[s],c=t.runWebGLProgram(i,[o],n.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ee(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:r}=s,i=t,a=U(o.shape),l=qd(r,a),c=U(l);I(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=i.texData.get(o.dataId);return u.isPacked&&!Fl(o.shape,l)&&!(u.texture!==null&&Fl(u.shape,l))?vL(o,l,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}const SL={kernelName:da,backendName:"webgl",kernelFunc:ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A4{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=e;this.outputShape=[o,i];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${Vs(h)?h.toPrecision(2):h}, ones);`}let u="";r%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NL{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=e;this.outputShape=[o,i];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=ja(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Fs(n,e,t,s){const o=TL(n.shape);let r=n;for(let i=0;i<o.length;i++){const{inSize:a,windowSize:l,outSize:c}=o[i];let u,h;t==="mean"?u=i===0?new A4({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},a):new A4({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c}):u=new NL({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},t),h=r,r=s.runWebGLProgram(u,[r],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RL{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const o=_e(this.rank),r=EL(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function EL(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let o=0;o<n.length;o++)s[n[o]]=t[o];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=_e(this.rank),r=b4("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=r[u];const a=`vec2(${i.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(n,e,t){const s=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DL(n.shape,e):new RL(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n,e,t,s){const o=e,r=n.shape.length,i=ke(o,n.shape);let a=i;const l=Ze(a,r),c=l!=null;let u=n;c&&(u=Pl(n,l,s),a=ot(a.length,r)),$t("sum",a,r);const[h,d]=yt(u.shape,a);let p=h;t&&(p=lt(h,i));const f=U(d),g=U(n.shape)/f,x=ee({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),b=nu(n.dtype),w=Fs(x,b,"sum",s),y=ee({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),c&&s.disposeIntermediateTensorInfo(u),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zl(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;return AL(o,r,i,t)}const LL={kernelName:ba,backendName:"webgl",kernelFunc:zl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{perm:r}=s,i=t,a=o.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=o.shape[r[u]];let c;if(i.shouldExecuteOnCPU([o])){const h=i.texData.get(o.dataId).values,d=Rd(h,o.shape,o.dtype,r,l);c=i.makeTensorInfo(l,o.dtype);const p=i.texData.get(c.dataId);p.values=d}else c=Pl(o,r,i);return c}const FL={kernelName:qs,backendName:"webgl",kernelFunc:Bt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4=1e3;function Bl({a:n,b:e,transposeA:t,transposeB:s,backend:o,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,u=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=s?e.shape[u-1]:e.shape[u-2],p=t?n.shape[c-1]:n.shape[c-2],f=s?e.shape[u-2]:e.shape[u-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),x=U(m),b=U(g),y=ge(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);I(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const k=t?[x,h,p]:[x,p,h],C=s?[b,f,d]:[b,d,f],$=ee({inputs:{x:n},backend:o,attrs:{shape:k}}),v=ee({inputs:{x:e},backend:o,attrs:{shape:C}}),S=[$,v],T=Math.max(x,b),A=t?$.shape[1]:$.shape[2],z=r!=null,_=i!=null,B=l==="leakyrelu",M=l!=null?di(l,!0):null,V=z||_||B||M!=null;let H;if((p===1||f===1)&&A>L4&&V===!1){let q=$,j=v;t&&(q=Bt({inputs:{x:$},backend:o,attrs:{perm:[0,2,1]}}),S.push(q)),s&&(j=Bt({inputs:{x:v},backend:o,attrs:{perm:[0,2,1]}}),S.push(j));const X=f!==1,J=f===1;let Z=q;X&&(Z=ee({inputs:{x:q},backend:o,attrs:{shape:[T,A,1]}}),S.push(Z));const ne=f===1?2:1;let Q=j;J&&(Q=ee({inputs:{x:j},backend:o,attrs:{shape:[T,1,A]}}),S.push(Q));const re=Dd({inputs:{a:Z,b:Q},backend:o});H=zl({inputs:{x:re},backend:o,attrs:{axis:ne,keepDims:!0}}),S.push(re)}else{const q=Zt(n.dtype,e.dtype),j=new T4(k,C,[T,p,f],t,s,z,M,_,B),X=[$,v];if(r!=null&&X.push(r),_&&X.push(i),B){const J=o.makeTensorInfo([],"float32",wn(a,"float32"));X.push(J),S.push(J)}H=o.runWebGLProgram(j,X,q)}const G=ee({inputs:{x:H},backend:o,attrs:{shape:y}});S.push(H);for(const q of S)o.disposeIntermediateTensorInfo(q);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return Bl({a:o,b:r,transposeA:l,transposeB:c,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const _L={kernelName:va,backendName:"webgl",kernelFunc:OL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4="return abs(x);";function ML(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=t.texData.get(s.dataId),i=g4(r.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let o;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Vn(s.shape,F4):o=new nn(s.shape,F4),t.runWebGLProgram(o,[s],s.dtype)}const PL={kernelName:vi,backendName:"webgl",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zL=C1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,BL=Ne({opSnippet:zL}),VL={kernelName:To,backendName:"webgl",kernelFunc:BL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WL=C1+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,UL=Ne({opSnippet:WL}),GL={kernelName:Ro,backendName:"webgl",kernelFunc:UL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4="return a + b;",HL=St({opSnippet:O4,packedOpSnippet:O4,supportsComplex:!0,cpuKernelImpl:tA}),qL={kernelName:Hs,backendName:"webgl",kernelFunc:HL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KL{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jL{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vl(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return t1({inputs:{x:s[0]},backend:t});if(s.length>P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Vl({inputs:s.slice(0,l),backend:t}),u=Vl({inputs:s.slice(l),backend:t});return Vl({inputs:[c,u],backend:t})}const o=s.map(l=>l.dtype).reduce((l,c)=>Zt(l,c)),r=s.map(l=>l.shape),a=P().getBool("WEBGL_PACK")?new jL(s[0].shape,r):new KL(s[0].shape,r);return t.runWebGLProgram(a,s,o)}const XL={kernelName:oc,backendName:"webgl",kernelFunc:Vl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=ke(r,o.shape);let c=l;const u=Ze(c,a);let h=o;u!=null&&(h=Bt({inputs:{x:o},backend:t,attrs:{perm:u}}),c=ot(c.length,a)),$t("all",c,a);const[d,p]=yt(h.shape,c),f=U(p),m=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Fs(m,m.dtype,"all",t);let x;if(i){const b=lt(d,l);x=ee({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ee({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),x}const ZL={kernelName:rc,backendName:"webgl",kernelFunc:YL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=ke(r,o.shape);let c=l;const u=Ze(c,a);let h=o;u!=null&&(h=Bt({inputs:{x:o},backend:t,attrs:{perm:u}}),c=ot(c.length,a)),$t("any",c,a);const[d,p]=yt(h.shape,c),f=U(p),m=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Fs(m,m.dtype,"any",t);let x;if(i){const b=lt(d,l);x=ee({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ee({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),x}const QL={kernelName:ic,backendName:"webgl",kernelFunc:JL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eF{constructor(e,t,s){this.variableNames=["A"];const{windowSize:o,batchSize:r,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tF{constructor(e,t,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=_e(l),u=zt("coords",l);let h,d;if(i===1){d=l+1;const v=_e(d);h=`
        ${v} sourceLocR = ${v}(${u.join()}, 0);
        ++${u[l-1]};
        ${v} sourceLocG = ${v}(${u.join()}, 0);
        ++${u[l-2]};
        ${v} sourceLocA = ${v}(${u.join()}, 0);
        --${u[l-1]};
        ${v} sourceLocB = ${v}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(v=>"int "+v),g=zt("sourceLocR",d-1).concat("inIdx.r"),x=zt("sourceLocG",d-1).concat("inIdx.g"),b=zt("sourceLocB",d-1).concat("inIdx.b"),w=zt("sourceLocA",d-1).concat("inIdx.a"),y=s==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,C=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,$=o?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${$}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n,e,t,s=null){let o=e.shape[0],r=e.shape[1];s!=null&&(o=s.shape[0],r=s.shape[1]);const i=ja(r),a={windowSize:i,inSize:r,batchSize:o,outSize:Math.ceil(r/i)},l=new eF(a,t,s==null),c=[e];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=_4(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}function M4(n,e,t,s=null){const o=s!=null?s.shape:e.shape,r=o[o.length-1],i=ja(r),a=new tF(o,i,t,s==null),l=s==null?[e]:[e,s],c=n.runWebGLProgram(a,l,"int32");if(c.shape.length===e.shape.length){const u=M4(n,e,t,c);return n.disposeIntermediateTensorInfo(c),u}return c}function P4(n,e,t,s){const o=[t];if($t("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,e.shape.length),!P().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=n.unpackTensor(e),r.push(l));const[c,u]=yt(l.shape,o),h=U(u),d=ee({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});r.push(d);const p=_4(n,d,s);r.push(p);const f=ee({inputs:{x:p},backend:n,attrs:{shape:c}});return r.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return M4(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;let i=ke(r,o.shape);const a=Ze(i,o.shape.length);let l=o;const c=[];a!=null&&(l=Bt({inputs:{x:o},backend:t,attrs:{perm:a}}),c.push(l),i=ot(i.length,l.shape.length)),$t("argMax",[i[0]],l.shape.length);const u=P4(t,l,i[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const sF={kernelName:Si,backendName:"webgl",kernelFunc:nF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;let i=ke(r,o.shape);const a=Ze(i,o.shape.length);let l=o;const c=[];a!=null&&(l=Bt({inputs:{x:o},backend:t,attrs:{perm:a}}),c.push(l),i=ot(i.length,l.shape.length)),$t("argMin",[i[0]],l.shape.length);const u=P4(t,l,i[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const rF={kernelName:Ni,backendName:"webgl",kernelFunc:oF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iF=C1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,aF=Ne({opSnippet:iF}),lF={kernelName:Eo,backendName:"webgl",kernelFunc:aF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cF=C1+"return log(x + sqrt(x * x + 1.0));",uF=Ne({opSnippet:cF}),hF={kernelName:Do,backendName:"webgl",kernelFunc:uF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dF=C1+`
  return atan(x);
`,pF=Ne({opSnippet:dF}),fF={kernelName:Ao,backendName:"webgl",kernelFunc:pF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mF=Ed+`
  return atan(a, b);
`,gF=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ls+`
  return result;
`,xF=St({opSnippet:mF,packedOpSnippet:gF}),bF={kernelName:Fo,backendName:"webgl",kernelFunc:xF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF=C1+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,wF=Ne({opSnippet:yF}),kF={kernelName:Lo,backendName:"webgl",kernelFunc:wF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pi{constructor(e,t,s,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const v=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${v} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?r?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(y="avgValue / max(count, 1.0)");const k=Math.floor(i/4)*4,C=i%4,$=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${$}
          }

          int xC = xCCorner + ${k};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${$}
          }
        }
        setOutput(${y});
      }
    `}}class Ad{constructor(e,t,s,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg";let y="0.0";if(w||(y="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const k="max";let C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");const $=Math.floor(i/4)*4,v=i%4,S=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${$};
            if (${v===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${v===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${v===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${S}
            }
          }
        }
        setOutput(${C});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;ui(o,"avgPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;I(Dt(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=p1(o.shape,r,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))return t1({inputs:{x:o},backend:t});const h=new pi(u,"avg",!1);return t.runWebGLProgram(h,[o],"float32")}const IF={kernelName:Ti,backendName:"webgl",kernelFunc:CF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=rn(o.shape,r,i,u,a,l,c),d=new Ad(h,"avg",!1);return t.runWebGLProgram(d,[o],"float32")}const vF={kernelName:Ri,backendName:"webgl",kernelFunc:$F};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=l-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class NF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,x=1/(t*s*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=rn(i.shape,a,l,h,c,u),p=new NF(d);return t.runWebGLProgram(p,[o],i.dtype)}const RF={kernelName:lc,backendName:"webgl",kernelFunc:TF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r;ui([o,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=p1(i.shape,a,l,1,c),h=new SF(u);return t.runWebGLProgram(h,[o],i.dtype)}const DF={kernelName:ac,backendName:"webgl",kernelFunc:EF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r}=e,{transposeA:i,transposeB:a}=s;return Bl({a:o,b:r,transposeA:i,transposeB:a,backend:t})}const LF={kernelName:Ei,backendName:"webgl",kernelFunc:AF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FF{constructor(e,t,s,o,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],ge(e,t),ge(e,s);let a="0.0";o!=null&&(ge(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(ge(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OF{constructor(e,t,s,o,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ge(e,t),ge(e,s);let a="vec4(0.0)";o!=null&&(ge(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(ge(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F={kernelName:Wi,backendName:"webgl",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:o,variance:r,offset:i,scale:a}=n;I(o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[s,o,r];let u=null;i!=null&&(u=i.shape,c.push(i));let h=null;a!=null&&(h=a.shape,c.push(a));const d=P().getBool("WEBGL_PACK_NORMALIZATION")?new OF(s.shape,o.shape,r.shape,u,h,l):new FF(s.shape,o.shape,r.shape,u,h,l);return e.runWebGLProgram(d,c,c[0].dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MF{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=_e(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=PF(this.rank);let o;const r=e.map((i,a)=>`sourceLoc.${Ld[a]} = start[${a}] + coords.${Ld[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${s}));
      }
    `}}const Ld=["x","y","z","w","u","v"];function PF(n){if(n===1)return"sourceLoc";if(n<=6)return Ld.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zF{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=_e(this.rank),s=zt("coords",this.rank),o=zt("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${r})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${o[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n,e,t,s){const o=s.texData.get(n.dataId),r=s.makeTensorInfo(t,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,o),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=nh(e,le(n.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),r}function vo(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,size:i}=s,[a,l]=Ka(o,r,i);if(Qu(o,a,l),U(l)===0)return t.makeTensorInfo(l,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){const h=t.texData.get(o.dataId),d=LA(h.values,a,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,d)}const{isPacked:c}=t.texData.get(o.dataId),u=th(o.shape,a,l);if(c||!u){const h=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zF(l):new MF(l),d=[a];return t.runWebGLProgram(h,[o],o.dtype,d)}return t.uploadToGPU(o.dataId),BF(o,a,l,t)}const VF={kernelName:xa,backendName:"webgl",kernelFunc:vo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WF={kernelName:Di,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,crops:i}=s;I(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((b,w)=>b*w),l=Br(o.shape,r,a),c=Vr(l.length,r.length),u=Wr(o.shape,r,a),h=ah(i,r.length),d=lh(u,i,r.length),p=[],f=ee({inputs:{x:o},backend:t,attrs:{shape:l}}),m=Bt({inputs:{x:f},backend:t,attrs:{perm:c}}),g=ee({inputs:{x:m},backend:t,attrs:{shape:u}}),x=vo({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i}=s,a=t.readSync(o.dataId),l=t.readSync(r.dataId),c=m4(a,l,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,c)}const GF={kernelName:cc,backendName:"webgl",kernelFunc:UF};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HF=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,qF=`
  return float(int(a.r) & int(b.r));
`;function KF(n){const{inputs:e,backend:t}=n,{a:s,b:o}=e,r=P().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=P().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,o])||i===1){const l=t.texData.get(s.dataId).values,c=t.texData.get(o.dataId).values,[u,h]=sA(s.shape,o.shape,l,c,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=u,d}let a;return r?a=new Io(HF,s.shape,o.shape,!1):a=new As(qF,s.shape,o.shape),t.runWebGLProgram(a,[s,o],s.dtype)}const jF={kernelName:uc,backendName:"webgl",kernelFunc:KF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,r=t.readSync(s.dataId),i=t.readSync(o.dataId),a=ge(Array.from(r),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const YF={kernelName:Qd,backendName:"webgl",kernelFunc:XF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4=St({opSnippet:"return float(a != b);",cpuKernelImpl:$A,dtype:"bool"}),ZF={kernelName:ra,backendName:"webgl",kernelFunc:z4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return t1({inputs:{x:o.complexTensorInfos.real},backend:t})}const JF={kernelName:Mc,backendName:"webgl",kernelFunc:fi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QF="return float(int(x));";function eO(n,e){const t=new nn(n.shape,QF),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return t1({inputs:{x:o},backend:t});const i=wt(o.shape),a=Fd({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=Wn({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),l}if(o.dtype==="complex64"){const i=fi({inputs:{input:o},backend:t}),a=Fd({inputs:{x:i},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(i),a}if(!Kd(o.dtype,r)){const i=t1({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(t.shouldExecuteOnCPU([o])){const i=t.texData.get(o.dataId).values,[a,l,c]=oA(i,o.shape,o.dtype,r);return t.makeTensorInfo(a,l,c)}if(r==="int32")return eO(o,t);if(r==="bool"){const i=t.makeTensorInfo([],"bool",Rt("bool",1)),l=z4({inputs:{a:o,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${r}`)}const tO={kernelName:Oo,backendName:"webgl",kernelFunc:Fd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4="return ceil(x);",nO=Ne({opSnippet:B4,packedOpSnippet:B4,cpuKernelImpl:rA}),sO={kernelName:_o,backendName:"webgl",kernelFunc:nO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{clipValueMin:r,clipValueMax:i}=s;let a;P().getBool("WEBGL_PACK_CLIP")?a=new rO(o.shape):a=new oO(o.shape);const l=[[r],[i]];return t.runWebGLProgram(a,[o],o.dtype,l)}const aO={kernelName:Mo,backendName:"webgl",kernelFunc:iO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function cO(n){const{inputs:e,backend:t}=n,{x:s}=e,o=t.texData.get(s.dataId),r=new lO(s.shape),i=[V4(s,o.complexTensorInfos.real),V4(s,o.complexTensorInfos.imag)];return t.runWebGLProgram(r,i,i[0].dtype)}const uO={kernelName:Ai,backendName:"webgl",kernelFunc:cO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hO{constructor(e){this.outputShape=[],this.outputShape=q1(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const o=t.length,r=t[t.length-1];s.push(`else setOutput(getT${o}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=q1(e,t);const s=this.outputShape,o=s.length,r=_e(o),i=zt("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][t];const c=a[t],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Wl(a,c,g)}),
            vec2(${Wl(u,c,g)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Wl(a,c,f)}),
          vec2(${Wl(u,c,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${s[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${s[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${s[o-2]} &&
            ${i[o-1]} < ${s[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Wl(n,e,t){const s=n.indexOf(e);return n.map((r,i)=>i===s?`${r} - ${t}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return t1({inputs:{x:o.complexTensorInfos.imag},backend:t})}const pO={kernelName:Rc,backendName:"webgl",kernelFunc:Ul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mi(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(b=>fi({inputs:{input:b},backend:t})),f=n.map(b=>Ul({inputs:{input:b},backend:t})),m=mi(p,e,t),g=mi(f,e,t),x=Wn({inputs:{real:m,imag:g},backend:t});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}let o=t.shouldExecuteOnCPU(n);if(s==="string"&&(o=!0),o){const p=n.map(y=>{const C=[-1,U(y.shape.slice(e))];return ee({inputs:{x:y},backend:t,attrs:{shape:C}})}),f=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape})),m=q1(p.map(y=>y.shape),1),g=p[0].shape[0]===1,x=iA(f,m,s,g),b=q1(n.map(y=>y.shape),e),w=t.makeTensorInfo(b,s,x);return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),w}const r=n.filter(p=>U(p.shape)>0),i=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=i?new nn(n[0].shape,Bn):new Vn(n[0].shape,Bn);return t.runWebGLProgram(p,n,s)}const a=P().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>a){const p=[];for(let m=0;m<r.length;m+=a){const g=r.slice(m,m+a);p.push(mi(g,e,t))}const f=mi(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(i){const p=new dO(r.map(f=>f.shape),e);return t.runWebGLProgram(p,r,s)}const{tensors2D:l,outShape:c}=fO(r,e,t),u=new hO(l.map(p=>p.shape)),h=t.runWebGLProgram(u,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=ee({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function fO(n,e,t){const s=q1(n.map(r=>r.shape),e);return{tensors2D:n.map(r=>ee({inputs:{x:r},attrs:{shape:[-1,U(r.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,r=ke(o,e[0].shape)[0],i=e.map(c=>c.shape);oh(i,r);const a=q1(e.map(c=>c.shape),r);if(U(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(c=>U(c.shape)>0);return l.length===1?t1({inputs:{x:l[0]},backend:t}):mi(l,r,t)}const mO={kernelName:Li,backendName:"webgl",kernelFunc:W4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U4{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1;let y="",k="";s&&(o?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,k="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${k}
        setOutput(result);
      }
    `}}class gO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G4{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ft(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const b=i%2===0?jl(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(o?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);const{dataFormat:s}=t,o=Pt(),r=s==="channelsLast",i=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function H4({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:a=null}){const l=n.shape,c=s.texData.get(n.dataId),u=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(r!=null){const y=Gl(r.shape,p);y!=null&&(r=ee({inputs:{x:r},backend:s,attrs:{shape:y}}),x.push(r))}if(o!=null){const y=Gl(o.shape,p);y!=null&&(o=ee({inputs:{x:o},backend:s,attrs:{shape:y}}),x.push(o))}if(!((h===1||d===1)&&u>L4)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&Re(c.shape.slice(-3),l.slice(-3))){const y=l[0]*l[1]*(l[2]+1),k={dataId:n.dataId,shape:[1,y,t.inChannels],dtype:n.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,I(Fl(c.shape,k.shape),()=>`packed reshape ${c.shape} to ${k.shape} isn't free`);const $=ee({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push($);const v=Bl({a:k,b:$,backend:s,transposeA:f,transposeB:m,bias:o,activation:a,preluActivationWeights:r,leakyreluAlpha:i}),S=s.texData.get(v.dataId);I(S.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,S.shape=t.outShape,g=t1({inputs:{x:v},backend:s}),g.shape=t.outShape,x.push(v)}else{const y=t.outHeight*t.outWidth,k=ee({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,y,t.inChannels]:[t.batchSize,t.inChannels,y]}}),C=ee({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),$=Bl({a:p?k:C,b:p?C:k,transposeA:!p,transposeB:m,backend:s,bias:o,activation:a,preluActivationWeights:r,leakyreluAlpha:i});g=ee({inputs:{x:$},backend:s,attrs:{shape:t.outShape}}),x.push(k),x.push(C),x.push($)}for(const y of x)s.disposeIntermediateTensorInfo(y);return g}function q4({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=l*c*u,g=d*h,x=[t.batchSize,m,g],b=!0,w=!1,y=[];if(r!=null){const G=Gl(r.shape,f);G!=null&&(r=ee({inputs:{x:r},backend:s,attrs:{shape:G}}),y.push(r))}if(o!=null){const G=Gl(o.shape,f);G!=null&&(o=ee({inputs:{x:o},backend:s,attrs:{shape:G}}),y.push(o))}const k=ee({inputs:{x:e},backend:s,attrs:{shape:[1,m,U(e.shape)/m]}});y.push(k);const C=new xO(x,t),$=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],v=s.runWebGLProgram(C,[n],"float32",$),S=ee({inputs:{x:v},backend:s,attrs:{shape:x}});y.push(v),y.push(S);const T=o!=null,A=r!=null,z=a==="leakyrelu",_=a?di(a,!0):null,B=new T4(f?S.shape:k.shape,f?k.shape:S.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],b,w,T,_,A,z),M=f?[S,k]:[k,S];if(o&&M.push(o),A&&M.push(r),z){const G=s.makeTensorInfo([],"float32",wn(i,"float32"));M.push(G),y.push(G)}const V=s.runWebGLProgram(B,M,"float32"),H=ee({inputs:{x:V},backend:s,attrs:{shape:t.outShape}});y.push(V);for(const G of y)s.disposeIntermediateTensorInfo(G);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=an(l),d=It(o.shape,r.shape,i,c,a,u,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=H4({x:o,filter:r,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){const m=new G4(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[o,r],"float32",g)}else if(P().getBool("WEBGL_CONV_IM2COL"))p=q4({x:o,filter:r,convInfo:d,backend:t});else{const m=new U4(d);p=t.runWebGLProgram(m,[o,r],"float32")}const f=ee({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const yO={kernelName:Fi,backendName:"webgl",kernelFunc:bO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class kO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class CO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class IO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,c=s-1-e.padInfo.top,u=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=an(l),d=It(o.shape,u,i,1,a,c,!1,h),p=new wO(d);return t.runWebGLProgram(p,[o,r],"float32")}const vO={kernelName:dc,backendName:"webgl",kernelFunc:$O};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SO{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Ft(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,o=t-1-e.padInfo.top,r=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=an(c),d=It(i,r.shape,a,1,l,u,!1,h);if(P().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new SO(d);return t.runWebGLProgram(f,[o,r],"float32",p)}else{const p=new kO(d);return t.runWebGLProgram(p,[o,r],"float32")}}const TO={kernelName:Oi,backendName:"webgl",kernelFunc:NO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l}=s,c=vn(o.shape,r.shape,i,l,a),u=new gO(c);return t.runWebGLProgram(u,[o,r],"float32")}const EO={kernelName:_i,backendName:"webgl",kernelFunc:RO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,filterShape:l}=s,c=vn(o.shape,l,i,1,a),u=new CO(c);return t.runWebGLProgram(u,[o,r],"float32")}const AO={kernelName:pc,backendName:"webgl",kernelFunc:DO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{pad:i,strides:a,inputShape:l}=s,c=vn(l,r.shape,a,1,i),u=new IO(c);return t.runWebGLProgram(u,[o,r],"float32")}const FO={kernelName:fc,backendName:"webgl",kernelFunc:LO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OO=$o+`
  return cos(x);
`,_O=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ls}
  return result;
`,MO=Ne({opSnippet:OO,packedOpSnippet:_O}),PO={kernelName:Po,backendName:"webgl",kernelFunc:MO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO=Ne({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),BO={kernelName:zo,backendName:"webgl",kernelFunc:zO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VO{constructor(e,t,s,o,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,c]=e,[u]=t,[h,d]=s;this.outputShape=[u,h,d,c];const p=o==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,x,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,y,k]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO={kernelName:gc,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:r,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,u=new VO(o.shape,r.shape,a,l,c);return t.runWebGLProgram(u,[o,r,i],"float32")}};var gi;(function(n){n.Prod="*",n.Sum="+"})(gi||(gi={}));class K4{constructor(e,t,s,o){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===gi.Prod?"1.0":"0.0",a=s?i:`getX(${j4(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=o?`end != ${l-1}`:"end != 0",u=o?"end + 1":"end - 1"):(c=o?`end + pow2 < ${l}`:"end >= pow2",u=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${_e(r)} coords = getOutputCoords();
        int end = ${X4(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${X4(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${j4(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function j4(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function X4(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n,e,t,s,o,r){const i=e.shape.length,a=Ze([s],i);let l=e;a!=null&&(l=Bt({inputs:{x:e},backend:t,attrs:{perm:a}}));const c=ot(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=t1({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const p=new K4(n,l.shape,!1,r),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(o){const d=new K4(n,l.shape,o,r),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=Sn(a),p=Bt({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;return Y4(gi.Prod,o,t,r,i,a)}const GO={kernelName:mc,backendName:"webgl",kernelFunc:UO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;return Y4(gi.Sum,o,t,r,i,a)}const qO={kernelName:Mi,backendName:"webgl",kernelFunc:HO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i,binaryOutput:a}=s;if(o.shape.length===1){const l=t.readSync(o.dataId),c=t.readSync(r.dataId),u=m4(l,c,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,u)}else if(o.shape.length===2){const l=t.bufferSync(o),c=t.bufferSync(r),u=nA(l,c,i,a);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const jO={kernelName:xc,backendName:"webgl",kernelFunc:KO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XO{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:r,dataFormat:i}=s,a=o.shape[0],l=i==="NHWC"?o.shape[1]:o.shape[2],c=i==="NHWC"?o.shape[2]:o.shape[3],u=i==="NHWC"?o.shape[3]:o.shape[1],h=l*r,d=c*r,p=u/(r*r),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new XO(f,r,i);return t.runWebGLProgram(m,[o],o.dtype)}const ZO={kernelName:bc,backendName:"webgl",kernelFunc:YO};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z4{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ft(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let c="",u="";s&&(o?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J4{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ft(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const b=x*2;if(p+=`
          xC = xCCorner + ${b*c};
          `,l===1){if(b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,c===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const w=a%2===0?jl(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),I(Dt(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=It(o.shape,r.shape,i,u,a,c,!0);let d;P().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new J4(h):d=new Z4(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[o,r],"float32",p)}const QO={kernelName:Pi,backendName:"webgl",kernelFunc:JO};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class t_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,h=It(o.shape,u,i,a,l,c,!0),d=new e_(h);return t.runWebGLProgram(d,[o,r],"float32")}const s_={kernelName:yc,backendName:"webgl",kernelFunc:n_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,h=It(u,r.shape,i,a,l,c,!0),d=new t_(h);return t.runWebGLProgram(d,[o,r],"float32")}const r_={kernelName:wc,backendName:"webgl",kernelFunc:o_};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i_{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n){const{inputs:e,backend:t}=n,{x:s}=e,o=[...s.shape,...s.shape],r=U(s.shape),i=ee({inputs:{x:s},backend:t,attrs:{shape:[r]}}),a=new i_(r),l=t.runWebGLProgram(a,[i],i.dtype),c=ee({inputs:{x:l},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),c}const l_={kernelName:ep,backendName:"webgl",kernelFunc:a_};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c_{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:o,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=e,{top:h,left:d}=o;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:l}=s,c=Tr(o.shape,r.shape,i,a,"NHWC",l);let u;const h=new c_(c);u=t.runWebGLProgram(h,[o,r],"float32");const d=ee({inputs:{x:u},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(u),d}const h_={kernelName:zi,backendName:"webgl",kernelFunc:u_};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,r=e,{allDims:i,summedDims:a,idDims:l}=xh(o,r.length);yh(i.length,l,r);const{path:c,steps:u}=wh(a,l),h=u.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:b}=bh(p,l[g]);let w;kh(x)?w=r[g]:(w=Bt({inputs:{x:r[g]},backend:t,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let k=0;k<b.length;++k)y.splice(b[k],0,1);Re(w.shape,y)||(w=ee({inputs:{x:w},backend:t,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=Dd({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=zl({inputs:{x:d},backend:t,attrs:{axis:c[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const p_={kernelName:Ic,backendName:"webgl",kernelFunc:d_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f_=Ne({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),m_={kernelName:Vo,backendName:"webgl",kernelFunc:f_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_="return (b >= 0.0) ? a : a * (b + 1.0);",x_=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,b_={kernelName:$c,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t}=n,{dy:s,y:o}=e,r=P().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Io(x_,s.shape,o.shape):new As(g_,s.shape,o.shape);return t.runWebGLProgram(r,[s,o],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_=St({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:aA}),w_={kernelName:Bi,backendName:"webgl",kernelFunc:y_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k_=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ch};
  float a1 = ${uh};
  float a2 = ${hh};
  float a3 = ${dh};
  float a4 = ${ph};
  float a5 = ${fh};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,C_=Ne({opSnippet:k_}),I_={kernelName:Wo,backendName:"webgl",kernelFunc:C_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $_=$o+`
  return exp(x);
`,Q4=Ne({opSnippet:$_,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:lA,dtype:"float32"}),v_={kernelName:Uo,backendName:"webgl",kernelFunc:Q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Od(n){const{inputs:e,attrs:t,backend:s}=n,{dim:o}=t,{input:r}=e,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(I(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),ee({inputs:{x:r},backend:s,attrs:{shape:a}})}const S_={kernelName:Vi,backendName:"webgl",kernelFunc:Od};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5="return exp(x) - 1.0;",N_=Ne({opSnippet:e5,packedOpSnippet:e5,cpuKernelImpl:cA}),T_={kernelName:Go,backendName:"webgl",kernelFunc:N_};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t5{constructor(e,t,s){this.variableNames=["real","imag"];const o=t[1];this.outputShape=t;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${o}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n,e,t){const s=t.texData.get(n.dataId),o=U(n.shape),r=n.shape[n.shape.length-1],i=o/r,a=ee({inputs:{x:n},backend:t,attrs:{shape:[i,r]}}),l=a.shape,c=new t5("real",l,e),u=new t5("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=Wn({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=ee({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(n){const{inputs:e,backend:t}=n,{input:s}=e;return n5(s,!1,t)}const E_={kernelName:vc,backendName:"webgl",kernelFunc:R_};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D_{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(n){const{backend:e,attrs:t}=n,{shape:s,value:o}=t;let{dtype:r}=t;if(r=r||Us(o),r==="string"){const i=nt(r,U(s));return i.fill(o),e.makeTensorInfo(s,r,i)}else{const i=new D_(s,o),a=[[o]];return e.runWebGLProgram(i,[],r,a)}}const A_={kernelName:Sc,backendName:"webgl",kernelFunc:xi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L_{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F_={kernelName:Nc,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,o=new L_(t.shape);return s.runWebGLProgram(o,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5="return floor(x);",O_=Ne({opSnippet:s5,packedOpSnippet:s5,cpuKernelImpl:uA}),__={kernelName:Ho,backendName:"webgl",kernelFunc:O_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_=St({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),P_={kernelName:qo,backendName:"webgl",kernelFunc:M_};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z_{constructor(e){this.variableNames=["A"];const t=Pt(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Pt(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_={kernelName:n6,backendName:"webgl",kernelFunc:W_};let So,_d=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function W_(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:o}=e;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[l,c]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],u=[c,l],h=[c,l,r];if(a||i){const m=P().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(So==null||m!==_d)&&(_d=m,So=document.createElement("canvas").getContext("2d",{willReadFrequently:_d})),So.canvas.width=l,So.canvas.height=c,So.drawImage(o,0,0,l,c),o=So.canvas}const d=t.makeTensorInfo(u,"int32");t.texData.get(d.dataId).usage=a1.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),o);const p=P().getBool("WEBGL_PACK")?new B_(h):new z_(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=an(u),g=It(o.shape,r.shape,l,h,c,d,!1,m);let x;const b=[],w=i!=null,y=a!=null,k=p==="leakyrelu",C=()=>{const v=[o,r],S=(T,A)=>{if(A==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const z=ee({inputs:{x:T},backend:t,attrs:{shape:[T.shape[0],1,1]}});return b.push(z),z}return T};if(w&&v.push(S(i,u)),y&&v.push(S(a,u)),k){const T=t.makeTensorInfo([],"float32",wn(f,"float32"));v.push(T),b.push(T)}return v};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=H4({x:o,filter:r,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&P().getBool("WEBGL_EXP_CONV")){const v=p?di(p,!0):null,S=new G4(g,w,v,y,k),T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=C();x=t.runWebGLProgram(S,A,"float32",T)}else if(P().getBool("WEBGL_CONV_IM2COL"))x=q4({x:o,filter:r,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const v=p?di(p,!1):null,S=new U4(g,w,v,y,k),T=C();x=t.runWebGLProgram(S,T,"float32")}const $=ee({inputs:{x},backend:t,attrs:{shape:g.outShape}});return b.push(x),b.forEach(v=>t.disposeIntermediateTensorInfo(v)),$}const G_={kernelName:Sa,backendName:"webgl",kernelFunc:U_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),I(Dt(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=It(o.shape,r.shape,l,m,c,h,!0),x=P().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?di(d,x):null,w=[o,r],y=i!=null,k=a!=null,C=d==="leakyrelu";if(y&&w.push(i),k&&w.push(a),C){const T=t.makeTensorInfo([],"float32",wn(p,"float32"));w.push(T),f.push(T)}let $;x?$=new J4(g,y,b,k,C):$=new Z4(g,y,b,k,C);const v=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=t.runWebGLProgram($,w,"float32",v);return f.forEach(T=>t.disposeIntermediateTensorInfo(T)),S}const q_={kernelName:yp,backendName:"webgl",kernelFunc:H_};class K_{constructor(e,t,s,o){this.sliceDim=e,this.strides=t,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=s;const r=_e(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,r=o.shape,i=r[r.length-1],a=U(s.shape),[l,c,u,h]=Zu(s,o),d=ee({inputs:{x:o},backend:t,attrs:{shape:[c,i]}}),p=ee({inputs:{x:s},backend:t,attrs:{shape:[U(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const x=t.readSync(o.dataId),b=t.bufferSync(s),w=hA(x,b,s.dtype,c,i,u,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,w.values)}const f=new K_(i,h,[c,u],s.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=ee({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const X_={kernelName:tp,backendName:"webgl",kernelFunc:j_};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y_{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=_e(this.rank),o=Z_(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function Z_(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let o=0;o<n.length;o++)o===2?s.push("index"):s.push(`${t[o]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:r}=e,{axis:i,batchDims:a}=s,l=ke(i,o.shape)[0];if(P().get("DEBUG")){const b=t.readSync(r.dataId),w=o.shape[l];for(let y=0;y<b.length;++y){const k=b[y];I(k<=w-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${w-1}]`)}}const c=$h(o,r,l,a),u=U(r.shape),h=[],d=ee({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=ee({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([o,r])||o.dtype==="string"){const b=t.bufferSync(p),w=t.bufferSync(d),y=dA(w,b,f);return h.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(c.outputShape,y.dtype,y.values)}const m=new Y_(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=ee({inputs:{x:g},backend:t,attrs:{shape:c.outputShape}});return h.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}const J_={kernelName:Ui,backendName:"webgl",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_=St({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:pA,dtype:"bool"}),eM={kernelName:Gi,backendName:"webgl",kernelFunc:Q_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tM=St({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:fA}),nM={kernelName:Ko,backendName:"webgl",kernelFunc:tM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n){const{inputs:e,backend:t}=n,{input:s}=e;return n5(s,!0,t)}const oM={kernelName:Tc,backendName:"webgl",kernelFunc:sM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM=Ne({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),iM={kernelName:Xo,backendName:"webgl",kernelFunc:rM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM=Ne({opSnippet:"return float(isinf(x));",dtype:"bool"}),lM={kernelName:Yo,backendName:"webgl",kernelFunc:aM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cM=Ne({opSnippet:"return float(isnan(x));",dtype:"bool"}),uM={kernelName:Zo,backendName:"webgl",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM=St({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:mA,dtype:"bool"}),dM={kernelName:qi,backendName:"webgl",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM=St({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:gA,dtype:"bool"}),fM={kernelName:Ki,backendName:"webgl",kernelFunc:pM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:r}=t,i=xA(s,o,r);return e.makeTensorInfo([i.length],"float32",i)}const gM={kernelName:np,backendName:"webgl",kernelFunc:mM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xM=$o+`
  return x < 0.0 ? 0./0. : log(x);
`,bM=Ne({opSnippet:xM,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:bA}),yM={kernelName:Jo,backendName:"webgl",kernelFunc:bM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=$o+`
  return log(1.0 + x);
`,kM=Ne({opSnippet:wM}),CM={kernelName:Qo,backendName:"webgl",kernelFunc:kM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM=St({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),$M={kernelName:ji,backendName:"webgl",kernelFunc:IM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vM=Ne({opSnippet:"return float(!(x >= 1.0));"}),SM={kernelName:Xi,backendName:"webgl",kernelFunc:vM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM=St({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),TM={kernelName:Yi,backendName:"webgl",kernelFunc:NM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RM{constructor(e,t,s,o,r){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${o}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EM{constructor(e,t,s,o,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${o}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DM={kernelName:Zi,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:r,bias:i,alpha:a,beta:l}=s,c=P().getBool("WEBGL_PACK_NORMALIZATION")?new EM(o.shape,r,i,a,l):new RM(o.shape,r,i,a,l);return t.runWebGLProgram(c,[o],o.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AM{constructor(e,t,s,o,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=o,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LM={kernelName:Ec,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o,y:r,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s,h=new AM(o.shape,a,l,c,u);return t.runWebGLProgram(h,[o,r,i],o.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n,e,t,s){const o=U(e),i=U(n.shape)/o,a=ee({inputs:{x:n},attrs:{shape:[i,o]},backend:s}),l=Fs(a,n.dtype,"max",s),c=ee({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:r,keepDims:i}=s,a=o.shape.length,l=ke(r,o.shape);let c=l;const u=Ze(c,a),h=u!=null,d=t.shouldExecuteOnCPU([o]);let p=o;if(h){if(d){const w=t.texData.get(p.dataId).values,y=new Array(a);for(let $=0;$<y.length;$++)y[$]=o.shape[u[$]];const k=Rd(w,o.shape,o.dtype,u,y);p=t.makeTensorInfo(y,o.dtype);const C=t.texData.get(p.dataId);C.values=k}else p=Pl(o,u,t);c=ot(c.length,a)}$t("max",c,a);const[f,m]=yt(p.shape,c);let g=f;i&&(g=lt(f,l));let x;if(d){const w=t.texData.get(p.dataId).values,y=yA(w,U(m),g,o.dtype);x=t.makeTensorInfo(g,o.dtype);const k=t.texData.get(x.dataId);k.values=y}else x=FM(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),x}const OM={kernelName:Ji,backendName:"webgl",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _M=Ed+`
  return max(a, b);
`,MM=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ls+`
  return result;
`,PM=St({opSnippet:_M,packedOpSnippet:MM,cpuKernelImpl:wA}),zM={kernelName:er,backendName:"webgl",kernelFunc:PM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;ui(o,"maxPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:l}=s,c=1;I(Dt(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=p1(o.shape,r,i,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))return t1({inputs:{x:o},backend:t});const h=new pi(u,"max",!1);return t.runWebGLProgram(h,[o],o.dtype)}const VM={kernelName:Qi,backendName:"webgl",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=rn(o.shape,r,i,u,a,c,l),d=new Ad(h,"max",!1);return t.runWebGLProgram(d,[o],o.dtype)}const UM={kernelName:ea,backendName:"webgl",kernelFunc:WM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,o=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=r-1-e.padInfo.top,l=i-1-e.padInfo.left,c=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class HM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=c-1-e.padInfo.top,p=u-1-e.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=rn(i.shape,a,l,h,c,u),p=new Ad(d,"max",!0),f=t.runWebGLProgram(p,[i],i.dtype),m=new HM(d),g=t.runWebGLProgram(m,[o,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}const KM={kernelName:Ac,backendName:"webgl",kernelFunc:qM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r,output:i}=e,a=r;ui([r,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=p1(a.shape,l,c,1,u,h),p=!0,f=new pi(d,"max",p),m=t.runWebGLProgram(f,[a],a.dtype),g=new GM(d),x=t.runWebGLProgram(g,[o,m],a.dtype);return t.disposeIntermediateTensorInfo(m),x}const XM={kernelName:Dc,backendName:"webgl",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n,e,t,s){let o=new pi(t,"max",!1);const r=s.runWebGLProgram(o,[n],"float32");o=new pi(t,"max",!0,!0,e);const i=s.runWebGLProgram(o,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM={kernelName:sp,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:r,pad:i,includeBatchInIndex:a}=e,l=t;I(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];I(Dt(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=p1(s.shape,o,r,c,i),[h,d]=YM(s,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n,e,t,s){const o=U(e),i=U(n.shape)/o,a=ee({inputs:{x:n},attrs:{shape:[i,o]},backend:s}),l=Fs(a,"float32","mean",s),c=ee({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QM={kernelName:ta,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:o,axis:r}=e,i=t,a=s.shape.length,l=ke(r,s.shape);let c=l;const u=Ze(c,a),h=u!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const y=i.texData.get(f.dataId).values,k=new Array(a);for(let v=0;v<k.length;v++)k[v]=s.shape[u[v]];const C=Rd(y,s.shape,s.dtype,u,k);f=i.makeTensorInfo(k,s.dtype);const $=i.texData.get(f.dataId);$.values=C}else f=Pl(s,u,i);p.push(f),c=ot(c.length,a)}$t("sum",c,a);const[m,g]=yt(f.shape,c);let x=m;o&&(x=lt(m,l));const b=JM(f,g,x,i);for(const w of p)i.disposeIntermediateTensorInfo(w);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=ke(r,o.shape);let c=l;const u=Ze(c,a);let h=o;u!=null&&(h=Bt({inputs:{x:o},backend:t,attrs:{perm:u}}),c=ot(c.length,o.shape.length)),$t("min",c,a);const[d,p]=yt(h.shape,c),f=U(p),m=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Fs(m,m.dtype,"min",t);let x;if(i){const b=lt(d,l);x=ee({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=ee({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),x}const tP={kernelName:na,backendName:"webgl",kernelFunc:eP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nP=Ed+`
  return min(a, b);
`,sP=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ls+`
  return result;
`,oP=St({opSnippet:nP,packedOpSnippet:sP,cpuKernelImpl:kA}),rP={kernelName:tr,backendName:"webgl",kernelFunc:oP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iP{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const o=e.length,r=_e(o),i=t.map(u=>u[0]).join(","),a=t.map((u,h)=>u[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),c=s==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aP{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const o=e.length,r=_e(o),i=t.map(f=>f[0]).join(","),a=t.map((f,m)=>f[0]+e[m]).join(","),l=zt("rc",o),c=zt("source",o),u=`${l[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(o===1){const f=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[o-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[o-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[o-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lP={kernelName:sa,backendName:"webgl",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:o,mode:r}=t,i=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aP(s.shape,o,r):new iP(s.shape,o,r);return e.runWebGLProgram(i,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cP=`if (b == 0.0) return NAN;
  return mod(a, b);`,uP=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ls+`
  return result;
`,hP=St({opSnippet:cP,packedOpSnippet:uP}),dP={kernelName:nr,backendName:"webgl",kernelFunc:hP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pP{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5=St({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),fP={kernelName:Bo,backendName:"webgl",kernelFunc:i5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5="return a - b;",l5=St({opSnippet:a5,packedOpSnippet:a5,supportsComplex:!0,cpuKernelImpl:WA}),mP={kernelName:br,backendName:"webgl",kernelFunc:l5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:r}=s,i=ke([r],o.shape),a=r5({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=lt(a.shape,i),c=ee({inputs:{x:a},backend:t,attrs:{shape:l}}),u=l5({inputs:{a:o,b:c},backend:t}),h=Q4({inputs:{x:u},backend:t}),d=zl({inputs:{x:h},backend:t,attrs:{axis:i,keepDims:!1}}),p=ee({inputs:{x:d},backend:t,attrs:{shape:l}}),f=i5({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const gP={kernelName:ka,backendName:"webgl",kernelFunc:c5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:r,seed:i,normalized:a}=s,l=a?o:c5({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new pP(c,u,r),d=[[i]],p=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),p}const bP={kernelName:op,backendName:"webgl",kernelFunc:xP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yP=C1+`
  return -x;
`,wP=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function kP(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const r=t.texData.get(s.dataId),[i,a]=IA(r.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let o;return P().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Vn(s.shape,wP):o=new nn(s.shape,yP),t.runWebGLProgram(o,[s],s.dtype)}const CP={kernelName:oa,backendName:"webgl",kernelFunc:kP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP=Hu;function $P(n){n1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,c=t.readSync(o.dataId),u=t.readSync(r.dataId),{selectedIndices:h}=IP(c,u,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const vP={kernelName:Lc,backendName:"webgl",kernelFunc:$P};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SP=qu;function NP(n){n1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,u=t.readSync(o.dataId),h=t.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=SP(u,h,i,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const TP={kernelName:Fc,backendName:"webgl",kernelFunc:NP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RP=Ku;function EP(n){n1("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=t.readSync(o.dataId),h=t.readSync(r.dataId),d=i,p=a,f=l,m=c,{selectedIndices:g,selectedScores:x}=RP(u,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const DP={kernelName:Oc,backendName:"webgl",kernelFunc:EP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AP{constructor(e,t,s,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LP={kernelName:aa,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:r,depth:i,onValue:a,offValue:l}=s,c=U(o.shape),u=new AP(c,i,a,l),h=ee({inputs:{x:o},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(u,[h],r);t.disposeIntermediateTensorInfo(h);const p=[...o.shape,i],f=ee({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const o=fi({inputs:{input:s},backend:t}),r=Hl({inputs:{x:o},backend:t}),i=Ul({inputs:{input:s},backend:t}),a=Hl({inputs:{x:i},backend:t}),l=Wn({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return xi({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const FP={kernelName:$a,backendName:"webgl",kernelFunc:Hl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const o=fi({inputs:{input:s},backend:t}),r=u5({inputs:{x:o},backend:t}),i=Ul({inputs:{input:s},backend:t}),a=Hl({inputs:{x:i},backend:t}),l=Wn({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return xi({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const OP={kernelName:ia,backendName:"webgl",kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return Od({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,i=e[0].dtype;e.forEach(u=>{Xl(r,u.shape,"All tensors passed to stack must have matching shapes"),I(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=Od({inputs:{input:u},backend:t,attrs:{dim:o}});return a.push(h),h}),c=W4({inputs:l,backend:t,attrs:{axis:o}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const MP={kernelName:la,backendName:"webgl",kernelFunc:_P};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PP{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);const o=e.length,r=_e(o),i=t.map(c=>c[0]).join(","),a=t.map((c,u)=>c[0]+e[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zP{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const o=e.length,r=_e(o),i=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),l=zt("rc",o),c=zt("source",o),u=`${l[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${u}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${u}) {`],p=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=o===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,constantValue:i}=s;if(U(o.shape)===0){const c=r.map((u,h)=>u[0]+o.shape[h]+u[1]);return xi({backend:t,attrs:{shape:c,value:i,dtype:o.dtype}})}const a=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zP(o.shape,r,i):new PP(o.shape,r,i),l=[[i]];return t.runWebGLProgram(a,[o],o.dtype,l)},BP={kernelName:ca,backendName:"webgl",kernelFunc:h5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VP=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,WP=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ls+`
  return result;
`,UP=St({opSnippet:VP,packedOpSnippet:WP}),GP={kernelName:or,backendName:"webgl",kernelFunc:UP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,l=[],c=ke(r,o.shape);let u=c;const h=Ze(u,a);let d=o;h!=null&&(d=Bt({inputs:{x:o},backend:t,attrs:{perm:h}}),u=ot(u.length,a),l.push(d)),$t("prod",u,a);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=vA(d.shape,d.dtype,f,u);p=t.makeTensorInfo(g,x,m)}else{const[f,m]=yt(d.shape,u),g=U(m),x=ee({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),b=nu(o.dtype),w=Fs(x,b,"prod",t);p=ee({inputs:{x:w},backend:t,attrs:{shape:f}}),l.push(x),l.push(w)}if(i){l.push(p);const f=lt(p.shape,c);p=ee({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const qP={kernelName:ha,backendName:"webgl",kernelFunc:HP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:r,indices:i}=e,{outputRaggedRank:a}=s,l=o.map(x=>t.readSync(x.dataId)),c=o.map(x=>x.shape),u=t.readSync(r.dataId),h=t.readSync(i.dataId),[d,p,f]=SA(l,c,u,r.shape,r.dtype,h,i.shape,a),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,r.dtype,p);return m.concat([g])}const jP={kernelName:rp,backendName:"webgl",kernelFunc:KP};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:r}=e,i=t.readSync(s.dataId),a=t.readSync(o.dataId),l=t.readSync(r.dataId),[c,u]=NA(i,s.shape,s.dtype,a,o.shape,l,r.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const YP={kernelName:ip,backendName:"webgl",kernelFunc:XP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:r,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.readSync(o.dataId),u=t.readSync(r.dataId),h=t.readSync(i.dataId),d=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=TA(c,o.shape,u,r.shape,r.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,r.dtype,m)}const JP={kernelName:ap,backendName:"webgl",kernelFunc:ZP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5=n=>{const{backend:e,attrs:t}=n,{start:s,stop:o,step:r,dtype:i}=t,a=RA(s,o,r,i);return e.makeTensorInfo([a.length],i,a)},QP={kernelName:_c,backendName:"webgl",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ez=Ne({opSnippet:"return 1.0 / x;"}),tz={kernelName:rr,backendName:"webgl",kernelFunc:ez};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nz=C1+`
  return (x < 0.0) ? 0.0 : x;
`,sz=Ne({opSnippet:nz,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),oz={kernelName:ir,backendName:"webgl",kernelFunc:sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rz=C1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,iz=Ne({opSnippet:rz,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),az={kernelName:ar,backendName:"webgl",kernelFunc:iz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lz{constructor(e,t,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cz{constructor(e,t,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s,[l,c]=a,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cz(o.shape,l,c,r,i):new lz(o.shape,l,c,r,i);return t.runWebGLProgram(u,[o],"float32")}const hz={kernelName:fa,backendName:"webgl",kernelFunc:uz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dz{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,i,a]=e,l=[s&&i>1?o-1:o,s&&a>1?r-1:r],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s,a=new dz(r.shape,o.shape,i);return t.runWebGLProgram(a,[r],r.dtype)}const fz={kernelName:zc,backendName:"webgl",kernelFunc:pz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mz{constructor(e,t,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s],d=o?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gz{constructor(e,t,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const u=[o&&t>1?a-1:a,o&&s>1?l-1:l],h=[o&&t>1?t-1:t,o&&s>1?s-1:s],d=o?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s,[l,c]=a,u=P().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gz(o.shape,l,c,r,i):new mz(o.shape,l,c,r,i);return t.runWebGLProgram(u,[o],o.dtype)}const bz={kernelName:pa,backendName:"webgl",kernelFunc:xz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yz{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,i,a]=e,l=[s&&i>1?o-1:o,s&&a>1?r-1:r],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s,a=new yz(r.shape,o.shape,i);return t.runWebGLProgram(a,[r],r.dtype)}const kz={kernelName:Pc,backendName:"webgl",kernelFunc:wz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cz{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const o=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,r=e.map((a,l)=>o(l)).join(","),i=_e(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const o=zt("rc",s),r=`${o[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${o[s-2]} + 1 < ${this.outputShape[s-2]}`,a=_e(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${r}){
            result.g = ${c(o.slice())};
          }
          if(${i}) {
            result.b = ${u(o.slice())};
            if(${r}) {
              result.a = ${h(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((b,w)=>p(w,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:r}=s,i=o.shape.length,a=ke(r,o.shape);if(i===0)return t1({inputs:{x:o},backend:t});const l=P().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iz(o.shape,a):new Cz(o.shape,a);return t.runWebGLProgram(l,[o],o.dtype)}const vz={kernelName:ma,backendName:"webgl",kernelFunc:$z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sz{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],o=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz={kernelName:qc,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:r,center:i}=e,a=t,l=new Sz(s.shape,r),[c,u]=ih(i,s.shape[1],s.shape[2]),h=[[c,u,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz=Ne({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),Rz={kernelName:lr,backendName:"webgl",kernelFunc:Tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ez=Ne({opSnippet:"return inversesqrt(x);",cpuKernelImpl:EA}),Dz={kernelName:cr,backendName:"webgl",kernelFunc:Ez};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Md{constructor(e,t,s,o,r,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const c=_e(r.length),u=_e(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Az{constructor(e,t,s,o,r,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const c=_e(r.length),u=_e(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${b};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:r}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=xs(r,o,i),d=[h/c,c];if(h===0)return t.makeTensorInfo(i,o.dtype);const p=ee({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=ee({inputs:{x:r},backend:t,attrs:{shape:[l,c]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;P().getBool("WEBGL_PACK")?g=new Az(l,a,p.shape.length,f.shape.length,u,d):g=new Md(l,a,p.shape.length,f.shape.length,u,d);const x=t.runWebGLProgram(g,[f,p,m],f.dtype),b=ee({inputs:{x},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),b}const Fz={kernelName:lp,backendName:"webgl",kernelFunc:Lz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oz{constructor(e,t,s,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=P().getNumber("WEBGL_VERSION")===2?r:i,l=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:r}=e,{side:i}=s,a=new Oz(o.shape[0],o.shape[1],r.shape[1],i),l=[[o.shape[1]]];return t.runWebGLProgram(a,[o,r],"int32",l)}const Mz={kernelName:up,backendName:"webgl",kernelFunc:_z};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pz{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let o,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",o="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<t.length;u++)c.push(`${a[u]}`),u<e&&l.push(`${a[u]}`);o=l.join(),r=c.join()}const i=_e(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:r}=e,i=new Pz(s.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(i,[s,o,r],Zt(o.dtype,r.dtype))}const Bz={kernelName:ga,backendName:"webgl",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Xa};
  float scale = ${Ya};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Wz=Ne({opSnippet:Vz}),Uz={kernelName:ur,backendName:"webgl",kernelFunc:Wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gz=$o+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Hz=Ne({opSnippet:Gz,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:AA}),qz={kernelName:fr,backendName:"webgl",kernelFunc:Hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kz=Ne({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),jz={kernelName:pr,backendName:"webgl",kernelFunc:Kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xz=$o+`
  return sin(x);
`,Yz=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ls}
  return result;
`,Zz=Ne({opSnippet:Xz,packedOpSnippet:Yz}),Jz={kernelName:hr,backendName:"webgl",kernelFunc:Zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qz=Ne({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),eB={kernelName:dr,backendName:"webgl",kernelFunc:Qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tB=Ne({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),nB={kernelName:mr,backendName:"webgl",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sB={kernelName:ya,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,paddings:i}=s;I(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,b)=>x*b),l=[[0,0]];l.push(...i);for(let x=1+r.length;x<o.shape.length;++x)l.push([0,0]);const c=[],u=h5({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),h=Br(u.shape,r,a,!1),d=Vr(h.length,r.length,!1),p=Wr(u.shape,r,a,!1),f=ee({inputs:{x:u},backend:t,attrs:{shape:h}}),m=Bt({inputs:{x:f},backend:t,attrs:{perm:d}}),g=ee({inputs:{x:m},backend:t,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),l=t.readSync(o.dataId),c=t.readSync(r.dataId),u=t.readSync(i.dataId)[0],[h,d,p,f,m]=FA(a,s.shape,s.dtype,l,o.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const rB={kernelName:hp,backendName:"webgl",kernelFunc:oB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(t.readSync(o.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(r.dataId)),[c,u,h]=OA(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const aB={kernelName:dp,backendName:"webgl",kernelFunc:iB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=t.readSync(s.dataId),a=t.readSync(o.dataId),l=t.readSync(r.dataId),[c,u]=x4(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const cB={kernelName:pp,backendName:"webgl",kernelFunc:lB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=t.readSync(s.dataId),a=t.readSync(o.dataId),l=t.readSync(r.dataId),[c,u]=x4(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const hB={kernelName:fp,backendName:"webgl",kernelFunc:uB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=xs(r,o,a),p=!1;if(r.dtype==="string"){const x=t.bufferSync(o),b=t.bufferSync(r),w=Cn(t.readSync(i.dataId)[0]),y=DA(x,b,a,d,u,c,l,h,w,p);return t.makeTensorInfo(a,y.dtype,y.values)}const f=new Md(c,l,o.shape.length,r.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[r,o,i],r.dtype),g=ee({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),g}const pB={kernelName:mp,backendName:"webgl",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:r,axis:i}=s,a=ke(i,o.shape)[0],l=Ch(o,r,a),c=o.shape.length,u=new Array(c).fill(0),h=o.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=vo({inputs:{x:o},backend:t,attrs:{begin:u,size:p}});return u[a]+=d,f})}const mB={kernelName:wa,backendName:"webgl",kernelFunc:fB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5="return sqrt(x);",gB=Ne({opSnippet:p5,packedOpSnippet:p5,cpuKernelImpl:_A}),xB={kernelName:gr,backendName:"webgl",kernelFunc:gB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bB=Ne({opSnippet:"return x * x;"}),yB={kernelName:Bc,backendName:"webgl",kernelFunc:bB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5="return (a - b) * (a - b);",wB=St({opSnippet:f5,packedOpSnippet:f5}),kB={kernelName:xr,backendName:"webgl",kernelFunc:wB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");const r=t.readSync(o.dataId),i=dn(r),a=MA(i,"string",s);return t.makeTensorInfo(o.shape,"string",a)}const IB={kernelName:Vc,backendName:"webgl",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B({inputs:n,attrs:e,backend:t}){const{x:s}=n,o=C1+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new nn(s.shape,o);return t.runWebGLProgram(r,[s],s.dtype)}const vB={kernelName:Cr,backendName:"webgl",kernelFunc:$B};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SB{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const o=s.length,r=_e(s.length),i=_e(s.length);let a="";if(o===1)a="coords * strides + begin";else{let l=0;a=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=sh(o.shape,r,i,a,l,c,u,h,d);let k;if(m)k=ee({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||x){I(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const $=eh(b,w,y),v=vo({inputs:{x:o},backend:t,attrs:{begin:b,size:$}});k=ee({inputs:{x:v},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(v)}else if(t.shouldExecuteOnCPU([o])){const v=t.readSync(o.dataId),S=Ce(o.shape,o.dtype,v),T=PA(p,S,y,b);k=t.makeTensorInfo(f,o.dtype,T.values)}else{const v=new SB(b,y,p);k=t.runWebGLProgram(v,[o],o.dtype)}const C=ee({inputs:{x:k},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(k),C}const TB={kernelName:Wc,backendName:"webgl",kernelFunc:NB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),p=t.readSync(h.dataId),[f,m]=zA(d,p,o,r,i,a,l,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const EB={kernelName:gp,backendName:"webgl",kernelFunc:RB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(r.dataId),l=t.readSync(i.dataId)[0],[c,u,h]=BA(a,l,o),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const AB={kernelName:xp,backendName:"webgl",kernelFunc:DB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(r.dataId),a=VA(i,o);return t.makeTensorInfo(r.shape,"int32",a)}const FB={kernelName:bp,backendName:"webgl",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB=Ne({opSnippet:"return tan(x);"}),_B={kernelName:yr,backendName:"webgl",kernelFunc:OB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MB=Ne({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),PB={kernelName:wr,backendName:"webgl",kernelFunc:MB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:o,indices:r,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=xs(i,r,o.shape),d=[h/c,c];if(h===0)return t.makeTensorInfo(o.shape,r.dtype);const p=ee({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=ee({inputs:{x:i},backend:t,attrs:{shape:[l,c]}}),m=ee({inputs:{x:o},backend:t,attrs:{shape:d}}),g=new Md(l,a,p.shape.length,f.shape.length,u,d,!1,!0),x=t.runWebGLProgram(g,[f,p,m],m.dtype),b=ee({inputs:{x},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),b}const BB={kernelName:cp,backendName:"webgl",kernelFunc:zB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VB{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const o=_e(this.rank),r=WB(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function WB(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let o=0;o<n.length;o++)s.push(`imod(${t[o]}, ${n[o]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:r}=s;if(o.dtype==="string"||o.shape.length>5){const l=t.readSync(o.dataId),c=o.dtype==="string"?l.map(d=>Cn(d)):l,u=Ce(o.shape,o.dtype,c),h=UA(u,r);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new VB(o.shape,r);return t.runWebGLProgram(i,[o],o.dtype)}const UB={kernelName:kr,backendName:"webgl",kernelFunc:m5};class GB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class HB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Os(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function g5(n){let e=1;for(;e<n;)e*=2;return e}function qB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:r,sorted:i}=s,a=P().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=P().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=o.shape,u=c[c.length-1];if(t.shouldExecuteOnCPU([o])||u<a||r>l){const T=t.readSync(o.dataId),[A,z]=GA(T,c,o.dtype,r,i);return[t.makeTensorInfo(A.shape,A.dtype,A.values),t.makeTensorInfo(z.shape,z.dtype,z.values)]}if(r===0)return c[c.length-1]=0,[t.makeTensorInfo(c,o.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(u===1)return[o,xi({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(o.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(o):o,m=U(c)/u,g=ee({inputs:{x:p},attrs:{shape:[m,u]},backend:t});d&&Os(t,p);const x=g5(r),b=g5(u);let w=null;const y=()=>w===null?[g,g]:[g,w],k=(T,A,z)=>{const _=y(),B=new GB(z),V=[[u],[w===null?1:0],[Number.NEGATIVE_INFINITY],[T],[A]],H=w;w=t.runWebGLProgram(B,_,"int32",V),Os(t,H)};for(let T=1;T<x;T*=2){const A=T*2;for(let z=T;z>=1;z/=2)k(A,z,[m,b])}for(let T=b;T>x;T/=2){const A=y(),z=new HB([m,T/2]),B=[[u],[w===null?1:0],[x]],M=w;w=t.runWebGLProgram(z,A,"int32",B),Os(t,M);const V=x/2,H=V*2;for(let G=V;G>=1;G/=2)k(H,G,w.shape)}let C=w;w=vo({inputs:{x:w},backend:t,attrs:{begin:0,size:[m,r]}}),Os(t,C);let $=o5({inputs:{x:g,indices:w},backend:t,attrs:{axis:1,batchDims:1}});Os(t,g);const v=c.slice(0,-1);v.push(r),C=w,w=ee({inputs:{x:w},attrs:{shape:v},backend:t}),Os(t,C);const S=$;return $=ee({inputs:{x:$},attrs:{shape:v},backend:t}),Os(t,S),[$,w]}const KB={kernelName:Uc,backendName:"webgl",kernelFunc:qB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jB{constructor(e,t,s,o,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(o){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,transforms:r}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=s,[u,h,d,p]=o.shape,[f,m]=c??[h,d],g=[u,f,m,p],x=new jB(h,d,i,a,l,g);return t.runWebGLProgram(x,[o,r],"float32")}const YB={kernelName:Gc,backendName:"webgl",kernelFunc:XB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:r}=e;ui(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=HA(i,o,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const JB={kernelName:Hc,backendName:"webgl",kernelFunc:ZB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o,a=i.shape.length,l=o.shape[r],c=new Array(a-1);let u=0;for(let m=0;m<a;m++)m!==r&&(c[u++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[r]=m;const g=vo({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),x=ee({inputs:{x:g},backend:t,attrs:{shape:c}});f[m]=x,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const eV={kernelName:Ca,backendName:"webgl",kernelFunc:QB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tV{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,o=e.batchSize,r=e.inSize,i=e.numSegments,a=i*Math.ceil(r/s);this.outputShape=[o,a];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:r}=e,{numSegments:i}=s,a=o.shape.length,l=[];let c=0;const u=Ze([c],a);let h=o;u!=null&&(h=Bt({inputs:{x:o},backend:t,attrs:{perm:u}}),l.push(h),c=ot(1,a)[0]);const d=B2(h.shape,c,i),p=U([h.shape[c]]),f=ee({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=nu(o.dtype),g=(y,k,C,$,v)=>{const S=y.shape[0],T=y.shape[1],A=z2(T,v),z={windowSize:A,inSize:T,batchSize:S,numSegments:v},_=new tV(z,k),B=t.compileAndRun(_,[y,C],$);if(l.push(B),B.shape[1]===v)return B;const M=d5({backend:t,attrs:{start:0,stop:v,step:1,dtype:"float32"}}),V=m5({inputs:{x:M},backend:t,attrs:{reps:[T/A]}});return l.push(M),l.push(V),g(B,k,V,$,v)},x=g(f,"unsortedSegmentSum",r,m,i),b=ee({inputs:{x},backend:t,attrs:{shape:d}});let w=b;if(u!=null){l.push(b);const y=Sn(u);w=Bt({inputs:{x:w},backend:t,attrs:{perm:y}})}return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),w}const sV={kernelName:Ia,backendName:"webgl",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV=[_L,PL,VL,GL,qL,XL,ZL,QL,sF,rF,lF,hF,fF,bF,kF,IF,vF,RF,DF,LF,_F,WF,GF,jF,YF,tO,sO,aO,yL,uO,mO,yO,vO,TO,EO,AO,FO,PO,BO,WO,GO,qO,jO,ZO,QO,s_,r_,l_,h_,p_,m_,b_,w_,I_,v_,S_,T_,E_,A_,F_,__,P_,V_,G_,q_,X_,J_,eM,nM,bL,oM,pO,iM,lM,uM,kL,dM,fM,gM,yM,CM,$M,SM,TM,DM,LM,OM,zM,VM,UM,KM,XM,ZM,QM,tP,rP,lP,dP,bP,$L,CP,vP,TP,DP,ZF,LP,OP,MP,BP,GP,IL,qP,jP,YP,JP,QP,JF,fP,tz,oz,az,SL,hz,fz,bz,kz,vz,Nz,Rz,Dz,Fz,Mz,Bz,Uz,qz,jz,Jz,eB,VF,gP,nB,sB,rB,aB,cB,hB,pB,mB,xB,yB,kB,IB,vB,TB,EB,AB,FB,mP,LL,_B,PB,BB,UB,KB,YB,FL,JB,eV,sV,FP];for(const n of oV)Ip(n);function rV(n){return new Worker("/pokesle-simulator/assets/genki-simulator-C6pzR4Pn.js",{name:n==null?void 0:n.name})}A6("cpu");class mn{constructor(){et(this,"healEffectParameter",[])}static async init(){this.isReady=(async()=>{[this.x2yModel,this.y2zModel]=await Promise.all([Ym(`${location.protocol}//${location.host}/pokesle-simulator/tf/x2y/model.json`),Ym(`${location.protocol}//${location.host}/pokesle-simulator/tf/y2z/model.json`)])})()}static getHealEffect(e,t,s){let[o,r]=this.x2yModel.predict(zr([[s.sleepTime/8.5,Math.min(s.sleepTime,8.5)/8.5,s.checkFreq/10,e.morningHealGenki/100,e.fixedSkillRate,e.speed/3e3,t/30,e.bagFullHelpNum/20,e.skillCeil/88,e.specialty=="スキル"?1:.5]])).dataSync();return o=o*o*50,r=r*r*50,[o,r]}static getHelpRate(e,t,s,o){let[r,i]=this.y2zModel.predict(zr([[o.sleepTime/8.5,Math.min(o.sleepTime,8.5)/8.5,o.checkFreq/10,e/100,t/50,s/50]])).dataSync();return r<1&&(r=1),i<1&&(i=1),r>1/.45&&(r=1/.45),i>1/.45&&(i=1/.45),{day:r,night:i}}static async inferParameter(e,t){t.setName("ヒーラーの性能を計算しています…");let s=[],o=[];for(let d=0;d<e.workerNum;d++)s.push(0),o.push(new Promise((p,f)=>{const m=new rV;m.onmessage=({data:{status:g,body:x}})=>{g=="progress"&&(s[d]=x,t.set(s.reduce((b,w)=>b+w,0)/s.length)),g=="success"&&(p(x),m.terminate(),t.set(1))},m.postMessage({config:JSON.parse(JSON.stringify(e)),part:d,num:e.workerNum})}));let r=(await Promise.all(o)).flat(1);const i=(d,p,f,m)=>{let g=p.map(w=>1),x=a(d,p,f,m),b;do{b=!1;for(let w=0;w<p.length;w++){let y=Math.max(Math.abs(p[w])/1e3,1e-4),k=1,C=!1;for(let $=0;$<2;$++){for(;;){let v=[...p];v[w]+=y*g[w]*k;let S=a(d,v,f,m);if(x>S)p=v,x=S,b=!0,C=!0,k++;else break}if(!C)g[w]=-g[w];else break}}}while(b);return p},a=(d,p,f,m)=>{let g=0;for(let x of d){let b=f(x,p);g+=(x[m]-b)*(x[m]-b)}return g};for(let d of r){d.skillCeil=40*3600/d.speed,d.baseDayHelpNum=0;let p=(24-e.sleepTime)*3600;if(p>0){let f=12e3+d.speed*.45/2;d.baseDayHelpNum+=Math.min(p,f)/.45/d.speed,p-=f}if(p>0){let f=12e3-d.speed*.45/2+d.speed*.52/2;d.baseDayHelpNum+=Math.min(p,f)/.52/d.speed,p-=f}if(p>0){let f=12e3-d.speed*.52/2+d.speed*.62/2;d.baseDayHelpNum+=Math.min(p,f)/.62/d.speed,p-=f}if(p>0){let f=12e3-d.speed*.62/2+d.speed*.71/2;d.baseDayHelpNum+=Math.min(p,f)/.71/d.speed,p-=f}p>0&&(d.baseDayHelpNum+=p/d.speed)}let l=i(r,[.891,1.02,4,1,-2.304,1,.00156],(d,p)=>this.getHealEffect(d,p,e),"totalEffect"),c=(d,p)=>this.getHelpRate(this.getHealEffect(d,p,e),p),u=i(r,[.0229,-.5,1.03,.632,1.59],c,"dayHelpRate"),h=i(r,[.0274,-1,1.8,1.236,.964],c,"nightHelpRate");return{healEffectParameter:l,dayHelpParameter:u,nightHelpParameter:h}}}et(mn,"VERSION",20240709),et(mn,"_x2yModel",null),et(mn,"_y2zModel",null),mn.init();var iV="/pokesle-simulator/assets/belueberry-bjVuvnFf.png",aV="/pokesle-simulator/assets/blukberry-Q0XoMNAA.png",lV="/pokesle-simulator/assets/cheriberry-of1qkg09.png",cV="/pokesle-simulator/assets/chestoberry-C9IiraLv.png",uV="/pokesle-simulator/assets/durinberry-CrtMmdWo.png",hV="/pokesle-simulator/assets/figyberry-DuVaVy64.png",dV="/pokesle-simulator/assets/grepaberry-yWAzPlLM.png",pV="/pokesle-simulator/assets/leppaberry-CFL6Kc4u.png",fV="/pokesle-simulator/assets/lumberry-Or9sD8_h.png",mV="/pokesle-simulator/assets/magoberry-Ckie7Luk.png",gV="/pokesle-simulator/assets/oranberry-BqqUf8kl.png",xV="/pokesle-simulator/assets/pamtreberry-CuePLV3x.png",bV="/pokesle-simulator/assets/pechaberry-Dr8EzZ5x.png",yV="/pokesle-simulator/assets/persimberry-C5as00Cd.png",wV="/pokesle-simulator/assets/rawstberry-ZjllxWpk.png",kV="/pokesle-simulator/assets/sitrusberry-CIcKgb6D.png",CV="/pokesle-simulator/assets/wikiberry-Dy6-kB74.png",IV="/pokesle-simulator/assets/yacheberry-D7ae3JbC.png";const x5=[{name:"シーヤ",energy:24,type:"ひこう",img:xV},{name:"ラム",energy:24,type:"むし",img:fV},{name:"ウブ",energy:25,type:"でんき",img:dV},{name:"ブリー",energy:26,type:"ゴースト",img:aV},{name:"マゴ",energy:26,type:"エスパー",img:mV},{name:"モモン",energy:26,type:"フェアリー",img:bV},{name:"クラボ",energy:27,type:"かくとう",img:lV},{name:"ヒメリ",energy:27,type:"ほのお",img:pV},{name:"キー",energy:28,type:"ノーマル",img:yV},{name:"フィラ",energy:29,type:"じめん",img:hV},{name:"オボン",energy:30,type:"いわ",img:kV},{name:"ドリ",energy:30,type:"くさ",img:uV},{name:"ウイ",energy:31,type:"あく",img:CV},{name:"オレン",energy:31,type:"みず",img:gV},{name:"カゴ",energy:32,type:"どく",img:cV},{name:"チーゴ",energy:32,type:"こおり",img:wV},{name:"ベリブ",energy:33,type:"はがね",img:iV},{name:"ヤチェ",energy:35,type:"ドラゴン",img:IV}];class _s{}et(_s,"list",[]),et(_s,"map",{}),_s.list=x5,_s.map=x5.reduce((n,e)=>(n[e.name]=e,n),{});let Ms=[{name:"フシギダネ",specialty:"食材",berry:"ドリ",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"あんみんトマト",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,6]}],skill:"食材ゲットS",help:4400,bag:11,foodRate:.257,skillRate:.019,before:null,legend:!1},{name:"フシギソウ",specialty:"食材",berry:"ドリ",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"あんみんトマト",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,6]}],skill:"食材ゲットS",help:3300,bag:14,foodRate:.255,skillRate:.019,before:"フシギダネ",legend:!1},{name:"フシギバナ",specialty:"食材",berry:"ドリ",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"あんみんトマト",numList:[null,4,7]},{name:"ほっこりポテト",numList:[null,null,6]}],skill:"食材ゲットS",help:2800,bag:17,foodRate:.266,skillRate:.021,before:"フシギソウ",legend:!1},{name:"ヒトカゲ",specialty:"食材",berry:"ヒメリ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,4,7]},{name:"げきからハーブ",numList:[null,null,6]}],skill:"食材ゲットS",help:3500,bag:12,foodRate:.201,skillRate:.011,before:null,legend:!1},{name:"リザード",specialty:"食材",berry:"ヒメリ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,4,7]},{name:"げきからハーブ",numList:[null,null,6]}],skill:"食材ゲットS",help:3e3,bag:15,foodRate:.227,skillRate:.016,before:"ヒトカゲ",legend:!1},{name:"リザードン",specialty:"食材",berry:"ヒメリ",foodList:[{name:"マメミート",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,4,7]},{name:"げきからハーブ",numList:[null,null,6]}],skill:"食材ゲットS",help:2400,bag:19,foodRate:.224,skillRate:.016,before:"リザード",legend:!1},{name:"ゼニガメ",specialty:"食材",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[2,5,7]},{name:"リラックスカカオ",numList:[null,3,5]},{name:"マメミート",numList:[null,null,7]}],skill:"食材ゲットS",help:4500,bag:10,foodRate:.271,skillRate:.02,before:null,legend:!1},{name:"カメール",specialty:"食材",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[2,5,7]},{name:"リラックスカカオ",numList:[null,3,5]},{name:"マメミート",numList:[null,null,7]}],skill:"食材ゲットS",help:3400,bag:14,foodRate:.271,skillRate:.02,before:"ゼニガメ",legend:!1},{name:"カメックス",specialty:"食材",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[2,5,7]},{name:"リラックスカカオ",numList:[null,3,5]},{name:"マメミート",numList:[null,null,7]}],skill:"食材ゲットS",help:2800,bag:17,foodRate:.275,skillRate:.021,before:"カメール",legend:!1},{name:"キャタピー",specialty:"きのみ",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"食材ゲットS",help:4400,bag:11,foodRate:.179,skillRate:.008,before:null,legend:!1},{name:"トランセル",specialty:"きのみ",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"食材ゲットS",help:4200,bag:13,foodRate:.208,skillRate:.018,before:"キャタピー",legend:!1},{name:"バタフリー",specialty:"きのみ",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,4]}],skill:"食材ゲットS",help:2600,bag:21,foodRate:.197,skillRate:.014,before:"トランセル",legend:!1},{name:"コラッタ",specialty:"きのみ",berry:"キー",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,3]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:4900,bag:10,foodRate:.237,skillRate:.03,before:null,legend:!1},{name:"ラッタ",specialty:"きのみ",berry:"キー",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,3]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:3200,bag:16,foodRate:.237,skillRate:.03,before:"コラッタ",legend:!1},{name:"アーボ",specialty:"きのみ",berry:"カゴ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,2,3]},{name:"げきからハーブ",numList:[null,null,3]}],skill:"げんきチャージS",help:5e3,bag:10,foodRate:.235,skillRate:.033,before:null,legend:!1},{name:"アーボック",specialty:"きのみ",berry:"カゴ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,2,3]},{name:"げきからハーブ",numList:[null,null,3]}],skill:"げんきチャージS",help:3700,bag:14,foodRate:.264,skillRate:.057,before:"アーボ",legend:!1},{name:"ピカチュウ",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS",help:2700,bag:17,foodRate:.207,skillRate:.021,before:"ピチュー",legend:!1},{name:"ピカチュウ(ハロウィン)",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2600,bag:18,foodRate:.218,skillRate:.028,before:null,legend:!1},{name:"ピカチュウ(ホリデー)",specialty:"スキル",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"ゆめのかけらゲットS",help:2600,bag:18,foodRate:.131,skillRate:.042,before:null,legend:!1},{name:"ライチュウ",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS",help:2200,bag:21,foodRate:.224,skillRate:.032,before:"ピカチュウ",legend:!1},{name:"ピッピ",specialty:"きのみ",berry:"モモン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,3]}],skill:"ゆびをふる",help:4e3,bag:16,foodRate:.168,skillRate:.036,before:"ピィ",legend:!1},{name:"ピクシー",specialty:"きのみ",berry:"モモン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,3]}],skill:"ゆびをふる",help:2800,bag:20,foodRate:.168,skillRate:.036,before:"ピッピ",legend:!1},{name:"ロコン",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"げんきエールS",help:4700,bag:13,foodRate:.168,skillRate:.027,before:null,legend:!1},{name:"キュウコン",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,2,3]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"げんきエールS",help:2600,bag:23,foodRate:.164,skillRate:.025,before:"ロコン",legend:!1},{name:"プリン",specialty:"スキル",berry:"モモン",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,2]}],skill:"げんきオールS",help:3900,bag:9,foodRate:.182,skillRate:.043,before:"ププリン",legend:!1},{name:"プクリン",specialty:"スキル",berry:"モモン",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,2]}],skill:"げんきオールS",help:2900,bag:13,foodRate:.174,skillRate:.04,before:"プリン",legend:!1},{name:"ディグダ",specialty:"食材",berry:"フィラ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,3,4]},{name:"ワカクサ大豆",numList:[null,null,8]}],skill:"エナジーチャージS",help:4300,bag:10,foodRate:.192,skillRate:.021,before:null,legend:!1},{name:"ダグトリオ",specialty:"食材",berry:"フィラ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,3,4]},{name:"ワカクサ大豆",numList:[null,null,8]}],skill:"エナジーチャージS",help:2800,bag:16,foodRate:.19,skillRate:.02,before:"ディグダ",legend:!1},{name:"ニャース",specialty:"スキル",berry:"キー",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"マメミート",numList:[null,2,3]},null],skill:"ゆめのかけらゲットS",help:4400,bag:9,foodRate:.163,skillRate:.042,before:null,legend:!1},{name:"ペルシアン",specialty:"スキル",berry:"キー",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"マメミート",numList:[null,2,3]},null],skill:"ゆめのかけらゲットS",help:2800,bag:12,foodRate:.169,skillRate:.044,before:"ニャース",legend:!1},{name:"コダック",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"とくせんリンゴ",numList:[null,4,6]},{name:"マメミート",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:5400,bag:8,foodRate:.136,skillRate:.126,before:null,legend:!1},{name:"ゴルダック",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"とくせんリンゴ",numList:[null,4,6]},{name:"マメミート",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:3400,bag:14,foodRate:.162,skillRate:.125,before:"コダック",legend:!1},{name:"マンキー",specialty:"きのみ",berry:"クラボ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:4200,bag:12,foodRate:.197,skillRate:.022,before:null,legend:!1},{name:"オコリザル",specialty:"きのみ",berry:"クラボ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:2800,bag:17,foodRate:.2,skillRate:.024,before:"マンキー",legend:!1},{name:"ガーディ",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"マメミート",numList:[null,3,5]},{name:"モーモーミルク",numList:[null,null,5]}],skill:"おてつだいサポートS",help:4300,bag:8,foodRate:.138,skillRate:.05,before:null,legend:!1},{name:"ウインディ",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"マメミート",numList:[null,3,5]},{name:"モーモーミルク",numList:[null,null,5]}],skill:"おてつだいサポートS",help:2500,bag:16,foodRate:.136,skillRate:.049,before:"ガーディ",legend:!1},{name:"マダツボミ",specialty:"食材",berry:"ドリ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"げんきチャージS",help:5200,bag:8,foodRate:.233,skillRate:.039,before:null,legend:!1},{name:"ウツドン",specialty:"食材",berry:"ドリ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"げんきチャージS",help:3800,bag:12,foodRate:.235,skillRate:.04,before:"マダツボミ",legend:!1},{name:"ウツボット",specialty:"食材",berry:"ドリ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"げんきチャージS",help:2800,bag:17,foodRate:.233,skillRate:.039,before:"ウツドン",legend:!1},{name:"イシツブテ",specialty:"食材",berry:"オボン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"あじわいキノコ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:5700,bag:9,foodRate:.281,skillRate:.052,before:null,legend:!1},{name:"ゴローン",specialty:"食材",berry:"オボン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"あじわいキノコ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:4e3,bag:12,foodRate:.272,skillRate:.048,before:"イシツブテ",legend:!1},{name:"ゴローニャ",specialty:"食材",berry:"オボン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"あじわいキノコ",numList:[null,null,4]}],skill:"エナジーチャージS(ランダム)",help:3100,bag:16,foodRate:.28,skillRate:.052,before:"ゴローン",legend:!1},{name:"ヤドン",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"おいしいシッポ",numList:[null,1,2]},{name:"あんみんトマト",numList:[null,null,5]}],skill:"げんきエールS",help:5700,bag:9,foodRate:.151,skillRate:.067,before:null,legend:!1},{name:"ヤドラン",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"おいしいシッポ",numList:[null,1,2]},{name:"あんみんトマト",numList:[null,null,5]}],skill:"げんきエールS",help:3800,bag:16,foodRate:.197,skillRate:.068,before:"ヤドン",legend:!1},{name:"コイル",specialty:"スキル",berry:"ベリブ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},null],skill:"料理パワーアップS",help:5800,bag:8,foodRate:.182,skillRate:.064,before:null,legend:!1},{name:"レアコイル",specialty:"スキル",berry:"ベリブ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},null],skill:"料理パワーアップS",help:4e3,bag:11,foodRate:.182,skillRate:.063,before:"コイル",legend:!1},{name:"ドードー",specialty:"きのみ",berry:"シーヤ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:3800,bag:13,foodRate:.184,skillRate:.02,before:null,legend:!1},{name:"ドードリオ",specialty:"きのみ",berry:"シーヤ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:2400,bag:21,foodRate:.184,skillRate:.02,before:"ドードー",legend:!1},{name:"ゴース",specialty:"食材",berry:"ブリー",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,6]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"エナジーチャージS(ランダム)",help:3800,bag:10,foodRate:.144,skillRate:.015,before:null,legend:!1},{name:"ゴースト",specialty:"食材",berry:"ブリー",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,6]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"エナジーチャージS(ランダム)",help:3e3,bag:14,foodRate:.157,skillRate:.022,before:"ゴース",legend:!1},{name:"ゲンガー",specialty:"食材",berry:"ブリー",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"あじわいキノコ",numList:[null,4,6]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"エナジーチャージS(ランダム)",help:2200,bag:18,foodRate:.161,skillRate:.024,before:"ゴースト",legend:!1},{name:"イワーク",specialty:"きのみ",berry:"オボン",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"マメミート",numList:[null,2,4]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"食材ゲットS",help:3100,bag:22,foodRate:.132,skillRate:.023,before:null,legend:!1},{name:"カラカラ",specialty:"きのみ",berry:"フィラ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,2,3]},null],skill:"げんきチャージS",help:4800,bag:10,foodRate:.223,skillRate:.044,before:null,legend:!1},{name:"ガラガラ",specialty:"きのみ",berry:"フィラ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,2,3]},null],skill:"げんきチャージS",help:3500,bag:15,foodRate:.225,skillRate:.045,before:"カラカラ",legend:!1},{name:"ガルーラ",specialty:"食材",berry:"キー",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ワカクサ大豆",numList:[null,null,8]}],skill:"食材ゲットS",help:2800,bag:18,foodRate:.222,skillRate:.017,before:null,legend:!1},{name:"バリヤード",specialty:"食材",berry:"マゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"エナジーチャージS",help:2800,bag:17,foodRate:.216,skillRate:.039,before:"マネネ",legend:!1},{name:"カイロス",specialty:"食材",berry:"ラム",foodList:[{name:"あまいミツ",numList:[2,5,7]},{name:"とくせんリンゴ",numList:[null,5,8]},{name:"マメミート",numList:[null,null,7]}],skill:"エナジーチャージS",help:2400,bag:24,foodRate:.216,skillRate:.031,before:null,legend:!1},{name:"メタモン",specialty:"食材",berry:"キー",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,3,5]},{name:"おいしいシッポ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3500,bag:17,foodRate:.201,skillRate:.036,before:null,legend:!1},{name:"イーブイ",specialty:"スキル",berry:"キー",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"食材ゲットS",help:3700,bag:12,foodRate:.192,skillRate:.055,before:null,legend:!1},{name:"シャワーズ",specialty:"スキル",berry:"オレン",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"食材ゲットS",help:3100,bag:13,foodRate:.212,skillRate:.061,before:"イーブイ",legend:!1},{name:"サンダース",specialty:"スキル",berry:"ウブ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"おてつだいサポートS",help:2200,bag:17,foodRate:.151,skillRate:.039,before:"イーブイ",legend:!1},{name:"ブースター",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"料理パワーアップS",help:2700,bag:14,foodRate:.185,skillRate:.052,before:"イーブイ",legend:!1},{name:"ミニリュウ",specialty:"食材",berry:"ヤチェ",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"ワカクサコーン",numList:[null,4,7]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"げんきチャージS",help:5e3,bag:9,foodRate:.25,skillRate:.02,before:null,legend:!1},{name:"ハクリュー",specialty:"食材",berry:"ヤチェ",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"ワカクサコーン",numList:[null,4,7]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"げんきチャージS",help:3800,bag:12,foodRate:.262,skillRate:.025,before:"ミニリュウ",legend:!1},{name:"カイリュー",specialty:"食材",berry:"ヤチェ",foodList:[{name:"げきからハーブ",numList:[2,5,7]},{name:"ワカクサコーン",numList:[null,4,7]},{name:"ピュアなオイル",numList:[null,null,8]}],skill:"げんきチャージS",help:2600,bag:20,foodRate:.264,skillRate:.026,before:"ハクリュー",legend:!1},{name:"チコリータ",specialty:"きのみ",berry:"ドリ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,3,5]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:4400,bag:12,foodRate:.169,skillRate:.039,before:null,legend:!1},{name:"ベイリーフ",specialty:"きのみ",berry:"ドリ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,3,5]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3300,bag:17,foodRate:.168,skillRate:.038,before:"チコリータ",legend:!1},{name:"メガニウム",specialty:"きのみ",berry:"ドリ",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,3,5]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2800,bag:20,foodRate:.175,skillRate:.046,before:"ベイリーフ",legend:!1},{name:"ヒノアラシ",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3500,bag:14,foodRate:.186,skillRate:.021,before:null,legend:!1},{name:"マグマラシ",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3e3,bag:18,foodRate:.211,skillRate:.041,before:"ヒノアラシ",legend:!1},{name:"バクフーン",specialty:"きのみ",berry:"ヒメリ",foodList:[{name:"あったかジンジャー",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2400,bag:23,foodRate:.208,skillRate:.039,before:"マグマラシ",legend:!1},{name:"ワニノコ",specialty:"きのみ",berry:"オレン",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},null],skill:"エナジーチャージS(ランダム)",help:4500,bag:11,foodRate:.253,skillRate:.052,before:null,legend:!1},{name:"アリゲイツ",specialty:"きのみ",berry:"オレン",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},null],skill:"エナジーチャージS(ランダム)",help:3400,bag:15,foodRate:.253,skillRate:.052,before:"ワニノコ",legend:!1},{name:"オーダイル",specialty:"きのみ",berry:"オレン",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},null],skill:"エナジーチャージS(ランダム)",help:2800,bag:19,foodRate:.257,skillRate:.055,before:"アリゲイツ",legend:!1},{name:"ピチュー",specialty:"きのみ",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,3]},{name:"とくせんエッグ",numList:[null,null,3]}],skill:"エナジーチャージS",help:4300,bag:10,foodRate:.21,skillRate:.023,before:null,legend:!1},{name:"ピィ",specialty:"きのみ",berry:"モモン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,3]},{name:"ワカクサ大豆",numList:[null,null,3]}],skill:"ゆびをふる",help:5600,bag:10,foodRate:.164,skillRate:.034,before:null,legend:!1},{name:"ププリン",specialty:"スキル",berry:"モモン",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,2]}],skill:"げんきオールS",help:5200,bag:8,foodRate:.17,skillRate:.038,before:null,legend:!1},{name:"トゲピー",specialty:"スキル",berry:"モモン",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆびをふる",help:4800,bag:8,foodRate:.151,skillRate:.049,before:null,legend:!1},{name:"トゲチック",specialty:"スキル",berry:"モモン",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆびをふる",help:3800,bag:10,foodRate:.163,skillRate:.056,before:"トゲピー",legend:!1},{name:"メリープ",specialty:"スキル",berry:"ウブ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,3,4]},null],skill:"エナジーチャージM",help:4600,bag:9,foodRate:.128,skillRate:.047,before:null,legend:!1},{name:"モココ",specialty:"スキル",berry:"ウブ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,3,4]},null],skill:"エナジーチャージM",help:3300,bag:11,foodRate:.127,skillRate:.046,before:"メリープ",legend:!1},{name:"デンリュウ",specialty:"スキル",berry:"ウブ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"とくせんエッグ",numList:[null,3,4]},null],skill:"エナジーチャージM",help:2500,bag:15,foodRate:.13,skillRate:.047,before:"モココ",legend:!1},{name:"ウソッキー",specialty:"スキル",berry:"オボン",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,2]}],skill:"エナジーチャージM",help:4e3,bag:16,foodRate:.217,skillRate:.072,before:"ウソハチ",legend:!1},{name:"ウパー",specialty:"食材",berry:"オレン",foodList:[{name:"あじわいキノコ",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,6,10]},{name:"マメミート",numList:[null,null,12]}],skill:"げんきチャージS",help:5900,bag:10,foodRate:.201,skillRate:.038,before:null,legend:!1},{name:"ヌオー",specialty:"食材",berry:"オレン",foodList:[{name:"あじわいキノコ",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,6,10]},{name:"マメミート",numList:[null,null,12]}],skill:"げんきチャージS",help:3400,bag:16,foodRate:.19,skillRate:.032,before:"ウパー",legend:!1},{name:"エーフィ",specialty:"スキル",berry:"マゴ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"エナジーチャージM",help:2400,bag:16,foodRate:.164,skillRate:.044,before:"イーブイ",legend:!1},{name:"ブラッキー",specialty:"スキル",berry:"ウイ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきチャージS",help:3200,bag:14,foodRate:.219,skillRate:.141,before:"イーブイ",legend:!1},{name:"ヤドキング",specialty:"スキル",berry:"オレン",foodList:[{name:"リラックスカカオ",numList:[1,2,4]},{name:"おいしいシッポ",numList:[null,1,2]},{name:"あんみんトマト",numList:[null,null,5]}],skill:"げんきエールS",help:3400,bag:17,foodRate:.166,skillRate:.074,before:"ヤドン",legend:!1},{name:"ソーナンス",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"げんきエールS",help:3500,bag:13,foodRate:.211,skillRate:.064,before:"ソーナノ",legend:!1},{name:"ハガネール",specialty:"きのみ",berry:"ベリブ",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"マメミート",numList:[null,2,4]},{name:"ほっこりポテト",numList:[null,null,3]}],skill:"食材ゲットS",help:3e3,bag:15,foodRate:.154,skillRate:.032,before:"イワーク",legend:!1},{name:"ヘラクロス",specialty:"スキル",berry:"ラム",foodList:[{name:"あまいミツ",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,4]}],skill:"食材ゲットS",help:2400,bag:20,foodRate:.158,skillRate:.047,before:null,legend:!1},{name:"デリバード",specialty:"食材",berry:"シーヤ",foodList:[{name:"とくせんエッグ",numList:[2,5,7]},{name:"とくせんリンゴ",numList:[null,6,9]},{name:"リラックスカカオ",numList:[null,null,5]}],skill:"食材ゲットS",help:2500,bag:20,foodRate:.188,skillRate:.015,before:null,legend:!1},{name:"デルビル",specialty:"きのみ",berry:"ウイ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,3,4]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS",help:4900,bag:10,foodRate:.201,skillRate:.044,before:null,legend:!1},{name:"ヘルガー",specialty:"きのみ",berry:"ウイ",foodList:[{name:"げきからハーブ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,3,4]},{name:"ふといながねぎ",numList:[null,null,3]}],skill:"エナジーチャージS",help:3300,bag:16,foodRate:.203,skillRate:.046,before:"デルビル",legend:!1},{name:"ライコウ",specialty:"スキル",berry:"ウブ",foodList:[{name:"マメミート",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"おてつだいブースト",help:2100,bag:22,foodRate:.192,skillRate:.019,before:null,legend:!0},{name:"エンテイ",specialty:"スキル",berry:"ヒメリ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あんみんトマト",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,3]}],skill:"おてつだいブースト",help:2400,bag:19,foodRate:.187,skillRate:.023,before:null,legend:!0},{name:"スイクン",specialty:"スキル",berry:"オレン",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ピュアなオイル",numList:[null,2,3]},{name:"ワカクサコーン",numList:[null,null,2]}],skill:"おてつだいブースト",help:2700,bag:17,foodRate:.277,skillRate:.026,before:null,legend:!0},{name:"ヨーギラス",specialty:"食材",berry:"オボン",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ワカクサ大豆",numList:[null,5,8]},{name:"マメミート",numList:[null,null,8]}],skill:"げんきチャージS",help:4800,bag:9,foodRate:.238,skillRate:.041,before:null,legend:!1},{name:"サナギラス",specialty:"食材",berry:"オボン",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ワカクサ大豆",numList:[null,5,8]},{name:"マメミート",numList:[null,null,8]}],skill:"げんきチャージS",help:3600,bag:13,foodRate:.247,skillRate:.045,before:"ヨーギラス",legend:!1},{name:"バンギラス",specialty:"食材",berry:"ウイ",foodList:[{name:"あったかジンジャー",numList:[2,5,7]},{name:"ワカクサ大豆",numList:[null,5,8]},{name:"マメミート",numList:[null,null,8]}],skill:"げんきチャージS",help:2700,bag:19,foodRate:.266,skillRate:.052,before:"サナギラス",legend:!1},{name:"ラルトス",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"げんきオールS",help:4800,bag:9,foodRate:.145,skillRate:.043,before:null,legend:!1},{name:"キルリア",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"げんきオールS",help:3500,bag:13,foodRate:.146,skillRate:.043,before:"ラルトス",legend:!1},{name:"サーナイト",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"げんきオールS",help:2400,bag:18,foodRate:.144,skillRate:.042,before:"キルリア",legend:!1},{name:"エルレイド",specialty:"スキル",berry:"クラボ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"ワカクサコーン",numList:[null,1,2]},{name:"ふといながねぎ",numList:[null,null,2]}],skill:"おてつだいサポートS",help:2400,bag:19,foodRate:.147,skillRate:.054,before:"キルリア",legend:!1},{name:"ナマケロ",specialty:"きのみ",berry:"キー",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,4]},{name:"とくせんリンゴ",numList:[null,null,4]}],skill:"食材ゲットS",help:4900,bag:7,foodRate:.216,skillRate:.019,before:null,legend:!1},{name:"ヤルキモノ",specialty:"きのみ",berry:"キー",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,4]},{name:"とくせんリンゴ",numList:[null,null,4]}],skill:"食材ゲットS",help:3200,bag:9,foodRate:.204,skillRate:.015,before:"ナマケロ",legend:!1},{name:"ケッキング",specialty:"きのみ",berry:"キー",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"あまいミツ",numList:[null,2,4]},{name:"とくせんリンゴ",numList:[null,null,4]}],skill:"食材ゲットS",help:3800,bag:12,foodRate:.339,skillRate:.067,before:"ヤルキモノ",legend:!1},{name:"ヤミラミ",specialty:"スキル",berry:"ウイ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,2,3]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆめのかけらゲットS(ランダム)",help:3600,bag:16,foodRate:.188,skillRate:.068,before:null,legend:!1},{name:"ゴクリン",specialty:"スキル",berry:"カゴ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS(ランダム)",help:5900,bag:8,foodRate:.214,skillRate:.063,before:null,legend:!1},{name:"マルノーム",specialty:"スキル",berry:"カゴ",foodList:[{name:"ワカクサ大豆",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"あまいミツ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS(ランダム)",help:3500,bag:19,foodRate:.21,skillRate:.07,before:"ゴクリン",legend:!1},{name:"チルット",specialty:"きのみ",berry:"シーヤ",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,3,4]},{name:"とくせんリンゴ",numList:[null,null,5]}],skill:"げんきチャージS",help:4200,bag:12,foodRate:.177,skillRate:.032,before:null,legend:!1},{name:"チルタリス",specialty:"きのみ",berry:"ヤチェ",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,3,4]},{name:"とくせんリンゴ",numList:[null,null,5]}],skill:"げんきチャージS",help:3700,bag:14,foodRate:.258,skillRate:.061,before:"チルット",legend:!1},{name:"カゲボウズ",specialty:"きのみ",berry:"ブリー",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:3900,bag:11,foodRate:.171,skillRate:.026,before:null,legend:!1},{name:"ジュペッタ",specialty:"きのみ",berry:"ブリー",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,3]}],skill:"エナジーチャージS(ランダム)",help:2600,bag:19,foodRate:.179,skillRate:.033,before:"カゲボウズ",legend:!1},{name:"アブソル",specialty:"食材",berry:"ウイ",foodList:[{name:"リラックスカカオ",numList:[2,5,7]},{name:"とくせんリンゴ",numList:[null,8,12]},{name:"あじわいキノコ",numList:[null,null,7]}],skill:"エナジーチャージS",help:3100,bag:18,foodRate:.178,skillRate:.038,before:null,legend:!1},{name:"ソーナノ",specialty:"スキル",berry:"マゴ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"あじわいキノコ",numList:[null,1,2]},{name:"ピュアなオイル",numList:[null,null,3]}],skill:"げんきエールS",help:5800,bag:7,foodRate:.213,skillRate:.059,before:null,legend:!1},{name:"タマザラシ",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"マメミート",numList:[null,3,4]},{name:"あったかジンジャー",numList:[null,null,4]}],skill:"食材ゲットS",help:5600,bag:9,foodRate:.224,skillRate:.023,before:null,legend:!1},{name:"トドグラー",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"マメミート",numList:[null,3,4]},{name:"あったかジンジャー",numList:[null,null,4]}],skill:"食材ゲットS",help:4e3,bag:13,foodRate:.221,skillRate:.021,before:"タマザラシ",legend:!1},{name:"トドゼルガ",specialty:"きのみ",berry:"チーゴ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"マメミート",numList:[null,3,4]},{name:"あったかジンジャー",numList:[null,null,4]}],skill:"食材ゲットS",help:3e3,bag:18,foodRate:.223,skillRate:.022,before:"トドグラー",legend:!1},{name:"ウソハチ",specialty:"スキル",berry:"オボン",foodList:[{name:"あんみんトマト",numList:[1,2,4]},{name:"ワカクサ大豆",numList:[null,2,4]},{name:"あじわいキノコ",numList:[null,null,2]}],skill:"エナジーチャージM",help:6300,bag:8,foodRate:.189,skillRate:.061,before:null,legend:!1},{name:"マネネ",specialty:"食材",berry:"マゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,6]},{name:"ふといながねぎ",numList:[null,null,4]}],skill:"エナジーチャージS",help:4300,bag:10,foodRate:.201,skillRate:.032,before:null,legend:!1},{name:"リオル",specialty:"スキル",berry:"クラボ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"ほっこりポテト",numList:[null,2,4]},{name:"とくせんエッグ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS",help:4200,bag:9,foodRate:.126,skillRate:.038,before:null,legend:!1},{name:"ルカリオ",specialty:"スキル",berry:"クラボ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"ほっこりポテト",numList:[null,2,4]},{name:"とくせんエッグ",numList:[null,null,4]}],skill:"ゆめのかけらゲットS",help:2600,bag:14,foodRate:.15,skillRate:.051,before:"リオル",legend:!1},{name:"グレッグル",specialty:"食材",berry:"カゴ",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"マメミート",numList:[null,5,8]},null],skill:"エナジーチャージS",help:5600,bag:10,foodRate:.228,skillRate:.042,before:null,legend:!1},{name:"ドクロッグ",specialty:"食材",berry:"カゴ",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"マメミート",numList:[null,5,8]},null],skill:"エナジーチャージS",help:3400,bag:14,foodRate:.229,skillRate:.043,before:"グレッグル",legend:!1},{name:"ユキカブリ",specialty:"食材",berry:"チーゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"とくせんエッグ",numList:[null,4,7]},{name:"あじわいキノコ",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:5600,bag:10,foodRate:.251,skillRate:.044,before:null,legend:!1},{name:"ユキノオー",specialty:"食材",berry:"チーゴ",foodList:[{name:"あんみんトマト",numList:[2,5,7]},{name:"とくせんエッグ",numList:[null,4,7]},{name:"あじわいキノコ",numList:[null,null,5]}],skill:"エナジーチャージS(ランダム)",help:3e3,bag:21,foodRate:.25,skillRate:.044,before:"ユキカブリ",legend:!1},{name:"ジバコイル",specialty:"スキル",berry:"ベリブ",foodList:[{name:"ピュアなオイル",numList:[1,2,4]},{name:"げきからハーブ",numList:[null,2,3]},null],skill:"料理パワーアップS",help:3100,bag:13,foodRate:.179,skillRate:.062,before:"レアコイル",legend:!1},{name:"トゲキッス",specialty:"スキル",berry:"モモン",foodList:[{name:"とくせんエッグ",numList:[1,2,4]},{name:"あったかジンジャー",numList:[null,2,4]},{name:"リラックスカカオ",numList:[null,null,3]}],skill:"ゆびをふる",help:2600,bag:16,foodRate:.158,skillRate:.053,before:"トゲチック",legend:!1},{name:"リーフィア",specialty:"スキル",berry:"ドリ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきエールS",help:3e3,bag:13,foodRate:.205,skillRate:.059,before:"イーブイ",legend:!1},{name:"グレイシア",specialty:"スキル",berry:"チーゴ",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"料理パワーアップS",help:3200,bag:12,foodRate:.219,skillRate:.063,before:"イーブイ",legend:!1},{name:"ニンフィア",specialty:"スキル",berry:"モモン",foodList:[{name:"モーモーミルク",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"マメミート",numList:[null,null,3]}],skill:"げんきオールS",help:2600,bag:15,foodRate:.178,skillRate:.04,before:"イーブイ",legend:!1},{name:"デデンネ",specialty:"スキル",berry:"ウブ",foodList:[{name:"とくせんリンゴ",numList:[1,2,4]},{name:"リラックスカカオ",numList:[null,1,2]},{name:"ワカクサコーン",numList:[null,null,2]}],skill:"料理チャンスS",help:2500,bag:19,foodRate:.177,skillRate:.045,before:null,legend:!1},{name:"ヌイコグマ",specialty:"食材",berry:"クラボ",foodList:[{name:"ワカクサコーン",numList:[2,5,7]},{name:"マメミート",numList:[null,6,10]},{name:"とくせんエッグ",numList:[null,null,9]}],skill:"エナジーチャージS(ランダム)",help:4100,bag:13,foodRate:.225,skillRate:.011,before:null,legend:!1},{name:"キテルグマ",specialty:"食材",berry:"クラボ",foodList:[{name:"ワカクサコーン",numList:[2,5,7]},{name:"マメミート",numList:[null,6,10]},{name:"とくせんエッグ",numList:[null,null,9]}],skill:"エナジーチャージS(ランダム)",help:2800,bag:20,foodRate:.229,skillRate:.013,before:"ヌイコグマ",legend:!1},{name:"キュワワー",specialty:"食材",berry:"モモン",foodList:[{name:"ワカクサコーン",numList:[2,5,7]},{name:"あったかジンジャー",numList:[null,6,9]},{name:"リラックスカカオ",numList:[null,null,7]}],skill:"げんきエールS",help:2500,bag:20,foodRate:.139,skillRate:.022,before:null,legend:!1},{name:"ウッウ",specialty:"食材",berry:"シーヤ",foodList:[{name:"ピュアなオイル",numList:[2,5,7]},{name:"ほっこりポテト",numList:[null,4,7]},{name:"とくせんエッグ",numList:[null,null,8]}],skill:"料理チャンスS",help:2700,bag:19,foodRate:.165,skillRate:.033,before:null,legend:!1},{name:"ニャオハ",specialty:"食材",berry:"ドリ",foodList:[{name:"ほっこりポテト",numList:[2,5,7]},{name:"モーモーミルク",numList:[null,6,9]},{name:"あったかジンジャー",numList:[null,null,8]}],skill:"料理パワーアップS",help:4600,bag:10,foodRate:.208,skillRate:.023,before:null,legend:!1},{name:"ニャローテ",specialty:"食材",berry:"ドリ",foodList:[{name:"ほっこりポテト",numList:[2,5,7]},{name:"モーモーミルク",numList:[null,6,9]},{name:"あったかジンジャー",numList:[null,null,8]}],skill:"料理パワーアップS",help:3500,bag:14,foodRate:.209,skillRate:.023,before:"ニャオハ",legend:!1},{name:"マスカーニャ",specialty:"食材",berry:"ウイ",foodList:[{name:"ほっこりポテト",numList:[2,5,7]},{name:"モーモーミルク",numList:[null,6,9]},{name:"あったかジンジャー",numList:[null,null,8]}],skill:"料理パワーアップS",help:2600,bag:18,foodRate:.19,skillRate:.022,before:"ニャローテ",legend:!1},{name:"ホゲータ",specialty:"食材",berry:"ヒメリ",foodList:[{name:"とくせんリンゴ",numList:[2,5,7]},{name:"マメミート",numList:[null,4,6]},{name:"げきからハーブ",numList:[null,null,5]}],skill:"げんきチャージS",help:4200,bag:11,foodRate:.254,skillRate:.053,before:null,legend:!1},{name:"アチゲータ",specialty:"食材",berry:"ヒメリ",foodList:[{name:"とくせんリンゴ",numList:[2,5,7]},{name:"マメミート",numList:[null,4,6]},{name:"げきからハーブ",numList:[null,null,5]}],skill:"げんきチャージS",help:3100,bag:16,foodRate:.247,skillRate:.05,before:"ホゲータ",legend:!1},{name:"ラウドボーン",specialty:"食材",berry:"ブリー",foodList:[{name:"とくせんリンゴ",numList:[2,5,7]},{name:"マメミート",numList:[null,4,6]},{name:"げきからハーブ",numList:[null,null,5]}],skill:"げんきチャージS",help:2700,bag:19,foodRate:.268,skillRate:.062,before:"アチゲータ",legend:!1},{name:"クワッス",specialty:"食材",berry:"オレン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,2,4]},{name:"ピュアなオイル",numList:[null,null,6]}],skill:"エナジーチャージM",help:4800,bag:10,foodRate:.261,skillRate:.028,before:null,legend:!1},{name:"ウェルカモ",specialty:"食材",berry:"オレン",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,2,4]},{name:"ピュアなオイル",numList:[null,null,6]}],skill:"エナジーチャージM",help:3600,bag:14,foodRate:.259,skillRate:.027,before:"クワッス",legend:!1},{name:"ウェーニバル",specialty:"食材",berry:"クラボ",foodList:[{name:"ワカクサ大豆",numList:[2,5,7]},{name:"ふといながねぎ",numList:[null,2,4]},{name:"ピュアなオイル",numList:[null,null,6]}],skill:"エナジーチャージM",help:2600,bag:19,foodRate:.232,skillRate:.024,before:"ウェルカモ",legend:!1}],bi=Ms.reduce((n,e)=>(n[e.name]=e,n),{});Ms.filter(n=>n.before==null).forEach(n=>(n.evolveLv=1,n.remainEvolveLv=0)),Ms.filter(n=>bi[n.before]&&!n.evolveLv).forEach(n=>n.evolveLv=bi[n.before].evolveLv+1),Ms.filter(n=>bi[n.before]&&!n.evolveLv).forEach(n=>n.evolveLv=bi[n.before].evolveLv+1);for(let n of Ms){n.type=_s.map[n.berry].type,n.foodMap=n.foodList.filter(s=>s).reduce((s,o)=>(s[o.name]=o,s),{}),n.afterList=[];let e=[n.name],t=0;for(;e.length;){let s=[];for(let o of e){let r=Ms.filter(i=>i.before==o).map(i=>i.name);r.length?s.push(...r):(n.afterList.push(o),n.remainEvolveLv=t)}e=s,t++}}class Pd{constructor(){et(this,"list",[]);et(this,"map",{})}}Pd.list=Ms,Pd.map=bi;const b5=[{name:"エナジーチャージS",effect:[400,569,785,1083,1496,2066,3002]},{name:"エナジーチャージS(ランダム)",effect:[500,711.5,981.5,1354,1870,2582.5,3752.5]},{name:"エナジーチャージM",effect:[800,1251,1726,2383,3290,4546,6409]},{name:"げんきチャージS",effect:[12,16,21,27,34,43]},{name:"げんきエールS",effect:[14,17,23,29,38,51],team:!0},{name:"げんきオールS",effect:[5,7,9,11,15,18],team:!0},{name:"食材ゲットS",effect:[6,8,11,14,17,21,24]},{name:"おてつだいサポートS",effect:[5,6,7,8,9,10,11],team:!0},{name:"おてつだいブースト",effect:[6,7,8,9,10,11],team:!0},{name:"料理パワーアップS",effect:[7,10,12,17,22,27,31]},{name:"料理チャンスS",effect:[4,5,6,7,8,10]},{name:"ゆめのかけらゲットS",effect:[240,340,480,670,920,1260,1800],shard:!0},{name:"ゆめのかけらゲットS(ランダム)",effect:[300,425,600,837.5,1150,1575,2250],shard:!0},{name:"ゆびをふる",effect:[null,null,null,null,null,null],team:!0}];class Nt{}et(Nt,"list",[]),et(Nt,"map",{}),Nt.list=b5,Nt.map=b5.reduce((n,e)=>(n[e.name]=e,n),{}),Nt.metronomeTarget=Nt.list.filter(n=>n.name!="ゆびをふる"),Nt.metronomeNonTeamTarget=Nt.metronomeTarget.filter(n=>!n.team),Nt.metronomeTeamTarget=Nt.metronomeTarget.filter(n=>n.team);const y5=[{name:"ワカクサ本島",berryList:[null]},{name:"シアンの砂浜",berryList:["オレン","モモン","シーヤ"]},{name:"トープ洞窟",berryList:["フィラ","ヒメリ","オボン"]},{name:"ウノハナ雪原",berryList:["チーゴ","キー","ウイ"]},{name:"ラピスラズリ湖畔",berryList:["ドリ","マゴ","クラボ"]}];class yi{}et(yi,"list",[]),et(yi,"map",{}),yi.list=y5,yi.map=y5.reduce((n,e)=>(n[e.name]=e,n),{});const zd=[0,.45,.52,.62,.71,1],Xe=class Xe{constructor(e,t){if(!t)throw"モードが指定されていません";this.config=e,this.mode=t,this.helpEffectCache=new Map,this.helpRateCache=new Map,this.fixedPotSize=t==Xe.MODE_SELECT?$e.potMax:Math.round(this.config.simulation.potSize*(this.config.simulation.campTicket?1.5:1)),this.cookingList=t==Xe.MODE_SELECT?$e.list:$e.list.filter(s=>s.type==this.config.simulation.cookingType&&(e.simulation.enableCooking[s.name]||s.foodNum==0)),this.foodEnergyMap={};for(const s of Oe.list)this.foodEnergyMap[s.name]=s.energy;for(const s of this.cookingList)for(const o of s.foodList)this.foodEnergyMap[o.name]=Math.max(this.foodEnergyMap[o.name],Oe.map[o.name].energy*s.rate*$e.recipeLvs[this.config.simulation.cookingRecipeLv??1]);this.defaultBestCooking=this.cookingList.filter(s=>s.foodNum<=this.fixedPotSize).map(s=>({...s,lastEnergy:s.energy*$e.recipeLvs[this.config.simulation.cookingRecipeLv??1]+(this.fixedPotSize-s.foodNum)*Oe.maxEnergy})).sort((s,o)=>o.lastEnergy-s.lastEnergy)[0],this.calcStatusCache=new Map,this.defaultHelpRate=mn.getHelpRate(Math.min(e.sleepTime/8.5,1)*100,0,0,this.config)}static get isReady(){return mn.isReady}memberToInfo(e){var l,c;let t=Pd.map[e.name],s=Nt.map[t.skill];e={...t,...e,fixLv:e.fixable&&this.config.simulation.fixLv?Math.max(this.config.simulation.fixLv,e.lv):e.lv,base:t,box:e,berry:_s.map[t.berry],berryName:t.berry,skill:s,skillName:t.skill,skillLv:e.fixable&&this.config.simulation.fixSkillSeed?s.effect.length:e.skillLv??t.evolveLv,eventBonus:this.config.simulation.eventBonusType=="all"||this.config.simulation.eventBonusType==t.type};let o=0;e.fixLv>=10&&o++,e.fixLv>=25&&o++,e.fixLv>=50&&o++,e.fixLv>=75&&o++,e.fixLv>=100&&o++;let r=[...e.subSkillList];if(e.fixable&&this.config.simulation.fixSubSkillSeed){let u;do u=!1,r.slice(0,o).forEach((h,d)=>{h=P1.map[h],h!=null&&h.next&&!r.includes(h.next)&&(u=!0,r[d]=h==null?void 0:h.next)});while(u)}let i=r.slice(0,o);e.nextSubSkillList=e.subSkillList.map(u=>(u=P1.map[u],u!=null&&u.next&&!e.subSkillList.includes(u.next)?u.next:u.name));let a=[];for(let u=0;u<(e.fixLv<30?1:e.fixLv<60?2:3);u++){let h=Oe.map[e.foodList[u]],d=t.foodList.find(p=>p.name==h.name).numList[u];e.eventBonus&&(d+=this.config.simulation.eventBonusTypeFood),a.push({name:h.name,num:d,energy:this.foodEnergyMap[h.name]*d})}return this.calcParameter(e,a,i,(l=e.nature)!=null&&l.name?e.nature:zs.map[e.nature],(c=this.config.simulation.field=="ワカクサ本島"?this.config.simulation.berryList:yi.map[this.config.simulation.field].berryList)==null?void 0:c.includes(e.berry.name)),e}calcParameter(e,t,s,o,r){e.fixLv==null&&(e.fixLv=e.lv),e.cookingPowerUpEffect=0,e.cookingChanceEffect=0,e.supportScorePerDay=0,e.shard=0,e.enableFoodList=t,e.enableSubSkillList=s,e.nature=o,e.natureName=o==null?void 0:o.name,e.sleepTime??(e.sleepTime=0),e.berryNum=(e.specialty=="きのみ"?2:1)+(s.includes("きのみの数S")?1:0),e.berryEnergyPerHelp=e.berryNum*Math.max(e.berry.energy+e.fixLv-1,e.berry.energy*1.025**(e.fixLv-1))*(r?2:1)*(this.config.simulation.berryWeight??1),e.fixedFoodRate=e.foodRate*(1+(s.includes("食材確率アップS")?.18:0)+(s.includes("食材確率アップM")?.36:0))*((o==null?void 0:o.good)=="食材お手伝い確率"?1.2:(o==null?void 0:o.weak)=="食材お手伝い確率"?.8:1),e.foodNum=e.enableFoodList.reduce((i,a)=>i+a.num,0)/e.enableFoodList.length,e.foodEnergyPerHelp=e.enableFoodList.reduce((i,a)=>i+a.energy,0)/e.enableFoodList.length,this.mode!=Xe.MODE_SELECT&&(e.foodEnergyPerHelp*=this.config.simulation.cookingWeight),e.foodPerHelp={};for(let i of e.enableFoodList)e.foodPerHelp[i.name]=(e.foodPerHelp[i.name]??0)+Number(i.num)/e.enableFoodList.length;return e.pickupEnergyPerHelp=e.berryEnergyPerHelp*(1-e.fixedFoodRate)+e.foodEnergyPerHelp*e.fixedFoodRate,e.fixedBag=e.bag??e.base.bag+(e.base.evolveLv-1)*5+(s.includes("最大所持数アップS")?6:0)+(s.includes("最大所持数アップM")?12:0)+(s.includes("最大所持数アップL")?18:0),e.sleepTime>=200&&(e.fixedBag+=1),e.sleepTime>=500&&(e.fixedBag+=2),e.sleepTime>=1e3&&(e.fixedBag+=3),e.sleepTime>=2e3&&(e.fixedBag+=2),e.bagFullHelpNum=Math.max(e.fixedBag/(e.berryNum*(1-e.fixedFoodRate)+e.foodNum*e.fixedFoodRate)+4,0),e.fixedSkillLv=e.skillLv??e.evolveLv+(s.includes("スキルレベルアップS")?1:0)+(s.includes("スキルレベルアップM")?2:0),this.mode!=Xe.MODE_SELECT&&e.eventBonus&&(e.fixedSkillLv+=this.config.simulation.eventBonusTypeSkillLv),e.fixedSkillLv<1&&(e.fixedSkillLv=1),e.fixedSkillLv>e.skill.effect.length&&(e.fixedSkillLv=e.skill.effect.length),e.fixedSkillRate=e.skillRate*(1+(s.includes("スキル確率アップS")?.18:0)+(s.includes("スキル確率アップM")?.36:0))*((o==null?void 0:o.good)=="メインスキル発生確率"?1.2:(o==null?void 0:o.weak)=="メインスキル発生確率"?.8:1),this.mode!=Xe.MODE_SELECT&&e.eventBonus&&(e.fixedSkillRate*=this.config.simulation.eventBonusTypeSkillRate),e.skillCeil=e.specialty=="スキル"?40*3600/e.help:78,e.ceilSkillRate=e.fixedSkillRate>0?e.fixedSkillRate/(1-Math.pow(1-e.fixedSkillRate,e.skillCeil)):1/e.skillCeil,e.skillEffectRate=e.skill.name=="ゆびをふる"?1/Nt.metronomeTarget.length:1,e.skillList=e.skill.name=="ゆびをふる"?Nt.metronomeTarget:[e.skill],e}calcStatus(e,t,s=0){var u,h,d,p;e.speedBonus=0,e.enableSubSkillList.includes("おてつだいスピードS")&&(e.speedBonus+=.07),e.enableSubSkillList.includes("おてつだいスピードM")&&(e.speedBonus+=.14),e.speedBonus+=t*.05,e.speedBonus=Math.min(e.speedBonus,.35),e.speed=Math.floor(e.help*(1-(e.fixLv-1)*.002)*(1-e.speedBonus)*(((u=e.nature)==null?void 0:u.good)=="手伝いスピード"?.9:((h=e.nature)==null?void 0:h.weak)=="手伝いスピード"?1.1:1)/(this.mode!=Xe.MODE_SELECT&&this.config.simulation.campTicket?1.2:1)),e.remainEvolveLv==1&&e.sleepTime>=500&&(e.speed*=.95),e.remainEvolveLv==1&&e.sleepTime>=2e3&&(e.speed*=.88),e.remainEvolveLv==2&&e.sleepTime>=500&&(e.speed*=.89),e.remainEvolveLv==2&&e.sleepTime>=2e3&&(e.speed*=.75);let o=0,r=(24-this.config.sleepTime)*3600;for(let f=0;f<4&&r>0;f++){let m=12e3-e.speed*zd[f]/2+e.speed*zd[f+1]/2;o+=Math.min(r,m)/zd[f+1]/e.speed,r-=m}r>0&&(o+=r/e.speed),e.baseDayHelpNum=o,e.natureGenkiMultiplier=((d=e.nature)==null?void 0:d.good)=="げんき回復量"?1.2:((p=e.nature)==null?void 0:p.weak)=="げんき回復量"?.88:1,e.morningHealGenki=Math.min(Math.min(this.config.sleepTime/8.5,1)*100*e.natureGenkiMultiplier*(1+s*.14),100);let i=0,a=0,l=0,c=0;if(e.fixedBag>0){let f=e.skill.name=="げんきチャージS"||e.skill.name=="げんきエールS"||e.skill.name=="げんきオールS"?[e.skill]:e.skill.name=="ゆびをふる"?[Nt.map.げんきチャージS,Nt.map.げんきエールS,Nt.map.げんきオールS]:[],m=0,g={};for(let C of f){let $=C.effect[e.fixedSkillLv-1]/(C.name=="げんきエールS"?5:1);m+=$,g[C.name]=$}let x=m*e.natureGenkiMultiplier;e.skill.name=="ゆびをふる"&&(x=x/f.length*f.length/Nt.metronomeTarget.length);let b=x?`${e.morningHealGenki.toFixed(8)}_${e.fixedSkillRate.toFixed(8)}_${e.speed.toFixed(8)}_${e.bagFullHelpNum.toFixed(8)}_${e.skillCeil.toFixed(8)}_${x.toFixed(8)}`:"",w=this.helpEffectCache.get(b);w==null&&(w=x?mn.getHealEffect(e,x,this.config):[0,0],this.helpEffectCache.set(b,w));let[y,k]=w;for(let C of f)C.name=="げんきチャージS"?(i+=y*g[C.name]/m,a+=k*g[C.name]/m):(l+=y*g[C.name]/m,c+=k*g[C.name]/m)}return e.selfMorningHealEffect=i/e.natureGenkiMultiplier,e.selfDayHealEffect=a/e.natureGenkiMultiplier,e.otherMorningHealEffect=l/e.natureGenkiMultiplier,e.otherDayHealEffect=c/e.natureGenkiMultiplier,e}async calcHelp(e,t,s,o={}){let{pokemonList:r,helpBoostCount:i,scoreForHealerEvaluate:a,scoreForSupportEvaluate:l}=o,c=(e.selfMorningHealEffect+t)*e.natureGenkiMultiplier,u=(e.selfDayHealEffect+s)*e.natureGenkiMultiplier,h=`${e.morningHealGenki.toFixed(8)}_${c.toFixed(8)}_${u.toFixed(8)}`,d=this.helpRateCache.get(h);d==null&&(d=mn.getHelpRate(e.morningHealGenki,c,u,this.config),this.helpRateCache.set(h,d)),e.morningHealEffect=c,e.dayHealEffect=u,e.healEffect=c,e.dayHelpNum=(24-this.config.sleepTime)*3600/e.speed*d.day,e.nightHelpNum=this.config.sleepTime*3600/e.speed*d.night,e.dayHelpRate=d.day,e.nightHelpRate=d.night,e.averageHelpRate=(e.dayHelpNum+e.nightHelpNum)/(24*3600/e.speed),e.normalDayHelpNum=Math.min(e.dayHelpNum/(this.config.checkFreq-1),e.bagFullHelpNum)*(this.config.checkFreq-1),e.normalNightHelpNum=Math.min(e.nightHelpNum,e.bagFullHelpNum),e.normalHelpNum=e.normalDayHelpNum+e.normalNightHelpNum,e.berryHelpNum=Math.max(e.dayHelpNum+e.nightHelpNum-e.normalHelpNum,0);let p=e.normalHelpNum*(1-e.fixedFoodRate)+e.berryHelpNum;e.berryEnergyPerDay=e.berryEnergyPerHelp*p,e.berryNumPerDay=e.berryNum*p,e.foodEnergyPerDay=e.foodEnergyPerHelp*e.normalHelpNum*e.fixedFoodRate,e.foodNumPerDay=e.foodNum*e.normalHelpNum*e.fixedFoodRate;for(let f of Oe.list)e[f.name]=(e.foodPerHelp[f.name]??0)*e.normalHelpNum*e.fixedFoodRate;if(e.pickupEnergyPerDay=e.berryEnergyPerDay+e.foodEnergyPerDay,e.fixedBag>0){let f=Math.min(e.dayHelpNum/(this.config.checkFreq-1),e.bagFullHelpNum),m=Math.min(e.nightHelpNum,e.bagFullHelpNum);if(e.specialty=="スキル"){let g=(1-e.ceilSkillRate)**f,x=f>=1?(1-e.ceilSkillRate)**(f-1)*e.ceilSkillRate*f:0,b=f>=2?1-g-x:0,w=(1-e.ceilSkillRate)**m,y=m>=1?(1-e.ceilSkillRate)**(m-1)*e.ceilSkillRate*m:0,k=m>=2?1-w-y:0;e.skillPerDay=(x+b*2)*(this.config.checkFreq-1)+y+k*2}else e.skillPerDay=(1-(1-e.ceilSkillRate)**f)*(this.config.checkFreq-1)+(1-(1-e.ceilSkillRate)**Math.min(e.nightHelpNum,e.bagFullHelpNum))}else e.skillPerDay=0;e.skillEnergy=0,e.shard=0,e.skillEnergyMap={};for(let f of e.skillList){const m=f.effect[e.fixedSkillLv-1];let g;switch(f.name){case"エナジーチャージS":case"エナジーチャージS(ランダム)":case"エナジーチャージM":g=m*e.skillEffectRate;break;case"おてつだいサポートS":case"おてつだいブースト":if(this.mode!=Xe.MODE_ABOUT)if(this.mode==Xe.MODE_TEAM){let x;f.name=="おてつだいサポートS"&&(x=m/5),f.name=="おてつだいブースト"&&(x=[2,3,3,4,4,5][e.fixedSkillLv-1],x+=[[0,0,1,2,4],[0,0,1,2,4],[0,0,2,3,5],[0,0,2,3,5],[0,1,3,4,6],[0,1,3,4,6]][e.fixedSkillLv-1][i-1]),x*=e.skillEffectRate,g=0;for(let b of r){g+=b.berryEnergyPerHelp*x*(1-b.fixedFoodRate);for(let w in b.foodPerHelp)e[w]=(e[w]??0)+b.foodPerHelp[w]*x*b.fixedFoodRate*e.skillPerDay}}else this.mode==Xe.MODE_SELECT&&(g=l*m*(f.name=="おてつだいブースト"?5:1)*e.skillEffectRate);break;case"げんきエールS":case"げんきオールS":if(this.mode==Xe.MODE_SELECT&&(e.skill.name!="ゆびをふる"||e.skill.name=="ゆびをふる"&&f.name=="げんきエールS")){let x=`${e.morningHealGenki.toFixed(8)}_${t.toFixed(8)}_${s.toFixed(8)}`,b=this.helpRateCache.get(x);b==null&&(b=mn.getHelpRate(Math.min(this.config.sleepTime/8.5,1)*100,t,s,this.config),this.helpRateCache.set(x,b)),g=a*((b.day*(24-this.config.sleepTime)+b.night*this.config.sleepTime)/(this.defaultHelpRate.day*(24-this.config.sleepTime)+this.defaultHelpRate.night*this.config.sleepTime)-1)*4/e.skillPerDay}break;case"食材ゲットS":if(this.mode==Xe.MODE_ABOUT){if(!this.config.simulation.sundayPrepare){let x=m/Oe.list.length*e.skillPerDay*e.skillEffectRate,b=0;for(let w of Oe.list)e[w.name]=Number(e[w.name]??0)+x*this.config.simulation.foodGetRate/100,b+=(this.foodEnergyMap[w.name]*this.config.simulation.foodGetRate/100+w.energy*(100-this.config.simulation.foodGetRate)/100)*this.config.simulation.cookingWeight;g=b/Oe.list.length*m*e.skillEffectRate}}else if(this.mode==Xe.MODE_TEAM){if(!this.config.simulation.sundayPrepare){let x=m/Oe.list.length*e.skillPerDay*e.skillEffectRate;for(let b of Oe.list)e[b.name]=Number(e[b.name]??0)+x*this.config.simulation.foodGetRate/100}}else this.mode==Xe.MODE_SELECT&&(g=Oe.list.reduce((x,b)=>x+b.energy*((b.bestRate*$e.maxRecipeBonus-1)*this.config.selectEvaluate.foodGetRate/100+1),0)/Oe.list.length*m*e.skillEffectRate);break;case"ゆめのかけらゲットS":case"ゆめのかけらゲットS(ランダム)":this.mode==Xe.MODE_SELECT?g=m*this.config.selectEvaluate.shardEnergy*e.skillEffectRate:e.shard=m*e.skillPerDay*e.skillEffectRate;break;case"料理パワーアップS":if(this.mode==Xe.MODE_ABOUT)if(this.config.simulation.sundayPrepare)g=Oe.averageEnergy*m*e.skillEffectRate;else{let x=Math.round((this.config.simulation.potSize+m)*(this.config.simulation.campTicket?1.5:1));g=(this.cookingList.filter(w=>w.foodNum<=x).map(w=>({...w,lastEnergy:w.energy*$e.recipeLvs[this.config.simulation.cookingRecipeLv??1]+(x-w.foodNum)*Oe.maxEnergy})).sort((w,y)=>y.lastEnergy-w.lastEnergy)[0].lastEnergy-this.defaultBestCooking.lastEnergy)*e.skillEffectRate*this.config.simulation.cookingWeight}else if(this.mode==Xe.MODE_TEAM)e.cookingPowerUpEffect=m*e.skillPerDay*e.skillEffectRate;else if(this.mode==Xe.MODE_SELECT){let x=Math.ceil(($e.maxFoodNum-$e.potMax)/m)*3;g=(m*$e.cookingPowerUpEnergy*Math.min(e.skillPerDay*e.skillEffectRate,x)+m*Oe.averageEnergy*Math.max(e.skillPerDay*e.skillEffectRate-x,0))/e.skillPerDay}break;case"料理チャンスS":if(this.mode==Xe.MODE_ABOUT){if(!this.config.simulation.sundayPrepare&&e.skillPerDay){let x=m/100*e.skillPerDay*e.skillEffectRate*7;g=($e.getChanceWeekEffect(x).total-24.6)/7*this.defaultBestCooking.lastEnergy/e.skillPerDay*this.config.simulation.cookingWeight}}else if(this.mode==Xe.MODE_TEAM)this.config.simulation.sundayPrepare||(e.cookingChanceEffect=m/100*e.skillPerDay*e.skillEffectRate);else if(this.mode==Xe.MODE_SELECT){let x=m/100*e.skillPerDay*e.skillEffectRate*7;g=($e.getChanceWeekEffect(x).total-24.6)/7*$e.maxEnergy/e.skillPerDay}break}g&&(e.skillEnergyMap[f.name]=g,e.skillEnergy+=g)}return e.skillEnergyPerDay=e.skillEnergy*e.skillPerDay,e.energyPerDay=e.pickupEnergyPerDay+e.skillEnergyPerDay,e}selectEvaluate(e,t,s,o,r,i,a){let l=this.calcParameter({...e,base:e,bag:null,lv:t,berry:_s.map[e.berry],skill:Nt.map[e.skill],skillLv:this.config.selectEvaluate.skillLevel[e.skill],sleepTime:this.config.selectEvaluate.pokemonSleepTime},s,o,r,this.config.selectEvaluate.berryMatchAll||e.specialty=="きのみ");return this.calcStatus(l,o.includes("おてつだいボーナス")?this.config.selectEvaluate.helpBonus/5:0,o.includes("げんき回復ボーナス")?1:0),this.calcHelp(l,l.otherMorningHealEffect,l.otherDayHealEffect||(l.selfDayHealEffect?0:this.config.selectEvaluate.healer/100),{scoreForHealerEvaluate:i,scoreForSupportEvaluate:a,helpBoostCount:5}),o.includes("おてつだいボーナス")&&(l.energyPerDay/=1-(25-this.config.selectEvaluate.helpBonus)*.01),o.includes("ゆめのかけらボーナス")&&(l.energyPerDay*=1+.06*this.config.selectEvaluate.shardBonus/100),o.includes("リサーチEXPボーナス")&&(l.energyPerDay*=1+.06*this.config.selectEvaluate.shardBonus/100/2),l}};et(Xe,"MODE_ABOUT",1),et(Xe,"MODE_TEAM",2),et(Xe,"MODE_SELECT",3);let wi=Xe;self.addEventListener("message",async n=>{const{config:e,lv:t,pokemonList:s,foodCombinationList:o,scoreForHealerEvaluate:r,scoreForSupportEvaluate:i}=n.data,a=t<10?0:t<25?1:t<50?2:t<75?3:t<100?4:5;let l=M5[(e.selectEvaluate.silverSeedUse?"s":"n")+a]??[[1]];if(l==null)throw"サブスキルの組み合わせの取得に失敗しました。";l=l.map(x=>({subSkillList:x.slice(0,-1).map(b=>P1.idMap[b].name),subSkillWeight:x.at(-1)}));let c=[...zs.list.filter(x=>x.good!=null),null],u={},h=0,d=s.length*o.length*l.length*c.length,p=o.map(x=>x.split("").map(Number));await wi.isReady;const f=new wi(e,wi.MODE_SELECT);let m=[],g=[];for(let x of s){u[x.name]={};for(let b of p){let w=b.map((v,S)=>{var A;const T=Oe.map[(A=x.foodList[v])==null?void 0:A.name];return T==null?null:{name:x.foodList[v].name,num:x.foodList[v].numList[S],energy:T.energy*x.foodList[v].numList[S]*((T.bestRate*$e.maxRecipeBonus-1)*e.selectEvaluate.foodEnergyRate/100+1)}});if(w.includes(null))continue;let y=[],k=[];for(const v of l){let{subSkillList:S,subSkillWeight:T}=v;for(let A of c){let z=A==null?5:1,_=f.selectEvaluate(x,t,w,S,A,r,i);if(isNaN(_.energyPerDay))throw console.log(_),"計算エラーが発生しました。";let B=new Array(T*z);y.push(...B.fill({score:_.energyPerDay,baseScore:_.energyPerDay/_.averageHelpRate,pickupEnergyPerHelp:_.pickupEnergyPerHelp,eachResult:_}));let M;x.specialty=="きのみ"&&(M=_.berryNumPerDay),x.specialty=="食材"&&(M=_.foodNumPerDay),x.specialty=="スキル"&&(M=_.skillPerDay),k.push(...B.fill(M)),++h%1e3==0&&postMessage({status:"progress",body:h/d})}}y.sort((v,S)=>v.score-S.score),k.sort((v,S)=>v-S);let C=[],$=[];for(let v=0;v<=100;v++)C.push(y[Math.round((y.length-1)*v/100)]),$.push(k[Math.round((k.length-1)*v/100)]);u[x.name][b.join("")]={percentile:C,specialtyNumList:$},m.push(C[e.selectEvaluate.supportBorder].baseScore),g.push(C[e.selectEvaluate.supportBorder].pickupEnergyPerHelp)}}postMessage({status:"success",body:{scoreForHealerEvaluateList:m,scoreForSupportEvaluateList:g,result:u}})})})();
